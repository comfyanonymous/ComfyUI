{
    "https://gist.githubusercontent.com/alkemann/7361b8eb966f29c8238fd323409efb68/raw/f9605be0b38d38d3e3a2988f89248ff557010076/alkemann.py": [
        [
            "Int to Text",
            "Save A1 Image",
            "Seed With Text"
        ],
        {
            "title_aux": "alkemann nodes"
        }
    ],
    "https://github.com/0x-jerry/comfyui-rembg": [
        [
            "Load Rembg Model",
            "Rembg Remove background"
        ],
        {
            "title_aux": "Rembg Background Removal Node for ComfyUI"
        }
    ],
    "https://github.com/0xbitches/ComfyUI-LCM": [
        [
            "LCM_Sampler",
            "LCM_Sampler_Advanced",
            "LCM_img2img_Sampler",
            "LCM_img2img_Sampler_Advanced"
        ],
        {
            "title_aux": "Latent Consistency Model for ComfyUI"
        }
    ],
    "https://github.com/1038lab/ComfyUI-OmniGen": [
        [
            "ailab_OmniGen"
        ],
        {
            "title_aux": "ComfyUI-OmniGen"
        }
    ],
    "https://github.com/1038lab/ComfyUI-RMBG": [
        [
            "ClothesSegment",
            "FashionSegmentAccessories",
            "FashionSegmentClothing",
            "RMBG",
            "Segment"
        ],
        {
            "title_aux": "ComfyUI-RMBG"
        }
    ],
    "https://github.com/1038lab/ComfyUI-WildPromptor": [
        [
            "AllInOneList",
            "KeywordPicker",
            "PromptBuilder",
            "PromptConcat",
            "WildPromptorAllInOne",
            "WildPromptorGenerator",
            "WildPromptor_DataToPromptList",
            "WildPromptor_Enhancer"
        ],
        {
            "title_aux": "ComfyUI-WildPromptor"
        }
    ],
    "https://github.com/111496583yzy/comfyui-PuzzleCrack-Effect": [
        [
            "MyJigsawPuzzleEffect",
            "MyRegionBoundaryEffect"
        ],
        {
            "title_aux": "Jigsaw Puzzle Effect Plugin"
        }
    ],
    "https://github.com/11dogzi/ComfUI-EGAdapterMadAssistant": [
        [
            "EGIPAdapter_Mad_Assistant",
            "EGIPAdapter_Mad_AssistantV1",
            "EGIPAdapter_Mad_AssistantV2",
            "EGIPAdapter_Mad_AssistantV3",
            "EGIPAdapter_Mad_AssistantV4",
            "EGIPAdapter_Mad_AssistantV5",
            "EGIPAdapter_Mad_AssistantV6"
        ],
        {
            "title_aux": "ComfUI-EGAdapterMadAssistant"
        }
    ],
    "https://github.com/11dogzi/Comfyui-ergouzi-Nodes": [
        [
            "EG-YSZT-ZT",
            "EG_CPSYTJ",
            "EG_FX_BDAPI",
            "EG_HT_YSTZ",
            "EG_JF_ZZSC",
            "EG_JXFZ_node",
            "EG_K_LATENT",
            "EG_RY_HT",
            "EG_SCQY_BHDQY",
            "EG_SCQY_QBQY",
            "EG_SCQY_SXQY",
            "EG_SJ",
            "EG_SJPJ_Node",
            "EG_SS_RYZH",
            "EG_SZ_JDYS",
            "EG_TC_Node",
            "EG_TSCDS_CJ",
            "EG_TSCDS_DG",
            "EG_TSCDS_FG",
            "EG_TSCDS_JT",
            "EG_TSCDS_QT",
            "EG_TSCDS_RW",
            "EG_TSCDS_WP",
            "EG_TSCDS_ZL",
            "EG_TSCMB_GL",
            "EG_TXZZ_ZH",
            "EG_TX_CCHQ",
            "EG_TX_CJPJ",
            "EG_TX_JZRY",
            "EG_TX_LJ",
            "EG_TX_LJBC",
            "EG_TX_SFBLS",
            "EG_TX_WHLJ",
            "EG_WB_KSH",
            "EG_WXZ_QH",
            "EG_XZ_QH",
            "EG_YSQY_BBLLD",
            "EG_YSQY_BLLD",
            "EG_ZY_WBK",
            "EG_ZZHBCJ",
            "EG_ZZKZ_HT_node",
            "EG_ZZ_BSYH",
            "EG_ZZ_BYYH",
            "EG_ZZ_HSYH",
            "EG_ZZ_MHHT",
            "EG_ZZ_SSKZ",
            "ER_JBCH",
            "ER_TX_ZZCJ"
        ],
        {
            "title_aux": "Comfyui-ergouzi-Nodes"
        }
    ],
    "https://github.com/11dogzi/Comfyui-ergouzi-kaiguan": [
        [
            "ALLty",
            "EGRWGL",
            "EGRYDZQHNode",
            "GroupSwitchNode",
            "GroupSwitchNodee",
            "GroupSwitchNodeee",
            "GroupSwitchNodeeee",
            "hulue",
            "jinyong"
        ],
        {
            "title_aux": "Comfyui-ergouzi-kaiguan"
        }
    ],
    "https://github.com/11dogzi/Comfyui-ergouzi-samplers": [
        [
            "EGBYZZCYQ",
            "EGCYQJB",
            "EGCYQJBCJ"
        ],
        {
            "title_aux": "Comfyui-ergouzi-samplers"
        }
    ],
    "https://github.com/1mckw/Comfyui-Gelbooru": [
        [
            "Gelbooru (ID)",
            "Gelbooru (Random)",
            "UrlsToImage"
        ],
        {
            "title_aux": "Comfyui-Gelbooru"
        }
    ],
    "https://github.com/1zhangyy1/comfyui-vidu-nodes": [
        [
            "Character2Video",
            "Image2Video",
            "Text2Video",
            "UpscaleVideo",
            "VideoDownloader"
        ],
        {
            "title_aux": "ComfyUI VIDU"
        }
    ],
    "https://github.com/2kpr/ComfyUI-PMRF": [
        [
            "PMRF"
        ],
        {
            "title_aux": "ComfyUI-PMRF"
        }
    ],
    "https://github.com/2kpr/ComfyUI-UltraPixel": [
        [
            "UltraPixelLoad",
            "UltraPixelProcess"
        ],
        {
            "author": "italo",
            "title_aux": "ComfyUI-UltraPixel"
        }
    ],
    "https://github.com/311-code/ComfyUI-MagicClip_Strength": [
        [
            "CLIPTextEncodeSDXL_311_code"
        ],
        {
            "title_aux": "ComfyUI MagicClip_Strength for SDXL"
        }
    ],
    "https://github.com/42lux/ComfyUI-42lux": [
        [
            "FluxEmptyLatentSizePicker",
            "FluxHighresFixScaler",
            "ModelSamplingFluxNormalized",
            "PromptWithTokenCounter"
        ],
        {
            "title_aux": "Just a bunch of QOL nodes by 42lux"
        }
    ],
    "https://github.com/42lux/ComfyUI-safety-checker": [
        [
            "Safety Checker"
        ],
        {
            "title_aux": "ComfyUI-safety-checker"
        }
    ],
    "https://github.com/438443467/ComfyUI-GPT4V-Image-Captioner": [
        [
            "GPT4VCaptioner",
            "Image Load with Metadata",
            "SAMIN String Attribute Selector",
            "SANMIN Adapt Coordinates",
            "SANMIN AdjustTransparency",
            "SANMIN BlurMaskArea",
            "SANMIN ChineseToCharacter",
            "SANMIN ClothingWildcards",
            "SANMIN ConvertToEnglish",
            "SANMIN EditWildcards",
            "SANMIN Float",
            "SANMIN LoadPathImagesPreview",
            "SANMIN SCALE AND FILL BLACK",
            "SANMIN SanmiSaveImageToLocal",
            "SANMIN SimpleWildcards",
            "SANMIN Upscale And Original Size",
            "Samin Counter",
            "Samin Load Image Batch"
        ],
        {
            "title_aux": "ComfyUI-GPT4V-Image-Captioner"
        }
    ],
    "https://github.com/45uee/ComfyUI-Color_Transfer": [
        [
            "ColorPalette",
            "PaletteTransfer"
        ],
        {
            "title_aux": "ComfyUI-Color_Transfer"
        }
    ],
    "https://github.com/54rt1n/ComfyUI-DareMerge": [
        [
            "DM_AdvancedDareModelMerger",
            "DM_AdvancedModelMerger",
            "DM_AttentionGradient",
            "DM_BlockGradient",
            "DM_BlockModelMerger",
            "DM_DareClipMerger",
            "DM_DareModelMergerBlock",
            "DM_DareModelMergerElement",
            "DM_DareModelMergerMBW",
            "DM_GradientEdit",
            "DM_GradientOperations",
            "DM_GradientReporting",
            "DM_InjectNoise",
            "DM_LoRALoaderTags",
            "DM_LoRAReporting",
            "DM_MBWGradient",
            "DM_MagnitudeMasker",
            "DM_MaskEdit",
            "DM_MaskOperations",
            "DM_MaskReporting",
            "DM_ModelReporting",
            "DM_NormalizeModel",
            "DM_QuadMasker",
            "DM_ShellGradient",
            "DM_SimpleMasker"
        ],
        {
            "title_aux": "ComfyUI-DareMerge"
        }
    ],
    "https://github.com/5x00/ComfyUI-PiAPI-Faceswap": [
        [
            "Face Swapper"
        ],
        {
            "title_aux": "ComfyUI-PiAPI-Faceswap"
        }
    ],
    "https://github.com/5x00/ComfyUI-VLM-Captions": [
        [
            "Image To Caption"
        ],
        {
            "title_aux": "ComfyUI-VLM_Captions"
        }
    ],
    "https://github.com/6174/comflowy-nodes": [
        [
            "Comflowy_Clarity_Upscale",
            "Comflowy_Extract_JSON",
            "Comflowy_Flux",
            "Comflowy_Flux_Dev_Lora",
            "Comflowy_Flux_Pro_Ultra",
            "Comflowy_Hailuo",
            "Comflowy_Http_Request",
            "Comflowy_Ideogram",
            "Comflowy_Kling",
            "Comflowy_LLM",
            "Comflowy_Load_JSON",
            "Comflowy_Luma",
            "Comflowy_Omost_LLM",
            "Comflowy_Omost_Load_Canvas_Conditioning",
            "Comflowy_Omost_Load_Canvas_Python_Code",
            "Comflowy_Omost_Preview",
            "Comflowy_Omost_To_Conditioning",
            "Comflowy_Preview_JSON",
            "Comflowy_Preview_Video",
            "Comflowy_Recraft",
            "Comflowy_Set_API_Key"
        ],
        {
            "title_aux": "Comflowy's Custom Nodes"
        }
    ],
    "https://github.com/807502278/ComfyUI-3D-MeshTool": [
        [
            "Auto_Normal",
            "List_to_Tensor",
            "Load_OBJ",
            "Mesh_Clean_Data",
            "Mesh_Cleanup",
            "Mesh_Data_Get",
            "Mesh_Data_Set",
            "Mesh_Data_Statistics",
            "Mesh_Optimization",
            "Mesh_Subdivide",
            "RT-to-camposes",
            "Tensor_to_List",
            "UV_options",
            "UnwrapUV_Auto_xatlas",
            "UnwrapUV_xatlas",
            "array-append",
            "array-attribute",
            "array-convert",
            "array-end-increment",
            "array-end-step",
            "array-is-null",
            "array-number-to-angle",
            "array-select-element",
            "array-step",
            "array-step-increment",
            "array-t",
            "array-to-camposes",
            "cam-pos-bus",
            "get-tensor-shape",
            "img-bath-rotationZ",
            "img-to-tensor",
            "json-to-campos",
            "mesh_data_bus",
            "mesh_remap_cubvh",
            "ply_load",
            "ply_normalize",
            "ply_save",
            "show_any",
            "string-to-array",
            "tensor-new",
            "tensor-shape",
            "tensor-to-img",
            "vc_to_texture"
        ],
        {
            "author": "807502278",
            "description": "A simple 3D model processing tool within ComfyUI",
            "nickname": "3D Mesh Tool",
            "title": "3D Mesh Tool",
            "title_aux": "ComfyUI-3D-MeshTool"
        }
    ],
    "https://github.com/807502278/ComfyUI-WJNodes": [
        [
            "AdvCrop",
            "ApplyEasyOCR_batch",
            "BilateralFilter",
            "ColorSegmentation",
            "ColorSegmentation_v2",
            "ComfyUIPath",
            "CoordsSelectMask",
            "ImageChannelBus",
            "InvertChannelAdv",
            "LoadColorConfig",
            "LoadImageAdv",
            "LoadImageFromPath",
            "MaskAndMaskMath",
            "MaskDetection",
            "MaskLineMapping",
            "MaskSelectMask",
            "MergeImageList",
            "PathAppend",
            "PrimitiveNode",
            "RGBABatchToImage",
            "Sam2AutoSegmentation_data",
            "SaveImageOut",
            "SaveImageToPath",
            "SegmDetectorCombined_batch",
            "SelectImagesBatch",
            "SplitPath",
            "ToImageListData",
            "VideoFade",
            "WAS_Mask_Fill_Region_batch",
            "any_data",
            "array_count",
            "bbox_restore_mask",
            "get_image_data",
            "load_EasyOCR_model",
            "load_model_value",
            "show_type",
            "sort_images_batch"
        ],
        {
            "title_aux": "ComfyUI-WJNodes"
        }
    ],
    "https://github.com/807502278/ComfyUI_MaskGCT": [
        [
            "audio_capture_percentage",
            "audio_resample",
            "audio_scale",
            "from_path_load_audio",
            "get_audio_data",
            "get_text_data",
            "load_maskgct_model",
            "load_w2vbert_model",
            "maskgct_pipeline",
            "maskgct_run_v2",
            "maskgct_setting",
            "multilingual_slice",
            "remove_blank_space",
            "whisper_large_v3"
        ],
        {
            "title_aux": "ComfyUI_MaskGCT"
        }
    ],
    "https://github.com/80sVectorz/ComfyUI-Static-Primitives": [
        [
            "FloatStaticPrimitive",
            "IntStaticPrimitive",
            "StringMlStaticPrimitive",
            "StringStaticPrimitive"
        ],
        {
            "title_aux": "ComfyUI-Static-Primitives"
        }
    ],
    "https://github.com/A4P7J1N7M05OT/ComfyUI-AutoColorGimp": [
        [
            "AutoColorGimp"
        ],
        {
            "title_aux": "ComfyUI-AutoColorGimp"
        }
    ],
    "https://github.com/A4P7J1N7M05OT/ComfyUI-PixelOE-Wrapper": [
        [
            "PixelOE"
        ],
        {
            "title_aux": "ComfyUI-PixelOE-Wrapper"
        }
    ],
    "https://github.com/AARG-FAN/Image-Vector-for-ComfyUI": [
        [
            "AIraster"
        ],
        {
            "title_aux": "Image-vector-for-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/AniTalker-ComfyUI": [
        [
            "AniTalkerNode",
            "PreViewVideo"
        ],
        {
            "title_aux": "AniTalker-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-3d-photo-inpainting": [
        [
            "LoadImagePath",
            "PreViewVideo",
            "TreeDNode"
        ],
        {
            "title_aux": "ComfyUI-3d-photo-inpainting"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-AuraSR": [
        [
            "AuraSRNode"
        ],
        {
            "title_aux": "AIFSH/ComfyUI-AuraSR"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-DiffSynth-Studio": [
        [
            "ControlNetPathLoader",
            "DiffTextNode",
            "DiffutoonNode",
            "ExVideoNode",
            "LoadVideo",
            "PreViewVideo",
            "SDPathLoader"
        ],
        {
            "title_aux": "ComfyUI-DiffSynth-Studio"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-FishSpeech": [
        [
            "FishSpeech_INFER",
            "FishSpeech_INFER_SRT",
            "LoadAudio",
            "LoadSRT",
            "PreViewAudio"
        ],
        {
            "title_aux": "ComfyUI-FishSpeech"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-GPT_SoVITS": [
        [
            "GPT_SOVITS_FT",
            "GPT_SOVITS_INFER",
            "GPT_SOVITS_TTS",
            "LoadAudio",
            "LoadSRT",
            "PreViewAudio"
        ],
        {
            "title_aux": "ComfyUI-GPT_SoVITS"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-Hallo": [
        [
            "HalloNode",
            "LoadAudioPath",
            "LoadImagePath",
            "PreViewVideo"
        ],
        {
            "title_aux": "ComfyUI-Hallo"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-I2V-Adapter": [
        [
            "I2V_AdapterNode",
            "LoraPathLoader",
            "MotionLoraLoader",
            "PreViewVideo",
            "PromptNode"
        ],
        {
            "title_aux": "ComfyUI-I2V-Adapter"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-IP_LAP": [
        [
            "CombineAudioVideo",
            "IP_LAP",
            "LoadVideo",
            "PreViewVideo"
        ],
        {
            "title_aux": "ComfyUI-IP_LAP"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-Live2DViewer": [
        [
            "Live2DViewer",
            "LoadAudio"
        ],
        {
            "title_aux": "ComfyUI-Live2DViewer"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-MARS5-TTS": [
        [
            "LoadAudioPath",
            "MARS5TTS_Node",
            "PreViewAudio",
            "TTSTextEncode"
        ],
        {
            "title_aux": "ComfyUI-MARS5-TTS"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-MimicBrush": [
        [
            "MimicBrushNode"
        ],
        {
            "title_aux": "ComfyUI-MimicBrush"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-MimicMotion": [
        [
            "LoadVideo",
            "MimicMotionNode",
            "PreViewVideo"
        ],
        {
            "title_aux": "ComfyUI-MimicMotion"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-MuseTalk_FSH": [
        [
            "CombineAudioVideo",
            "LoadVideo",
            "MuseTalk",
            "MuseTalkRealTime",
            "PreViewVideo"
        ],
        {
            "title_aux": "ComfyUI-MuseTalk_FSH"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-RVC": [
        [
            "CombineAudio",
            "LoadAudio",
            "PreViewAudio",
            "RVC_Infer",
            "RVC_Train"
        ],
        {
            "title_aux": "ComfyUI-RVC"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-UVR5": [
        [
            "LoadAudioPath",
            "PreViewAudio",
            "UVR5_Node"
        ],
        {
            "title_aux": "ComfyUI-UVR5"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-UniAnimate": [
        [
            "LoadImagePath",
            "LoadVideo",
            "PoseAlignNode",
            "PreViewVideo",
            "UniAnimateNode"
        ],
        {
            "title_aux": "ComfyUI-UniAnimate"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-WhisperX": [
        [
            "LoadAudioPath",
            "PreViewSRT",
            "SRTToString",
            "WhisperX"
        ],
        {
            "title_aux": "ComfyUI-WhisperX"
        }
    ],
    "https://github.com/AIFSH/ComfyUI-XTTS": [
        [
            "LoadAudioPath",
            "LoadSRT",
            "PreViewAudio",
            "XTTS_INFER",
            "XTTS_INFER_SRT"
        ],
        {
            "title_aux": "ComfyUI-XTTS"
        }
    ],
    "https://github.com/AIFSH/ComfyUI_V-Express": [
        [
            "LoadAudioPath",
            "LoadImagePath",
            "LoadVideo",
            "PreViewVideo",
            "VExpress"
        ],
        {
            "title_aux": "ComfyUI_V-Express"
        }
    ],
    "https://github.com/AIFSH/CosyVoice-ComfyUI": [
        [
            "CosyVoiceDubbingNode",
            "CosyVoiceNode",
            "LoadSRT",
            "TextNode"
        ],
        {
            "title_aux": "CosyVoice-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/DHLive-ComfyUI": [
        [
            "CombineVideo",
            "DHLIVELoadVideo",
            "DHLiveNode",
            "PreViewVideo",
            "StaticVideo"
        ],
        {
            "title_aux": "DHLive-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/DiffMorpher-ComfyUI": [
        [
            "DiffMorpherNode",
            "PreViewGIF",
            "TextNode"
        ],
        {
            "title_aux": "DiffMorpher-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/DiffSynth-ComfyUI": [
        [
            "CogVideoNode",
            "DownloadModelsNode",
            "LoadVideo",
            "PreViewVideo",
            "TextEncode"
        ],
        {
            "title_aux": "DiffSynth-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/EchoMimicV2-ComfyUI": [
        [
            "EchoMimicV2Node",
            "EchoMimicV2PoseNode"
        ],
        {
            "title_aux": "EchoMimicV2-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/EzAudio-ComfyUI": [
        [
            "EzAudioControlNetNode",
            "EzAudioEditNode",
            "EzAudioNode",
            "TextPromptNode"
        ],
        {
            "title_aux": "EzAudio-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/F5-TTS-ComfyUI": [
        [
            "F5TTSNode"
        ],
        {
            "title_aux": "F5-TTS-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/FancyVideo-ComfyUI": [
        [
            "FancyVideoI2VNode",
            "FancyVideoV2VNode"
        ],
        {
            "title_aux": "FancyVideo-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/FireRedTTS-ComfyUI": [
        [
            "FireRedTTSNode"
        ],
        {
            "title_aux": "FireRedTTS-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/GSTTS-ComfyUI": [
        [
            "ASRNode",
            "AudioSlicerNode",
            "ConfigGPTNode",
            "ConfigSoVITSNode",
            "DatasetNode",
            "ExperienceNode",
            "GSFinetuneNone",
            "GSVTTSNode",
            "LoadSRT",
            "PreViewSRT",
            "TSCY_Node",
            "TextDictNode"
        ],
        {
            "title_aux": "GSTTS-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/HivisionIDPhotos-ComfyUI": [
        [
            "AddBackgroundNode",
            "AddWaterMarkNode",
            "ENHivisionParamsNode",
            "HivisionLayOutNode",
            "HivisionNode",
            "LaterProcessNode",
            "ZHHivisionParamsNode"
        ],
        {
            "author": "cuny",
            "description": "",
            "title_aux": "HivisionIDPhotos-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/IMAGDressing-ComfyUI": [
        [
            "IMAGDressingNode",
            "TextNode"
        ],
        {
            "title_aux": "IMAGDressing-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/JoyHallo-ComfyUI": [
        [
            "JoyHalloNode"
        ],
        {
            "title_aux": "JoyHallo-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/MaskGCT-ComfyUI": [
        [
            "MaskGCTNode"
        ],
        {
            "title_aux": "MaskGCT-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/MiniMates-ComfyUI": [
        [
            "MiniMatesNode"
        ],
        {
            "title_aux": "MiniMates-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/PyramidFlow-ComfyUI": [
        [
            "PyramidFlowNode"
        ],
        {
            "title_aux": "PyramidFlow-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/RealisDance-ComfyUI": [
        [
            "LoadFile",
            "LoadVideo",
            "PreViewVideo",
            "RealisDanceNode"
        ],
        {
            "title_aux": "RealisDance-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/SenseVoice-ComfyUI": [
        [
            "SenseVoiceNode",
            "ShowTextNode"
        ],
        {
            "title_aux": "SenseVoice-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/StyleShot-ComfyUI": [
        [
            "StyleShotNode",
            "TextNode"
        ],
        {
            "title_aux": "StyleShot-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/VideoSys-ComfyUI": [
        [
            "PreViewVideo",
            "TextNode",
            "VideoSysNode"
        ],
        {
            "title_aux": "VideoSys-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/ViewCrafter-ComfyUI": [
        [
            "LoadVideo",
            "PreViewVideo",
            "ViewCrafterTxTNode"
        ],
        {
            "title_aux": "ViewCrafter-ComfyUI"
        }
    ],
    "https://github.com/AIFSH/VocalSeparation-ComfyUI": [
        [
            "CombineAudioNode",
            "VocalSeparationNode"
        ],
        {
            "title_aux": "VocalSeparation-ComfyUI"
        }
    ],
    "https://github.com/AIGCTeam/ComfyUI_kkTranslator_nodes": [
        [
            "LoadMarianMTCheckPoint",
            "PromptBaiduFanyiToText",
            "PromptTranslateToText"
        ],
        {
            "title_aux": "ComfyUI_kkTranslator_nodes"
        }
    ],
    "https://github.com/AIGODLIKE/ComfyUI-CUP": [
        [
            "Mask",
            "OpenPose",
            "OpenPoseCanny",
            "OpenPoseDepth",
            "OpenPoseFace",
            "OpenPoseFull",
            "OpenPoseFullExtraLimb",
            "OpenPoseHand",
            "OpenPoseKeyPose",
            "OpenPoseLineart",
            "OpenPoseMediaPipeFace",
            "PreviewAudio",
            "SaveAudioBL",
            "\u5b58\u50a8",
            "\u5bfc\u5165",
            "\u622a\u56fe",
            "\u6750\u8d28\u56fe",
            "\u8f93\u5165\u56fe\u50cf",
            "\u9884\u89c8"
        ],
        {
            "title_aux": "ComfyUI-CUP"
        }
    ],
    "https://github.com/AIGODLIKE/ComfyUI-ToonCrafter": [
        [
            "ToonCrafterNode",
            "ToonCrafterWithSketch"
        ],
        {
            "title_aux": "ComfyUI-ToonCrafter"
        }
    ],
    "https://github.com/AIPOQUE/ComfyUI-APQNodes": [
        [
            "ColorPalette|AIPOQUE"
        ],
        {
            "title_aux": "ComfyUI-APQNodes"
        }
    ],
    "https://github.com/AInseven/ComfyUI-fastblend": [
        [
            "FillDarkMask",
            "InterpolateKeyFrame",
            "MaskListcaptoBatch",
            "Merge_Image_List",
            "MyOpenPoseNode",
            "SmoothVideo",
            "alert_when_finished",
            "reBatchImage"
        ],
        {
            "title_aux": "ComfyUI-fastblend"
        }
    ],
    "https://github.com/AIrjen/OneButtonPrompt": [
        [
            "AutoNegativePrompt",
            "CreatePromptVariant",
            "OneButtonArtify",
            "OneButtonFlufferize",
            "OneButtonPreset",
            "OneButtonPrompt",
            "OneButtonSuperPrompt",
            "SavePromptToFile"
        ],
        {
            "title_aux": "One Button Prompt"
        }
    ],
    "https://github.com/ALatentPlace/ComfyUI_yanc": [
        [
            "> Bloom",
            "> Blur",
            "> Brightness",
            "> Clear Text",
            "> Combine Channels",
            "> Contrast",
            "> Divide Channels",
            "> Edge Enhance",
            "> Film Grain",
            "> Float to Int",
            "> Fog",
            "> Get Mean Color",
            "> HUE",
            "> Int",
            "> Int to Text",
            "> Layer Weights (for IPAMS)",
            "> Lens Distortion",
            "> Light Source Mask",
            "> Load Image",
            "> Load Image From Folder",
            "> Mask Curves",
            "> NIKSampler",
            "> Noise From Image",
            "> Normal Map Lighting",
            "> RGB Color",
            "> RGB Shift",
            "> Resolution by Aspect Ratio",
            "> Rotate Image",
            "> Saturation",
            "> Save Image",
            "> Scale Image to Side",
            "> Scanlines",
            "> Sharpen",
            "> Text",
            "> Text Combine",
            "> Text Count",
            "> Text Pick Line by Index",
            "> Text Pick Random Line",
            "> Text Random Weights",
            "> Text Replace",
            "> Vignette"
        ],
        {
            "title_aux": "ComfyUI_yanc"
        }
    ],
    "https://github.com/APZmedia/APZmedia-comfyui-fast-image-save": [
        [
            "APZmedia Fast image save"
        ],
        {
            "title_aux": "APZmedia Fast Image Save Node"
        }
    ],
    "https://github.com/APZmedia/ComfyUI-APZmedia-cleanName-from-string": [
        [
            "APZmediaStandardFilenameBuilder",
            "CleanFileNameNode",
            "GenerateFilePathNode"
        ],
        {
            "title_aux": "APZmedia Clean Name"
        }
    ],
    "https://github.com/ARZUMATA/ComfyUI-ARZUMATA": [
        [
            "CachingCLIPTextEncodeFlux|ARZUMATA",
            "CachingCLIPTextEncode|ARZUMATA"
        ],
        {
            "title_aux": "ComfyUI-ARZUMATA"
        }
    ],
    "https://github.com/ARZUMATA/ComfyUI-ARZUMATA-Qwen2": [
        [
            "Image2Base64",
            "Qwen2ModelLoader",
            "Qwen2ModelRunInference"
        ],
        {
            "title_aux": "ComfyUI-Qwen2"
        }
    ],
    "https://github.com/Aaron-CHM/ComfyUI-z-a1111-sd-webui-DanTagGen": [
        [
            "DanTagGen"
        ],
        {
            "title_aux": "z-a1111-sd-webui-DanTagGen"
        }
    ],
    "https://github.com/AbdullahAlfaraj/Comfy-Photoshop-SD": [
        [
            "APS_LatentBatch",
            "APS_Seed",
            "ContentMaskLatent",
            "ControlNetScript",
            "ControlnetUnit",
            "GaussianLatentImage",
            "GetConfig",
            "LoadImageBase64",
            "LoadImageWithMetaData",
            "LoadLorasFromPrompt",
            "MaskExpansion"
        ],
        {
            "title_aux": "Comfy-Photoshop-SD"
        }
    ],
    "https://github.com/AbyssBadger0/ComfyUI_BadgerTools": [
        [
            "ApplyMaskToImage-badger",
            "CropImageByMask-badger",
            "ExpandImageWithColor-badger",
            "FindThickLinesFromCanny-badger",
            "Find_closest_factors-badger",
            "FloatToInt-badger",
            "FloatToString-badger",
            "FrameToVideo-badger",
            "GETRequset-badger",
            "GarbageCollect-badger",
            "GetColorFromBorder-badger",
            "GetDirName-badger",
            "GetUUID-badger",
            "IdentifyBorderColorToMask-badger",
            "IdentifyColorToMask-badger",
            "ImageNormalization-badger",
            "ImageOverlap-badger",
            "ImageScaleToSide-badger",
            "IntToString-badger",
            "IntToStringAdvanced-badger",
            "LoadImageAdvanced-badger",
            "LoadImagesFromDirListAdvanced-badger",
            "MapColorsToPalette-badger",
            "NormalizationNumber-badger",
            "ReduceColors-badger",
            "RotateImageWithPadding-badger",
            "SegmentToMaskByPoint-badger",
            "SimpleBoolean-badger",
            "StringToFizz-badger",
            "TextListToString-badger",
            "ToPixel-badger",
            "ToPixelV2-badger",
            "TrimTransparentEdges-badger",
            "VideoCutFromDir-badger",
            "VideoToFrame-badger",
            "deleteDir-badger",
            "findCenterOfMask-badger",
            "getImageSide-badger",
            "getParentDir-badger",
            "mkdir-badger"
        ],
        {
            "title_aux": "ComfyUI_BadgerTools"
        }
    ],
    "https://github.com/AbyssBadger0/ComfyUI_Kolors_awesome_prompts": [
        [
            "KolorsAwesomePrompts"
        ],
        {
            "title_aux": "Kolors Awesome Prompts"
        }
    ],
    "https://github.com/Acly/comfyui-inpaint-nodes": [
        [
            "INPAINT_ApplyFooocusInpaint",
            "INPAINT_DenoiseToCompositingMask",
            "INPAINT_ExpandMask",
            "INPAINT_InpaintWithModel",
            "INPAINT_LoadFooocusInpaint",
            "INPAINT_LoadInpaintModel",
            "INPAINT_MaskedBlur",
            "INPAINT_MaskedFill",
            "INPAINT_VAEEncodeInpaintConditioning"
        ],
        {
            "title_aux": "ComfyUI Inpaint Nodes"
        }
    ],
    "https://github.com/Acly/comfyui-tooling-nodes": [
        [
            "ETN_ApplyMaskToImage",
            "ETN_ApplyReferenceImages",
            "ETN_AttentionMask",
            "ETN_BackgroundRegion",
            "ETN_CropImage",
            "ETN_DefineRegion",
            "ETN_ExtractImageTile",
            "ETN_ExtractMaskTile",
            "ETN_GenerateTileMask",
            "ETN_KritaCanvas",
            "ETN_KritaImageLayer",
            "ETN_KritaMaskLayer",
            "ETN_KritaOutput",
            "ETN_KritaSelection",
            "ETN_KritaSendText",
            "ETN_KritaStyle",
            "ETN_ListRegionMasks",
            "ETN_LoadImageBase64",
            "ETN_LoadMaskBase64",
            "ETN_MergeImageTile",
            "ETN_NSFWFilter",
            "ETN_Parameter",
            "ETN_ReferenceImage",
            "ETN_SendImageWebSocket",
            "ETN_TileLayout",
            "ETN_Translate"
        ],
        {
            "title_aux": "ComfyUI Nodes for External Tooling"
        }
    ],
    "https://github.com/AconexOfficial/ComfyUI_GOAT_Nodes": [
        [
            "Advanced_Upscale_Image_Using_Model",
            "Capped_Float_Positive",
            "Capped_Int_Positive",
            "Embedding_Selector",
            "Fast_Color_Match",
            "Fast_Film_Grain",
            "Get_Side_Length_Of_Image",
            "Image_Dimensions",
            "Image_Tiler",
            "Image_Untiler",
            "Int_Divide_Rounded",
            "Sampler_Settings",
            "Smart_Seed",
            "Triple_Prompt"
        ],
        {
            "title_aux": "ComfyUI GOAT Nodes"
        }
    ],
    "https://github.com/Aerse/ComfyUI-Seed-Nodes": [
        [
            "Seed-Nodes: ImagePixelator",
            "Seed-Nodes: ImageTo3D",
            "Seed-Nodes: LoadImage",
            "Seed-Nodes: LoadMultipleImages",
            "Seed-Nodes: SLICPixelator"
        ],
        {
            "title_aux": "ComfyUI-Seed-Nodes"
        }
    ],
    "https://github.com/AhBumm/ComfyUI_BillBum_Nodes": [
        [
            "BillBum_Modified_Base64_Url2Data_Node",
            "BillBum_Modified_Base64_Url2Img_Node",
            "BillBum_Modified_Dalle_API_Node",
            "BillBum_Modified_DropoutToken_Node",
            "BillBum_Modified_Flux_API_Node",
            "BillBum_Modified_Ideogram_API_Node",
            "BillBum_Modified_ImageSplit_Node",
            "BillBum_Modified_Image_API_Call_Node",
            "BillBum_Modified_LLM_API_Node",
            "BillBum_Modified_Recraft_API_Node",
            "BillBum_Modified_RegText_Node",
            "BillBum_Modified_SD3_API_Node",
            "BillBum_Modified_Structured_LLM_Node(Imperfect)",
            "BillBum_Modified_Together_API_Node",
            "BillBum_Modified_VisionLM_API_Node",
            "BillBum_Modified_img2b64_url_Node",
            "Input_Text",
            "Text_Concat"
        ],
        {
            "nodename_pattern": "\\(BillBum\\)$",
            "title_aux": "Customizable API Call Nodes by BillBum"
        }
    ],
    "https://github.com/AiMiDi/ComfyUI-Aimidi-nodes": [
        [
            "Add Tag",
            "Clear Tag",
            "Load Images Pair Batch",
            "Merge Tag",
            "Move Tag To Top",
            "Reserve Tag",
            "Save Images Pair"
        ],
        {
            "title_aux": "ComfyUI-Aimidi-nodes"
        }
    ],
    "https://github.com/AkashKarnatak/ComfyUI_faishme": [
        [
            "Faishme Debug",
            "Faishme Mannequin to Model Loader",
            "Faishme Moondream",
            "Load Fashion Model"
        ],
        {
            "title_aux": "ComfyUI_faishme"
        }
    ],
    "https://github.com/Aksaz/comfyui-seamless-clone": [
        [
            "Seamless Clone"
        ],
        {
            "title_aux": "seamless-clone-comfyui"
        }
    ],
    "https://github.com/AlekPet/ComfyUI_Custom_Nodes_AlekPet": [
        [
            "ArgosTranslateCLIPTextEncodeNode",
            "ArgosTranslateTextNode",
            "ChatGLM4InstructMediaNode",
            "ChatGLM4InstructNode",
            "ChatGLM4TranslateCLIPTextEncodeNode",
            "ChatGLM4TranslateTextNode",
            "ColorsCorrectNode",
            "DeepTranslatorCLIPTextEncodeNode",
            "DeepTranslatorTextNode",
            "GoogleTranslateCLIPTextEncodeNode",
            "GoogleTranslateTextNode",
            "HexToHueNode",
            "IDENode",
            "PainterNode",
            "PoseNode",
            "PreviewTextNode"
        ],
        {
            "title_aux": "AlekPet/ComfyUI_Custom_Nodes_AlekPet"
        }
    ],
    "https://github.com/Alvaroeai/ComfyUI-Text2Json": [
        [
            "TextToJson"
        ],
        {
            "title_aux": "ComfyUI-Text2Json"
        }
    ],
    "https://github.com/Amorano/Jovi_GLSL": [
        [
            "BLEND LINEAR (JOV_GL)",
            "COLOR CONVERSION (JOV_GL)",
            "COLOR PALETTE (JOV_GL)",
            "CONICAL GRADIENT (JOV_GL)",
            "DIRECTIONAL WARP (JOV_GL)",
            "FILTER RANGE (JOV_GL)",
            "GRAYSCALE (JOV_GL)",
            "HSV ADJUST (JOV_GL)",
            "INVERT (JOV_GL)",
            "MIN MAX (JOV_GL)",
            "NOISE PERLIN (JOV_GL)",
            "NOISE SIMPLEX (JOV_GL)",
            "NOISE WORLEY (JOV_GL)",
            "NORMAL (JOV_GL)",
            "NORMAL BLEND (JOV_GL)",
            "PIXELATE (JOV_GL)",
            "POSTERIZE (JOV_GL)",
            "SOBEL (JOV_GL)",
            "TRANSFORM (JOV_GL)"
        ],
        {
            "title_aux": "Jovi_GLSL"
        }
    ],
    "https://github.com/Amorano/Jovi_Measure": [
        [
            "BLUR EFFECT (JOV_MEASURE)",
            "SHANNON ENTROPY (JOV_MEASURE)"
        ],
        {
            "title_aux": "Jovi_Measure"
        }
    ],
    "https://github.com/Amorano/Jovi_Spout": [
        [
            "SPOUT READER (JOV_SPOUT)",
            "SPOUT WRITER (JOV_SPOUT)"
        ],
        {
            "title_aux": "Jovi_Spout"
        }
    ],
    "https://github.com/Amorano/Jovimetrix": [
        [
            "ADJUST (JOV) \ud83d\udd78\ufe0f",
            "AKASHIC (JOV) \ud83d\udcd3",
            "ARRAY (JOV) \ud83d\udcda",
            "BIT SPLIT (JOV) \u2b44",
            "BLEND (JOV) \u2697\ufe0f",
            "COLOR BLIND (JOV) \ud83d\udc41\u200d\ud83d\udde8",
            "COLOR MATCH (JOV) \ud83d\udc9e",
            "COLOR MEANS (JOV) \u3030\ufe0f",
            "COLOR THEORY (JOV) \ud83d\udede",
            "COMPARISON (JOV) \ud83d\udd75\ud83c\udffd",
            "CONSTANT (JOV) \ud83d\udfea",
            "CROP (JOV) \u2702\ufe0f",
            "DELAY (JOV) \u270b\ud83c\udffd",
            "EXPORT (JOV) \ud83d\udcfd",
            "FILTER MASK (JOV) \ud83e\udd3f",
            "FLATTEN (JOV) \u2b07\ufe0f",
            "GLSL (JOV) \ud83c\udf69",
            "GLSL BLEND LINEAR (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL COLOR CONVERSION (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL COLOR PALETTE (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL CONICAL GRADIENT (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL DIRECTIONAL WARP (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL FILTER RANGE (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL GRAYSCALE (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL HSV ADJUST (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL INVERT (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL NORMAL (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL NORMAL BLEND (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL POSTERIZE (JOV) \ud83e\uddd9\ud83c\udffd",
            "GLSL TRANSFORM (JOV) \ud83e\uddd9\ud83c\udffd",
            "GRADIENT MAP (JOV) \ud83c\uddf2\ud83c\uddfa",
            "GRAPH (JOV) \ud83d\udcc8",
            "IMAGE INFO (JOV) \ud83d\udcda",
            "LERP (JOV) \ud83d\udd30",
            "MIDI FILTER (JOV) \u2733\ufe0f",
            "MIDI FILTER EZ (JOV) \u2747\ufe0f",
            "MIDI MESSAGE (JOV) \ud83c\udf9b\ufe0f",
            "MIDI READER (JOV) \ud83c\udfb9",
            "OP BINARY (JOV) \ud83c\udf1f",
            "OP UNARY (JOV) \ud83c\udfb2",
            "PIXEL MERGE (JOV) \ud83e\udec2",
            "PIXEL SPLIT (JOV) \ud83d\udc94",
            "PIXEL SWAP (JOV) \ud83d\udd03",
            "QUEUE (JOV) \ud83d\uddc3",
            "QUEUE TOO (JOV) \ud83d\uddc3",
            "ROUTE (JOV) \ud83d\ude8c",
            "SAVE OUTPUT (JOV) \ud83d\udcbe",
            "SHAPE GEN (JOV) \u2728",
            "SPOUT WRITER (JOV) \ud83c\udfa5",
            "STACK (JOV) \u2795",
            "STEREOGRAM (JOV) \ud83d\udcfb",
            "STEREOSCOPIC (JOV) \ud83d\udd76\ufe0f",
            "STREAM READER (JOV) \ud83d\udcfa",
            "STREAM WRITER (JOV) \ud83c\udf9e\ufe0f",
            "STRINGER (JOV) \ud83e\ude80",
            "SWIZZLE (JOV) \ud83d\ude35",
            "TEXT GEN (JOV) \ud83d\udcdd",
            "THRESHOLD (JOV) \ud83d\udcc9",
            "TICK (JOV) \u23f1",
            "TRANSFORM (JOV) \ud83c\udfdd\ufe0f",
            "VALUE (JOV) \ud83e\uddec",
            "WAVE GEN (JOV) \ud83c\udf0a"
        ],
        {
            "author": "Alexander G. Morano",
            "description": "Integrates Webcam, MIDI, Spout and GLSL shader support. Animation",
            "nodename_pattern": " \\(JOV\\)$",
            "title": "Jovimetrix",
            "title_aux": "Jovimetrix Composition Nodes"
        }
    ],
    "https://github.com/Anibaaal/ComfyUI-UX-Nodes": [
        [
            "AdvancedCompositeImageMasked",
            "BlockLayerStringGenerator",
            "BlurNode",
            "ColorGeneratorNode",
            "DropShadowNode",
            "EasyResolutionPicker",
            "LerpNode"
        ],
        {
            "title_aux": "ComfyUI UX Nodes"
        }
    ],
    "https://github.com/AonekoSS/ComfyUI-LoRA-Tuner": [
        [
            "LoraTuner"
        ],
        {
            "title_aux": "ComfyUI-LoRA-Tuner"
        }
    ],
    "https://github.com/AonekoSS/ComfyUI-SimpleCounter": [
        [
            "Simple Counter"
        ],
        {
            "title_aux": "ComfyUI-SimpleCounter"
        }
    ],
    "https://github.com/Apache0ne/ComfyUI-EasyUrlLoader": [
        [
            "EasyUrlLoader"
        ],
        {
            "title_aux": "ComfyUI-EasyUrlLoader"
        }
    ],
    "https://github.com/Apache0ne/SambaNova": [
        [
            "SambaNovaLLMNode"
        ],
        {
            "title_aux": "SambaNova"
        }
    ],
    "https://github.com/ArcherFMY/Diffusion360_ComfyUI": [
        [
            "Diffusion360LoaderImage2Pano",
            "Diffusion360LoaderText2Pano",
            "Diffusion360Sampler",
            "Diffusion360SamplerImage2Pano",
            "Diffusion360SamplerText2Pano",
            "InputImage",
            "InputText",
            "VAEDecodeTiledBlended"
        ],
        {
            "title_aux": "Diffusion360_ComfyUI"
        }
    ],
    "https://github.com/ArdeniusAI/ComfyUI-Ardenius": [
        [
            "ARD 4crop Latent",
            "ARD 4img Combine",
            "ARD 4latent Upscale",
            "ARD 4vae Decode",
            "ARD Basic Load Image",
            "ARD Control Box",
            "ARD Counter",
            "ARD Dual Prompt",
            "ARD Empty Latent Image",
            "ARD Float",
            "ARD Float To Integer",
            "ARD Integer",
            "ARD Integer To Float",
            "ARD Load Image",
            "ARD Math",
            "ARD Position",
            "ARD Prompt Travel",
            "ARD Remainder",
            "ARD Resize",
            "ARD Save Image",
            "ARD Seed",
            "ARD Text Box",
            "ARD Text Box Counter",
            "ARD XY Scripts"
        ],
        {
            "title_aux": "ComfyUI-Ardenius"
        }
    ],
    "https://github.com/ArtBot2023/CharacterFaceSwap": [
        [
            "Color Blend",
            "Crop Face",
            "Exclude Facial Feature",
            "Generation Parameter Input",
            "Generation Parameter Output",
            "Image Full BBox",
            "Load BiseNet",
            "Load RetinaFace",
            "Mask Contour",
            "Segment Face",
            "Uncrop Face"
        ],
        {
            "title_aux": "Character Face Swap"
        }
    ],
    "https://github.com/ArtVentureX/comfyui-animatediff": [
        [
            "AnimateDiffCombine",
            "AnimateDiffLoraLoader",
            "AnimateDiffModuleLoader",
            "AnimateDiffSampler",
            "AnimateDiffSlidingWindowOptions",
            "ImageSizeAndBatchSize",
            "LoadVideo"
        ],
        {
            "title_aux": "AnimateDiff"
        }
    ],
    "https://github.com/AshMartian/ComfyUI-DirGir": [
        [
            "Dir_Gir_Looper",
            "Dir_Gir_Picker",
            "Gir_Image_Nabber"
        ],
        {
            "title_aux": "Dir Gir"
        }
    ],
    "https://github.com/AuroBit/ComfyUI-AnimateAnyone-reproduction": [
        [
            "AnimateAnyone"
        ],
        {
            "title_aux": "ComfyUI-AnimateAnyone-reproduction"
        }
    ],
    "https://github.com/AustinMroz/ComfyUI-DynamicOversampling": [
        [
            "DynamicSampler",
            "MeasuredSampler",
            "ResolveMaskPromise"
        ],
        {
            "title_aux": "DynamicOversampling"
        }
    ],
    "https://github.com/AustinMroz/ComfyUI-SpliceTools": [
        [
            "LogSigmas",
            "RerangeSigmas",
            "SpliceDenoised",
            "SpliceLatents",
            "TemporalSplice"
        ],
        {
            "title_aux": "SpliceTools"
        }
    ],
    "https://github.com/Auttasak-L/ComfyUI-ImageCropper": [
        [
            "ImageCropper"
        ],
        {
            "title_aux": "ComfyUI-ImageCropper"
        }
    ],
    "https://github.com/BAIS1C/ComfyUI_RSS_Feed_Reader": [
        [
            "RSSFeedNode"
        ],
        {
            "title_aux": "ComfyUI_RSS_Feed_Reader"
        }
    ],
    "https://github.com/BIMer-99/ComfyUI_FishSpeech_EX": [
        [
            "AudioToPrompt",
            "LoadVQGAN",
            "Prompt2Semantic",
            "SaveAudioToMp3",
            "Semantic2Audio"
        ],
        {
            "title_aux": "ComfyUI_FishSpeech_EX"
        }
    ],
    "https://github.com/BIMer-99/Comfyui_Hunyuan3D_EX": [
        [
            "GenerateSixViews",
            "Hunyuan3DNode",
            "RemoveBackground",
            "SquareImage",
            "TriMeshViewer"
        ],
        {
            "title_aux": "Comfyui_Hunyuan3D_EX"
        }
    ],
    "https://github.com/BXYMartin/ComfyUI-InstantIDUtils": [
        [
            "ListOfImages",
            "MultiControlNetConverter",
            "NHWC2NCHWTensor",
            "NHWCTensor2PIL",
            "PIL2NHWCTensor"
        ],
        {
            "title_aux": "ComfyUI-InstantIDUtils"
        }
    ],
    "https://github.com/BZcreativ/ComfyUI-FLUX-TOGETHER-API": [
        [
            "FluxDev_TOGETHER",
            "FluxPro11_TOGETHER",
            "FluxPro_TOGETHER"
        ],
        {
            "title_aux": "ComfyUI-FLUX-TOGETHER-API"
        }
    ],
    "https://github.com/BadCafeCode/masquerade-nodes-comfyui": [
        [
            "Blur",
            "Change Channel Count",
            "Combine Masks",
            "Constant Mask",
            "Convert Color Space",
            "Create QR Code",
            "Create Rect Mask",
            "Cut By Mask",
            "Get Image Size",
            "Image To Mask",
            "Make Image Batch",
            "Mask By Text",
            "Mask Morphology",
            "Mask To Region",
            "MasqueradeIncrementer",
            "Mix Color By Mask",
            "Mix Images By Mask",
            "Paste By Mask",
            "Prune By Mask",
            "Separate Mask Components",
            "Unary Image Op",
            "Unary Mask Op"
        ],
        {
            "title_aux": "Masquerade Nodes"
        }
    ],
    "https://github.com/Beinsezii/bsz-cui-extras": [
        [
            "BSZAbsoluteHires",
            "BSZAspectHires",
            "BSZColoredLatentImageXL",
            "BSZCombinedHires",
            "BSZHueChromaXL",
            "BSZInjectionKSampler",
            "BSZLatentDebug",
            "BSZLatentFill",
            "BSZLatentGradient",
            "BSZLatentHSVAImage",
            "BSZLatentOffsetXL",
            "BSZLatentRGBAImage",
            "BSZLatentbuster",
            "BSZPixelbuster",
            "BSZPixelbusterHelp",
            "BSZPrincipledConditioning",
            "BSZPrincipledSampler",
            "BSZPrincipledScale",
            "BSZStrangeResample"
        ],
        {
            "title_aux": "bsz-cui-extras"
        }
    ],
    "https://github.com/BenNarum/ComfyUI_CAS": [
        [
            "AttentionToSigmas",
            "AttenuatorNode",
            "BasicCFGGuider",
            "CELU",
            "CustomAdvancedSampler",
            "CustomLCMCFGPP",
            "CustomModelSamplingDiscreteDistilledAncestralCFGPP",
            "CustomModelSamplingDiscreteDistilledCFGPP",
            "CustomX0AncestralCFGPP",
            "CustomX0CFGPP",
            "ELU",
            "EPSCFGPPScheduler",
            "GELU",
            "GLU",
            "HardTanhScheduler",
            "Hardshrink",
            "Hardsigmoid",
            "Hardswish",
            "Hardtanh",
            "LatentActivation",
            "LatentChannelPresets",
            "LatentConvolution",
            "LatentFFT",
            "LatentFrequencyPresets",
            "LatentGlitch",
            "LatentMath",
            "LatentMathFormulaBuilder",
            "LatentMosaic",
            "LatentNoisePresets",
            "LatentPixelSort",
            "LatentSelfAttention",
            "LatentTwist",
            "LatentValuePresets",
            "LatentWarpPresets",
            "LeakyReLU",
            "LogSigmoid",
            "LogSoftmax",
            "Mish",
            "PReLU",
            "RReLU",
            "ReLU",
            "ReLU6",
            "SELU",
            "SamplerCustomLCMCFGPP",
            "SamplerCustomModelSamplingDiscreteDistilledAncestralCFGPP",
            "SamplerCustomModelSamplingDiscreteDistilledCFGPP",
            "SamplerCustomX0AncestralCFGPP",
            "SamplerCustomX0CFGPP",
            "SamplerDPMCFGPP",
            "SamplerDynamicCFGPP",
            "SamplerEulerAttnCFGPP",
            "SamplerEulerStepControlAncestralCFGPP",
            "SamplerHeunCFGPP",
            "SamplerLCMUpscaleW",
            "SamplerLCMUpscaleWCFGPP",
            "SamplerLCMUpscaleWGPU",
            "SamplerStepSizeControlCFGPP",
            "SamplerWeightedCFGPP",
            "SiLU",
            "Softmax",
            "Softmax2D",
            "SoftmaxScheduler",
            "Softmin",
            "Softplus",
            "Softshrink",
            "Softsign",
            "Tanh",
            "Tanhshrink",
            "Threshold",
            "tcd_euler_a_w",
            "tcd_w"
        ],
        {
            "title_aux": "ComfyUI_CAS"
        }
    ],
    "https://github.com/BenNarum/SigmaWaveFormNode": [
        [
            "AttenuatorNode",
            "FourierFilterNode",
            "PhaseLockedLoopNode",
            "SigmaWaveFormNode",
            "SigmaWaveFormNodeAdvanced",
            "SigmaWaveFormNodeSimple"
        ],
        {
            "title_aux": "SigmaWaveFormNodes"
        }
    ],
    "https://github.com/BennyKok/comfyui-deploy": [
        [
            "ComfyDeployWebscoketImageInput",
            "ComfyDeployWebscoketImageOutput",
            "ComfyUIDeployExternalBoolean",
            "ComfyUIDeployExternalCheckpoint",
            "ComfyUIDeployExternalFaceModel",
            "ComfyUIDeployExternalImage",
            "ComfyUIDeployExternalImageAlpha",
            "ComfyUIDeployExternalImageBatch",
            "ComfyUIDeployExternalLora",
            "ComfyUIDeployExternalNumber",
            "ComfyUIDeployExternalNumberInt",
            "ComfyUIDeployExternalNumberSlider",
            "ComfyUIDeployExternalText",
            "ComfyUIDeployExternalTextAny",
            "ComfyUIDeployExternalVid",
            "ComfyUIDeployExternalVideo",
            "ComfyUIDeployModelList",
            "ComfyUIDeployStringCombine"
        ],
        {
            "author": "BennyKok",
            "description": "",
            "nickname": "Comfy Deploy",
            "title": "comfyui-deploy",
            "title_aux": "ComfyUI Deploy"
        }
    ],
    "https://github.com/BetaDoggo/ComfyUI-FastSDCPU": [
        [
            "fastsdcpu",
            "fastsdcpu_lcm_models",
            "fastsdcpu_loadModel",
            "fastsdcpu_vino_models"
        ],
        {
            "title_aux": "ComfyUI-FastSDCPU"
        }
    ],
    "https://github.com/BetaDoggo/ComfyUI-Gatcha-Embedding": [
        [
            "GatchaEmbedding"
        ],
        {
            "title_aux": "Gatcha Embeddings"
        }
    ],
    "https://github.com/BetaDoggo/ComfyUI-VideoPlayer": [
        [
            "AllInOnePlayer",
            "ImageToEmoji",
            "LoadFrame",
            "LoadJPGFrame",
            "LoadVideoFrame"
        ],
        {
            "title_aux": "ComfyUI Video Player"
        }
    ],
    "https://github.com/BetaDoggo/ComfyUI-WDV-Nodes": [
        [
            "ModelSamplingWaifuDiffusionV"
        ],
        {
            "title_aux": "neggles/ComfyUI-WDV-Nodes [gist-wrapper]"
        }
    ],
    "https://github.com/BetaDoggo/ComfyUI-YetAnotherSafetyChecker": [
        [
            "YetAnotherSafetyChecker"
        ],
        {
            "title_aux": "ComfyUI YetAnotherSafetyChecker"
        }
    ],
    "https://github.com/Big-Idea-Technology/ComfyUI-Book-Tools": [
        [
            "BTPromptSchedule",
            "BTPromptSelector",
            "EndQueue",
            "ImageTextOverlay",
            "Loop",
            "LoopEnd",
            "LoopStart"
        ],
        {
            "title_aux": "ComfyUI-Book-Tools Nodes for ComfyUI"
        }
    ],
    "https://github.com/Big-Idea-Technology/ComfyUI_LLM_Node": [
        [
            "AdvOptions_Node",
            "CodingOptionsNode",
            "LLM_Node",
            "Output_Node",
            "QuantizationConfig_Node"
        ],
        {
            "title_aux": "LLM Node for ComfyUI"
        }
    ],
    "https://github.com/Billius-AI/ComfyUI-Path-Helper": [
        [
            "Add File Name Prefix",
            "Add File Name Prefix Advanced",
            "Add Folder",
            "Add Folder Advanced",
            "Create Project Root",
            "Join Variables",
            "Show Path",
            "Show String"
        ],
        {
            "title_aux": "ComfyUI-Path-Helper"
        }
    ],
    "https://github.com/Bin-sam/DynamicPose-ComfyUI": [
        [
            "DynamicPose_Sampler",
            "Load_Pose_Guider",
            "Load_denoising_unet",
            "Load_reference_unet",
            "Pose_Guider_Encode",
            "align",
            "load_pose_model",
            "pose_extraction"
        ],
        {
            "title_aux": "DynamicPose-ComfyUI"
        }
    ],
    "https://github.com/Black-Lioness/ComfyUI-PromptUtils": [
        [
            "FilenameGenerator",
            "KeywordGenerator"
        ],
        {
            "title_aux": "ComfyUI-PromptUtils"
        }
    ],
    "https://github.com/BlackVortexAI/ComfyUI-BVortexNodes": [
        [
            "BV Conditional ImagePipe Splitter",
            "BV Image Caption Saver",
            "BV Image Difference Heatmap",
            "BV Image Size with Math",
            "BV ImagePipe Junction",
            "BV ImagePipe Loader",
            "BV ImagePipe Merger",
            "BV Show LoRA Blocks",
            "BV String to Combo",
            "BV Upscale Config",
            "BV Vector Edit",
            "BV Vector Edit Dropdown FLUX",
            "BV Vector Edit Range",
            "BV Vector Edit Range Dropdown FLUX",
            "BV Vector Edit Selector FLUX",
            "BV Vector Permutation",
            "BV Vector of Length-n",
            "BV Vector to String",
            "BV Vector to String List"
        ],
        {
            "title_aux": "BV Nodes"
        }
    ],
    "https://github.com/BlakeOne/ComfyUI-CustomScheduler": [
        [
            "CustomScheduler"
        ],
        {
            "title_aux": "ComfyUI CustomScheduler"
        }
    ],
    "https://github.com/BlakeOne/ComfyUI-SchedulerMixer": [
        [
            "SchedulerMixer"
        ],
        {
            "title_aux": "ComfyUI SchedulerMixer"
        }
    ],
    "https://github.com/BlenderNeko/ComfyUI_ADV_CLIP_emb": [
        [
            "BNK_AddCLIPSDXLParams",
            "BNK_AddCLIPSDXLRParams",
            "BNK_CLIPTextEncodeAdvanced",
            "BNK_CLIPTextEncodeSDXLAdvanced"
        ],
        {
            "title_aux": "Advanced CLIP Text Encode"
        }
    ],
    "https://github.com/BlenderNeko/ComfyUI_Cutoff": [
        [
            "BNK_CutoffBasePrompt",
            "BNK_CutoffRegionsToConditioning",
            "BNK_CutoffRegionsToConditioning_ADV",
            "BNK_CutoffSetRegions"
        ],
        {
            "title_aux": "ComfyUI Cutoff"
        }
    ],
    "https://github.com/BlenderNeko/ComfyUI_Noise": [
        [
            "BNK_DuplicateBatchIndex",
            "BNK_GetSigma",
            "BNK_InjectNoise",
            "BNK_NoisyLatentImage",
            "BNK_SlerpLatent",
            "BNK_Unsampler"
        ],
        {
            "title_aux": "ComfyUI Noise"
        }
    ],
    "https://github.com/BlenderNeko/ComfyUI_SeeCoder": [
        [
            "ConcatConditioning",
            "SEECoderImageEncode"
        ],
        {
            "title_aux": "SeeCoder [WIP]"
        }
    ],
    "https://github.com/BlenderNeko/ComfyUI_TiledKSampler": [
        [
            "BNK_TiledKSampler",
            "BNK_TiledKSamplerAdvanced"
        ],
        {
            "title_aux": "Tiled sampling for ComfyUI"
        }
    ],
    "https://github.com/Blonicx/ComfyUI-X-Rework": [
        [
            "ClearNode",
            "LoadImageURL",
            "UploadImage",
            "XSampler",
            "XSave"
        ],
        {
            "title_aux": "ComfyUI-Rework-X"
        }
    ],
    "https://github.com/Bria-AI/ComfyUI-BRIA-API": [
        [
            "BriaEraser",
            "BriaGenFill",
            "BriaTailoredGen",
            "ShotByImageNode",
            "ShotByTextNode",
            "TailoredModelInfoNode",
            "Text2ImageBaseNode"
        ],
        {
            "title_aux": "BRIA AI API nodes"
        }
    ],
    "https://github.com/CC-BryanOttho/ComfyUI_API_Manager": [
        [
            "APIRequestNode",
            "PostImageToAPI",
            "TextPromptCombinerNode"
        ],
        {
            "title_aux": "ComfyUI_API_Manager"
        }
    ],
    "https://github.com/CY-CHENYUE/ComfyUI-InpaintEasy": [
        [
            "CropByMask",
            "ImageAndMaskResizeNode",
            "ImageCropMerge",
            "InpaintEasyModel"
        ],
        {
            "title_aux": "ComfyUI-InpaintEasy"
        }
    ],
    "https://github.com/CY-CHENYUE/ComfyUI-MiniCPM-Plus": [
        [
            "MiniCPM3_4B",
            "MiniCPM3_4B_GPTQ_Int4",
            "MiniCPM_V_2_6",
            "MiniCPM_V_2_6_Int4",
            "TextDisplay"
        ],
        {
            "author": "CY-CHENYUE",
            "description": "Custom nodes for MiniCPM language models in ComfyUI",
            "nickname": "MiniCPM-Plus",
            "title": "MiniCPM-Plus",
            "title_aux": "ComfyUI-MiniCPM-Plus"
        }
    ],
    "https://github.com/CY-CHENYUE/ComfyUI-Molmo": [
        [
            "Molmo7BDbnb"
        ],
        {
            "title_aux": "ComfyUI-Molmo"
        }
    ],
    "https://github.com/CY-CHENYUE/ComfyUI-OmniGenX": [
        [
            "LoadOmniGen"
        ],
        {
            "title_aux": "ComfyUI-OmniGenX"
        }
    ],
    "https://github.com/CY-CHENYUE/ComfyUI-Redux-Prompt": [
        [
            "ReduxPromptStyler"
        ],
        {
            "title_aux": "ComfyUI-Redux-Prompt"
        }
    ],
    "https://github.com/CYBERLOOM-INC/ComfyUI-nodes-hnmr": [
        [
            "CLIPIter",
            "Dict2Model",
            "GridImage",
            "ImageBlend2",
            "KSamplerOverrided",
            "KSamplerSetting",
            "KSamplerXYZ",
            "LatentToHist",
            "LatentToImage",
            "ModelIter",
            "RandomLatentImage",
            "SaveStateDict",
            "SaveText",
            "StateDictLoader",
            "StateDictMerger",
            "StateDictMergerBlockWeighted",
            "StateDictMergerBlockWeightedMulti",
            "VAEDecodeBatched",
            "VAEEncodeBatched",
            "VAEIter"
        ],
        {
            "title_aux": "ComfyUI-nodes-hnmr"
        }
    ],
    "https://github.com/Chan-0312/ComfyUI-EasyDeforum": [
        [
            "Easy2DDeforum"
        ],
        {
            "title_aux": "ComfyUI-EasyDeforum"
        }
    ],
    "https://github.com/Chan-0312/ComfyUI-IPAnimate": [
        [
            "IPAdapterAnimate"
        ],
        {
            "title_aux": "ComfyUI-IPAnimate"
        }
    ],
    "https://github.com/Chan-0312/ComfyUI-Prompt-Preview": [
        [
            "SDXLPromptStylerAdvancedPreview",
            "SDXLPromptStylerPreview"
        ],
        {
            "title_aux": "ComfyUI-Prompt-Preview"
        }
    ],
    "https://github.com/Chaoses-Ib/ComfyUI_Ib_CustomNodes": [
        [
            "ImageToPIL",
            "LoadImageFromPath",
            "PILToImage",
            "PILToMask"
        ],
        {
            "title_aux": "ComfyUI_Ib_CustomNodes"
        }
    ],
    "https://github.com/Charlweed/image_transceiver": [
        [
            "ImageTransceiver"
        ],
        {
            "title_aux": "ImageTransceiver - ComfyUI"
        }
    ],
    "https://github.com/ChenDarYen/ComfyUI-TimestepShiftModel": [
        [
            "Timestep Shift Model"
        ],
        {
            "title_aux": "ComfyUI-TimestepShiftModel"
        }
    ],
    "https://github.com/ChrisColeTech/ComfyUI-Elegant-Resource-Monitor": [
        [
            "Resource Monitor"
        ],
        {
            "title_aux": "ComfyUI-Elegant-Resource-Monitor"
        }
    ],
    "https://github.com/ChrisColeTech/ComfyUI-Line-counter": [
        [
            "Directory File Counter",
            "Simple Number Counter",
            "Text File Line Counter"
        ],
        {
            "title_aux": "ComfyUI-Line-counter"
        }
    ],
    "https://github.com/ClownsharkBatwing/RES4LYF": [
        [
            "AdvancedNoise",
            "Base64ToConditioning",
            "CLIPTextEncodeFluxUnguided",
            "ClownInpaint",
            "ClownInpaintSimple",
            "ClownSampler",
            "ClownSamplerAdvanced",
            "ClownsharKSampler",
            "ClownsharKSamplerAutomation",
            "ClownsharKSamplerGuide",
            "ClownsharKSamplerGuides",
            "ClownsharKSamplerOptions",
            "ClownsharKSamplerOptions_SDE_Noise",
            "ClownsharkSamplerOptions_FrameWeights",
            "Conditioning Recast FP64",
            "ConditioningAdd",
            "ConditioningAverageScheduler",
            "ConditioningMultiply",
            "ConditioningToBase64",
            "ConditioningTruncate",
            "ConditioningZeroAndTruncate",
            "EmptyLatentImage64",
            "EmptyLatentImageCustom",
            "Film Grain",
            "FluxGuidanceDisable",
            "FluxLoader",
            "FluxRegionalConditioning",
            "FluxRegionalPrompt",
            "Frequency Separation Hard Light",
            "Frequency Separation Hard Light LAB",
            "Image Channels LAB",
            "Image Crop Location Exact",
            "Image Median Blur",
            "Image Pair Split",
            "Latent Batcher",
            "Latent Match Channelwise",
            "Latent Normalize Channels",
            "Latent to Cuda",
            "LatentBatch_channels",
            "LatentBatch_channels_16",
            "LatentNoiseBatch_fractal",
            "LatentNoiseBatch_gaussian",
            "LatentNoiseBatch_gaussian_channels",
            "LatentNoiseBatch_perlin",
            "LatentNoiseList",
            "LatentNoised",
            "LatentPhaseMagnitude",
            "LatentPhaseMagnitudeMultiply",
            "LatentPhaseMagnitudeOffset",
            "LatentPhaseMagnitudePower",
            "Legacy_ClownSampler",
            "Legacy_ClownsharKSampler",
            "Legacy_ClownsharKSamplerGuides",
            "Legacy_SharkSampler",
            "ModelSamplingAdvanced",
            "ModelSamplingAdvancedResolution",
            "ModelTimestepPatcher",
            "PrepForUnsampling",
            "ReFluxPatcher",
            "SD35Loader",
            "SamplerOptions_GarbageCollection",
            "SamplerOptions_TimestepScaling",
            "SamplerRK_Test",
            "Set Precision",
            "Set Precision Advanced",
            "Set Precision Universal",
            "SharkSampler",
            "Sigmas Abs",
            "Sigmas Add",
            "Sigmas Cleanup",
            "Sigmas Concat",
            "Sigmas DeleteBelowFloor",
            "Sigmas DeleteDuplicates",
            "Sigmas From Text",
            "Sigmas Iteration Karras",
            "Sigmas Iteration Polyexp",
            "Sigmas Math1",
            "Sigmas Math3",
            "Sigmas Modulus",
            "Sigmas Mult",
            "Sigmas Noise Inversion",
            "Sigmas Pad",
            "Sigmas Power",
            "Sigmas Quotient",
            "Sigmas Recast",
            "Sigmas Rescale",
            "Sigmas SetFloor",
            "Sigmas Split",
            "Sigmas Start",
            "Sigmas Truncate",
            "Sigmas Unpad",
            "Sigmas Variance Floor",
            "Sigmas2 Add",
            "Sigmas2 Mult",
            "SigmasPreview",
            "SigmasSchedulePreview",
            "StableCascade_StageB_Conditioning64",
            "StableCascade_StageC_VAEEncode_Exact",
            "StyleModelApplyAdvanced",
            "Tan Scheduler",
            "Tan Scheduler 2",
            "Tan Scheduler 2 Simple",
            "TextBox1",
            "TextBox3",
            "TorchCompileModelFluxAdv",
            "UNetSave",
            "UltraSharkSampler",
            "UltraSharkSampler Tiled",
            "UltraSharkSamplerRBTest",
            "VAEEncodeAdvanced",
            "VGG19StyleTransfer",
            "Zampler_Test"
        ],
        {
            "title_aux": "RES4LYF"
        }
    ],
    "https://github.com/Clybius/ComfyUI-Extra-Samplers": [
        [
            "GeometricCFGGuider",
            "ImageAssistedCFGGuider",
            "MegaCFGGuider",
            "SamplerCLYB_4M_SDE_Momentumized",
            "SamplerCustomModelMixtureDuo",
            "SamplerCustomNoise",
            "SamplerCustomNoiseDuo",
            "SamplerDPMPP_3M_SDE_DynETA",
            "SamplerDPMPP_DualSDE_Momentumized",
            "SamplerEulerAncestralDancing_Experimental",
            "SamplerLCMCustom",
            "SamplerRES_Momentumized",
            "SamplerSupreme",
            "SamplerTTM",
            "ScaledCFGGuider",
            "SimpleExponentialScheduler",
            "WarmupDecayCFGGuider"
        ],
        {
            "title_aux": "ComfyUI Extra Samplers"
        }
    ],
    "https://github.com/Clybius/ComfyUI-Latent-Modifiers": [
        [
            "Latent Diffusion Mega Modifier"
        ],
        {
            "title_aux": "ComfyUI-Latent-Modifiers"
        }
    ],
    "https://github.com/ComfyUI-JH/ComfyUI-JH-Misc-Nodes": [
        [
            "JHDaisyChainableStringConstantNode",
            "JHPreviewImage",
            "JHThreeWaySwitchNode",
            "JHTwoWaySwitchNode"
        ],
        {
            "title_aux": "JH Misc. Nodes"
        }
    ],
    "https://github.com/CosmicLaca/ComfyUI_Primere_Nodes": [
        [
            "DebugToFile",
            "PrimereAestheticCKPTScorer",
            "PrimereAnyDetailer",
            "PrimereAnyOutput",
            "PrimereCKPT",
            "PrimereCKPTLoader",
            "PrimereCLIPEncoder",
            "PrimereClearNetworkTagsPrompt",
            "PrimereConceptDataTuple",
            "PrimereDiTPurifyPrompt",
            "PrimereDynamicParser",
            "PrimereEmbedding",
            "PrimereEmbeddingHandler",
            "PrimereEmbeddingKeywordMerger",
            "PrimereEmotionsStyles",
            "PrimereFaceAnalyzer",
            "PrimereFastSeed",
            "PrimereHypernetwork",
            "PrimereImageSegments",
            "PrimereKSampler",
            "PrimereLLMEnhancer",
            "PrimereLORA",
            "PrimereLYCORIS",
            "PrimereLatentNoise",
            "PrimereLensStyles",
            "PrimereLoraKeywordMerger",
            "PrimereLoraStackMerger",
            "PrimereLycorisKeywordMerger",
            "PrimereLycorisStackMerger",
            "PrimereMetaCollector",
            "PrimereMetaDistributor",
            "PrimereMetaDistributorStage2",
            "PrimereMetaHandler",
            "PrimereMetaSave",
            "PrimereMetaTupleCollector",
            "PrimereMidjourneyStyles",
            "PrimereModelConceptSelector",
            "PrimereModelKeyword",
            "PrimereNetworkDataCollector",
            "PrimereNetworkTagLoader",
            "PrimerePreviewImage",
            "PrimerePrompt",
            "PrimerePromptOrganizer",
            "PrimerePromptOrganizerCSV",
            "PrimerePromptSwitch",
            "PrimereRefinerPrompt",
            "PrimereResolution",
            "PrimereResolutionCoordinatorMPX",
            "PrimereResolutionMultiplierMPX",
            "PrimereSamplersSteps",
            "PrimereSeed",
            "PrimereStyleLoader",
            "PrimereStylePile",
            "PrimereTextOutput",
            "PrimereUpscaleModel",
            "PrimereVAE",
            "PrimereVAELoader",
            "PrimereVisualCKPT",
            "PrimereVisualEmbedding",
            "PrimereVisualHypernetwork",
            "PrimereVisualLORA",
            "PrimereVisualLYCORIS",
            "PrimereVisualPromptOrganizerCSV",
            "PrimereVisualStyle"
        ],
        {
            "title_aux": "Primere nodes for ComfyUI"
        }
    ],
    "https://github.com/CpreForEver/CFE_comfyui": [
        [
            "CFE Aspect Ratio",
            "CFE FLUX Guidance",
            "CFE FLUX Sampler",
            "CFE FLUX Sampler (Pipe)",
            "CFE Flux In Pipe",
            "CFE Flux Out Pipe",
            "CFE Lora Params",
            "CFE Scheduler",
            "CFE Sigma Sampler",
            "CFE Sigma Sampler Strings"
        ],
        {
            "title_aux": "CFE_comfyui"
        }
    ],
    "https://github.com/Creeper-MZ/comfyui_nai_api": [
        [
            "NovelAI",
            "NovelAI_Declutter_Preprocessor",
            "NovelAI_Lineart_Processor",
            "NovelAI_Prompt",
            "NovelAI_Sketch_Processor",
            "NovelAI_VIBE"
        ],
        {
            "title_aux": "comfyui_nai_api"
        }
    ],
    "https://github.com/CyanAutumn/ComfyUi_Random_Manage_Cyan": [
        [
            "Random Prompt Cyan",
            "Remove Prompt Cyan"
        ],
        {
            "title_aux": "ComfyUi Random Manage Cyan"
        }
    ],
    "https://github.com/Cyber-BCat/ComfyUI_Auto_Caption": [
        [
            "Auto Caption",
            "Joy Model load",
            "LoadManyImages"
        ],
        {
            "title_aux": "ComfyUI_Auto_Caption"
        }
    ],
    "https://github.com/Cyber-Blacat/ComfyUI-Yuan": [
        [
            "Black and white",
            "Image Judgment",
            "ImageMinusMask",
            "Light or Dark",
            "Load Random Images",
            "Mask Preprocess Morphology",
            "PhotoShop Transfer",
            "Yuan"
        ],
        {
            "title_aux": "ComfyUI-Yuan"
        }
    ],
    "https://github.com/Cyberschorsch/ComfyUI-checkpoint-config-loader": [
        [
            "Checkpoint Loader Config"
        ],
        {
            "title_aux": "ComfyUI Checkpoint Loader Config"
        }
    ],
    "https://github.com/Danand/ComfyUI-ComfyCouple": [
        [
            "Attention couple",
            "Comfy Couple"
        ],
        {
            "author": "Rei D.",
            "description": "If you want to draw two different characters together without blending their features, so you could try to check out this custom node.",
            "nickname": "Danand",
            "title": "Comfy Couple",
            "title_aux": "Comfy Couple"
        }
    ],
    "https://github.com/DanielHabib/ComfyUI-Voxels": [
        [
            "ImageBatchToImageList",
            "MaskBatchToMaskList",
            "MeshToVoxel",
            "VoxelBlockLoader",
            "VoxelBlockSaver",
            "VoxelBlocksIntoVoxelVideo",
            "VoxelVideoAPIInputNode",
            "VoxelVideoLoader",
            "VoxelVideoPreview",
            "VoxelVideoViewer",
            "VoxelViewer",
            "VoxelizeMesh"
        ],
        {
            "title_aux": "ComfyUI-Voxels"
        }
    ],
    "https://github.com/DareFail/ComfyUI-Roboflow": [
        [
            "CustomWorkflow_1image",
            "LabelEmotions",
            "RemoveBackground"
        ],
        {
            "title_aux": "ComfyUI-Roboflow"
        }
    ],
    "https://github.com/DarioFT/ComfyUI-VideoDirCombiner": [
        [
            "VideoDirCombiner"
        ],
        {
            "title_aux": "ComfyUI-VideoDirCombiner"
        }
    ],
    "https://github.com/DataCTE/prompt_injection": [
        [
            "AdvancedPromptInjection",
            "PromptInjection",
            "SVDPromptInjection",
            "SimplePromptInjection"
        ],
        {
            "title_aux": "Prompt Injection Node for ComfyUI"
        }
    ],
    "https://github.com/Dayuppy/ComfyUI-DiscordWebhook": [
        [
            "DiscordPostViaWebhook",
            "DiscordSetWebhook",
            "Set Discord Webhook",
            "Use Discord Webhook"
        ],
        {
            "author": "Dayuppy",
            "description": "A very simple Discord webhook integration node for ComfyUI that lets you post images and text.",
            "nickname": "DiscordWebhook",
            "title": "Discord Webhook",
            "title_aux": "Discord Webhook"
        }
    ],
    "https://github.com/DeJoker/pipeline-parallel-comfy": [
        [
            "PipelineParallel"
        ],
        {
            "title_aux": "Pipeline Parallel ComfyUI"
        }
    ],
    "https://github.com/Derfuu/Derfuu_ComfyUI_ModdedNodes": [
        [],
        {
            "author": "Derfuu",
            "description": "Pack of simple (or not) and modded nodes for scaling images/latents, editing numbers or text. Automate calculations depending on image sizes or any other thing you want. Or randomize any number in your workflow. Debug node included.",
            "nickname": "Derfuu simple/modded Nodes",
            "nodename_pattern": "^DF_",
            "title": "Derfuu simple/modded Nodes",
            "title_aux": "Derfuu_ComfyUI_ModdedNodes"
        }
    ],
    "https://github.com/DesertPixelAi/ComfyUI-Desert-Pixel-Nodes": [
        [
            "DP 10 String Switch",
            "DP 2 String Switch",
            "DP 5 Find And Replace",
            "DP 5 String Switch",
            "DP Add Weight To String Sdxl",
            "DP Advanced Weight String Sdxl",
            "DP Animation Calculator 10 Inputs",
            "DP Animation Calculator 5 Inputs",
            "DP Art Style Generator",
            "DP Aspect Ratio Picker",
            "DP Big Letters",
            "DP Broken Token",
            "DP Clean Prompt",
            "DP Clean Prompt Travel",
            "DP Combo Controller",
            "DP Condition Mixer",
            "DP Crazy Prompt Mixer",
            "DP Create Json File",
            "DP Custom Aspect Ratio",
            "DP Diff Int 8step Selector",
            "DP Draggable Floats 1",
            "DP Draggable Floats 2",
            "DP Draggable Floats 3",
            "DP Fast Slow Motion",
            "DP Five Lora",
            "DP Five Lora Random",
            "DP Image Color Analyzer",
            "DP Image Color Analyzer Small",
            "DP Image Color Effect",
            "DP Image Effect Processor",
            "DP Image Effect Processor Small",
            "DP Image Empty Latent Switch Flux",
            "DP Image Empty Latent Switch SDXL",
            "DP Image Slide Show",
            "DP Image Strip",
            "DP Image Switch 10",
            "DP Image Switch 3",
            "DP Image Switch 5",
            "DP Int 0-1000",
            "DP Int 0-1000 4 Step",
            "DP Int 0-1000 8 Step",
            "DP Line Cycler",
            "DP Load Image Effects",
            "DP Load Image Effects Small",
            "DP Load Image Minimal",
            "DP Logo Animator",
            "DP Logo Animator Advanced",
            "DP Lora Random Strength Controller",
            "DP Lora Strength Controller",
            "DP Lora Strength Stepper",
            "DP Prompt Inverter",
            "DP Prompt Manager",
            "DP Prompt Manager Small",
            "DP Prompt Mode Controller",
            "DP Prompt Styler",
            "DP Prompt Token Compressor",
            "DP Random Character",
            "DP Random Crazy Prompt Generator",
            "DP Random Logo Style Generator",
            "DP Random Min Max",
            "DP Random Mode Controller",
            "DP Random Mode Switch",
            "DP Random Psychedelic Punk Generator",
            "DP Random Superhero Prompt Generator",
            "DP Random Vehicle Generator",
            "DP Save Preview Image",
            "DP Set New Model Folder Link",
            "DP String Text",
            "DP String Text With Weight",
            "DP String With Switch",
            "DP Strings Connector",
            "DP Strip Edge Masks",
            "DP Switch Controller",
            "DP Text Preview",
            "DP Transition Frames Selector",
            "DP Video Effect Receiver",
            "DP Video Effect Sender",
            "DP Video Flicker",
            "DP Video Looper",
            "DP Video Transition",
            "DP_Crazy_Prompt_Mixer",
            "DP_Logo_Animator_Advanced",
            "DP_Lora_Strength_Stepper",
            "DP_Prompt_Inverter",
            "DP_Strings_Connector"
        ],
        {
            "title_aux": "ComfyUI-Desert-Pixel-Nodes"
        }
    ],
    "https://github.com/Dobidop/ComfyStereo": [
        [
            "LazyStereo",
            "StereoImageNode"
        ],
        {
            "title_aux": "Dobidop ComfyStereo"
        }
    ],
    "https://github.com/DoctorDiffusion/ComfyUI-BEN": [
        [
            "BackgroundEraseNetwork"
        ],
        {
            "title_aux": "ComfyUI BEN - Background Erase Network"
        }
    ],
    "https://github.com/DoctorDiffusion/ComfyUI-MediaMixer": [
        [
            "FinalFrameSelector",
            "FirstFrameSelector",
            "PromptJournal",
            "ReverseFrameSequence",
            "VideoMerge",
            "YouTubeVideoDownloader"
        ],
        {
            "title_aux": "MediaMixer"
        }
    ],
    "https://github.com/DoctorDiffusion/ComfyUI-Schedulizer": [
        [
            "prompt_schedule_converter",
            "whisper_node"
        ],
        {
            "title_aux": "Schedulizer"
        }
    ],
    "https://github.com/DoctorDiffusion/ComfyUI-SnakeOil": [
        [
            "NegativeLoRALoader"
        ],
        {
            "title_aux": "ComfyUI-SnakeOil"
        }
    ],
    "https://github.com/DoctorDiffusion/ComfyUI-basic-pitch": [
        [
            "AudioToMidi",
            "SaveMidi"
        ],
        {
            "title_aux": "ComfyUI-basic-pitch"
        }
    ],
    "https://github.com/DrMWeigand/ComfyUI-StereoVision": [
        [
            "AutostereogramGenerator",
            "StereoscopicGenerator"
        ],
        {
            "title_aux": "StereoVision Plugin for ComfyUI"
        }
    ],
    "https://github.com/DrMWeigand/ComfyUI_ColorImageDetection": [
        [
            "LABColorDetection",
            "RGBColorDetection"
        ],
        {
            "title_aux": "ComfyUI Color Detection Nodes"
        }
    ],
    "https://github.com/DraconicDragon/ComfyUI-Venice-API": [
        [
            "FluxPro11_TOGETHER",
            "FluxPro_TOGETHER",
            "GenerateImage_VENICE"
        ],
        {
            "title_aux": "ComfyUI-Venice-API"
        }
    ],
    "https://github.com/Eagle-CN/ComfyUI-Addoor": [
        [
            "AD_AnyFileList",
            "AD_BatchImageLoadFromDir",
            "AD_CSVPromptStyler",
            "AD_CSVReader",
            "AD_CSVTranslator",
            "AD_DeleteLocalAny",
            "AD_FluxTrainStepMath",
            "AD_HFDownload",
            "AD_ImageDrawRectangleSimple",
            "AD_ImageIndexer",
            "AD_ImageSaver",
            "AD_LoadImageAdvanced",
            "AD_PromptReplace",
            "AD_TextIndexer",
            "AD_TextListToString",
            "AD_TextSaver",
            "AD_TxtToCSVCombiner",
            "AD_ZipSave",
            "AD_advanced-padding",
            "AD_color-image",
            "AD_image-concat",
            "AD_image-resize",
            "AD_mockup-maker",
            "AD_poster-maker",
            "AD_prompt-saver",
            "ImageCaptioner",
            "ImageResize",
            "Incrementer \ud83e\udeb4",
            "TextAppendNode",
            "Width and height for scaling image to ideal resolution \ud83e\udeb4",
            "Width and height from aspect ratio \ud83e\udeb4",
            "YANC.MultilineString",
            "comfyui-easy-padding",
            "image concat mask"
        ],
        {
            "author": "ComfyUI Addoor",
            "description": "Save prompts to CSV file with customizable naming pattern",
            "title": "ComfyUI-PromptSaver",
            "title_aux": "ComfyUI-Addoor"
        }
    ],
    "https://github.com/EeroHeikkinen/ComfyUI-eesahesNodes": [
        [
            "InstantX Flux Union ControlNet Loader"
        ],
        {
            "author": "eesahe",
            "description": "InstantX's Flux union ControlNet loader and implementation",
            "nickname": "eesahesNodes",
            "title": "eesahe's Nodes",
            "title_aux": "ComfyUI-eesahesNodes"
        }
    ],
    "https://github.com/Elaine-chennn/comfyui-overlay-media": [
        [
            "OverlayMediaNode",
            "VideoUpload"
        ],
        {
            "title_aux": "ComfyUI Overlay Media Node"
        }
    ],
    "https://github.com/Electrofried/ComfyUI-OpenAINode": [
        [
            "OpenAINode"
        ],
        {
            "title_aux": "OpenAINode"
        }
    ],
    "https://github.com/EllangoK/ComfyUI-post-processing-nodes": [
        [
            "ArithmeticBlend",
            "AsciiArt",
            "Blend",
            "Blur",
            "CannyEdgeMask",
            "ChromaticAberration",
            "ColorCorrect",
            "ColorTint",
            "Dissolve",
            "Dither",
            "DodgeAndBurn",
            "FilmGrain",
            "Glow",
            "HSVThresholdMask",
            "KMeansQuantize",
            "KuwaharaBlur",
            "Parabolize",
            "PencilSketch",
            "PixelSort",
            "Pixelize",
            "Quantize",
            "Sharpen",
            "SineWave",
            "Solarize",
            "Vignette"
        ],
        {
            "title_aux": "ComfyUI-post-processing-nodes"
        }
    ],
    "https://github.com/EnragedAntelope/ComfyUI-Doubutsu-Describer": [
        [
            "DoubutsuDescriber"
        ],
        {
            "title_aux": "ComfyUI-Doubutsu-Describer"
        }
    ],
    "https://github.com/EvilBT/ComfyUI_SLK_joy_caption_two": [
        [
            "Batch_joy_caption_two",
            "Batch_joy_caption_two_advanced",
            "Joy_caption_two",
            "Joy_caption_two_advanced",
            "Joy_caption_two_load",
            "Joy_extra_options"
        ],
        {
            "title_aux": "JoyCaptionAlpha Two for ComfyUI"
        }
    ],
    "https://github.com/Excidos/ComfyUI-Documents": [
        [
            "ChunkRouter",
            "DocumentLoader",
            "ImageSelector",
            "PDFPageSplitter",
            "PDFToImage",
            "TextChunker"
        ],
        {
            "title_aux": "ComfyUI-Documents"
        }
    ],
    "https://github.com/Excidos/ComfyUI-Lumina-Next-SFT-DiffusersWrapper": [
        [
            "LuminaDiffusersNode"
        ],
        {
            "title_aux": "ComfyUI-Lumina-Next-SFT-DiffusersWrapper"
        }
    ],
    "https://github.com/ExponentialML/ComfyUI_ModelScopeT2V": [
        [
            "ModelScopeT2VLoader"
        ],
        {
            "title_aux": "ComfyUI_ModelScopeT2V"
        }
    ],
    "https://github.com/ExponentialML/ComfyUI_Native_DynamiCrafter": [
        [
            "DynamiCrafterLoader",
            "DynamiCrafterProcessor"
        ],
        {
            "title_aux": "ComfyUI - Native DynamiCrafter"
        }
    ],
    "https://github.com/ExponentialML/ComfyUI_VisualStylePrompting": [
        [
            "ApplyVisualStyle"
        ],
        {
            "title_aux": "ComfyUI_VisualStylePrompting"
        }
    ],
    "https://github.com/ExterminanzHS/Gecco-Discord-Autosend": [
        [
            "GeccoAutosend",
            "GeccoImageSave",
            "GeccoSelectchannel"
        ],
        {
            "title_aux": "Gecco Discord Autosend"
        }
    ],
    "https://github.com/Extraltodeus/ComfyUI-AutomaticCFG": [
        [
            "Automatic CFG",
            "Automatic CFG - Advanced",
            "Automatic CFG - Attention modifiers",
            "Automatic CFG - Attention modifiers tester",
            "Automatic CFG - Custom attentions",
            "Automatic CFG - Excellent attention",
            "Automatic CFG - Negative",
            "Automatic CFG - Post rescale only",
            "Automatic CFG - Preset Loader",
            "Automatic CFG - Unpatch function",
            "Automatic CFG - Warp Drive",
            "SAG delayed activation",
            "Temperature separate settings CLIP SDXL",
            "Temperature settings CLIP",
            "Temperature settings SD 1.5",
            "Temperature settings SDXL",
            "Zero Uncond CFG - standalone patch (incompatible with the others)"
        ],
        {
            "title_aux": "ComfyUI-AutomaticCFG"
        }
    ],
    "https://github.com/Extraltodeus/LoadLoraWithTags": [
        [
            "LoraLoaderTagsQuery"
        ],
        {
            "title_aux": "LoadLoraWithTags"
        }
    ],
    "https://github.com/Extraltodeus/Skimmed_CFG": [
        [
            "Skimmed CFG",
            "Skimmed CFG - Clean Skim",
            "Skimmed CFG - Difference CFG",
            "Skimmed CFG - Timed flip",
            "Skimmed CFG - linear interpolation",
            "Skimmed CFG - linear interpolation dual scales",
            "Skimmed CFG - replace"
        ],
        {
            "title_aux": "DistanceSampler"
        }
    ],
    "https://github.com/Extraltodeus/Stable-Diffusion-temperature-settings": [
        [
            "CLIP Temperature",
            "Unet Temperature"
        ],
        {
            "title_aux": "Stable-Diffusion-temperature-settings"
        }
    ],
    "https://github.com/Extraltodeus/Uncond-Zero-for-ComfyUI": [
        [
            "Conditioning combine positive and negative",
            "Conditioning crop or fill",
            "Uncond Zero",
            "interrupt on NaN"
        ],
        {
            "title_aux": "Uncond-Zero-for-ComfyUI"
        }
    ],
    "https://github.com/Extraltodeus/Vector_Sculptor_ComfyUI": [
        [
            "CLIP Vector Sculptor text encode",
            "Conditioning (Average keep magnitude)",
            "Conditioning (Slerp)",
            "Conditioning SDXL merge clip_g / clip_l",
            "Conditioning normalize magnitude to empty"
        ],
        {
            "title_aux": "Vector_Sculptor_ComfyUI"
        }
    ],
    "https://github.com/Extraltodeus/noise_latent_perlinpinpin": [
        [
            "NoisyLatentPerlin",
            "NoisyLatentPerlin16ch"
        ],
        {
            "title_aux": "noise latent perlinpinpin"
        }
    ],
    "https://github.com/Extraltodeus/sigmas_tools_and_the_golden_scheduler": [
        [
            "Aligned Scheduler",
            "Gaussian Tail Scheduler",
            "Get sigmas as float",
            "Graph sigmas",
            "Manual scheduler",
            "Merge many sigmas by average",
            "Merge sigmas by average",
            "Merge sigmas gradually",
            "Multiply sigmas",
            "Output min/max sigmas",
            "Split and concatenate sigmas",
            "The Golden Scheduler"
        ],
        {
            "title_aux": "sigmas_tools_and_the_golden_scheduler"
        }
    ],
    "https://github.com/Fannovel16/ComfyUI-Frame-Interpolation": [
        [
            "AMT VFI",
            "CAIN VFI",
            "FILM VFI",
            "FLAVR VFI",
            "GMFSS Fortuna VFI",
            "IFRNet VFI",
            "IFUnet VFI",
            "KSampler Gradually Adding More Denoise (efficient)",
            "M2M VFI",
            "Make Interpolation State List",
            "RIFE VFI",
            "STMFNet VFI",
            "Sepconv VFI",
            "VFI FloatToInt"
        ],
        {
            "title_aux": "ComfyUI Frame Interpolation"
        }
    ],
    "https://github.com/Fannovel16/ComfyUI-MagickWand": [
        [
            "ImageMagick Adaptive Blur",
            "ImageMagick Adaptive Resize",
            "ImageMagick Adaptive Sharpen",
            "ImageMagick Adaptive Threshold",
            "ImageMagick Auto Gamma",
            "ImageMagick Auto Level",
            "ImageMagick Auto Orient",
            "ImageMagick Auto Threshold",
            "ImageMagick Blue Shift",
            "ImageMagick Blur",
            "ImageMagick Brightness Contrast",
            "ImageMagick Canny",
            "ImageMagick Charcoal",
            "ImageMagick Chop",
            "ImageMagick Clahe",
            "ImageMagick Clamp",
            "ImageMagick Coalesce",
            "ImageMagick Color Decision List",
            "ImageMagick Color Matrix",
            "ImageMagick Combine",
            "ImageMagick Concat",
            "ImageMagick Contrast",
            "ImageMagick Contrast Stretch",
            "ImageMagick Crop",
            "ImageMagick Cycle Color Map",
            "ImageMagick Decipher",
            "ImageMagick Despeckle",
            "ImageMagick Distort",
            "ImageMagick Edge",
            "ImageMagick Emboss",
            "ImageMagick Encipher",
            "ImageMagick Enhance",
            "ImageMagick Equalize",
            "ImageMagick Evaluate",
            "ImageMagick Extent",
            "ImageMagick Flip",
            "ImageMagick Flop",
            "ImageMagick Forward Fourier Transform",
            "ImageMagick Function",
            "ImageMagick Gamma",
            "ImageMagick Gaussian Blur",
            "ImageMagick Hough Lines",
            "ImageMagick Implode",
            "ImageMagick Kmeans",
            "ImageMagick Kuwahara",
            "ImageMagick Level",
            "ImageMagick Levelize",
            "ImageMagick Linear Stretch",
            "ImageMagick Liquid Rescale",
            "ImageMagick Local Contrast",
            "ImageMagick Magnify",
            "ImageMagick Mean Shift",
            "ImageMagick Merge Layers",
            "ImageMagick Mode",
            "ImageMagick Modulate",
            "ImageMagick Morphology",
            "ImageMagick Motion Blur",
            "ImageMagick Negate",
            "ImageMagick Noise",
            "ImageMagick Normalize",
            "ImageMagick Oil Paint",
            "ImageMagick Ordered Dither",
            "ImageMagick Polynomial",
            "ImageMagick Posterize",
            "ImageMagick Quantize",
            "ImageMagick Random Threshold",
            "ImageMagick Range Threshold",
            "ImageMagick Resample",
            "ImageMagick Resize",
            "ImageMagick Roll",
            "ImageMagick Rotational Blur",
            "ImageMagick Sample",
            "ImageMagick Scale",
            "ImageMagick Selective Blur",
            "ImageMagick Sepia Tone",
            "ImageMagick Shade",
            "ImageMagick Shadow",
            "ImageMagick Sharpen",
            "ImageMagick Shave",
            "ImageMagick Sigmoidal Contrast",
            "ImageMagick Sketch",
            "ImageMagick Smush",
            "ImageMagick Solarize",
            "ImageMagick Splice",
            "ImageMagick Spread",
            "ImageMagick Statistic",
            "ImageMagick Swirl",
            "ImageMagick Threshold",
            "ImageMagick Thumbnail",
            "ImageMagick Transform",
            "ImageMagick Transform Colorspace",
            "ImageMagick Transparentize",
            "ImageMagick Transpose",
            "ImageMagick Transverse",
            "ImageMagick Unsharp Mask",
            "ImageMagick Vignette",
            "ImageMagick Wave",
            "ImageMagick Wavelet Denoise",
            "ImageMagick White Balance"
        ],
        {
            "title_aux": "ComfyUI-MagickWand"
        }
    ],
    "https://github.com/Fannovel16/ComfyUI-MotionDiff": [
        [
            "EmptyMotionData",
            "ExportSMPLTo3DSoftware",
            "Export_SMPLMultipleSubjects_To_3DSoftware",
            "Human4D_Img2SMPL",
            "Humans4DLoader",
            "MotionCLIPTextEncode",
            "MotionDataVisualizer",
            "MotionDiffLoader",
            "MotionDiffSimpleSampler",
            "RenderMultipleSubjectsSMPLMesh",
            "RenderSMPLMesh",
            "Render_OpenPose_From_SMPL_Mesh_Multiple_Subjects",
            "SMPLLoader",
            "SMPLShapeParameters",
            "SaveSMPL",
            "SmplifyMotionData",
            "SpectreFaceReconLoader",
            "SpectreImg2SMPL",
            "mgpt_model_loader",
            "mgpt_t2m"
        ],
        {
            "title_aux": "ComfyUI MotionDiff"
        }
    ],
    "https://github.com/Fannovel16/ComfyUI-Video-Matting": [
        [
            "BRIAAI Matting",
            "Robust Video Matting"
        ],
        {
            "title_aux": "ComfyUI-Video-Matting"
        }
    ],
    "https://github.com/Fannovel16/comfyui_controlnet_aux": [
        [
            "AIO_Preprocessor",
            "AnimalPosePreprocessor",
            "AnimeFace_SemSegPreprocessor",
            "AnimeLineArtPreprocessor",
            "AnyLineArtPreprocessor_aux",
            "BAE-NormalMapPreprocessor",
            "BinaryPreprocessor",
            "CannyEdgePreprocessor",
            "ColorPreprocessor",
            "ControlNetAuxSimpleAddText",
            "ControlNetPreprocessorSelector",
            "DSINE-NormalMapPreprocessor",
            "DWPreprocessor",
            "DensePosePreprocessor",
            "DepthAnythingPreprocessor",
            "DepthAnythingV2Preprocessor",
            "DiffusionEdge_Preprocessor",
            "ExecuteAllControlNetPreprocessors",
            "FacialPartColoringFromPoseKps",
            "FakeScribblePreprocessor",
            "HEDPreprocessor",
            "HintImageEnchance",
            "ImageGenResolutionFromImage",
            "ImageGenResolutionFromLatent",
            "ImageIntensityDetector",
            "ImageLuminanceDetector",
            "InpaintPreprocessor",
            "LeReS-DepthMapPreprocessor",
            "LineArtPreprocessor",
            "LineartStandardPreprocessor",
            "M-LSDPreprocessor",
            "Manga2Anime_LineArt_Preprocessor",
            "MaskOptFlow",
            "MediaPipe-FaceMeshPreprocessor",
            "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
            "MeshGraphormer-DepthMapPreprocessor",
            "Metric3D-DepthMapPreprocessor",
            "Metric3D-NormalMapPreprocessor",
            "Metric_DepthAnythingV2Preprocessor",
            "MiDaS-DepthMapPreprocessor",
            "MiDaS-NormalMapPreprocessor",
            "OneFormer-ADE20K-SemSegPreprocessor",
            "OneFormer-COCO-SemSegPreprocessor",
            "OpenposePreprocessor",
            "PiDiNetPreprocessor",
            "PixelPerfectResolution",
            "PyraCannyPreprocessor",
            "RenderAnimalKps",
            "RenderPeopleKps",
            "SAMPreprocessor",
            "SavePoseKpsAsJsonFile",
            "ScribblePreprocessor",
            "Scribble_PiDiNet_Preprocessor",
            "Scribble_XDoG_Preprocessor",
            "SemSegPreprocessor",
            "ShufflePreprocessor",
            "TEEDPreprocessor",
            "TTPlanet_TileGF_Preprocessor",
            "TTPlanet_TileSimple_Preprocessor",
            "TilePreprocessor",
            "UniFormer-SemSegPreprocessor",
            "Unimatch_OptFlowPreprocessor",
            "UpperBodyTrackingFromPoseKps",
            "Zoe-DepthMapPreprocessor",
            "Zoe_DepthAnythingPreprocessor"
        ],
        {
            "author": "tstandley",
            "preemptions": [
                "AIO_Preprocessor",
                "AnimalPosePreprocessor",
                "AnimeFace_SemSegPreprocessor",
                "AnimeLineArtPreprocessor",
                "BAE-NormalMapPreprocessor",
                "BinaryPreprocessor",
                "CannyEdgePreprocessor",
                "ColorPreprocessor",
                "DSINE-NormalMapPreprocessor",
                "DWPreprocessor",
                "DensePosePreprocessor",
                "DepthAnythingPreprocessor",
                "DiffusionEdge_Preprocessor",
                "FacialPartColoringFromPoseKps",
                "FakeScribblePreprocessor",
                "HEDPreprocessor",
                "HintImageEnchance",
                "ImageGenResolutionFromImage",
                "ImageGenResolutionFromLatent",
                "ImageIntensityDetector",
                "ImageLuminanceDetector",
                "InpaintPreprocessor",
                "LeReS-DepthMapPreprocessor",
                "LineArtPreprocessor",
                "LineartStandardPreprocessor",
                "M-LSDPreprocessor",
                "Manga2Anime_LineArt_Preprocessor",
                "MaskOptFlow",
                "MediaPipe-FaceMeshPreprocessor",
                "MeshGraphormer-DepthMapPreprocessor",
                "MiDaS-DepthMapPreprocessor",
                "MiDaS-NormalMapPreprocessor",
                "OneFormer-ADE20K-SemSegPreprocessor",
                "OneFormer-COCO-SemSegPreprocessor",
                "OpenposePreprocessor",
                "PiDiNetPreprocessor",
                "PixelPerfectResolution",
                "SAMPreprocessor",
                "SavePoseKpsAsJsonFile",
                "ScribblePreprocessor",
                "Scribble_XDoG_Preprocessor",
                "SemSegPreprocessor",
                "ShufflePreprocessor",
                "TEEDPreprocessor",
                "TilePreprocessor",
                "UniFormer-SemSegPreprocessor",
                "Unimatch_OptFlowPreprocessor",
                "Zoe-DepthMapPreprocessor",
                "Zoe_DepthAnythingPreprocessor"
            ],
            "title_aux": "ComfyUI's ControlNet Auxiliary Preprocessors"
        }
    ],
    "https://github.com/Fantaxico/ComfyUI-GCP-Storage": [
        [
            "GCPStorageNode"
        ],
        {
            "title_aux": "ComfyUI-GCP-Storage"
        }
    ],
    "https://github.com/Feidorian/feidorian-ComfyNodes": [
        [],
        {
            "nodename_pattern": "^Feidorian_",
            "title_aux": "feidorian-ComfyNodes"
        }
    ],
    "https://github.com/Fictiverse/ComfyUI_Fictiverse": [
        [
            "Add Margin With Color",
            "Essential Params",
            "If Image Valid",
            "Image Params",
            "Is Image Valid ?",
            "None if same Image",
            "Video Params"
        ],
        {
            "title_aux": "ComfyUI Fictiverse Nodes"
        }
    ],
    "https://github.com/Fihade/IC-Light-ComfyUI-Node": [
        [
            "LoadICLightUnetDiffusers",
            "diffusers_model_loader",
            "iclight_diffusers_sampler"
        ],
        {
            "title_aux": "IC-Light-ComfyUI-Node"
        }
    ],
    "https://github.com/FinetunersAI/ComfyUI_Finetuners_Suite": [
        [
            "AutoImageResize",
            "GroupLink",
            "VariablesInjector"
        ],
        {
            "title_aux": "ComfyUI_Finetuners_Suite"
        }
    ],
    "https://github.com/FizzleDorf/ComfyUI-AIT": [
        [
            "AIT_Unet_Loader",
            "AIT_VAE_Encode_Loader"
        ],
        {
            "title_aux": "ComfyUI-AIT"
        }
    ],
    "https://github.com/FizzleDorf/ComfyUI_FizzNodes": [
        [
            "AbsCosWave",
            "AbsSinWave",
            "BatchGLIGENSchedule",
            "BatchPromptSchedule",
            "BatchPromptScheduleEncodeSDXL",
            "BatchPromptScheduleLatentInput",
            "BatchPromptScheduleNodeFlowEnd",
            "BatchPromptScheduleSDXLLatentInput",
            "BatchStringSchedule",
            "BatchValueSchedule",
            "BatchValueScheduleLatentInput",
            "CalculateFrameOffset",
            "ConcatStringSingle",
            "CosWave",
            "FizzFrame",
            "FizzFrameConcatenate",
            "ImagesFromBatchSchedule",
            "Init FizzFrame",
            "InvCosWave",
            "InvSinWave",
            "Lerp",
            "PromptSchedule",
            "PromptScheduleEncodeSDXL",
            "PromptScheduleNodeFlow",
            "PromptScheduleNodeFlowEnd",
            "SawtoothWave",
            "SinWave",
            "SquareWave",
            "StringConcatenate",
            "StringSchedule",
            "TriangleWave",
            "ValueSchedule",
            "convertKeyframeKeysToBatchKeys"
        ],
        {
            "title_aux": "FizzNodes"
        }
    ],
    "https://github.com/FlyingFireCo/tiled_ksampler": [
        [
            "Asymmetric Tiled KSampler",
            "Circular VAEDecode",
            "Tiled KSampler"
        ],
        {
            "title_aux": "tiled_ksampler"
        }
    ],
    "https://github.com/ForeignGods/ComfyUI-Mana-Nodes": [
        [
            "Canvas Properties",
            "Combine Video",
            "Font Properties",
            "Generate Audio",
            "Preset Color Animations",
            "Save/Preview Text",
            "Scheduled Values",
            "Speech Recognition",
            "Split Video",
            "Text to Image Generator"
        ],
        {
            "title_aux": "ComfyUI-Mana-Nodes"
        }
    ],
    "https://github.com/Franck-Demongin/NX_HuggingFace_Flux": [
        [
            "HFFlux"
        ],
        {
            "title_aux": "NX_HuggingFace_Flux"
        }
    ],
    "https://github.com/Franck-Demongin/NX_PromptStyler": [
        [
            "NX_PromptStyler"
        ],
        {
            "title_aux": "NX_PromptStyler"
        }
    ],
    "https://github.com/Franck-Demongin/NX_Translator": [
        [
            "Nx_Translator"
        ],
        {
            "title_aux": "NX_Translator"
        }
    ],
    "https://github.com/FuouM/ComfyUI-EbSynth": [
        [
            "ES_Guides7",
            "ES_Translate",
            "ES_VideoTransfer",
            "ES_VideoTransferExtra"
        ],
        {
            "author": "Fuou Marinas",
            "description": "Run EbSynth in ComfyUI.",
            "nickname": "EbSynth",
            "title": "ComfyUI-EbSynth",
            "title_aux": "ComfyUI-EbSynth"
        }
    ],
    "https://github.com/FuouM/ComfyUI-FirstOrderMM": [
        [
            "Articulate_Runner",
            "FOMM_Partswap",
            "FOMM_Runner",
            "FOMM_Seg10Chooser",
            "FOMM_Seg15Chooser",
            "FOMM_Seg5Chooser",
            "FSRT_Runner",
            "MRFA_Runner",
            "Spline_Runner"
        ],
        {
            "author": "Fuou Marinas",
            "description": "ComfyUI-native nodes to run First Order Motion Model for Image Animation and its non-diffusion-based successors.",
            "nickname": "FOMM",
            "title": "ComfyUI-FirstOrderMM",
            "title_aux": "ComfyUI-FirstOrderMM"
        }
    ],
    "https://github.com/FuouM/ComfyUI-StyleTransferPlus": [
        [
            "AESFA",
            "AesFAStyleBlend",
            "AesPA",
            "CAST",
            "CoralColorTransfer",
            "EFDM",
            "MicroAST",
            "NeuralNeighbor",
            "TSSAT",
            "UniST",
            "UniST_Video"
        ],
        {
            "author": "ZJU",
            "description": "A collection of style transfer nodes.",
            "nickname": "StyleTransferPlus",
            "title": "ComfyUI-StyleTransferPlus",
            "title_aux": "ComfyUI-StyleTransferPlus"
        }
    ],
    "https://github.com/FuouM/FM_nodes": [
        [
            "CoLIE_LowLight_Enhance",
            "ConvIR_DeHaze",
            "ConvIR_DeRain",
            "ConvIR_DeSnow",
            "ConvIR_DefocusDeblur",
            "ConvIR_MotionDeBlur",
            "ProPIH_Harmonizer",
            "RealViFormerSR",
            "StabStitch",
            "StabStitch_Crop_Resize",
            "StabStitch_Stabilize",
            "WFEN"
        ],
        {
            "author": "Fuou Marinas",
            "description": "A collection of nodes.",
            "nickname": "FM_nodes",
            "title": "FM Nodes",
            "title_aux": "FM_nodes"
        }
    ],
    "https://github.com/Fuwuffyi/ComfyUI-VisualArea-Nodes": [
        [
            "VisualAreaPrompt",
            "VisualAreaPromptAdvanced"
        ],
        {
            "author": "Fuwuffy",
            "description": "This is a collection of nodes created to aid when managing area conditionings.",
            "nickname": "comfy-visual-area",
            "title": "ComfyUI Visual Area Nodes",
            "title_aux": "ComfyUI-VisualArea-Nodes"
        }
    ],
    "https://github.com/G-370/ComfyUI-SD3-Powerlab": [
        [
            "G370SD3PowerLab_AttentionToImage",
            "G370SD3PowerLab_ImageIntoAttention",
            "G370SD3PowerLab_ImageIntoLayer",
            "G370SD3PowerLab_LayerToImage",
            "G370SD3PowerLab_RenderAttention"
        ],
        {
            "title_aux": "ComfyUI-SD3-Powerlab"
        }
    ],
    "https://github.com/GMapeSplat/ComfyUI_ezXY": [
        [
            "ConcatenateString",
            "ItemFromDropdown",
            "IterationDriver",
            "JoinImages",
            "LineToConsole",
            "NumberFromList",
            "NumbersToList",
            "PlotImages",
            "StringFromList",
            "StringToLabel",
            "StringsToList",
            "ezMath",
            "ezXY_AssemblePlot",
            "ezXY_Driver"
        ],
        {
            "title_aux": "ezXY scripts and nodes"
        }
    ],
    "https://github.com/GTSuya-Studio/ComfyUI-Gtsuya-Nodes": [
        [
            "Danbooru (ID)",
            "Danbooru (Random)",
            "Random File From Path",
            "Replace Strings",
            "Simple Wildcards",
            "Simple Wildcards (Dir.)",
            "Wildcards Nodes"
        ],
        {
            "title_aux": "ComfyUI-GTSuya-Nodes"
        }
    ],
    "https://github.com/GadzoinksOfficial/gadzoinks_ComfyUI": [
        [
            "Gadzoinks"
        ],
        {
            "author": "gadzoinksofficial",
            "description": "Custom node for integrating with gadzoinks iPhone app",
            "nickname": "Gadzoinks",
            "title": "Gadzoinks",
            "title_aux": "Gadzoinks"
        }
    ],
    "https://github.com/GavChap/ComfyUI-SD3LatentSelectRes": [
        [
            "SD3LatentSelectRes"
        ],
        {
            "title_aux": "ComfyUI-SD3LatentSelectRes"
        }
    ],
    "https://github.com/GeekyGhost/ComfyUI-GeekyRemB": [
        [
            "GeekyRemB"
        ],
        {
            "title_aux": "ComfyUI-GeekyRemB"
        }
    ],
    "https://github.com/GentlemanHu/ComfyUI-SunoAI": [
        [
            "GentlemanHu_SunoAI",
            "GentlemanHu_SunoAI_NotSafe"
        ],
        {
            "title_aux": "ComfyUI Suno API"
        }
    ],
    "https://github.com/GiusTex/ComfyUI-DiffusersImageOutpaint": [
        [
            "DiffusersImageOutpaint",
            "EncodeDiffusersOutpaintPrompt",
            "LoadDiffusersOutpaintModels",
            "PadImageForDiffusersOutpaint"
        ],
        {
            "title_aux": "ComfyUI-DiffusersImageOutpaint"
        }
    ],
    "https://github.com/Goktug/comfyui-saveimage-plus": [
        [
            "SaveImagePlus"
        ],
        {
            "title_aux": "Save Image Plus for ComfyUI"
        }
    ],
    "https://github.com/Gourieff/comfyui-reactor-node": [
        [
            "ImageRGBA2RGB",
            "ReActorBuildFaceModel",
            "ReActorFaceBoost",
            "ReActorFaceSwap",
            "ReActorFaceSwapOpt",
            "ReActorImageDublicator",
            "ReActorLoadFaceModel",
            "ReActorMakeFaceModelBatch",
            "ReActorMaskHelper",
            "ReActorOptions",
            "ReActorRestoreFace",
            "ReActorSaveFaceModel",
            "ReActorUnload"
        ],
        {
            "title_aux": "ReActor Node for ComfyUI"
        }
    ],
    "https://github.com/GraftingRayman/ComfyUI-PuLID-Flux-GR": [
        [
            "GRApplyPulidFlux",
            "GRPulidFluxEvaClipLoader",
            "GRPulidFluxInsightFaceLoader",
            "GRPulidFluxModelLoader"
        ],
        {
            "title_aux": "ComfyUI-PuLID-Flux-GR"
        }
    ],
    "https://github.com/GraftingRayman/ComfyUI_GraftingRayman": [
        [
            "GR Background Remover REMBG",
            "GR Checkered Board",
            "GR Counter",
            "GR Flip Tile Random Inverted",
            "GR Flip Tile Random Red Ring",
            "GR Image Details Displayer",
            "GR Image Details Saver",
            "GR Image Paste",
            "GR Image Paste With Mask",
            "GR Image Resize",
            "GR Image Resize Methods",
            "GR Image Size",
            "GR Image/Depth Mask",
            "GR Mask",
            "GR Mask Create",
            "GR Mask Create Random",
            "GR Mask Create Random Multi",
            "GR Mask Resize",
            "GR Multi Mask Create",
            "GR Onomatopoeia",
            "GR Pan Or Zoom",
            "GR Prompt Generator",
            "GR Prompt Generator Extended",
            "GR Prompt HUB",
            "GR Prompt Selector",
            "GR Prompt Selector Multi",
            "GR Prompty",
            "GR Scroller",
            "GR Stack Image",
            "GR Text Overlay",
            "GR Tile and Border Image",
            "GR Tile and Border Image Random Flip"
        ],
        {
            "title_aux": "GraftingRayman"
        }
    ],
    "https://github.com/GraftingRayman/ComfyUI_QueueTube": [
        [
            "GR QueueTube"
        ],
        {
            "title_aux": "ComfyUI QueueTube"
        }
    ],
    "https://github.com/GreenLandisaLie/AuraSR-ComfyUI": [
        [
            "AuraSR.AuraSRUpscaler"
        ],
        {
            "title_aux": "AuraSR-ComfyUI"
        }
    ],
    "https://github.com/GrenKain/PixelArt-Processing-Nodes-for-ComfyUI": [
        [
            "PixelArtDownscaleNode",
            "PixelArtNode"
        ],
        {
            "title_aux": "PixelArt Processing Nodes"
        }
    ],
    "https://github.com/GrvBdgr/comfyui-negativewildcardsprocessor": [
        [
            "custom_token_processor",
            "neg_wildcard_processor"
        ],
        {
            "title_aux": "Negative Wildcard Processor Node for ComfyUI"
        }
    ],
    "https://github.com/Guillaume-Fgt/ComfyUI_StableCascadeLatentRatio": [
        [
            "StableCascadeLatentRatio"
        ],
        {
            "title_aux": "ComfyUI_StableCascadeLatentRatio"
        }
    ],
    "https://github.com/HAL41/ComfyUI-aichemy-nodes": [
        [
            "aichemyYOLOv8Segmentation"
        ],
        {
            "title_aux": "ComfyUI aichemy nodes"
        }
    ],
    "https://github.com/HECer/ComfyUI-FilePathCreator": [
        [
            "FilePathCreator",
            "FilePathExtractor"
        ],
        {
            "title_aux": "ComfyUI-FilePathCreator"
        }
    ],
    "https://github.com/HM-RunningHub/ComfyUI_RH_APICall": [
        [
            "RH_ExecuteNode",
            "RH_ImageUploaderNode",
            "RH_NodeInfoListNode",
            "RH_SettingsNode",
            "RH_Utils"
        ],
        {
            "title_aux": "ComfyUI_RH_APICall"
        }
    ],
    "https://github.com/HM-RunningHub/ComfyUI_RH_OminiControl": [
        [
            "RunningHub_Omini_Fill",
            "RunningHub_Omini_Spatial",
            "RunningHub_Omini_Subject"
        ],
        {
            "title_aux": "ComfyUI_RH_OminiControl"
        }
    ],
    "https://github.com/Haiper-ai/ComfyUI-HaiperAI-API": [
        [
            "HaiperImage2Video",
            "HaiperKeyframeConditioning",
            "HaiperText2Image",
            "HaiperText2Video"
        ],
        {
            "title_aux": "ComfyUI-HaiperAI-API"
        }
    ],
    "https://github.com/Hangover3832/ComfyUI-Hangover-Moondream": [
        [
            "Moondream Interrogator"
        ],
        {
            "author": "AlexL",
            "description": "An implementation of the moondream visual LLM",
            "nickname": "Hangover-Moondream",
            "title": "ComfyUI-Hangover-Moondream",
            "title_aux": "ComfyUI-Hangover-Moondream"
        }
    ],
    "https://github.com/Hangover3832/ComfyUI-Hangover-Nodes": [
        [
            "Image Scale Bounding Box",
            "MS kosmos-2 Interrogator",
            "Make Inpaint Model",
            "Save Image w/o Metadata"
        ],
        {
            "author": "AlexL",
            "description": "An implementation of Microsoft kosmos-2 image to text transformer.",
            "nickname": "Hangover-ms_kosmos2",
            "title": "ComfyUI-Hangover-Kosmos2",
            "title_aux": "ComfyUI-Hangover-Nodes"
        }
    ],
    "https://github.com/Hangover3832/ComfyUI-Hangover-Recognize_Anything": [
        [
            "Recognize Anything Model (RAM)"
        ],
        {
            "author": "AlexL",
            "description": "An implementation of the Recognize Anything Model (RAM++) for ComfyUI. The counterpart of Segment Anything Model (SAM).",
            "nickname": "Hangover-Recognize_Anything",
            "title": "ComfyUI-Hangover-Recognize_Anything",
            "title_aux": "Recognize Anything Model (RAM) for ComfyUI"
        }
    ],
    "https://github.com/Haoming02/comfyui-diffusion-cg": [
        [
            "Normalization",
            "Recenter",
            "Recenter XL"
        ],
        {
            "title_aux": "Diffusion CG"
        }
    ],
    "https://github.com/Haoming02/comfyui-floodgate": [
        [
            "FloodGate"
        ],
        {
            "title_aux": "Floodgate"
        }
    ],
    "https://github.com/Haoming02/comfyui-resharpen": [
        [
            "Resharpen"
        ],
        {
            "title_aux": "ComfyUI ReSharpen"
        }
    ],
    "https://github.com/HaydenReeve/ComfyUI-Better-Strings": [
        [
            "BetterString"
        ],
        {
            "title_aux": "ComfyUI Better Strings"
        }
    ],
    "https://github.com/HeadshotPro/ComfyUI-HeadshotPro": [
        [
            "[HSP] Download Dreambooth Checkpoint",
            "[HSP] Download Flux Lora",
            "[HSP] Get Random Value From List",
            "[HSP] Load Canny Pose Face",
            "[HSP] Transparent to White Background"
        ],
        {
            "title_aux": "ComfyUI-HeadshotPro"
        }
    ],
    "https://github.com/HebelHuber/comfyui-enhanced-save-node": [
        [
            "EnhancedSaveNode"
        ],
        {
            "title_aux": "comfyui-enhanced-save-node"
        }
    ],
    "https://github.com/HelloVision/ComfyUI_HelloMeme": [
        [
            "CropPortrait",
            "GetDriveExpression",
            "GetDriveExpression2",
            "GetDrivePose",
            "GetFaceLandmarks",
            "HMFaceToolkitsLoader",
            "HMImagePipelineLoader",
            "HMPipelineImage",
            "HMPipelineVideo",
            "HMVideoPipelineLoader"
        ],
        {
            "title_aux": "ComfyUI_HelloMeme"
        }
    ],
    "https://github.com/Hellrunner2k/ComfyUI-HellrunnersMagicalNodes": [
        [
            "AdjustMojo",
            "LoadMaskMap",
            "MagicalSaveNode",
            "MojoLoader",
            "MojoMaker",
            "SaveMojo",
            "ThermalLatenator"
        ],
        {
            "title_aux": "Hellrunner's Magical Nodes"
        }
    ],
    "https://github.com/Hiero207/ComfyUI-Hiero-Nodes": [
        [
            "Load Prompt Travel file",
            "Post to Discord w/ Webhook",
            "Save Prompt Travel file"
        ],
        {
            "author": "Hiero",
            "description": "Just some nodes that I wanted/needed, so I made them.",
            "nickname": "HNodes",
            "title": "Hiero-Nodes",
            "title_aux": "Hiero-Nodes"
        }
    ],
    "https://github.com/Hopping-Mad-Games/ComfyUI_LiteLLM": [
        [
            "AgentMemoryProvider",
            "AgentNode",
            "BasicRecursionFilterNode",
            "DocumentChunkRecursionFilterNode",
            "DocumentProcessor",
            "LinuxMemoryDirectory",
            "QueryNode"
        ],
        {
            "description": "Nodes for interfacing with LiteLLM",
            "nickname": "Tasha",
            "title": "ComfyUI_LiteLLM",
            "title_aux": "ComfyUI_LiteLLM"
        }
    ],
    "https://github.com/Hullabalo/ComfyUI-Loop": [
        [
            "ImageCutLoop",
            "ImagePasteLoop",
            "LoadImageSimple",
            "SaveImageSimple"
        ],
        {
            "title_aux": "ComfyUI-Loop"
        }
    ],
    "https://github.com/IDGallagher/ComfyUI-IG-Motion-I2V": [
        [
            "MI2V Flow Animator",
            "MI2V Flow Predictor",
            "MI2V PauseNode",
            "MotionPainter"
        ],
        {
            "author": "IDGallagher",
            "description": "Custom nodes to aid in the exploration of Latent Space",
            "nickname": "IG Interpolation Nodes",
            "title": "IG Interpolation Nodes",
            "title_aux": "ComfyUI-IG-Motion-I2V"
        }
    ],
    "https://github.com/IDGallagher/ComfyUI-IG-Nodes": [
        [
            "IG Analyze SSIM",
            "IG Cross Fade Images",
            "IG Explorer",
            "IG Float",
            "IG Float List",
            "IG Folder",
            "IG Int",
            "IG Interpolate",
            "IG Load Image",
            "IG Load Images",
            "IG MotionPredictor",
            "IG Multiply",
            "IG Path Join",
            "IG String",
            "IG String List",
            "IG ZFill",
            "SM Video Base",
            "SM Video Base Control"
        ],
        {
            "author": "IDGallagher",
            "description": "Custom nodes to aid in the exploration of Latent Space",
            "nickname": "IG Interpolation Nodes",
            "title": "IG Interpolation Nodes",
            "title_aux": "IG Interpolation Nodes"
        }
    ],
    "https://github.com/IDGallagher/MotionVideoSearch": [
        [
            "IG Motion Video Frame",
            "IG Motion Video Search"
        ],
        {
            "author": "IDGallagher",
            "description": "Search an index of videos by motion image",
            "nickname": "IG Motion Video Search",
            "title": "IG Motion Video Search",
            "title_aux": "IG-Motion-Search"
        }
    ],
    "https://github.com/ITurchenko/ComfyUI-SizeFromArray": [
        [
            "SizeFromArray"
        ],
        {
            "title_aux": "ComfyUI-SizeFromArray"
        }
    ],
    "https://github.com/IamCreateAI/Ruyi-Models": [
        [
            "Ruyi_I2VSampler",
            "Ruyi_LoadLora",
            "Ruyi_LoadModel"
        ],
        {
            "title_aux": "ComfyUI-Ruyi"
        }
    ],
    "https://github.com/IgalOgonov/ComfyUI_Simple_String_Repository": [
        [
            "SimpleStringRepository",
            "SimpleStringRepositoryCompact",
            "SimpleStringRepositoryLarge",
            "SimpleStringRepositoryLargeCompact",
            "SimpleStringRepositorySmall",
            "SimpleStringRepositorySmallCompact"
        ],
        {
            "title_aux": "Simple String Repository"
        }
    ],
    "https://github.com/ImmortalPie/ComfyUI-PonySwitch": [
        [
            "PonySwitch"
        ],
        {
            "title_aux": "PonySwitch Node"
        }
    ],
    "https://github.com/InstantStudioAI/ComfyUI-InstantStudio": [
        [
            "HuggingFace Classify",
            "Moondream",
            "UploadImagesToInstantStudio"
        ],
        {
            "title_aux": "ComfyUI-InstantStudio"
        }
    ],
    "https://github.com/Intersection98/ComfyUI_MX_post_processing-nodes": [
        [
            "MX_AlphaBlend",
            "MX_Blend",
            "MX_Blur",
            "MX_Canny",
            "MX_ChromaticAberration",
            "MX_ColorCorrect",
            "MX_ColorMatch",
            "MX_ColorTint",
            "MX_Glow",
            "MX_HSVThresholdMask",
            "MX_KuwaharaBlur(Cartoon)",
            "MX_LUT",
            "MX_LensBokeh",
            "MX_LensOpticAxis",
            "MX_LensZoomBurst",
            "MX_Mosaic",
            "MX_Noise",
            "MX_Posterize",
            "MX_SineWave",
            "MX_Solarize",
            "MX_Vignette"
        ],
        {
            "title_aux": "ComfyUI-MX-post-processing-nodes"
        }
    ],
    "https://github.com/Inzaniak/comfyui-ranbooru": [
        [
            "LockSeed",
            "PromptBackground",
            "PromptLimit",
            "PromptMix",
            "PromptRandomWeight",
            "PromptRemove",
            "Ranbooru",
            "RanbooruURL",
            "RandomPicturePath",
            "TimestampFileName"
        ],
        {
            "title_aux": "Ranbooru for ComfyUI"
        }
    ],
    "https://github.com/IsItDanOrAi/ComfyUI-Stereopsis": [
        [
            "Dan_FrameDelay",
            "Dan_Stereopsis"
        ],
        {
            "title_aux": "ComfyUI-Stereopsis"
        }
    ],
    "https://github.com/Isi-dev/ComfyUI-Animation_Nodes_and_Workflows": [
        [
            "CLIPTextEncodeStyles",
            "JoinVideos",
            "MakeDrivingVideoForLivePortrait",
            "MakePortraitWalk",
            "MoveInOrOut",
            "MoveLeftOrRight",
            "MoveUpOrDown",
            "Replace_Img_or_Vid_Bg_Assistant"
        ],
        {
            "title_aux": "ComfyUI-Animation_Nodes_and_Workflows"
        }
    ],
    "https://github.com/Isi-dev/ComfyUI-Img2DrawingAssistants": [
        [
            "LineArt_Assistant",
            "LineArt_Assistant_2",
            "Sketch_Assistant",
            "Sketch_Assistant_grayScale"
        ],
        {
            "title_aux": "ComfyUI-Img2DrawingAssistants"
        }
    ],
    "https://github.com/Isi-dev/ComfyUI-Img2PaintingAssistant": [
        [
            "Painting",
            "ProcessInspyrenetRembg"
        ],
        {
            "title_aux": "Image to Painting and Inspyrenet Assistant Nodes"
        }
    ],
    "https://github.com/Isi-dev/ComfyUI-UniAnimate-W": [
        [
            "Animate_X_Image",
            "Animate_X_Image_Long",
            "Animate_X_Image_v2",
            "Animate_X_ReposeImage",
            "Animate_X_ReposeImage_v2",
            "Gen_align_pose",
            "Gen_align_pose2",
            "ReposeImage",
            "UniAnimateImage",
            "UniAnimateImageLong"
        ],
        {
            "title_aux": "UniAnimate Nodes for ComfyUI"
        }
    ],
    "https://github.com/Isulion/ComfyUI_Isulion": [
        [
            "CustomTextNode",
            "DisplayImageFromURL",
            "IsuCollage_Node",
            "Isulion Civitai Image Display",
            "Isulion Civitai Model Explorer",
            "Isulion Civitai Trending",
            "IsulionActionGenerator",
            "IsulionAlienWorldGenerator",
            "IsulionAnimalBehaviorGenerator",
            "IsulionAnimalRandom",
            "IsulionArtStyleGenerator",
            "IsulionArtifactGenerator",
            "IsulionCivitaiImageDisplay",
            "IsulionCivitaiModelExplorer",
            "IsulionCivitaiTrending",
            "IsulionClothingGenerator",
            "IsulionCuteAnimalRandom",
            "IsulionEmotionGenerator",
            "IsulionEpochGenerator",
            "IsulionFantasyRaceGenerator",
            "IsulionHabitatGenerator",
            "IsulionLoadImagesNode",
            "IsulionMagicalEffectGenerator",
            "IsulionMegaPromptV3",
            "IsulionMultiplePromptGenerator",
            "IsulionMythicalLocationGenerator",
            "IsulionNegativePromptGenerator",
            "IsulionProfessionGenerator",
            "IsulionPromptEnhancer",
            "IsulionSceneComposition",
            "IsulionSpacecraftGenerator",
            "IsulionStyleMixer",
            "IsulionTechGenerator",
            "IsulionTimeOfDayGenerator",
            "IsulionVideoPromptGenerator",
            "IsulionWeatherGenerator",
            "\ud83d\udca4 IsulionShutdown"
        ],
        {
            "title_aux": "ComfyUI_Isulion Random Prompt Generator"
        }
    ],
    "https://github.com/IuvenisSapiens/ComfyUI_MiniCPM-V-2_6-int4": [
        [
            "DisplayText",
            "LoadVideo",
            "MiniCPM_VQA",
            "MiniCPM_VQA_Polished",
            "MultipleImagesInput",
            "PreviewVideo"
        ],
        {
            "title_aux": "ComfyUI_MiniCPM-V-2_6-int4"
        }
    ],
    "https://github.com/IuvenisSapiens/ComfyUI_Qwen2-Audio-7B-Instruct-Int4": [
        [
            "AudioLoader",
            "AudioPreviewer",
            "Qwen2_AQA"
        ],
        {
            "title_aux": "ComfyUI_Qwen2-Audio-7B-Instruct-Int4"
        }
    ],
    "https://github.com/IuvenisSapiens/ComfyUI_Qwen2-VL-Instruct": [
        [
            "ImageLoader",
            "MultiplePathsInput",
            "Qwen2_VQA"
        ],
        {
            "title_aux": "ComfyUI_Qwen2-VL-Instruct"
        }
    ],
    "https://github.com/JEONG-JIWOO/ComfyUI_Eugene_Nodes": [
        [
            "DictBus",
            "DictBusEdit",
            "DictBusUnpack",
            "DictMultilineSelect",
            "DictTemplate",
            "DictUpdate1",
            "DictUpdate10",
            "DictUpdate5",
            "LoraPresetListLoader",
            "LoraPresetLoader",
            "LoraPresetSaver",
            "LoraPresetSelector"
        ],
        {
            "title_aux": "ComfyUI_Eugene_Nodes"
        }
    ],
    "https://github.com/JPS-GER/ComfyUI_JPS-Nodes": [
        [
            "CLIPTextEncode SDXL Plus (JPS)",
            "Conditioning Switch (JPS)",
            "ControlNet Switch (JPS)",
            "Crop Image Pipe (JPS)",
            "Crop Image Settings (JPS)",
            "Crop Image Square (JPS)",
            "Crop Image TargetSize (JPS)",
            "CtrlNet CannyEdge Pipe (JPS)",
            "CtrlNet CannyEdge Settings (JPS)",
            "CtrlNet MiDaS Pipe (JPS)",
            "CtrlNet MiDaS Settings (JPS)",
            "CtrlNet OpenPose Pipe (JPS)",
            "CtrlNet OpenPose Settings (JPS)",
            "CtrlNet ZoeDepth Pipe (JPS)",
            "CtrlNet ZoeDepth Settings (JPS)",
            "Disable Enable Switch (JPS)",
            "Enable Disable Switch (JPS)",
            "Generation TXT IMG Settings (JPS)",
            "Get Date Time String (JPS)",
            "Get Image Size (JPS)",
            "IP Adapter Settings (JPS)",
            "IP Adapter Settings Pipe (JPS)",
            "IP Adapter Tiled Settings (JPS)",
            "IP Adapter Tiled Settings Pipe (JPS)",
            "IPA Switch (JPS)",
            "Image Prepare Pipe (JPS)",
            "Image Prepare Settings (JPS)",
            "Image Switch (JPS)",
            "ImageToImage Pipe (JPS)",
            "ImageToImage Settings (JPS)",
            "Images Masks MultiPipe (JPS)",
            "InstantID Mask Prepare Pipe (JPS)",
            "InstantID Mask Prepare Settings (JPS)",
            "InstantID Pipe (JPS)",
            "InstantID Pose Prepare Pipe (JPS)",
            "InstantID Pose Prepare Settings (JPS)",
            "InstantID Settings (JPS)",
            "InstantID Source Prepare Pipe (JPS)",
            "InstantID Source Prepare Settings (JPS)",
            "Integer Switch (JPS)",
            "Largest Int (JPS)",
            "Latent Switch (JPS)",
            "Lora Loader (JPS)",
            "Mask Switch (JPS)",
            "Model Switch (JPS)",
            "Multiply Float Float (JPS)",
            "Multiply Int Float (JPS)",
            "Multiply Int Int (JPS)",
            "Prepare Image (JPS)",
            "Prepare Image Plus (JPS)",
            "Prepare Image Tiled IPA (JPS)",
            "Resolution Multiply (JPS)",
            "Revision Settings (JPS)",
            "Revision Settings Pipe (JPS)",
            "SDXL Basic Settings (JPS)",
            "SDXL Basic Settings Pipe (JPS)",
            "SDXL Fundamentals MultiPipe (JPS)",
            "SDXL Prompt Handling (JPS)",
            "SDXL Prompt Handling Plus (JPS)",
            "SDXL Prompt Styler (JPS)",
            "SDXL Recommended Resolution Calc (JPS)",
            "SDXL Resolutions (JPS)",
            "SDXL Settings (JPS)",
            "SDXL Settings Pipe (JPS)",
            "Sampler Scheduler Settings (JPS)",
            "Save Images Plus (JPS)",
            "Substract Int Int (JPS)",
            "Text Concatenate (JPS)",
            "Text Prompt (JPS)",
            "Text Prompt Combo (JPS)",
            "Time Seed (JPS)",
            "VAE Switch (JPS)"
        ],
        {
            "author": "JPS",
            "description": "Various nodes to handle SDXL Resolutions, SDXL Basic Settings, IP Adapter Settings, Revision Settings, SDXL Prompt Styler, Crop Image to Square, Crop Image to Target Size, Get Date-Time String, Resolution Multiply, Largest Integer, 5-to-1 Switches for Integer, Images, Latents, Conditioning, Model, VAE, ControlNet",
            "nickname": "JPS Custom Nodes",
            "title": "JPS Custom Nodes for ComfyUI",
            "title_aux": "JPS Custom Nodes for ComfyUI"
        }
    ],
    "https://github.com/JPrevots/ComfyUI-PhyCV": [
        [
            "PAGE",
            "PST",
            "VEVID"
        ],
        {
            "title_aux": "ComfyUI-PhyCV"
        }
    ],
    "https://github.com/JackEllie/ComfyUI_AI_Assistant": [
        [
            "apply_lighting_effects",
            "clean_prompt_tags",
            "noline_process",
            "prompt_blacklist",
            "prompt_sorting",
            "resize_image_sdxl_ratio"
        ],
        {
            "title_aux": "ComfyUI-AI-Assistant"
        }
    ],
    "https://github.com/Jaminanim/ComfyUI-Random-Int-Divisor-Node": [
        [
            "RandomIntegerNodeEfficient",
            "RandomIntegerNodeEfficientAdvanced",
            "RandomIntegerNodeList"
        ],
        {
            "title_aux": "ComfyUI-Random-Int-Divisor-Node"
        }
    ],
    "https://github.com/Jannchie/ComfyUI-J": [
        [
            "DiffusersCompelPromptEmbedding",
            "DiffusersControlnetLoader",
            "DiffusersControlnetUnit",
            "DiffusersControlnetUnitStack",
            "DiffusersDecoder",
            "DiffusersGenerator",
            "DiffusersPipeline",
            "DiffusersPrepareLatents",
            "DiffusersTextureInversionLoader",
            "DiffusersXLPipeline",
            "GetAverageColorFromImage",
            "GetFilledColorImage"
        ],
        {
            "title_aux": "ComfyUI-J"
        }
    ],
    "https://github.com/JaredTherriault/ComfyUI-JNodes": [
        [
            "JNodes_AddOrSetMetaDataKey",
            "JNodes_AnyToString",
            "JNodes_AppendReversedFrames",
            "JNodes_AudioInputOptions",
            "JNodes_BooleanSelectorWithString",
            "JNodes_BreakMediaInfo",
            "JNodes_CheckpointSelectorWithString",
            "JNodes_ConditioningInOut",
            "JNodes_CreateStereoscopicImageFromDepth",
            "JNodes_DiffusionModelSelector",
            "JNodes_FloatLiteral",
            "JNodes_GetCleanFilename",
            "JNodes_GetComfyDirectory",
            "JNodes_GetLeafDirectory",
            "JNodes_GetOutputDirectory",
            "JNodes_GetParameterFromList",
            "JNodes_GetParameterGlobal",
            "JNodes_GetTempDirectory",
            "JNodes_ImageFormatSelector",
            "JNodes_ImageSizeSelector",
            "JNodes_IntLiteral",
            "JNodes_JoinVideosInDirectory",
            "JNodes_LoadVideo",
            "JNodes_LoadVisualMediaFromPath",
            "JNodes_LoadVisualMediaFromPath_Batch",
            "JNodes_LoadVisualMediaFromPath_List",
            "JNodes_LoraExtractor",
            "JNodes_MediaInfoToString",
            "JNodes_ModelInOut",
            "JNodes_OutVideoInfo",
            "JNodes_ParseDynamicPrompts",
            "JNodes_ParseParametersToGlobalList",
            "JNodes_ParseWildcards",
            "JNodes_PromptBuilderSingleSubject",
            "JNodes_RemoveCommentedText",
            "JNodes_RemoveMetaDataKey",
            "JNodes_RemoveParseableDataForInference",
            "JNodes_SamplerSelectorWithString",
            "JNodes_SaveImageWithOutput",
            "JNodes_SaveVideo",
            "JNodes_SaveVideoWithOptions",
            "JNodes_SchedulerSelectorWithString",
            "JNodes_SearchAndReplace",
            "JNodes_SearchAndReplaceFromFile",
            "JNodes_SearchAndReplaceFromList",
            "JNodes_SelectRandomFileFromDirectory",
            "JNodes_SeparateStringByDelimiters",
            "JNodes_SetMetadataA1111",
            "JNodes_SetNegativePromptInMetaData",
            "JNodes_SetPositivePromptInMetaData",
            "JNodes_SplitAndJoin",
            "JNodes_StringLiteral",
            "JNodes_SubdirectorySelector",
            "JNodes_SyncedStringLiteral",
            "JNodes_TokenCounter",
            "JNodes_TrimAndStrip",
            "JNodes_UploadVideo",
            "JNodes_UploadVisualMedia",
            "JNodes_VaeSelectorWithString"
        ],
        {
            "title_aux": "ComfyUI-JNodes"
        }
    ],
    "https://github.com/Jash-Vora/ComfyUI-GarmentDiT": [
        [
            "GarmentEnhancementNode"
        ],
        {
            "title_aux": "FitDiT"
        }
    ],
    "https://github.com/JcandZero/ComfyUI_GLM4Node": [
        [
            "GLM3_turbo_CHAT",
            "GLM4_CHAT",
            "GLM4_Vsion_IMGURL"
        ],
        {
            "title_aux": "ComfyUI_GLM4Node"
        }
    ],
    "https://github.com/Jcd1230/rembg-comfyui-node": [
        [
            "Image Remove Background (rembg)"
        ],
        {
            "title_aux": "Rembg Background Removal Node for ComfyUI"
        }
    ],
    "https://github.com/JerryOrbachJr/ComfyUI-RandomSize": [
        [
            "JOJR_RandomSize"
        ],
        {
            "author": "JerryOrbachJr",
            "description": "A ComfyUI custom node that randomly selects a height and width pair from a list in a config file",
            "nickname": "Random Size",
            "title": "Random Size",
            "title_aux": "Random Size"
        }
    ],
    "https://github.com/JettHu/ComfyUI-TCD": [
        [
            "TCDModelSamplingDiscrete"
        ],
        {
            "title_aux": "ComfyUI-TCD"
        }
    ],
    "https://github.com/JettHu/ComfyUI_TGate": [
        [
            "TGateApply",
            "TGateApplyAdvanced",
            "TGateApplySimple"
        ],
        {
            "title_aux": "ComfyUI_TGate"
        }
    ],
    "https://github.com/JichaoLiang/Immortal_comfyUI": [
        [
            "AppendNode",
            "CombineVideos",
            "ImAppendFreeChatAction",
            "ImAppendImageActionNode",
            "ImAppendQuickbackNode",
            "ImAppendQuickbackVideoNode",
            "ImAppendVideoNode",
            "ImDumpEntity",
            "ImDumpNode",
            "ImLoadPackage",
            "ImNodeTitleOverride",
            "ImSetActionKeywordMapping",
            "MergeNode",
            "NewNode",
            "Node2String",
            "OllamaChat",
            "SaveImagePath",
            "SaveToDirectory",
            "SetEvent",
            "SetNodeMapping",
            "SetProperties",
            "String2Node",
            "TurnOnOffNodeOnEnter",
            "batchNodes",
            "grepNodeByText",
            "mergeEntityAndPointer",
            "redirectToNode"
        ],
        {
            "title_aux": "Immortal_comfyUI"
        }
    ],
    "https://github.com/Jonseed/ComfyUI-Detail-Daemon": [
        [
            "DetailDaemonGraphSigmasNode",
            "DetailDaemonSamplerNode",
            "LyingSigmaSampler",
            "MultiplySigmas"
        ],
        {
            "title_aux": "ComfyUI-Detail-Daemon"
        }
    ],
    "https://github.com/Jordach/comfy-plasma": [
        [
            "JDC_AutoContrast",
            "JDC_BlendImages",
            "JDC_BrownNoise",
            "JDC_Contrast",
            "JDC_EqualizeGrey",
            "JDC_GaussianBlur",
            "JDC_GreyNoise",
            "JDC_Greyscale",
            "JDC_ImageLoader",
            "JDC_ImageLoaderMeta",
            "JDC_PinkNoise",
            "JDC_Plasma",
            "JDC_PlasmaSampler",
            "JDC_PowerImage",
            "JDC_RandNoise",
            "JDC_ResizeFactor"
        ],
        {
            "title_aux": "comfy-plasma"
        }
    ],
    "https://github.com/JosefKuchar/ComfyUI-AdvancedTiling": [
        [
            "AdvancedTiling",
            "AdvancedTilingSettings",
            "AdvancedTilingVAEDecode"
        ],
        {
            "title_aux": "ComfyUI-AdvancedTiling"
        }
    ],
    "https://github.com/JosephThomasParker/ComfyUI-DrawThingsWrapper": [
        [
            "DrawThingsGenerateFromPipeline",
            "DrawThingsImg2Img",
            "DrawThingsImg2ImgPipeline",
            "DrawThingsPipelineAddControl",
            "DrawThingsPipelineAddCustom",
            "DrawThingsPipelineAddLora",
            "DrawThingsTxt2Img",
            "DrawThingsTxt2ImgPipeline"
        ],
        {
            "title_aux": "ComfyUI-DrawThingsWrapper"
        }
    ],
    "https://github.com/Julian-adv/WildDivide": [
        [
            "Attention couple wild divide",
            "Comfy Divide",
            "WildPromptGenerator",
            "WildcardDivide",
            "WildcardEncode"
        ],
        {
            "author": "Julian Adventurer.",
            "description": "This node is used to encode a wildcard string.",
            "nickname": "WildDivide",
            "title": "Wild Divide",
            "title_aux": "Wild Divide"
        }
    ],
    "https://github.com/JustinMatters/comfyUI-JMNodes": [
        [
            "JMBinaryNot",
            "JMIntegerToBooleans",
            "JMNumberList",
            "JMSWitchablePrompt"
        ],
        {
            "title_aux": "ComfyUI JMNodes"
        }
    ],
    "https://github.com/Kangkang625/ComfyUI-paint-by-example": [
        [
            "PaintbyExamplePipeLoader",
            "PaintbyExampleSampler"
        ],
        {
            "title_aux": "ComfyUI-Paint-by-Example"
        }
    ],
    "https://github.com/Kesin11/ComfyUI-list-filter": [
        [
            "list_filter_FilterImageListByIndexList",
            "list_filter_FilterStringListByIndexList",
            "list_filter_FindAnyStrings",
            "list_filter_FindNotAnyStrings",
            "list_filter_StringToIndex",
            "random_normal_dist"
        ],
        {
            "title_aux": "ComfyUI-list-filter"
        }
    ],
    "https://github.com/KewkLW/ComfyUI-kewky_tools": [
        [
            "CLIPInterrogator",
            "FormattedPromptNode",
            "ImageBatcher",
            "LoadImagePlus",
            "LoadVideoPlus",
            "TensorDebugPlus",
            "TextAppendNode",
            "TextSearchNode",
            "VRAM_Debug_Plus"
        ],
        {
            "title_aux": "ComfyUI-kewky_tools"
        }
    ],
    "https://github.com/KohakuBlueleaf/z-tipo-extension": [
        [
            "TIPO",
            "TIPOFormat",
            "TIPOOperation"
        ],
        {
            "title_aux": "TIPO-extension"
        }
    ],
    "https://github.com/KoreTeknology/ComfyUI-Nai-Production-Nodes-Pack": [
        [
            "Brightness Image",
            "ColorMatch2",
            "Contrast Image",
            "Get Text",
            "Image Difference",
            "ImageConcatenate",
            "ImageDesaturate",
            "ImageExtend",
            "ImageFlip",
            "ImageRotate",
            "LoadImageNai",
            "Math Operation",
            "NoteAdvanced",
            "Set Text"
        ],
        {
            "title_aux": "ComfyUI Production Nodes Pack"
        }
    ],
    "https://github.com/KoreTeknology/ComfyUI-Universal-Styler": [
        [
            "Load Nai Styles Complex CSV",
            "ShowText|pysssss",
            "Universal_Styler_Node",
            "concat"
        ],
        {
            "title_aux": "ComfyUI Universal Styler"
        }
    ],
    "https://github.com/Kosinkadink/ComfyUI-Advanced-ControlNet": [
        [
            "ACN_AdvancedControlNetApply",
            "ACN_AdvancedControlNetApplySingle",
            "ACN_AdvancedControlNetApplySingle_v2",
            "ACN_AdvancedControlNetApply_v2",
            "ACN_ControlNet++InputNode",
            "ACN_ControlNet++LoaderAdvanced",
            "ACN_ControlNet++LoaderSingle",
            "ACN_ControlNetLoaderAdvanced",
            "ACN_ControlNetLoaderWithLoraAdvanced",
            "ACN_CtrLoRALoader",
            "ACN_CustomControlNetWeightsFlux",
            "ACN_CustomControlNetWeightsSD15",
            "ACN_CustomT2IAdapterWeights",
            "ACN_DefaultUniversalWeights",
            "ACN_DiffControlNetLoaderAdvanced",
            "ACN_ExtrasMiddleMult",
            "ACN_ReferenceControlNet",
            "ACN_ReferenceControlNetFinetune",
            "ACN_ReferencePreprocessor",
            "ACN_ScaledSoftControlNetWeights",
            "ACN_SoftControlNetWeightsSD15",
            "ACN_SoftT2IAdapterWeights",
            "ACN_SparseCtrlIndexMethodNode",
            "ACN_SparseCtrlLoaderAdvanced",
            "ACN_SparseCtrlMergedLoaderAdvanced",
            "ACN_SparseCtrlRGBPreprocessor",
            "ACN_SparseCtrlSpreadMethodNode",
            "ACN_SparseCtrlWeightExtras",
            "ACN_TimestepKeyframeFromStrengthList",
            "ACN_TimestepKeyframeInterpolation",
            "ControlNetLoaderAdvanced",
            "CustomControlNetWeights",
            "CustomT2IAdapterWeights",
            "DiffControlNetLoaderAdvanced",
            "LatentKeyframe",
            "LatentKeyframeBatchedGroup",
            "LatentKeyframeGroup",
            "LatentKeyframeTiming",
            "LoadImagesFromDirectory",
            "ScaledSoftControlNetWeights",
            "ScaledSoftMaskedUniversalWeights",
            "SoftControlNetWeights",
            "SoftT2IAdapterWeights",
            "TimestepKeyframe"
        ],
        {
            "title_aux": "ComfyUI-Advanced-ControlNet"
        }
    ],
    "https://github.com/Kosinkadink/ComfyUI-AnimateDiff-Evolved": [
        [
            "ADE_AdjustPEFullStretch",
            "ADE_AdjustPEManual",
            "ADE_AdjustPESweetspotStretch",
            "ADE_AdjustWeightAllAdd",
            "ADE_AdjustWeightAllMult",
            "ADE_AdjustWeightIndivAdd",
            "ADE_AdjustWeightIndivAttnAdd",
            "ADE_AdjustWeightIndivAttnMult",
            "ADE_AdjustWeightIndivMult",
            "ADE_AnimateDiffCombine",
            "ADE_AnimateDiffKeyframe",
            "ADE_AnimateDiffLoRALoader",
            "ADE_AnimateDiffLoaderGen1",
            "ADE_AnimateDiffLoaderV1Advanced",
            "ADE_AnimateDiffLoaderWithContext",
            "ADE_AnimateDiffModelSettings",
            "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
            "ADE_AnimateDiffModelSettingsSimple",
            "ADE_AnimateDiffModelSettings_Release",
            "ADE_AnimateDiffSamplingSettings",
            "ADE_AnimateDiffSettings",
            "ADE_AnimateDiffUniformContextOptions",
            "ADE_AnimateDiffUnload",
            "ADE_ApplyAnimateDiffModel",
            "ADE_ApplyAnimateDiffModelSimple",
            "ADE_ApplyAnimateDiffModelWithCameraCtrl",
            "ADE_ApplyAnimateDiffModelWithPIA",
            "ADE_ApplyAnimateLCMI2VModel",
            "ADE_AttachLoraHookToCLIP",
            "ADE_AttachLoraHookToConditioning",
            "ADE_BatchedContextOptions",
            "ADE_CFGExtrasPAG",
            "ADE_CFGExtrasPAGSimple",
            "ADE_CFGExtrasRescaleCFG",
            "ADE_CFGExtrasRescaleCFGSimple",
            "ADE_CameraCtrlAnimateDiffKeyframe",
            "ADE_CameraManualPoseAppend",
            "ADE_CameraPoseAdvanced",
            "ADE_CameraPoseBasic",
            "ADE_CameraPoseCombo",
            "ADE_CombineLoraHooks",
            "ADE_CombineLoraHooksEight",
            "ADE_CombineLoraHooksFour",
            "ADE_ConditioningCombine",
            "ADE_ConditioningSetMask",
            "ADE_ConditioningSetMaskAndCombine",
            "ADE_ConditioningSetUnmaskedAndCombine",
            "ADE_ContextExtras_ContextRef",
            "ADE_ContextExtras_ContextRef_Keyframe",
            "ADE_ContextExtras_ContextRef_KeyframeFromList",
            "ADE_ContextExtras_ContextRef_KeyframeInterpolation",
            "ADE_ContextExtras_ContextRef_ModeFirst",
            "ADE_ContextExtras_ContextRef_ModeIndexes",
            "ADE_ContextExtras_ContextRef_ModeSliding",
            "ADE_ContextExtras_ContextRef_TuneAttn",
            "ADE_ContextExtras_ContextRef_TuneAttnAdain",
            "ADE_ContextExtras_NaiveReuse",
            "ADE_ContextExtras_NaiveReuse_Keyframe",
            "ADE_ContextExtras_NaiveReuse_KeyframeFromList",
            "ADE_ContextExtras_NaiveReuse_KeyframeInterpolation",
            "ADE_ContextExtras_Set",
            "ADE_CustomCFG",
            "ADE_CustomCFGKeyframe",
            "ADE_CustomCFGKeyframeFromList",
            "ADE_CustomCFGKeyframeInterpolation",
            "ADE_CustomCFGKeyframeSimple",
            "ADE_CustomCFGSimple",
            "ADE_EmptyLatentImageLarge",
            "ADE_InjectI2VIntoAnimateDiffModel",
            "ADE_InjectPIAIntoAnimateDiffModel",
            "ADE_InputPIA_Multival",
            "ADE_InputPIA_PaperPresets",
            "ADE_IterationOptsDefault",
            "ADE_IterationOptsFreeInit",
            "ADE_LoadAnimateDiffModel",
            "ADE_LoadAnimateDiffModelWithCameraCtrl",
            "ADE_LoadAnimateLCMI2VModel",
            "ADE_LoadCameraPoses",
            "ADE_LoadCameraPosesFromPath",
            "ADE_LoopedUniformContextOptions",
            "ADE_LoopedUniformViewOptions",
            "ADE_LoraHookKeyframe",
            "ADE_LoraHookKeyframeFromStrengthList",
            "ADE_LoraHookKeyframeInterpolation",
            "ADE_MultivalConvertToMask",
            "ADE_MultivalDynamic",
            "ADE_MultivalDynamicFloatInput",
            "ADE_MultivalDynamicFloats",
            "ADE_MultivalScaledMask",
            "ADE_NoiseCalibration",
            "ADE_NoiseLayerAdd",
            "ADE_NoiseLayerAddWeighted",
            "ADE_NoiseLayerReplace",
            "ADE_NoisedImageInjectOptions",
            "ADE_NoisedImageInjection",
            "ADE_PIA_AnimateDiffKeyframe",
            "ADE_PairedConditioningCombine",
            "ADE_PairedConditioningSetMask",
            "ADE_PairedConditioningSetMaskAndCombine",
            "ADE_PairedConditioningSetUnmaskedAndCombine",
            "ADE_PerturbedAttentionGuidanceMultival",
            "ADE_RawSigmaSchedule",
            "ADE_RegisterLoraHook",
            "ADE_RegisterLoraHookModelOnly",
            "ADE_RegisterModelAsLoraHook",
            "ADE_RegisterModelAsLoraHookModelOnly",
            "ADE_ReplaceCameraParameters",
            "ADE_ReplaceOriginalPoseAspectRatio",
            "ADE_RescaleCFGMultival",
            "ADE_SetLoraHookKeyframe",
            "ADE_SigmaSchedule",
            "ADE_SigmaScheduleSplitAndCombine",
            "ADE_SigmaScheduleToSigmas",
            "ADE_SigmaScheduleWeightedAverage",
            "ADE_SigmaScheduleWeightedAverageInterp",
            "ADE_StandardStaticContextOptions",
            "ADE_StandardStaticViewOptions",
            "ADE_StandardUniformContextOptions",
            "ADE_StandardUniformViewOptions",
            "ADE_TimestepsConditioning",
            "ADE_UpscaleAndVAEEncode",
            "ADE_UseEvolvedSampling",
            "ADE_ViewsOnlyContextOptions",
            "ADE_VisualizeContextOptionsK",
            "ADE_VisualizeContextOptionsKAdv",
            "ADE_VisualizeContextOptionsSCustom",
            "AnimateDiffLoaderV1",
            "CheckpointLoaderSimpleWithNoiseSelect"
        ],
        {
            "title_aux": "AnimateDiff Evolved"
        }
    ],
    "https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite": [
        [
            "VHS_AudioToVHSAudio",
            "VHS_BatchManager",
            "VHS_DuplicateImages",
            "VHS_DuplicateLatents",
            "VHS_DuplicateMasks",
            "VHS_GetImageCount",
            "VHS_GetLatentCount",
            "VHS_GetMaskCount",
            "VHS_LoadAudio",
            "VHS_LoadAudioUpload",
            "VHS_LoadImagePath",
            "VHS_LoadImages",
            "VHS_LoadImagesPath",
            "VHS_LoadVideo",
            "VHS_LoadVideoFFmpeg",
            "VHS_LoadVideoFFmpegPath",
            "VHS_LoadVideoPath",
            "VHS_MergeImages",
            "VHS_MergeLatents",
            "VHS_MergeMasks",
            "VHS_PruneOutputs",
            "VHS_SelectEveryNthImage",
            "VHS_SelectEveryNthLatent",
            "VHS_SelectEveryNthMask",
            "VHS_SelectFilename",
            "VHS_SelectImages",
            "VHS_SelectLatents",
            "VHS_SelectMasks",
            "VHS_SplitImages",
            "VHS_SplitLatents",
            "VHS_SplitMasks",
            "VHS_Unbatch",
            "VHS_VAEDecodeBatched",
            "VHS_VAEEncodeBatched",
            "VHS_VHSAudioToAudio",
            "VHS_VideoCombine",
            "VHS_VideoInfo",
            "VHS_VideoInfoLoaded",
            "VHS_VideoInfoSource"
        ],
        {
            "title_aux": "ComfyUI-VideoHelperSuite"
        }
    ],
    "https://github.com/Koushakur/ComfyUI-DenoiseChooser": [
        [
            "DenoiseChooser|Koushakur"
        ],
        {
            "title_aux": "ComfyUI-DenoiseChooser"
        }
    ],
    "https://github.com/KunmyonChoi/ComfyUI_S3_direct": [
        [
            "Direct Load Image From S3",
            "Direct Save Image To S3",
            "Save VHS Video to S3"
        ],
        {
            "title_aux": "ComfyUI_S3_direct"
        }
    ],
    "https://github.com/KwaiVGI/ComfyUI-KLingAI-API": [
        [
            "Client",
            "Image Generator",
            "Image2Video",
            "KLingAI Preview Video",
            "Lip Sync",
            "Lip Sync Audio Input",
            "Lip Sync Text Input",
            "Text2Video",
            "Video Extend",
            "Virtual Try On"
        ],
        {
            "title_aux": "ComfyUI-KLingAI-API"
        }
    ],
    "https://github.com/KytraScript/ComfyUI_KytraWebhookHTTP": [
        [
            "SendToDiscordWebhook"
        ],
        {
            "title_aux": "ComfyUI_KytraWebhookHTTP"
        }
    ],
    "https://github.com/LAOGOU-666/ComfyUI_LG_FFT": [
        [
            "LG_FFTNode",
            "LG_IFFTNode"
        ],
        {
            "title_aux": "ComfyUI_LG_FFT"
        }
    ],
    "https://github.com/LAOGOU-666/Comfyui-LG_Relight": [
        [
            "LG_Relight",
            "LG_Relight_Basic",
            "LG_Relight_V2"
        ],
        {
            "title_aux": "Comfyui-LG_Relight"
        }
    ],
    "https://github.com/LEv145/images-grid-comfy-plugin": [
        [
            "GridAnnotation",
            "ImageCombine",
            "ImagesGridByColumns",
            "ImagesGridByRows",
            "LatentCombine"
        ],
        {
            "title_aux": "ImagesGrid"
        }
    ],
    "https://github.com/LarryJane491/Image-Captioning-in-ComfyUI": [
        [
            "LoRA Caption Load",
            "LoRA Caption Save"
        ],
        {
            "title_aux": "Image-Captioning-in-ComfyUI"
        }
    ],
    "https://github.com/LarryJane491/Lora-Training-in-Comfy": [
        [
            "Lora Training in Comfy (Advanced)",
            "Lora Training in ComfyUI",
            "Tensorboard Access"
        ],
        {
            "title_aux": "Lora-Training-in-Comfy"
        }
    ],
    "https://github.com/LatentSpaceDirective/ComfyUI-Texturaizer": [
        [
            "Texturaizer_ApplyControlNets",
            "Texturaizer_ApplyStyleToPrompt",
            "Texturaizer_CachedCNLoader",
            "Texturaizer_CachedCheckpointLoader",
            "Texturaizer_ClipEncodeSwitchVersion",
            "Texturaizer_CombinedConditioningFromColors",
            "Texturaizer_ExtractCNData",
            "Texturaizer_GenerateNoise",
            "Texturaizer_GetCNData",
            "Texturaizer_GetClipModelName",
            "Texturaizer_GetFluxGuidance",
            "Texturaizer_GetIPAdapterData",
            "Texturaizer_GetImageData",
            "Texturaizer_GetJsonData",
            "Texturaizer_GetLoraData",
            "Texturaizer_GetModelName",
            "Texturaizer_GetPromptData",
            "Texturaizer_GetRenderData",
            "Texturaizer_GetSamplerData",
            "Texturaizer_GetSegData",
            "Texturaizer_GetStyleData",
            "Texturaizer_GetVAEName",
            "Texturaizer_IPAdapterEmbeds",
            "Texturaizer_KSamplerAdvanced",
            "Texturaizer_Placeholder",
            "Texturaizer_PowerLoraLoader",
            "Texturaizer_SendImage",
            "Texturaizer_SetGlobalDir",
            "Texturaizer_SigmasSelector",
            "Texturaizer_SwitchAny",
            "Texturaizer_SwitchLazy",
            "Texturaizer_UseSDXL"
        ],
        {
            "title_aux": "ComfyUI-Texturaizer"
        }
    ],
    "https://github.com/Layer-norm/comfyui-lama-remover": [
        [
            "LamaRemover",
            "LamaRemoverIMG"
        ],
        {
            "title_aux": "Comfyui lama remover"
        }
    ],
    "https://github.com/Lerc/canvas_tab": [
        [
            "Canvas_Tab",
            "Send_To_Editor"
        ],
        {
            "author": "Lerc",
            "description": "This extension provides a full page image editor with mask support. There are two nodes, one to receive images from the editor and one to send images to the editor.",
            "nickname": "Canvas Tab",
            "title": "Canvas Tab",
            "title_aux": "Canvas Tab"
        }
    ],
    "https://github.com/LevelPixel/ComfyUI-LevelPixel": [
        [
            "Autotagger|LP",
            "BoolToInt|LP",
            "BoolToString|LP",
            "CLIPTextEncodeTranslate|LP",
            "FastCheckerPattern|LP",
            "FileCounter|LP",
            "FloatToInt|LP",
            "FloatToString|LP",
            "HardModelUnloader|LP",
            "HundredthsSimpleFloatSlider|LP",
            "ImageLoaderFromPath|LP",
            "ImageOverlay|LP",
            "ImageRemoveBackground|LP",
            "IntToBool|LP",
            "IntToFloat|LP",
            "IntToString|LP",
            "LLMAdvanced|LP",
            "LLMLoader|LP",
            "LLMSampler|LP",
            "LLavaAdvanced|LP",
            "LLavaClipLoader|LP",
            "LLavaLoader|LP",
            "LLavaSamplerAdvanced|LP",
            "LLavaSamplerSimple|LP",
            "LLavaSimple|LP",
            "LoadImage|LP",
            "LoraTagLoader|LP",
            "ModelUnloader|LP",
            "PreviewImageForConditions|LP",
            "ShowTextBridge|LP",
            "ShowText|LP",
            "SimpleFloatSlider|LP",
            "SoftModelUnloader|LP",
            "StringToBool|LP",
            "StringToCombo|LP",
            "StringToFloat|LP",
            "StringToInt|LP",
            "StringToNumber|LP",
            "String|LP",
            "TagCategoryFilter|LP",
            "TagCategoryKeeper|LP",
            "TagCategoryRemover|LP",
            "TagCategory|LP",
            "TagMerger|LP",
            "TagRemover|LP",
            "TagReplace|LP",
            "TagSwitcher|LP",
            "TenthsSimpleFloatSlider|LP",
            "TextChoiceParser|LP",
            "TextTranslate|LP",
            "Text|LP"
        ],
        {
            "title_aux": "ComfyUI_LevelPixel"
        }
    ],
    "https://github.com/Lhyejin/ComfyUI-Fill-Image-for-Outpainting": [
        [
            "FillImageForOutpainting"
        ],
        {
            "title_aux": "ComfyUI-Fill-Image-for-Outpainting"
        }
    ],
    "https://github.com/LiJT/ComfyUI-Gemini-Prompt-Generator-JT": [
        [
            "GeminiPromptGeneratorJT"
        ],
        {
            "title_aux": "Gemini prompt generator JT version"
        }
    ],
    "https://github.com/Light-x02/ComfyUI-FluxSettingsNode": [
        [
            "DisableNoise",
            "FluxSettingsNode"
        ],
        {
            "title_aux": "Flux Settings Node"
        }
    ],
    "https://github.com/Light-x02/ComfyUI-Image-Metadata-Nodes": [
        [
            "ImageMetadataLoader",
            "ImageMetadataSaver"
        ],
        {
            "title_aux": "Image Metadata Nodes"
        }
    ],
    "https://github.com/LightSketch-ai/ComfyUI-LivePortraitNode": [
        [
            "LightSketch Live Portrait",
            "Preview Video"
        ],
        {
            "title_aux": "ComfyUI-LivePortraitNode (Replicate API)"
        }
    ],
    "https://github.com/Limitex/ComfyUI-Calculation": [
        [
            "CenterCalculation",
            "CreateQRCode"
        ],
        {
            "title_aux": "ComfyUI-Calculation"
        }
    ],
    "https://github.com/Limitex/ComfyUI-Diffusers": [
        [
            "CreateIntListNode",
            "DiffusersClipTextEncode",
            "DiffusersModelMakeup",
            "DiffusersPipelineLoader",
            "DiffusersSampler",
            "DiffusersSchedulerLoader",
            "DiffusersVaeLoader",
            "LcmLoraLoader",
            "StreamDiffusionCreateStream",
            "StreamDiffusionFastSampler",
            "StreamDiffusionSampler",
            "StreamDiffusionWarmup"
        ],
        {
            "title_aux": "ComfyUI-Diffusers"
        }
    ],
    "https://github.com/Ling-APE/ComfyUI-PixelResolutionCalculator": [
        [
            "LatentSizeToPixelSize",
            "PixelResolutionCalculator"
        ],
        {
            "title_aux": "ComfyUI-PixelResolutionCalculator"
        }
    ],
    "https://github.com/Loewen-Hob/rembg-comfyui-node-better": [
        [
            "Image Remove Background (rembg)"
        ],
        {
            "title_aux": "Rembg Background Removal Node for ComfyUI (Better)"
        }
    ],
    "https://github.com/LonicaMewinsky/ComfyUI-MakeFrame": [
        [
            "BreakFrames",
            "BreakGrid",
            "GetKeyFrames",
            "MakeGrid",
            "RandomImageFromDir"
        ],
        {
            "title_aux": "ComfyBreakAnim"
        }
    ],
    "https://github.com/LonicaMewinsky/ComfyUI-RawSaver": [
        [
            "SaveTifImage"
        ],
        {
            "title_aux": "ComfyUI-RawSaver"
        }
    ],
    "https://github.com/LucipherDev/ComfyUI-AniDoc": [
        [
            "AniDocLoader",
            "AniDocSampler",
            "GetAniDocControlnetImages",
            "LoadCoTracker"
        ],
        {
            "title_aux": "ComfyUI-AniDoc"
        }
    ],
    "https://github.com/LucipherDev/ComfyUI-Golden-Noise": [
        [
            "GoldenNoise"
        ],
        {
            "title_aux": "ComfyUI-Golden-Noise"
        }
    ],
    "https://github.com/LucipherDev/ComfyUI-TangoFlux": [
        [
            "TangoFluxLoader",
            "TangoFluxSampler",
            "TangoFluxVAEDecodeAndPlay"
        ],
        {
            "title_aux": "ComfyUI-TangoFlux"
        }
    ],
    "https://github.com/Ludobico/ComfyUI-ScenarioPrompt": [
        [
            "ScenarioPrompt"
        ],
        {
            "title_aux": "ComfyUI-ScenarioPrompt"
        }
    ],
    "https://github.com/LyazS/comfyui-anime-seg": [
        [
            "Anime Character Seg"
        ],
        {
            "title_aux": "Anime Character Segmentation node for comfyui"
        }
    ],
    "https://github.com/LyazS/comfyui-nettools": [
        [
            "NTL_LoadImagesBase64",
            "NTL_SendImagesWebSocket"
        ],
        {
            "title_aux": "net tool node for comfyui"
        }
    ],
    "https://github.com/M1kep/ComfyLiterals": [
        [
            "Checkpoint",
            "Float",
            "Int",
            "KepStringLiteral",
            "Lora",
            "Operation",
            "String"
        ],
        {
            "title_aux": "ComfyLiterals"
        }
    ],
    "https://github.com/M1kep/ComfyUI-KepOpenAI": [
        [
            "KepOpenAI_ImageWithPrompt"
        ],
        {
            "title_aux": "ComfyUI-KepOpenAI"
        }
    ],
    "https://github.com/M1kep/ComfyUI-OtherVAEs": [
        [
            "OtherVAE_Taesd"
        ],
        {
            "title_aux": "ComfyUI-OtherVAEs"
        }
    ],
    "https://github.com/M1kep/Comfy_KepKitchenSink": [
        [
            "KepRotateImage"
        ],
        {
            "title_aux": "Comfy_KepKitchenSink"
        }
    ],
    "https://github.com/M1kep/Comfy_KepListStuff": [
        [
            "Empty Images",
            "Image Overlay",
            "ImageListLoader",
            "Join Float Lists",
            "Join Image Lists",
            "KepStringList",
            "KepStringListFromNewline",
            "Kep_JoinListAny",
            "Kep_RepeatList",
            "Kep_ReverseList",
            "Kep_VariableImageBuilder",
            "List Length",
            "Range(Num Steps) - Float",
            "Range(Num Steps) - Int",
            "Range(Step) - Float",
            "Range(Step) - Int",
            "Stack Images",
            "XYAny",
            "XYImage"
        ],
        {
            "title_aux": "Comfy_KepListStuff"
        }
    ],
    "https://github.com/M1kep/Comfy_KepMatteAnything": [
        [
            "MatteAnything_DinoBoxes",
            "MatteAnything_GenerateVITMatte",
            "MatteAnything_InitSamPredictor",
            "MatteAnything_LoadDINO",
            "MatteAnything_LoadVITMatteModel",
            "MatteAnything_SAMLoader",
            "MatteAnything_SAMMaskFromBoxes",
            "MatteAnything_ToTrimap"
        ],
        {
            "title_aux": "Comfy_KepMatteAnything"
        }
    ],
    "https://github.com/M1kep/KepPromptLang": [
        [
            "Build Gif",
            "Special CLIP Loader"
        ],
        {
            "title_aux": "KepPromptLang"
        }
    ],
    "https://github.com/MNeMoNiCuZ/ComfyUI-mnemic-nodes": [
        [
            "StringCleaning",
            "TiktokenTokenizer",
            "\u26d4 Generate Negative Prompt",
            "\u2728\ud83c\udf10 Groq ALM API - Translate [EN only]",
            "\u2728\ud83d\udcac Groq LLM API",
            "\u2728\ud83d\udcdd Groq ALM API - Transcribe",
            "\u2728\ud83d\udcf7 Groq VLM API",
            "\ud83d\udcbe Save Text File With Path",
            "\ud83d\udcc1 Get File Path",
            "\ud83d\udd20 Tiktoken Tokenizer Info",
            "\ud83d\uddbc\ufe0f Download Image from URL",
            "\ud83e\uddf9 String Cleaning"
        ],
        {
            "title_aux": "ComfyUI-mnemic-nodes"
        }
    ],
    "https://github.com/Makeezi/ComfyUI-promptLAB": [
        [
            "PromptLAB"
        ],
        {
            "title_aux": "ComfyUI-promptLAB"
        }
    ],
    "https://github.com/MakkiShizu/ComfyUI-Prompt-Wildcards": [
        [
            "makiwildcards",
            "textconcatenate"
        ],
        {
            "title_aux": "ComfyUI-Prompt-Wildcards"
        }
    ],
    "https://github.com/MakkiShizu/ComfyUI-SaveAnimatedGIF": [
        [
            "SaveAnimatedGIF",
            "SaveAnimatedWEBPRevise"
        ],
        {
            "title_aux": "ComfyUI-SaveAnimatedGIF"
        }
    ],
    "https://github.com/MakkiShizu/comfyui_reimgsize": [
        [
            "Cropimg",
            "Reimgsize",
            "Resizebyratio"
        ],
        {
            "title_aux": "comfyui_reimgsize"
        }
    ],
    "https://github.com/Mamaaaamooooo/batchImg-rembg-ComfyUI-nodes": [
        [
            "Image Remove Background (rembg)"
        ],
        {
            "title_aux": "Batch Rembg for ComfyUI"
        }
    ],
    "https://github.com/ManglerFTW/ComfyI2I": [
        [
            "Color Transfer",
            "Combine and Paste",
            "Inpaint Segments",
            "Mask Ops"
        ],
        {
            "author": "ManglerFTW",
            "title": "ComfyI2I",
            "title_aux": "ComfyI2I"
        }
    ],
    "https://github.com/MarcusNyne/m9-prompts-comfyui": [
        [
            "ScramblePrompts_m9",
            "TweakWeights_m9"
        ],
        {
            "title_aux": "m9-prompts-comfyui"
        }
    ],
    "https://github.com/MariusKM/ComfyUI-BadmanNodes": [
        [
            "BadmanBrightness",
            "BadmanCLIPTextEncodeSDXLRegion",
            "BadmanDesaturate",
            "BadmanDilateErodeMask",
            "BadmanIO",
            "BadmanIntUtil",
            "BadmanMaskBlur",
            "BadmanStringSelect",
            "BadmanStringToInteger",
            "BadmanWildCardProcessor",
            "Badman_Blend",
            "Badman_ColorTransferLab",
            "Badman_Concat_String",
            "Badman_HexGenerator",
            "Badman_PalletteGenerator",
            "Badman_Print",
            "Badman_String"
        ],
        {
            "title_aux": "ComfyUI-BadmanNodes"
        }
    ],
    "https://github.com/MarkoCa1/ComfyUI-Text": [
        [
            "CombinationText",
            "PlaceholderText",
            "ReplaceText",
            "ShowText"
        ],
        {
            "title_aux": "ComfyUI-Text"
        }
    ],
    "https://github.com/MarkoCa1/ComfyUI_Segment_Mask": [
        [
            "AutomaticMask(segment anything)"
        ],
        {
            "title_aux": "ComfyUI_Segment_Mask"
        }
    ],
    "https://github.com/Marksusu/ComfyUI_MTCLIPEncode": [
        [
            "MTCLIPEncode"
        ],
        {
            "title_aux": "ComfyUI_MTCLIPEncode"
        }
    ],
    "https://github.com/Mason-McGough/ComfyUI-Mosaica": [
        [
            "ApplyLUTToLabelImage",
            "KMeans",
            "LoadLUTFromMatplotlib",
            "MeanShift",
            "RandomLUT",
            "Watershed"
        ],
        {
            "title_aux": "Mosaica"
        }
    ],
    "https://github.com/Mcmillian/ComfyUI-SimpleToolsNodes": [
        [
            "GetModelStep",
            "GlmPromptNode"
        ],
        {
            "title_aux": "SimpleToolsNodes"
        }
    ],
    "https://github.com/Meettya/ComfyUI-OneForOne": [
        [
            "OFO Image Fit"
        ],
        {
            "title_aux": "ComfyUI-OneForOne"
        }
    ],
    "https://github.com/MetaGLM/ComfyUI-ZhipuAI-Platform": [
        [
            "VideoReportData",
            "VideoReportGenerate",
            "VideoReportPull"
        ],
        {
            "title_aux": "ComfyUI ZhipuAI Platform"
        }
    ],
    "https://github.com/MiddleKD/ComfyUI-denoise-mask-scheduler": [
        [
            "ApplyDenoiseMaskSchedulerWithSigma",
            "ApplyDenoiseMaskSchedulerWithStep",
            "DynamicImageResize"
        ],
        {
            "title_aux": "ComfyUI-denoise-mask-scheduler"
        }
    ],
    "https://github.com/MiddleKD/ComfyUI-mem-safe-wrapper": [
        [
            "MakeModelMemorySafe-safewrapper",
            "ResetModelPatcher-safewrapper",
            "SimpleDummyModel-safewrapper",
            "SimpleDummyRun-safewrapper"
        ],
        {
            "title_aux": "ComfyUI-mem-safe-wrapper"
        }
    ],
    "https://github.com/MiddleKD/ComfyUI-productfix": [
        [
            "ApplyLatentInjection",
            "DetailTransferAdd",
            "DetailTransferLatentAdd",
            "DynamicImageResize",
            "GetTextMask",
            "ResetModelPatcherCalculateWeight",
            "VQDecoder",
            "VQEncoder",
            "VQLoader"
        ],
        {
            "title_aux": "ComfyUI-productfix"
        }
    ],
    "https://github.com/MilitantHitchhiker/MilitantHitchhiker-SwitchbladePack": [
        [
            "FluxModelSave_v2",
            "IntegratedRandomPromptGenerator",
            "ModelAnalyserNode",
            "TextAppender_v2"
        ],
        {
            "author": "Militant Hitchhiker",
            "description": "Militant Hitchhiker's multi-function nodes.",
            "nickname": "Switchblade",
            "title": "Switchblade Pack",
            "title_aux": "MilitantHitchhiker-SwitchbladePack"
        }
    ],
    "https://github.com/Mintbeer96/ComfyUI-KerasOCR": [
        [
            "KerasOCR"
        ],
        {
            "title_aux": "ComfyUI-KerasOCR"
        }
    ],
    "https://github.com/Miosp/ComfyUI-FBCNN": [
        [
            "JPEG artifacts removal FBCNN"
        ],
        {
            "title_aux": "ComfyUI-FBCNN"
        }
    ],
    "https://github.com/MitoshiroPJ/comfyui_slothful_attention": [
        [
            "NearSightedAttention",
            "NearSightedAttentionSimple",
            "NearSightedTile",
            "SlothfulAttention"
        ],
        {
            "title_aux": "ComfyUI Slothful Attention"
        }
    ],
    "https://github.com/Miyuutsu/comfyui-save-vpred": [
        [
            "CheckpointSaveVpred"
        ],
        {
            "author": "miyuu",
            "description": "Used to save SDXL V-Prediction models directly with correct tensors.",
            "nickname": "vpred-save",
            "title": "vpred-save",
            "title_aux": "comfyui-save-vpred"
        }
    ],
    "https://github.com/MohammadAboulEla/ComfyUI-iTools": [
        [
            "iToolsAddOverlay",
            "iToolsCheckerBoard",
            "iToolsGridFiller",
            "iToolsKSampler",
            "iToolsLineLoader",
            "iToolsLoadImagePlus",
            "iToolsLoadImages",
            "iToolsPromptLoader",
            "iToolsPromptSaver",
            "iToolsPromptStyler",
            "iToolsPromptStylerExtra",
            "iToolsTextReplacer",
            "iToolsVaePreview"
        ],
        {
            "title_aux": "ComfyUI-iTools"
        }
    ],
    "https://github.com/MokkaBoss1/ComfyUI_Mokkaboss1": [
        [
            "AnimeCosplayDir",
            "AspectRatioCondition",
            "ChooseImage",
            "Colors",
            "CombinedCrop",
            "ConnectFloat",
            "ConnectImage",
            "ConnectInteger",
            "ConnectInteger2",
            "ConnectLatent",
            "ConnectString",
            "CycleInteger",
            "DirSelector",
            "DoubleClipTextEncode",
            "DoubleConditioningMixer",
            "EmbeddingLoader",
            "FilmCharDir",
            "FlexEmptyLatent",
            "FloatEvaluate",
            "FuseImages",
            "FuseImages2",
            "HashText",
            "HueSatLum",
            "HueShift",
            "ImageDimensions",
            "ImageDimensionsBatch",
            "ImageOverlayResized",
            "ImageResizeLong",
            "ImageZigzag",
            "IndoorBackgrounds",
            "IndoorDir",
            "IntEvaluate",
            "IntFloatDict",
            "IntStringDict",
            "JsonSearch",
            "KillWorkflow",
            "LandscapeBackgrounds",
            "LandscapeDir",
            "LinEqEval",
            "MakeupStylesDir",
            "Mbsampler",
            "OptimalCrop",
            "Overlay",
            "PhotomontageA",
            "PhotomontageB",
            "PhotomontageC",
            "PostSamplerCrop",
            "PresetLoad",
            "PresetRemove",
            "PresetSave",
            "PromptSwitcher",
            "QuadClipTextEncode",
            "RandomString",
            "SDXLEmptyLatent",
            "SavePrompt",
            "SaveWithMetaData",
            "SaveWithMetaData2",
            "SearchReplace",
            "SimplePrompts",
            "SpecificStylesDir",
            "SplitImages",
            "StringJoin",
            "TimeStamp",
            "TintnShift",
            "TricolorComposition",
            "WorkflowSettings",
            "WrapText",
            "X_In_a_Dress",
            "X_In_a_Suit",
            "X_In_a_Suit)",
            "ZoomCrop",
            "imageborder"
        ],
        {
            "title_aux": "Node Pack mostly for manipulating strings and integers"
        }
    ],
    "https://github.com/MoonHugo/ComfyUI-BiRefNet-Hugo": [
        [
            "BiRefNet_Hugo"
        ],
        {
            "title_aux": "ComfyUI-BiRefNet-Hugo"
        }
    ],
    "https://github.com/MoonHugo/ComfyUI-FFmpeg": [
        [
            "AddAudio",
            "AddImgWatermark",
            "AddTextWatermark",
            "ExtractAudio",
            "Frames2Video",
            "ImageCopy",
            "ImagePath2Tensor",
            "ImagesSave",
            "LoadImageFromDir",
            "MergingVideoByPlenty",
            "MergingVideoByTwo",
            "MultiCuttingVideo",
            "SingleCuttingVideo",
            "StitchingVideo",
            "Video2Frames",
            "VideoFlip"
        ],
        {
            "title_aux": "ComfyUI-FFmpeg"
        }
    ],
    "https://github.com/MoonHugo/ComfyUI-StableAudioOpen": [
        [
            "Text2Audio"
        ],
        {
            "title_aux": "ComfyUI-StableAudioOpen"
        }
    ],
    "https://github.com/Moooonet/ComfyUI-ArteMoon": [
        [
            "LoadPrompts"
        ],
        {
            "title_aux": "ComfyUI-ArteMoon"
        }
    ],
    "https://github.com/MrForExample/ComfyUI-3D-Pack": [
        [],
        {
            "nodename_pattern": "^\\[Comfy3D\\]",
            "title_aux": "ComfyUI-3D-Pack"
        }
    ],
    "https://github.com/MrForExample/ComfyUI-AnimateAnyone-Evolved": [
        [],
        {
            "nodename_pattern": "^\\[AnimateAnyone\\]",
            "title_aux": "ComfyUI-AnimateAnyone-Evolved"
        }
    ],
    "https://github.com/MrSamSeen/ComfyUI_SSStereoscope": [
        [
            "SBS_by_SamSeen"
        ],
        {
            "title_aux": "ComfyUI_SSStereoscope"
        }
    ],
    "https://github.com/Munkyfoot/ComfyUI-TextOverlay": [
        [
            "Text Overlay"
        ],
        {
            "title_aux": "ComfyUI-TextOverlay"
        }
    ],
    "https://github.com/MushroomFleet/DJZ-Nodes": [
        [
            "AnamorphicEffect",
            "AspectSize",
            "AspectSizeV2",
            "BatchOffset",
            "BatchRangeInsert",
            "BatchRangeSwap",
            "BatchThief",
            "BlackBarsV1",
            "BlackBarsV2",
            "BlackBarsV3",
            "CombineAudio",
            "DJZ-LoadLatent",
            "DJZ-LoadLatentV2",
            "DJZDatamosh",
            "DJZDatamoshV2",
            "DatasetWordcloud",
            "DinskyPlus",
            "DinskyPlusV2",
            "DjzDatamoshV3",
            "DjzDatamoshV4",
            "DjzDatamoshV5",
            "DjzDatamoshV6",
            "DjzDatamoshV7",
            "FractalGenerator",
            "FractalGeneratorV2",
            "FractalGeneratorV3",
            "ImageSizeAdjuster",
            "ImageSizeAdjusterV2",
            "ImageSizeAdjusterV3",
            "KinescopeEffectV1",
            "LoadTextDirectory",
            "LoadVideoDirectory",
            "NonSquarePixelsV1",
            "PanavisionLensV2",
            "ParametricMeshGen",
            "ParametricMeshGenV2",
            "ProjectFilePathNode",
            "PromptCleaner",
            "PromptInject",
            "PromptSwap",
            "RetroVideoText",
            "SequentialNumberGenerator",
            "StringChaos",
            "StringWeights",
            "Technicolor3Strip_v1",
            "Technicolor3Strip_v2",
            "TrianglesPlus",
            "TrianglesPlusV2",
            "VHS_Effect_V3",
            "VHS_Effect_v1",
            "VHS_Effect_v2",
            "VideoInterlaceFastV4",
            "VideoInterlaceGANV3",
            "VideoInterlaced",
            "VideoInterlacedV2",
            "ZenkaiPrompt",
            "ZenkaiPromptV2",
            "ZenkaiWildcard",
            "ZenkaiWildcardV2"
        ],
        {
            "author": "DJZ-Nodes",
            "title_aux": "DJZ-Nodes"
        }
    ],
    "https://github.com/MuziekMagie/ComfyUI-Matchering": [
        [
            "Matchering",
            "MatcheringAdvanced",
            "MatcheringLimiterConfig"
        ],
        {
            "title_aux": "ComfyUI-Matchering"
        }
    ],
    "https://github.com/MzMaXaM/ComfyUi-MzMaXaM": [
        [
            "SelectLatentSize",
            "TextEncode3in1"
        ],
        {
            "title_aux": "ComfyUi-MzMaXaM"
        }
    ],
    "https://github.com/N3rd00d/ComfyUI-Paint3D-Nodes": [
        [
            "3D_GenerateDepthImage",
            "3D_GenerateInpaintMask",
            "3D_GenerateInpaintUVMapMask",
            "3D_GeneratePreviewVideo",
            "3D_LoadMeshModel",
            "3D_Projection",
            "3D_SaveUVMapImage",
            "3D_TrainConfig",
            "3D_TrainConfigPipe"
        ],
        {
            "title_aux": "ComfyUI-Paint3D-Nodes"
        }
    ],
    "https://github.com/NMWave/ComfyUI-Nader-Tagging": [
        [
            "Load Text List",
            "Split Sentences",
            "Split Tags",
            "Tag Alternating Combiner",
            "Tag Duplicate Remover",
            "Token Counter"
        ],
        {
            "title_aux": "Image Captioning and Tagging Assistor Nodes"
        }
    ],
    "https://github.com/NVIDIAGameWorks/ComfyUI-RTX-Remix": [
        [
            "RTXRemixCreateLayer",
            "RTXRemixDefineLayerId",
            "RTXRemixDeleteFile",
            "RTXRemixEndContext",
            "RTXRemixGetEditTarget",
            "RTXRemixGetLayers",
            "RTXRemixGetTextures",
            "RTXRemixIngestTexture",
            "RTXRemixInvertBool",
            "RTXRemixLayerType",
            "RTXRemixLayerTypes",
            "RTXRemixMuteLayer",
            "RTXRemixRemoveLayer",
            "RTXRemixRestAPIDetails",
            "RTXRemixSaveLayer",
            "RTXRemixSetEditTarget",
            "RTXRemixSetTexture",
            "RTXRemixStartContext",
            "RTXRemixStrToList",
            "RTXRemixStringConcatenate",
            "RTXRemixStringConstant",
            "RTXRemixSwitch",
            "RTXRemixTextureTypeToUSDAttribute",
            "RTXRemixTexturesType",
            "RTXRemixTexturesTypes"
        ],
        {
            "title_aux": "ComfyUI-RTX-Remix"
        }
    ],
    "https://github.com/NakamuraShippo/ComfyUI-NS-ManySliders": [
        [
            "NS_ManySliders"
        ],
        {
            "title_aux": "ComfyUI-NS-ManySliders"
        }
    ],
    "https://github.com/NakamuraShippo/ComfyUI-PromptList": [
        [
            "ComfyUI-PromptList"
        ],
        {
            "author": "NakamuraShippo",
            "description": "Custom node to manage prompts in YAML format.",
            "title": "ComfyUI-PromptList",
            "title_aux": "ComfyUI-PromptList"
        }
    ],
    "https://github.com/NeoGriever/ComfyUI-NeoGriever": [
        [
            "NGs_BetterCLIPTextEncode",
            "NGs_Checkerboard_Generator",
            "NGs_Create_Solid_Color",
            "NGs_Discord_Webhook",
            "NGs_Fill_with_Color",
            "NGs_Image_Progress_Bar",
            "NGs_Multimask_Read",
            "NGs_Multimask_Write",
            "NGs_ResolutionProvider",
            "NGs_Sliders_FLOAT",
            "NGs_Sliders_INT",
            "NGs_Sliders_PERCENTAGECUT",
            "NGs_String_Operator",
            "NGs_String_Squisher",
            "NGs_Tag_Source",
            "NGs_TextBox_JOIN",
            "NGs_TextBox_SIMPLE",
            "NGs_TextBox_x2",
            "NGs_TextBox_x3",
            "NGs_Text_Cut_String"
        ],
        {
            "title_aux": "ComfyUI - NeoGriever"
        }
    ],
    "https://github.com/NeuralSamurAI/ComfyUI-Dimensional-Latent-Perlin": [
        [
            "NoisyLatentPerlinD"
        ],
        {
            "title_aux": "Dimensional Latent Perlin for ComfyUI"
        }
    ],
    "https://github.com/NeuralSamurAI/ComfyUI-FluxPseudoNegativePrompt": [
        [
            "FluxPseudoNegativeNode"
        ],
        {
            "title_aux": "FluxPseudoNegative"
        }
    ],
    "https://github.com/NeuralSamurAI/ComfyUI-PromptJSON": [
        [
            "PromptJSON"
        ],
        {
            "title_aux": "PromptJSON Node for ComfyUI"
        }
    ],
    "https://github.com/NeuralSamurAI/Comfyui-Superprompt-Unofficial": [
        [
            "SuperPrompterNode"
        ],
        {
            "title_aux": "SuperPrompter Node for ComfyUI"
        }
    ],
    "https://github.com/NguynHungNguyen/Segment-Bedroom-Interior": [
        [
            "BedroomFurnitureMask"
        ],
        {
            "title_aux": "Segment Any Bedroom Interior"
        }
    ],
    "https://github.com/NicholasMcCarthy/ComfyUI_TravelSuite": [
        [
            "LatentTravel"
        ],
        {
            "title_aux": "ComfyUI_TravelSuite"
        }
    ],
    "https://github.com/NimaNzrii/comfyui-photoshop": [
        [
            "\ud83d\udd39 Photoshop RemoteConnection",
            "\ud83d\udd39ClipPass",
            "\ud83d\udd39Photoshop ComfyUI Plugin",
            "\ud83d\udd39SendTo Photoshop Plugin",
            "\ud83d\udd39modelPass"
        ],
        {
            "title_aux": "comfyui-photoshop"
        }
    ],
    "https://github.com/NimaNzrii/comfyui-popup_preview": [
        [
            "PreviewPopup"
        ],
        {
            "title_aux": "comfyui-popup_preview"
        }
    ],
    "https://github.com/Niutonian/ComfyUi-NoodleWebcam": [
        [
            "WebcamNode"
        ],
        {
            "title_aux": "ComfyUi-NoodleWebcam"
        }
    ],
    "https://github.com/Nlar/ComfyUI_CartoonSegmentation": [
        [
            "AnimeSegmentation",
            "KenBurnsConfigLoader",
            "KenBurns_Processor",
            "LoadImageFilename"
        ],
        {
            "author": "Nels Larsen",
            "description": "This extension offers a front end to the Cartoon Segmentation Project (https://github.com/CartoonSegmentation/CartoonSegmentation)",
            "nickname": "CfyCS",
            "title": "ComfyUI_CartoonSegmentation",
            "title_aux": "ComfyUI_CartoonSegmentation"
        }
    ],
    "https://github.com/Nojahhh/ComfyUI_GLM4_Wrapper": [
        [
            "GLM-4 Inferencing",
            "GLM-4 Model Loader",
            "GLM-4 Prompt Enhancer"
        ],
        {
            "title_aux": "ComfyUI GLM-4 Wrapper"
        }
    ],
    "https://github.com/NotHarroweD/Harronode": [
        [
            "Harronode"
        ],
        {
            "author": "HarroweD and quadmoon (https://github.com/traugdor)",
            "description": "This extension to ComfyUI will build a prompt for the Harrlogos LoRA for SDXL.",
            "nickname": "Harronode",
            "nodename_pattern": "Harronode",
            "title": "Harrlogos Prompt Builder Node",
            "title_aux": "Harrlogos Prompt Builder Node"
        }
    ],
    "https://github.com/Nourepide/ComfyUI-Allor": [
        [
            "AlphaChanelAdd",
            "AlphaChanelAddByMask",
            "AlphaChanelAsMask",
            "AlphaChanelRemove",
            "AlphaChanelRestore",
            "ClipClamp",
            "ClipVisionClamp",
            "ClipVisionOutputClamp",
            "ConditioningClamp",
            "ControlNetClamp",
            "GligenClamp",
            "ImageBatchCopy",
            "ImageBatchFork",
            "ImageBatchGet",
            "ImageBatchJoin",
            "ImageBatchPermute",
            "ImageBatchRemove",
            "ImageClamp",
            "ImageCompositeAbsolute",
            "ImageCompositeAbsoluteByContainer",
            "ImageCompositeRelative",
            "ImageCompositeRelativeByContainer",
            "ImageContainer",
            "ImageContainerInheritanceAdd",
            "ImageContainerInheritanceMax",
            "ImageContainerInheritanceScale",
            "ImageContainerInheritanceSum",
            "ImageDrawArc",
            "ImageDrawArcByContainer",
            "ImageDrawChord",
            "ImageDrawChordByContainer",
            "ImageDrawEllipse",
            "ImageDrawEllipseByContainer",
            "ImageDrawLine",
            "ImageDrawLineByContainer",
            "ImageDrawPieslice",
            "ImageDrawPiesliceByContainer",
            "ImageDrawPolygon",
            "ImageDrawRectangle",
            "ImageDrawRectangleByContainer",
            "ImageDrawRectangleRounded",
            "ImageDrawRectangleRoundedByContainer",
            "ImageEffectsAdjustment",
            "ImageEffectsGrayscale",
            "ImageEffectsLensBokeh",
            "ImageEffectsLensChromaticAberration",
            "ImageEffectsLensOpticAxis",
            "ImageEffectsLensVignette",
            "ImageEffectsLensZoomBurst",
            "ImageEffectsNegative",
            "ImageEffectsSepia",
            "ImageFilterBilateralBlur",
            "ImageFilterBlur",
            "ImageFilterBoxBlur",
            "ImageFilterContour",
            "ImageFilterDetail",
            "ImageFilterEdgeEnhance",
            "ImageFilterEdgeEnhanceMore",
            "ImageFilterEmboss",
            "ImageFilterFindEdges",
            "ImageFilterGaussianBlur",
            "ImageFilterGaussianBlurAdvanced",
            "ImageFilterMax",
            "ImageFilterMedianBlur",
            "ImageFilterMin",
            "ImageFilterMode",
            "ImageFilterRank",
            "ImageFilterSharpen",
            "ImageFilterSmooth",
            "ImageFilterSmoothMore",
            "ImageFilterStackBlur",
            "ImageNoiseBeta",
            "ImageNoiseBinomial",
            "ImageNoiseBytes",
            "ImageNoiseGaussian",
            "ImageSegmentation",
            "ImageSegmentationCustom",
            "ImageSegmentationCustomAdvanced",
            "ImageText",
            "ImageTextMultiline",
            "ImageTextMultilineOutlined",
            "ImageTextOutlined",
            "ImageTransformCropAbsolute",
            "ImageTransformCropCorners",
            "ImageTransformCropRelative",
            "ImageTransformPaddingAbsolute",
            "ImageTransformPaddingRelative",
            "ImageTransformResizeAbsolute",
            "ImageTransformResizeClip",
            "ImageTransformResizeRelative",
            "ImageTransformRotate",
            "ImageTransformTranspose",
            "LatentClamp",
            "MaskClamp",
            "ModelClamp",
            "StyleModelClamp",
            "UpscaleModelClamp",
            "VaeClamp"
        ],
        {
            "title_aux": "Allor Plugin"
        }
    ],
    "https://github.com/Nuked88/ComfyUI-N-Nodes": [
        [
            "CLIPTextEncodeAdvancedNSuite [n-suite]",
            "DynamicPrompt [n-suite]",
            "Float Variable [n-suite]",
            "FrameInterpolator [n-suite]",
            "GPT Loader Simple [n-suite]",
            "GPT Sampler [n-suite]",
            "ImagePadForOutpaintAdvanced [n-suite]",
            "Integer Variable [n-suite]",
            "Llava Clip Loader [n-suite]",
            "LoadFramesFromFolder [n-suite]",
            "LoadImageFromFolder [n-suite]",
            "LoadVideo [n-suite]",
            "SaveVideo [n-suite]",
            "SetMetadataForSaveVideo [n-suite]",
            "String Variable [n-suite]"
        ],
        {
            "title_aux": "ComfyUI-N-Nodes"
        }
    ],
    "https://github.com/NyaamZ/ComfyUI-GetBooruTag-ED": [
        [
            "Get Booru Tag \ud83d\udcacED"
        ],
        {
            "author": "NyaamZ",
            "description": "Get tag from Booru site.",
            "nickname": "Get Booru Tag ED",
            "title": "Get Booru Tag ExtendeD",
            "title_aux": "Get Booru Tag ExtendeD"
        }
    ],
    "https://github.com/NyaamZ/efficiency-nodes-ED": [
        [
            "Apply LoRA Stack \ud83d\udcacED",
            "Control Net Script \ud83d\udcacED",
            "Efficient Loader \ud83d\udcacED",
            "Embedding Stacker \ud83d\udcacED",
            "Int Holder \ud83d\udcacED",
            "KSampler (Efficient) \ud83d\udcacED",
            "KSampler TEXT (Eff.) \ud83d\udcacED",
            "LoRA Stacker \ud83d\udcacED",
            "Load Image \ud83d\udcacED",
            "Refiner Script \ud83d\udcacED",
            "Save Image \ud83d\udd14ED"
        ],
        {
            "author": "NyaamZ",
            "description": "Expansion of Efficiency Nodes for ComfyUI. Significant UX improvements.",
            "nickname": "Efficiency Nodes ED",
            "title": "Efficiency Nodes ExtendeD",
            "title_aux": "Efficiency Nodes ExtendeD"
        }
    ],
    "https://github.com/Off-Live/ComfyUI-off-suite": [
        [
            "Apply CLAHE",
            "Cached Image Load From URL",
            "CalcMaskBound",
            "Crop Center wigh SEGS",
            "Crop Center with SEGS",
            "Dilate Mask for Each Face",
            "GW Number Formatting",
            "Grid Image from batch (OFF)",
            "Image Crop Fit",
            "Image Resize Fit",
            "OFF SEGS to Image",
            "Paste Face Segment to Image",
            "Query Gender and Age",
            "RandomSeedfromList",
            "SEGS to Face Crop Data",
            "Safe Mask to Image",
            "VAE Encode For Inpaint V2",
            "Watermarking"
        ],
        {
            "title_aux": "ComfyUI-off-suite"
        }
    ],
    "https://github.com/OpalSky-AI/OpalSky_Nodes": [
        [
            "PromptAssistantOpalSky",
            "StringSwitchOpalSky",
            "string_switch_opalsky"
        ],
        {
            "title_aux": "OpalSky Nodes"
        }
    ],
    "https://github.com/OuticNZ/ComfyUI-Simple-Of-Complex": [
        [
            "Pipe From Parameters",
            "Pipe To Parameters",
            "Prompt Tidy",
            "Text Switch 2 Way",
            "Text With Context"
        ],
        {
            "title_aux": "ComfyUI-Simple-Of-Complex"
        }
    ],
    "https://github.com/PCMonsterx/ComfyUI-CSV-Loader": [
        [
            "Load Artists CSV",
            "Load Artmovements CSV",
            "Load Characters CSV",
            "Load Colors CSV",
            "Load Composition CSV",
            "Load Lighting CSV",
            "Load Negative CSV",
            "Load Positive CSV",
            "Load Settings CSV",
            "Load Styles CSV"
        ],
        {
            "title_aux": "ComfyUI-CSV-Loader"
        }
    ],
    "https://github.com/Parameshvadivel/ComfyUI-SVGview": [
        [
            "SVGPreview"
        ],
        {
            "title_aux": "ComfyUI-SVGview"
        }
    ],
    "https://github.com/ParisNeo/lollms_nodes_suite": [
        [
            "Artbot",
            "Lollms_Text_Gen",
            "Lollms_Text_Saver",
            "RandomizeVideo"
        ],
        {
            "title_aux": "lollms_nodes_suite"
        }
    ],
    "https://github.com/ParmanBabra/ComfyUI-Malefish-Custom-Scripts": [
        [
            "CSVPromptsLoader",
            "CombinePrompt",
            "MultiLoraLoader",
            "RandomPrompt"
        ],
        {
            "title_aux": "ComfyUI-Malefish-Custom-Scripts"
        }
    ],
    "https://github.com/PauldeLavallaz/comfyui_claude_prompt_generator": [
        [
            "ClaudeCustomPrompt"
        ],
        {
            "title_aux": "Claude Prompt Generator"
        }
    ],
    "https://github.com/Pfaeff/pfaeff-comfyui": [
        [
            "AstropulsePixelDetector",
            "BackgroundRemover",
            "ImagePadForBetterOutpaint",
            "Inpainting",
            "InpaintingPipelineLoader"
        ],
        {
            "title_aux": "pfaeff-comfyui"
        }
    ],
    "https://github.com/Phando/ComfyUI-PhandoNodes": [
        [
            "SearchBySubstring",
            "TextConcatenateDynamic"
        ],
        {
            "title_aux": "ComfyUI-PhandoNodes"
        }
    ],
    "https://github.com/Pheat-AI/Remade_nodes": [
        [
            "Batch Enlarged Overlay",
            "Batch Image Blend by Mask",
            "Batch Image Overlay",
            "CannyImageCropper",
            "MaskBoundingBox",
            "Place Canny On Canvas",
            "REMADE Batch Color Blend",
            "REMADE Batch Image Blend",
            "REMADE Batch Image Composite Masked",
            "REMADE Batch Image Select Channel",
            "Remove Black To Transparent",
            "Shrink Canny Image"
        ],
        {
            "title_aux": "Remade_nodes"
        }
    ],
    "https://github.com/PnthrLeo/comfyUI-PL-data-tools": [
        [
            "AreasGenerator",
            "BatchImageGetter",
            "CloseImagesSearcher"
        ],
        {
            "title_aux": "comfyUI-PL-data-tools"
        }
    ],
    "https://github.com/Poseidon-fan/ComfyUI-RabbitMQ-Publisher": [
        [
            "Publish Image To RabbitMQ"
        ],
        {
            "title_aux": "ComfyUI-RabbitMQ-Publisher"
        }
    ],
    "https://github.com/PowerHouseMan/ComfyUI-AdvancedLivePortrait": [
        [
            "AdvancedLivePortrait",
            "ExpData",
            "ExpressionEditor",
            "LoadExpData",
            "PrintExpData:",
            "SaveExpData"
        ],
        {
            "title_aux": "ComfyUI-AdvancedLivePortrait"
        }
    ],
    "https://github.com/PressWagon/ComfyUI-StringsAndThings": [
        [
            "DebugString",
            "FormatConcatStrings",
            "FormattingSingle",
            "FourierAnalysisNode",
            "MosaicEffectNode",
            "PWLoraNameCollector",
            "PWLoraSelector",
            "TextEmbeddingsInterrogator"
        ],
        {
            "title_aux": "ComfyUI-StringsAndThings"
        }
    ],
    "https://github.com/Pseudotools/Pseudocomfy": [
        [
            "Combiner",
            "LoadJSONAuto",
            "LoadJSONFromFolder",
            "MakeMaskBatch",
            "MixedBuiltinCombinerIPAdaper",
            "ProcessJSON"
        ],
        {
            "title_aux": "Pseudocomfy"
        }
    ],
    "https://github.com/Q-Bug4/Comfyui-Qb-DateNodes": [
        [
            "DateTimeFormatterNode"
        ],
        {
            "title_aux": "Comfyui-Qb-Date-Nodes"
        }
    ],
    "https://github.com/Q-Bug4/Comfyui-Simple-Json-Node": [
        [
            "JSONArrayIteratorNode",
            "JSONGeneratorNode",
            "JSONKeyCheckerNode",
            "JSONLengthNode",
            "JSONMergeNode",
            "JSONModifierNode",
            "JSONObjectIteratorNode",
            "JSONParserNode",
            "JSONStringifierNode",
            "RandomJSONValueNode"
        ],
        {
            "title_aux": "Simple JSON Parser Node for ComfyUI"
        }
    ],
    "https://github.com/QaisMalkawi/ComfyUI-QaisHelper": [
        [
            "Bool Binary Operation",
            "Bool Unary Operation",
            "Item Debugger",
            "Item Switch",
            "Nearest SDXL Resolution",
            "SDXL Resolution",
            "Size Swapper"
        ],
        {
            "title_aux": "ComfyUI-Qais-Helper"
        }
    ],
    "https://github.com/Raapys/ComfyUI-LatentGC_Aggressive": [
        [
            "LatentGC"
        ],
        {
            "title_aux": "LatentGC Aggressive"
        }
    ],
    "https://github.com/Ravenmelt/ComfyUI-Rodin": [
        [
            "LoadRodinAPIKEY",
            "Preview_3DMesh",
            "PromptForRodin",
            "RodinImage3D",
            "RodinMultipleImage3D",
            "RodinText3D"
        ],
        {
            "title_aux": "ComfyUI-Rodin"
        }
    ],
    "https://github.com/RedRayz/ComfyUI-Danbooru-To-WD": [
        [
            "DanbooruToWD"
        ],
        {
            "title_aux": "ComfyUI-Danbooru-To-WD"
        }
    ],
    "https://github.com/RenderRift/ComfyUI-RenderRiftNodes": [
        [
            "AnalyseMetadata",
            "DateIntegerNode",
            "DisplayMetaOptions",
            "LoadImageWithMeta",
            "MetadataOverlayNode",
            "VideoPathMetaExtraction"
        ],
        {
            "title_aux": "ComfyUI-RenderRiftNodes"
        }
    ],
    "https://github.com/RhizoNymph/ComfyUI-CLIPSlider": [
        [
            "CLIPSlider"
        ],
        {
            "title_aux": "ComfyUI-CLIPSlider"
        }
    ],
    "https://github.com/RhizoNymph/ComfyUI-ColorWheel": [
        [
            "AccurateColorWheelNode"
        ],
        {
            "title_aux": "ComfyUI-ColorWheel"
        }
    ],
    "https://github.com/RhizoNymph/ComfyUI-Latte": [
        [
            "LatteVideoGenerator"
        ],
        {
            "title_aux": "ComfyUI-Latte"
        }
    ],
    "https://github.com/RiceRound/ComfyUI_CryptoCat": [
        [
            "CryptoCatImage",
            "ExcuteCryptoNode",
            "RandomSeedNode",
            "SaveCryptoNode"
        ],
        {
            "title_aux": "ComfyUI Compression and Encryption Node"
        }
    ],
    "https://github.com/Rinsanga1/comfyui-florence2xy": [
        [
            "Florence2toCoordinatesButxy",
            "LoadImageWithName",
            "LoadPhi35VisionModel",
            "Phi35VisionRun"
        ],
        {
            "title_aux": "comfyui-florence2xy"
        }
    ],
    "https://github.com/RodrigoSKohl/ComfyUI-Panoramic-ImgStitcher": [
        [
            "Image Stitching Node"
        ],
        {
            "title_aux": "Panoramic Image Stitcher"
        }
    ],
    "https://github.com/RomanKuschanow/ComfyUI-Advanced-Latent-Control": [
        [
            "LatentAddTransform",
            "LatentInterpolateTransform",
            "LatentMirror",
            "LatentNormalize",
            "LatentShift",
            "MirrorTransform",
            "MultiplyTransform",
            "OffsetCombine",
            "OneTimeLatentAddTransform",
            "OneTimeLatentInterpolateTransform",
            "OneTimeMirrorTransform",
            "OneTimeMultiplyTransform",
            "OneTimeShiftTransform",
            "ShiftTransform",
            "TransformHijack",
            "TransformOffset",
            "TransformSampler",
            "TransformSamplerAdvanced",
            "TransformsCombine"
        ],
        {
            "title_aux": "Advanced Latent Control"
        }
    ],
    "https://github.com/Ron-Digital/ComfyUI-SceneGenerator": [
        [
            "Scene Generator"
        ],
        {
            "title_aux": "ComfyUI-SceneGenerator"
        }
    ],
    "https://github.com/Runware/ComfyUI-Runware": [
        [
            "Runware API Manager",
            "Runware Background Removal",
            "Runware ControlNet",
            "Runware ControlNet Combine",
            "Runware ControlNet PreProcessor",
            "Runware Embedding Search",
            "Runware Embeddings Combine",
            "Runware Image Caption",
            "Runware Image Inference",
            "Runware Image Masking",
            "Runware Image Upscaler",
            "Runware Lora Combine",
            "Runware Lora Search",
            "Runware Model Search",
            "Runware PhotoMaker V2",
            "Runware Refiner",
            "Runware VAE Search"
        ],
        {
            "title_aux": "Runware.ai ComfyUI Inference API Integration"
        }
    ],
    "https://github.com/Ryuukeisyou/comfyui_face_parsing": [
        [
            "BBoxDecompose(FaceParsing)",
            "BBoxDetect(FaceParsing)",
            "BBoxDetectorLoader(FaceParsing)",
            "BBoxListItemSelect(FaceParsing)",
            "BBoxResize(FaceParsing)",
            "ColorAdjust(FaceParsing)",
            "FaceParse(FaceParsing)",
            "FaceParsingModelLoader(FaceParsing)",
            "FaceParsingProcessorLoader(FaceParsing)",
            "FaceParsingResultsParser(FaceParsing)",
            "GuidedFilter(FaceParsing)",
            "ImageCropWithBBox(FaceParsing)",
            "ImageCropWithBBoxList(FaceParsing)",
            "ImageInsertWithBBox(FaceParsing)",
            "ImageListSelect(FaceParsing)",
            "ImagePadWithBBox(FaceParsing)",
            "ImageResizeCalculator(FaceParsing)",
            "ImageResizeWithBBox(FaceParsing)",
            "ImageSize(FaceParsing)",
            "LatentCropWithBBox(FaceParsing)",
            "LatentInsertWithBBox(FaceParsing)",
            "LatentSize(FaceParsing)",
            "MaskBatchComposite(FaceParsing)",
            "MaskBlackOut(FaceParsing)",
            "MaskBorderDissolve(FaceParsing)",
            "MaskComposite(FaceParsing)",
            "MaskCropWithBBox(FaceParsing)",
            "MaskInsertWithBBox(FaceParsing)",
            "MaskListSelect(FaceParsing)",
            "MaskToBBoxList(FaceParsing)",
            "SkinDetectTraditional(FaceParsing)"
        ],
        {
            "title_aux": "comfyui_face_parsing"
        }
    ],
    "https://github.com/Ryuukeisyou/comfyui_io_helpers": [
        [
            "ImageLoadAsMaskByPath(IOHelpers)",
            "ImageLoadByPath(IOHelpers)",
            "ImageLoadFromBase64(IOHelpers)",
            "ImageSaveAsBase64(IOHelpers)",
            "ImageSaveToPath(IOHelpers)",
            "TypeConversion(IOHelpers)",
            "VHSFileNamesToStrings(IOHelpers)"
        ],
        {
            "title_aux": "comfyui_io_helpers"
        }
    ],
    "https://github.com/SEkINVR/ComfyUI-SaveAs": [
        [
            "ComfyUISaveAs"
        ],
        {
            "title_aux": "ComfyUI SaveAS"
        }
    ],
    "https://github.com/SKBv0/ComfyUI_SKBundle": [
        [
            "AspectRatioAdvanced",
            "DisplayEverything",
            "ImageComparer",
            "MultiFloat",
            "MultiTextNode",
            "SKB_AnySwitch",
            "SeamlessTexture",
            "TextBox",
            "TitlePlus"
        ],
        {
            "title_aux": "ComfyUI SKBundle"
        }
    ],
    "https://github.com/SLAPaper/ComfyUI-Image-Selector": [
        [
            "ImageDuplicator",
            "ImageSelector",
            "LatentDuplicator",
            "LatentSelector"
        ],
        {
            "title_aux": "ComfyUI-Image-Selector"
        }
    ],
    "https://github.com/SOELexicon/ComfyUI-LexMSDBNodes": [
        [
            "MSSqlSelectNode",
            "MSSqlTableNode"
        ],
        {
            "title_aux": "LexMSDBNodes"
        }
    ],
    "https://github.com/SOELexicon/ComfyUI-LexTools": [
        [
            "AesthetlcScoreSorter",
            "AgeClassifierNode",
            "ArtOrHumanClassifierNode",
            "CalculateAestheticScore",
            "DocumentClassificationNode",
            "FoodCategoryClassifierNode",
            "ImageAspectPadNode",
            "ImageCaptioning",
            "ImageFilterByFloatScoreNode",
            "ImageFilterByIntScoreNode",
            "ImageQualityScoreNode",
            "ImageRankingNode",
            "ImageScaleToMin",
            "LoadAesteticModel",
            "MD5ImageHashNode",
            "SamplerPropertiesNode",
            "ScoreConverterNode",
            "SeedIncrementerNode",
            "SegformerNode",
            "SegformerNodeMasks",
            "SegformerNodeMergeSegments",
            "StepCfgIncrementNode"
        ],
        {
            "title_aux": "ComfyUI-LexTools"
        }
    ],
    "https://github.com/SS-snap/ComfyUI-Snap_Processing": [
        [
            "AreaCalculator",
            "PyQtCanvasNode",
            "Snapload"
        ],
        {
            "title_aux": "Snap Processing for Comfyui"
        }
    ],
    "https://github.com/SamKhoze/ComfyUI-DeepFuze": [
        [
            "DeepFuze Save",
            "DeepFuzeAdavance",
            "DeepFuzeFaceSwap",
            "DeepfuzePreview",
            "LLM_node",
            "PlayBackAudio",
            "TTS_generation"
        ],
        {
            "title_aux": "DeepFuze"
        }
    ],
    "https://github.com/SayanoAI/Comfy-RVC": [
        [
            "Any2ListNode",
            "AudioBatchValueNode",
            "AudioInfoNode",
            "AudioTranscriptionNode",
            "BatchedTranscriptionEncoderNode",
            "DownloadAudio",
            "ImageRepeatInterleavedNode",
            "LatentRepeatInterleavedNode",
            "List2AnyNode",
            "LoadHubertModel",
            "LoadPitchExtractionParams",
            "LoadRVCModelNode",
            "LoadWhisperModelNode",
            "MergeAudioNode",
            "MergeImageBatches",
            "MergeLatentBatches",
            "MuseAudioFeatureExtractionNode",
            "MuseImageFeatureExtractionNode",
            "MuseTalkNode",
            "ProcessAudioNode",
            "RVC-Studio.LoadAudio",
            "RVC-Studio.PreviewAudio",
            "RVCNode",
            "RVCProcessDatasetNode",
            "RVCTrainModelNode",
            "RVCTrainParamsNode",
            "SimpleMathNode",
            "SliceNode",
            "SortImagesNode",
            "UVR5Node",
            "ZipNode"
        ],
        {
            "title_aux": "Comfy-RVC"
        }
    ],
    "https://github.com/Scholar01/ComfyUI-Keyframe": [
        [
            "KeyframeApply",
            "KeyframeInterpolationPart",
            "KeyframePart"
        ],
        {
            "title_aux": "SComfyUI-Keyframe"
        }
    ],
    "https://github.com/Scorpinaus/ComfyUI-DiffusersLoader": [
        [
            "CombinedDiffusersLoader",
            "DiffusersClipLoader",
            "DiffusersUNETLoader",
            "DiffusersVAELoader"
        ],
        {
            "title_aux": "ComfyUI-DiffusersLoader"
        }
    ],
    "https://github.com/ScreamingHawk/comfyui-ollama-prompt-encode": [
        [
            "OllamaCLIPTextEncode",
            "OllamaPromptGenerator"
        ],
        {
            "author": "Michael Standen",
            "description": "Use AI to generate prompts and perform CLIP text encoding",
            "nickname": "Ollama Prompt Encode",
            "title": "Ollama Prompt Encode",
            "title_aux": "Ollama Prompt Encode"
        }
    ],
    "https://github.com/SeaArtLab/ComfyUI-Long-CLIP": [
        [
            "LongCLIPTextEncodeFlux",
            "SeaArtLongClip",
            "SeaArtLongXLClipMerge"
        ],
        {
            "title_aux": "ComfyUI-Long-CLIP"
        }
    ],
    "https://github.com/SeanScripts/ComfyUI-PixtralLlamaMolmoVision": [
        [
            "AutoVisionModelLoader",
            "JoinString",
            "LlamaVisionGenerateText",
            "LlamaVisionModelLoader",
            "MolmoGenerateText",
            "MolmoModelLoader",
            "ParseBoundingBoxes",
            "ParsePoints",
            "PixtralGenerateText",
            "PixtralImageEncode",
            "PixtralModelLoader",
            "PixtralTextEncode",
            "PlotPoints",
            "RegexFindAll",
            "RegexSearch",
            "RegexSplitString",
            "RegexSubstitution",
            "SelectIndex",
            "SliceList"
        ],
        {
            "title_aux": "ComfyUI-PixtralLlamaMolmoVision"
        }
    ],
    "https://github.com/SeanScripts/ComfyUI-Unload-Model": [
        [
            "UnloadAllModels",
            "UnloadModel"
        ],
        {
            "title_aux": "ComfyUI-Unload-Model"
        }
    ],
    "https://github.com/SeargeDP/ComfyUI_Searge_LLM": [
        [
            "Searge_AdvOptionsNode",
            "Searge_LLM_Node",
            "Searge_Output_Node"
        ],
        {
            "title_aux": "Searge-LLM for ComfyUI v1.0"
        }
    ],
    "https://github.com/SeargeDP/SeargeSDXL": [
        [
            "SeargeAdvancedParameters",
            "SeargeCheckpointLoader",
            "SeargeConditionMixing",
            "SeargeConditioningMuxer2",
            "SeargeConditioningMuxer5",
            "SeargeConditioningParameters",
            "SeargeControlnetAdapterV2",
            "SeargeControlnetModels",
            "SeargeCustomAfterUpscaling",
            "SeargeCustomAfterVaeDecode",
            "SeargeCustomPromptMode",
            "SeargeDebugPrinter",
            "SeargeEnablerInputs",
            "SeargeFloatConstant",
            "SeargeFloatMath",
            "SeargeFloatPair",
            "SeargeFreeU",
            "SeargeGenerated1",
            "SeargeGenerationParameters",
            "SeargeHighResolution",
            "SeargeImage2ImageAndInpainting",
            "SeargeImageAdapterV2",
            "SeargeImageSave",
            "SeargeImageSaving",
            "SeargeInput1",
            "SeargeInput2",
            "SeargeInput3",
            "SeargeInput4",
            "SeargeInput5",
            "SeargeInput6",
            "SeargeInput7",
            "SeargeIntegerConstant",
            "SeargeIntegerMath",
            "SeargeIntegerPair",
            "SeargeIntegerScaler",
            "SeargeLatentMuxer3",
            "SeargeLoraLoader",
            "SeargeLoras",
            "SeargeMagicBox",
            "SeargeModelSelector",
            "SeargeOperatingMode",
            "SeargeOutput1",
            "SeargeOutput2",
            "SeargeOutput3",
            "SeargeOutput4",
            "SeargeOutput5",
            "SeargeOutput6",
            "SeargeOutput7",
            "SeargeParameterProcessor",
            "SeargePipelineStart",
            "SeargePipelineTerminator",
            "SeargePreviewImage",
            "SeargePromptAdapterV2",
            "SeargePromptCombiner",
            "SeargePromptStyles",
            "SeargePromptText",
            "SeargeSDXLBasePromptEncoder",
            "SeargeSDXLImage2ImageSampler",
            "SeargeSDXLImage2ImageSampler2",
            "SeargeSDXLPromptEncoder",
            "SeargeSDXLRefinerPromptEncoder",
            "SeargeSDXLSampler",
            "SeargeSDXLSampler2",
            "SeargeSDXLSamplerV3",
            "SeargeSamplerAdvanced",
            "SeargeSamplerInputs",
            "SeargeSaveFolderInputs",
            "SeargeSeparator",
            "SeargeStylePreprocessor",
            "SeargeTextInputV2",
            "SeargeUpscaleModelLoader",
            "SeargeUpscaleModels",
            "SeargeVAELoader"
        ],
        {
            "title_aux": "SeargeSDXL"
        }
    ],
    "https://github.com/Seedsa/Fooocus_Nodes": [
        [
            "BasicScheduler",
            "CLIPLoader",
            "CLIPMergeSimple",
            "CLIPSave",
            "CLIPSetLastLayer",
            "CLIPTextEncode",
            "CLIPTextEncodeSDXL",
            "CLIPTextEncodeSDXLRefiner",
            "CLIPVisionEncode",
            "CLIPVisionLoader",
            "Canny",
            "CheckpointLoader",
            "CheckpointLoaderSimple",
            "CheckpointSave",
            "ConditioningAverage",
            "ConditioningCombine",
            "ConditioningConcat",
            "ConditioningSetArea",
            "ConditioningSetAreaPercentage",
            "ConditioningSetMask",
            "ConditioningSetTimestepRange",
            "ConditioningZeroOut",
            "ControlNetApply",
            "ControlNetApplyAdvanced",
            "ControlNetLoader",
            "CropMask",
            "DiffControlNetLoader",
            "DiffusersLoader",
            "DualCLIPLoader",
            "EmptyImage",
            "EmptyLatentImage",
            "ExponentialScheduler",
            "FeatherMask",
            "FlipSigmas",
            "Fooocus ApplyImagePrompt",
            "Fooocus Controlnet",
            "Fooocus Describe",
            "Fooocus Expansion",
            "Fooocus ImagePrompt",
            "Fooocus Inpaint",
            "Fooocus KSampler",
            "Fooocus Loader",
            "Fooocus LoraStack",
            "Fooocus PipeOut",
            "Fooocus PreKSampler",
            "Fooocus Styles",
            "Fooocus Upscale",
            "Fooocus detailerFix",
            "Fooocus negative",
            "Fooocus positive",
            "Fooocus preDetailerFix",
            "Fooocus samLoaderPipe",
            "Fooocus ultralyticsDetectorPipe",
            "FreeU",
            "FreeU_V2",
            "GLIGENLoader",
            "GLIGENTextBoxApply",
            "GrowMask",
            "HyperTile",
            "HypernetworkLoader",
            "ImageBatch",
            "ImageBlend",
            "ImageBlur",
            "ImageColorToMask",
            "ImageCompositeMasked",
            "ImageCrop",
            "ImageInvert",
            "ImageOnlyCheckpointLoader",
            "ImageOnlyCheckpointSave",
            "ImagePadForOutpaint",
            "ImageQuantize",
            "ImageScale",
            "ImageScaleBy",
            "ImageScaleToTotalPixels",
            "ImageSharpen",
            "ImageToMask",
            "ImageUpscaleWithModel",
            "InpaintModelConditioning",
            "InvertMask",
            "JoinImageWithAlpha",
            "KSampler",
            "KSamplerAdvanced",
            "KSamplerSelect",
            "KarrasScheduler",
            "LatentAdd",
            "LatentBatch",
            "LatentBatchSeedBehavior",
            "LatentBlend",
            "LatentComposite",
            "LatentCompositeMasked",
            "LatentCrop",
            "LatentFlip",
            "LatentFromBatch",
            "LatentInterpolate",
            "LatentMultiply",
            "LatentRotate",
            "LatentSubtract",
            "LatentUpscale",
            "LatentUpscaleBy",
            "LoadImage",
            "LoadImageMask",
            "LoadLatent",
            "LoraLoader",
            "LoraLoaderModelOnly",
            "MaskComposite",
            "MaskToImage",
            "ModelMergeAdd",
            "ModelMergeBlocks",
            "ModelMergeSimple",
            "ModelMergeSubtract",
            "ModelSamplingContinuousEDM",
            "ModelSamplingDiscrete",
            "PatchModelAddDownscale",
            "PerpNeg",
            "PhotoMakerEncode",
            "PhotoMakerLoader",
            "PolyexponentialScheduler",
            "PorterDuffImageComposite",
            "PreviewImage",
            "RebatchImages",
            "RebatchLatents",
            "RepeatImageBatch",
            "RepeatLatentBatch",
            "RescaleCFG",
            "SDTurboScheduler",
            "SD_4XUpscale_Conditioning",
            "SVD_img2vid_Conditioning",
            "SamplerCustom",
            "SamplerDPMPP_2M_SDE",
            "SamplerDPMPP_SDE",
            "SaveAnimatedPNG",
            "SaveAnimatedWEBP",
            "SaveImage",
            "SaveLatent",
            "SelfAttentionGuidance",
            "SetLatentNoiseMask",
            "SolidMask",
            "SplitImageWithAlpha",
            "SplitSigmas",
            "StableZero123_Conditioning",
            "StableZero123_Conditioning_Batched",
            "StyleModelApply",
            "StyleModelLoader",
            "TomePatchModel",
            "UNETLoader",
            "UpscaleModelLoader",
            "VAEDecode",
            "VAEDecodeTiled",
            "VAEEncode",
            "VAEEncodeForInpaint",
            "VAEEncodeTiled",
            "VAELoader",
            "VAESave",
            "VPScheduler",
            "VideoLinearCFGGuidance",
            "unCLIPCheckpointLoader",
            "unCLIPConditioning"
        ],
        {
            "title_aux": "ComfyUI Fooocus Nodes"
        }
    ],
    "https://github.com/Shadetail/ComfyUI_Eagleshadow": [
        [
            "Batch 12 Images",
            "Detect Transparency",
            "Fix Checkpoint Name",
            "ImageLinearGammaCompositeMasked",
            "KSampler Same Noise",
            "MaskGlow",
            "OffsetImage",
            "Round Float to String",
            "SaveImageToFolder",
            "Select ControlNet",
            "Select Model 20",
            "Simple Load Image Batch"
        ],
        {
            "title_aux": "Eagleshadow Custom Nodes"
        }
    ],
    "https://github.com/Shakker-Labs/ComfyUI-IPAdapter-Flux": [
        [
            "ApplyIPAdapterFlux",
            "ApplyIPAdapterFluxAdvanced",
            "IPAdapterFluxLoader",
            "IPAdapterFluxLoaderAdvanced"
        ],
        {
            "title_aux": "ComfyUI-IPAdapter-Flux"
        }
    ],
    "https://github.com/Shannooty/ComfyUI-Timer-Nodes": [
        [
            "TimerStart",
            "TimerStringConcat"
        ],
        {
            "title_aux": "ComfyUI Timer Nodes"
        }
    ],
    "https://github.com/SherryXieYuchen/ComfyUI-Image-Inpainting": [
        [
            "CropImageByRect",
            "INPAINT_ColorCorrection",
            "INPAINT_CropImage",
            "INPAINT_InpaintingWithModel",
            "INPAINT_LoadModel",
            "INPAINT_PasteBackCropImage",
            "INPAINT_VAEDecode",
            "INPAINT_VAEEncode",
            "ImagePostprocess",
            "ImagePreprocess"
        ],
        {
            "title_aux": "ComfyUI-Image-Inpainting"
        }
    ],
    "https://github.com/Shiba-2-shiba/ComfyUI_DiffusionModel_fp8_converter": [
        [
            "ClipFP8ConverterNode",
            "ModelFP8ConverterNode"
        ],
        {
            "title_aux": "ComfyUI_DiffusionModel_fp8_converter"
        }
    ],
    "https://github.com/Shiba-2-shiba/comfyui-color-ascii-art-node": [
        [
            "ASCIIArtNode",
            "ASCIIArtNodev2",
            "ASCIIArtSinglefontNode"
        ],
        {
            "author": "Shiba-2-shiba",
            "description": "This node generates colorful ASCII art using custom character sets and fonts.",
            "nickname": "ColorASCII",
            "title": "Colorful ASCII Art Node",
            "title_aux": "ComfyUI-color-ascii-art-node"
        }
    ],
    "https://github.com/Shibiko-AI/ShibikoAI-ComfyUI-Tools": [
        [
            "Cascade",
            "Luts",
            "Waifu2x"
        ],
        {
            "title_aux": "Shibiko AI ComfyUI Tools"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-Apply_Style_Model_Adjust": [
        [
            "ApplyStyleModelAdjust"
        ],
        {
            "title_aux": "Apply Style Model Adjust for ComfyUI"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-AstralAnimator": [
        [
            "AstralAnimator"
        ],
        {
            "title_aux": "ComfyUI-AstralAnimator"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-CohernetVideoSampler": [
        [
            "CohernetVideoSampler"
        ],
        {
            "title_aux": "ComfyUI Coherent Video Sampler Node"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-EmptyHunyuanLatent": [
        [
            "EmptyHunyuanLatentForImage",
            "EmptyHunyuanLatentForVideo"
        ],
        {
            "title_aux": "ComfyUI-EmptyHunyuanLatent"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-FreeMemory": [
        [
            "FreeMemoryCLIP",
            "FreeMemoryImage",
            "FreeMemoryLatent",
            "FreeMemoryModel"
        ],
        {
            "title_aux": "ComfyUI-FreeMemory"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-Gemini_Flash_2.0_Exp": [
        [
            "AudioRecorder",
            "Gemini_Flash_200_Exp"
        ],
        {
            "title_aux": "ComfyUI-Gemini_Flash_2.0_Exp"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-HunyuanVideoSamplerSave": [
        [
            "EmptyVideoLatentForHunyuan",
            "HunyuanVideoSamplerSave",
            "ImageMotionInfluance",
            "ResizeImageForHunyuan"
        ],
        {
            "title_aux": "ComfyUI-HunyuanVideoSamplerSave"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-HunyuanVideoStyler": [
        [
            "HunyuanVideoStyler"
        ],
        {
            "title_aux": "ComfyUI-HunyuanVideoStyler"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-ImageMotionGuider": [
        [
            "ImageMotionGuider"
        ],
        {
            "title_aux": "ComfyUI-ImageMotionGuider"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-LatentSyncWrapper": [
        [
            "D_LatentSyncNode",
            "D_VideoLengthAdjuster"
        ],
        {
            "title_aux": "ComfyUI-LatentSyncWrapper"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI-SVDResizer": [
        [
            "SVDRsizer"
        ],
        {
            "title_aux": "ComfyUI-SVDResizer"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI_Flux_1.1_RAW_API": [
        [
            "FluxPro11"
        ],
        {
            "title_aux": "ComfyUI Flux 1.1 Ultra & Raw Node"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI_Gemini_Flash": [
        [
            "Gemini_Flash_002"
        ],
        {
            "title_aux": "ComfyUI_Gemini_Flash"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI_pixtral_large": [
        [
            "ComfyUIPixtralLarge",
            "MultiImagesInput",
            "preview_text"
        ],
        {
            "title_aux": "ComfyUI Pixtral Large Extension"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI_pixtral_vision": [
        [
            "ComfyUIPixtralVision",
            "MultiImagesInput",
            "preview_text"
        ],
        {
            "title_aux": "ComfyUI_pixtral_vision"
        }
    ],
    "https://github.com/ShmuelRonen/ComfyUI_wav2lip": [
        [
            "LoadAudio",
            "Wav2Lip"
        ],
        {
            "title_aux": "Wav2Lip Node for ComfyUI"
        }
    ],
    "https://github.com/Shraknard/ComfyUI-Remover": [
        [
            "Remover"
        ],
        {
            "title_aux": "ComfyUI-Remover"
        }
    ],
    "https://github.com/Siberpone/lazy-pony-prompter": [
        [
            "LPP_Danbooru",
            "LPP_Deleter",
            "LPP_Derpibooru",
            "LPP_E621",
            "LPP_Loader_Danbooru",
            "LPP_Loader_Derpibooru",
            "LPP_Loader_E621",
            "LPP_Saver"
        ],
        {
            "title_aux": "Lazy Pony Prompter"
        }
    ],
    "https://github.com/Sieyalixnet/ComfyUI_Textarea_Loaders": [
        [
            "CheckPointLoader_Text",
            "EmptyLatentImage_Text",
            "LoRALoader_Text",
            "LoadImage_Text"
        ],
        {
            "title_aux": "ComfyUI_Textarea_Loaders"
        }
    ],
    "https://github.com/SimonHeese/ComfyUI_AnimationNodes/raw/refs/heads/main/animated_offset_pad.py": [
        [
            "AnimatedOffsetPadding"
        ],
        {
            "title_aux": "ComfyUI_AnimationNodes"
        }
    ],
    "https://github.com/SlackinJack/asyncdiff_comfyui": [
        [
            "ADPipelineConfig",
            "ADSD1Sampler",
            "ADSD2Sampler",
            "ADSD3Sampler",
            "ADSDXLSampler",
            "ADSVDSampler",
            "ADUpscaleSampler"
        ],
        {
            "title_aux": "asyncdiff_comfyui"
        }
    ],
    "https://github.com/SlackinJack/distrifuser_comfyui": [
        [
            "DFPipelineConfig",
            "DFSampler"
        ],
        {
            "title_aux": "distrifuser_comfyui"
        }
    ],
    "https://github.com/SleeeepyZhou/ComfyUI-CNtranslator": [
        [
            "CNtranslator",
            "TextShow"
        ],
        {
            "title_aux": "CNtranslator"
        }
    ],
    "https://github.com/Slickytail/ComfyUI-InstantX-IPAdapter-SD3": [
        [
            "ApplyIPAdapterSD3",
            "IPAdapterSD3Loader"
        ],
        {
            "title_aux": "ComfyUI-InstantX-IPAdapter-SD3"
        }
    ],
    "https://github.com/Smirnov75/ComfyUI-mxToolkit": [
        [
            "mxSeed",
            "mxSlider",
            "mxSlider2D",
            "mxStop"
        ],
        {
            "title_aux": "ComfyUI-mxToolkit"
        }
    ],
    "https://github.com/Smuzzies/comfyui_meme_maker": [
        [
            "MemeMaker"
        ],
        {
            "title_aux": "comfyui_meme_maker"
        }
    ],
    "https://github.com/SoftMeng/ComfyUI-DeepCache-Fix": [
        [
            "DeepCache_Fix"
        ],
        {
            "title_aux": "ComfyUI-DeepCache-Fix"
        }
    ],
    "https://github.com/SoftMeng/ComfyUI-PIL": [
        [
            "PIL Effects (Mexx)",
            "PIL Merge Image (Mexx)",
            "PIL Remove Black Dots (Mexx)",
            "PIL TITLE (Mexx)"
        ],
        {
            "title_aux": "ComfyUI-PIL"
        }
    ],
    "https://github.com/SoftMeng/ComfyUI_ImageToText": [
        [
            "ComfyUI_ImageToText"
        ],
        {
            "title_aux": "ComfyUI_ImageToText"
        }
    ],
    "https://github.com/SoftMeng/ComfyUI_Mexx_Poster": [
        [
            "ComfyUI_Mexx_Poster"
        ],
        {
            "title_aux": "ComfyUI_Mexx_Poster"
        }
    ],
    "https://github.com/SoftMeng/ComfyUI_Mexx_Styler": [
        [
            "MexxSDXLPromptStyler",
            "MexxSDXLPromptStylerAdvanced"
        ],
        {
            "title_aux": "ComfyUI_Mexx_Styler"
        }
    ],
    "https://github.com/SongGuo11/ComfyUI-SaveAnything-SG11": [
        [
            "SG11_SaveAnything"
        ],
        {
            "title_aux": "ComfyUI SaveAnything Node (SG11)"
        }
    ],
    "https://github.com/Sorcerio/MBM-Music-Visualizer": [
        [
            "id",
            "mbmAudioFeatureCalculator",
            "mbmAudioLoader",
            "mbmImageConcat",
            "mbmPromptSequenceBuilder",
            "mbmPromptSequenceBuilderAdv",
            "mbmPromptSequenceInterpolator",
            "mbmPromptSequenceLoader",
            "mbmPromptSequenceRenderer"
        ],
        {
            "title_aux": "MBM's Music Visualizer"
        }
    ],
    "https://github.com/SozeInc/ComfyUI-Mobile": [
        [
            "Mobile_Settings_Launcher_Data",
            "Send Notification (Mobile)",
            "Settings Launcher (Mobile)",
            "Ultimate Concat (Mobile)"
        ],
        {
            "title_aux": "ComfyUI-Mobile"
        }
    ],
    "https://github.com/SozeInc/ComfyUI_Soze": [
        [
            "CSV Reader",
            "CSV Writer",
            "Empty Images",
            "Get Most Common Image Colors",
            "Image Batch Process Switch",
            "Image List Loader",
            "Image Overlay",
            "Is Input In List",
            "Load Image",
            "Load Image From URL",
            "Load Images From Folder",
            "Multiline Concatenate Strings",
            "Output Filename",
            "Prompt Cache",
            "Prompt X Lora",
            "Range(Num Steps) - Float",
            "Range(Num Steps) - Int",
            "Range(Step) - Float",
            "Range(Step) - Int",
            "String Replacer",
            "Text Contains (Return Bool)",
            "Text Contains (Return String)",
            "Variable Image Builder",
            "XY Any",
            "XY Image"
        ],
        {
            "title_aux": "Quality of Life Nodes for ComfyUI"
        }
    ],
    "https://github.com/SpaceKendo/ComfyUI-svd_txt2vid": [
        [
            "SVD_txt2vid_ConditioningwithLatent"
        ],
        {
            "title_aux": "Text to video for Stable Video Diffusion in ComfyUI"
        }
    ],
    "https://github.com/SparknightLLC/ComfyUI-ConditionalInterrupt": [
        [
            "Conditional Interrupt"
        ],
        {
            "title_aux": "ComfyUI-ConditionalInterrupt"
        }
    ],
    "https://github.com/SparknightLLC/ComfyUI-LatentClamp": [
        [
            "LatentClamp"
        ],
        {
            "title_aux": "ComfyUI-LatentClamp"
        }
    ],
    "https://github.com/SparknightLLC/ComfyUI-MaskArbiter": [
        [
            "GroundingDinoSAM2SegmentList",
            "MaskArbiter"
        ],
        {
            "title_aux": "ComfyUI-MaskArbiter"
        }
    ],
    "https://github.com/SpenserCai/ComfyUI-FunAudioLLM": [
        [
            "CosyVoiceCrossLingualNode",
            "CosyVoiceInstructNode",
            "CosyVoiceLoadSpeakerModelFromUrlNode",
            "CosyVoiceLoadSpeakerModelNode",
            "CosyVoiceSFTNode",
            "CosyVoiceSaveSpeakerModelNode",
            "CosyVoiceZeroShotNode",
            "SenseVoiceNode"
        ],
        {
            "title_aux": "ComfyUI-FunAudioLLM"
        }
    ],
    "https://github.com/Stability-AI/ComfyUI-SAI_API": [
        [
            "Stability Conservative Upscale",
            "Stability Control Skech",
            "Stability Control Structure",
            "Stability Creative Upscale",
            "Stability Erase",
            "Stability Image Core",
            "Stability Image Ultra",
            "Stability Inpainting",
            "Stability Outpainting",
            "Stability Remove Background",
            "Stability SD3",
            "Stability Search and Replace"
        ],
        {
            "title_aux": "Stability API nodes for ComfyUI"
        }
    ],
    "https://github.com/Stability-AI/stability-ComfyUI-nodes": [
        [
            "ColorBlend",
            "ControlLoraSave",
            "GetImageSize"
        ],
        {
            "title_aux": "stability-ComfyUI-nodes"
        }
    ],
    "https://github.com/StableDiffusionVN/SDVN_Comfy_node": [
        [
            "SDVM Image List Repeat",
            "SDVN API chatbot",
            "SDVN Any From List",
            "SDVN Any Input Type",
            "SDVN Any List",
            "SDVN Any Repeat",
            "SDVN Any Show",
            "SDVN Apply Style Model",
            "SDVN Auto Generate",
            "SDVN Boolean",
            "SDVN CLIP Download",
            "SDVN CLIP Text Encode",
            "SDVN CLIPVision Download",
            "SDVN Checkpoint Download",
            "SDVN ControlNet Download",
            "SDVN Controlnet Apply",
            "SDVN DALL-E Generate Image",
            "SDVN Dic Convert",
            "SDVN Easy IPAdapter weight",
            "SDVN Exif check",
            "SDVN Filter List",
            "SDVN Image Info",
            "SDVN Image Layout",
            "SDVN Image Repeat",
            "SDVN Image Scraper",
            "SDVN Image Size",
            "SDVN Inpaint",
            "SDVN Join Parameter",
            "SDVN KSampler",
            "SDVN Load Checkpoint",
            "SDVN Load Image",
            "SDVN Load Image Folder",
            "SDVN Load Image From List",
            "SDVN Load Image Url",
            "SDVN Load Lora",
            "SDVN Load Model",
            "SDVN Load Text",
            "SDVN Logic",
            "SDVN Lora Download",
            "SDVN Lora info",
            "SDVN Menu Option",
            "SDVN Merge Flux",
            "SDVN Merge SD1",
            "SDVN Merge SDXL",
            "SDVN Metadata Check",
            "SDVN Model Merge",
            "SDVN Model info editor",
            "SDVN Pipe In",
            "SDVN Pipe Out",
            "SDVN Pipe Out All",
            "SDVN Quick Menu",
            "SDVN Run Python Code",
            "SDVN Run Test",
            "SDVN Save Text",
            "SDVN Seed",
            "SDVN Simple Any Input",
            "SDVN StyleModel Download",
            "SDVN Styles",
            "SDVN Switch",
            "SDVN Translate",
            "SDVN UNET Download",
            "SDVN UPscale Latent",
            "SDVN Upscale Image",
            "SDVN UpscaleModel Download",
            "SDVN VAE Download"
        ],
        {
            "title_aux": "SDVN Comfy node"
        }
    ],
    "https://github.com/StarMagicAI/comfyui_tagger": [
        [
            "DownloadAndLoadFlorence2Lora_jsonL",
            "DownloadAndLoadFlorence2Model_jsonL",
            "Florence2ModelLoader_jsonL",
            "Florence2Run_jsonL",
            "batch_text_save_jsonL"
        ],
        {
            "title_aux": "ComfyUI-tagger"
        }
    ],
    "https://github.com/Starnodes2024/ComfyUI_StarNodes": [
        [
            "DetailStarDaemon",
            "FluxStartSettings",
            "Fluxstarsampler",
            "OllamaModelChooser",
            "SD35StartSettings",
            "SDXLStartSettings",
            "SDstarsampler",
            "StarFiveWildcards",
            "StarImageSwitch",
            "Starupscale"
        ],
        {
            "title_aux": "ComfyUI_StarNodes"
        }
    ],
    "https://github.com/StartHua/ComfyUI_OOTDiffusion_CXH": [
        [
            "Ood_CXH"
        ],
        {
            "title_aux": "ComfyUI_OOTDiffusion_CXH"
        }
    ],
    "https://github.com/StartHua/ComfyUI_PCDMs": [
        [
            "PCDMS_CXH"
        ],
        {
            "title_aux": "ComfyUI_PCDMs"
        }
    ],
    "https://github.com/StartHua/ComfyUI_Seg_VITON": [
        [
            "segformer_agnostic",
            "segformer_clothes",
            "segformer_remove_bg",
            "stabel_vition"
        ],
        {
            "title_aux": "ComfyUI_Seg_VITON"
        }
    ],
    "https://github.com/StartHua/Comfyui_CXH_DeepLX": [
        [
            "CXH_DeepLX_Free",
            "CXH_DeepLX_translate"
        ],
        {
            "title_aux": "Comfyui_CXH_DeepLX"
        }
    ],
    "https://github.com/StartHua/Comfyui_CXH_FluxLoraMerge": [
        [
            "CXH_Lora_Merge"
        ],
        {
            "title_aux": "Comfyui_CXH_FluxLoraMerge"
        }
    ],
    "https://github.com/StartHua/Comfyui_CXH_Phi_3.5": [
        [
            "CXH_Phi_Run",
            "CXH_Phi_chat_load",
            "CXH_Phi_chat_min",
            "CXH_Phi_load"
        ],
        {
            "title_aux": "Comfyui_CXH_Phi_3.5"
        }
    ],
    "https://github.com/StartHua/Comfyui_CXH_joy_caption": [
        [
            "CXH_DownloadAndLoadFlorence2Model",
            "CXH_Florence2Run",
            "CXH_HG_Model_Load",
            "CXH_Min2_6_classifiy",
            "CXH_Min2_6_prompt_Run",
            "CXH_MinCP3_4B_Chat",
            "CXH_MinCP3_4B_Load",
            "Joy_caption",
            "Joy_caption_alpha_batch",
            "Joy_caption_alpha_load",
            "Joy_caption_alpha_prompt",
            "Joy_caption_alpha_run",
            "Joy_caption_load"
        ],
        {
            "title_aux": "Comfyui_CXH_joy_caption"
        }
    ],
    "https://github.com/StartHua/Comfyui_Gemini2": [
        [
            "CXH_Gemini2_TX",
            "CXH_Gemini2_Vision",
            "CXH_Local_Prompt"
        ],
        {
            "title_aux": "Comfyui_Gemini2"
        }
    ],
    "https://github.com/StartHua/Comfyui_joytag": [
        [
            "CXH_JoyTag"
        ],
        {
            "title_aux": "Comfyui_joytag"
        }
    ],
    "https://github.com/StartHua/Comfyui_segformer_b2_clothes": [
        [
            "segformer_b2_clothes",
            "segformer_b3_fashion"
        ],
        {
            "title_aux": "comfyui_segformer_b2_clothes"
        }
    ],
    "https://github.com/Steudio/ComfyUI_Steudio": [
        [
            "Combine Tiles",
            "Divide Image",
            "Divide Image and Select Tile",
            "Divide and Conquer Algorithm",
            "Divide and Conquer Algorithm (No Upscale)",
            "Load Images into List",
            "Make Size",
            "Seed Shifter",
            "Sequence Generator"
        ],
        {
            "title_aux": "ComfyUI Steudio"
        }
    ],
    "https://github.com/SuperBeastsAI/ComfyUI-SuperBeasts": [
        [
            "Deflicker - Experimental (SuperBeasts.AI)",
            "HDR Effects (SuperBeasts.AI)",
            "Image Batch Manager (SuperBeasts.AI)",
            "Make Resized Mask Batch (SuperBeasts.AI)",
            "Mask Batch Manager (SuperBeasts.AI)",
            "Pixel Deflicker - Experimental (SuperBeasts.AI)",
            "String List Manager (SuperBeasts.AI)"
        ],
        {
            "title_aux": "ComfyUI-SuperBeasts"
        }
    ],
    "https://github.com/SuperMasterBlasterLaser/ComfyUI_YOLO_Classifiers": [
        [
            "YOLO Classifier Model Loader",
            "YOLO Classify"
        ],
        {
            "title_aux": "ComfyUI_YOLO_Classifiers"
        }
    ],
    "https://github.com/Suzie1/ComfyUI_Comfyroll_CustomNodes": [
        [
            "CR 8 Channel In",
            "CR 8 Channel Out",
            "CR Apply ControlNet",
            "CR Apply LoRA Stack",
            "CR Apply Model Merge",
            "CR Apply Multi Upscale",
            "CR Apply Multi-ControlNet",
            "CR Arabic Text RTL",
            "CR Aspect Ratio",
            "CR Aspect Ratio Banners",
            "CR Aspect Ratio SDXL",
            "CR Aspect Ratio Social Media",
            "CR Batch Images From List",
            "CR Batch Process Switch",
            "CR Binary Pattern",
            "CR Binary To Bit List",
            "CR Bit Schedule",
            "CR Central Schedule",
            "CR Checker Pattern",
            "CR Clamp Value",
            "CR Clip Input Switch",
            "CR Color Bars",
            "CR Color Gradient",
            "CR Color Panel",
            "CR Color Tint",
            "CR Combine Prompt",
            "CR Combine Schedules",
            "CR Comic Panel Templates",
            "CR Composite Text",
            "CR Conditioning Input Switch",
            "CR Conditioning Mixer",
            "CR ControlNet Input Switch",
            "CR Current Frame",
            "CR Cycle Images",
            "CR Cycle Images Simple",
            "CR Cycle LoRAs",
            "CR Cycle Models",
            "CR Cycle Text",
            "CR Cycle Text Simple",
            "CR Data Bus In",
            "CR Data Bus Out",
            "CR Debatch Frames",
            "CR Diamond Panel",
            "CR Draw Perspective Text",
            "CR Draw Pie",
            "CR Draw Shape",
            "CR Draw Text",
            "CR Encode Scheduled Prompts",
            "CR Feathered Border",
            "CR Float Range List",
            "CR Float To Integer",
            "CR Float To String",
            "CR Font File List",
            "CR Get Parameter From Prompt",
            "CR Gradient Float",
            "CR Gradient Integer",
            "CR Half Drop Panel",
            "CR Halftone Filter",
            "CR Halftone Grid",
            "CR Hires Fix Process Switch",
            "CR Image Border",
            "CR Image Grid Panel",
            "CR Image Input Switch",
            "CR Image Input Switch (4 way)",
            "CR Image List",
            "CR Image List Simple",
            "CR Image Output",
            "CR Image Panel",
            "CR Image Pipe Edit",
            "CR Image Pipe In",
            "CR Image Pipe Out",
            "CR Image Size",
            "CR Img2Img Process Switch",
            "CR Increment Float",
            "CR Increment Integer",
            "CR Index",
            "CR Index Increment",
            "CR Index Multiply",
            "CR Index Reset",
            "CR Input Text List",
            "CR Integer Multiple",
            "CR Integer Range List",
            "CR Integer To String",
            "CR Interpolate Latents",
            "CR Intertwine Lists",
            "CR Keyframe List",
            "CR Latent Batch Size",
            "CR Latent Input Switch",
            "CR LoRA List",
            "CR LoRA Stack",
            "CR Load Animation Frames",
            "CR Load Flow Frames",
            "CR Load GIF As List",
            "CR Load Image List",
            "CR Load Image List Plus",
            "CR Load LoRA",
            "CR Load Prompt Style",
            "CR Load Schedule From File",
            "CR Load Scheduled ControlNets",
            "CR Load Scheduled LoRAs",
            "CR Load Scheduled Models",
            "CR Load Text List",
            "CR Mask Text",
            "CR Math Operation",
            "CR Model Input Switch",
            "CR Model List",
            "CR Model Merge Stack",
            "CR Module Input",
            "CR Module Output",
            "CR Module Pipe Loader",
            "CR Multi Upscale Stack",
            "CR Multi-ControlNet Stack",
            "CR Multiline Text",
            "CR Output Flow Frames",
            "CR Output Schedule To File",
            "CR Overlay Text",
            "CR Overlay Transparent Image",
            "CR Page Layout",
            "CR Pipe Switch",
            "CR Polygons",
            "CR Prompt List",
            "CR Prompt List Keyframes",
            "CR Prompt Scheduler",
            "CR Prompt Text",
            "CR Radial Gradient",
            "CR Random Hex Color",
            "CR Random LoRA Stack",
            "CR Random Multiline Colors",
            "CR Random Multiline Values",
            "CR Random Panel Codes",
            "CR Random RGB",
            "CR Random RGB Gradient",
            "CR Random Shape Pattern",
            "CR Random Weight LoRA",
            "CR Repeater",
            "CR SD1.5 Aspect Ratio",
            "CR SDXL Aspect Ratio",
            "CR SDXL Base Prompt Encoder",
            "CR SDXL Prompt Mix Presets",
            "CR SDXL Prompt Mixer",
            "CR SDXL Style Text",
            "CR Save Text To File",
            "CR Schedule Input Switch",
            "CR Schedule To ScheduleList",
            "CR Seamless Checker",
            "CR Seed",
            "CR Seed to Int",
            "CR Select Font",
            "CR Select ISO Size",
            "CR Select Model",
            "CR Select Resize Method",
            "CR Set Switch From String",
            "CR Set Value On Binary",
            "CR Set Value On Boolean",
            "CR Set Value on String",
            "CR Simple Banner",
            "CR Simple Binary Pattern",
            "CR Simple Binary Pattern Simple",
            "CR Simple Image Compare",
            "CR Simple List",
            "CR Simple Meme Template",
            "CR Simple Prompt List",
            "CR Simple Prompt List Keyframes",
            "CR Simple Prompt Scheduler",
            "CR Simple Schedule",
            "CR Simple Text Panel",
            "CR Simple Text Scheduler",
            "CR Simple Text Watermark",
            "CR Simple Titles",
            "CR Simple Value Scheduler",
            "CR Split String",
            "CR Starburst Colors",
            "CR Starburst Lines",
            "CR String To Boolean",
            "CR String To Combo",
            "CR String To Number",
            "CR Style Bars",
            "CR Switch Model and CLIP",
            "CR Text",
            "CR Text Blacklist",
            "CR Text Concatenate",
            "CR Text Cycler",
            "CR Text Input Switch",
            "CR Text Input Switch (4 way)",
            "CR Text Length",
            "CR Text List",
            "CR Text List Simple",
            "CR Text List To String",
            "CR Text Operation",
            "CR Text Replace",
            "CR Text Scheduler",
            "CR Thumbnail Preview",
            "CR Trigger",
            "CR Upscale Image",
            "CR VAE Decode",
            "CR VAE Input Switch",
            "CR Value",
            "CR Value Cycler",
            "CR Value Scheduler",
            "CR Vignette Filter",
            "CR XY From Folder",
            "CR XY Index",
            "CR XY Interpolate",
            "CR XY List",
            "CR XY Product",
            "CR XY Save Grid Image",
            "CR XYZ Index",
            "CR_Aspect Ratio For Print"
        ],
        {
            "author": "Suzie1",
            "description": "175 custom nodes for artists, designers and animators.",
            "nickname": "Comfyroll Studio",
            "title": "Comfyroll Studio",
            "title_aux": "Comfyroll Studio"
        }
    ],
    "https://github.com/Sxela/ComfyWarp": [
        [
            "ExtractOpticalFlow",
            "FixedQueue",
            "LoadFrame",
            "LoadFrameFromDataset",
            "LoadFrameFromFolder",
            "LoadFramePairFromDataset",
            "LoadFrameSequence",
            "MakeFrameDataset",
            "MixConsistencyMaps",
            "OffsetNumber",
            "RenderVideo",
            "ResizeToFit",
            "SaveFrame",
            "SchedulerFloat",
            "SchedulerInt",
            "SchedulerString",
            "WarpFrame"
        ],
        {
            "title_aux": "ComfyWarp"
        }
    ],
    "https://github.com/TGu-97/ComfyUI-TGu-utils": [
        [
            "MPNReroute",
            "MPNSwitch",
            "PNSwitch"
        ],
        {
            "title_aux": "TGu Utilities"
        }
    ],
    "https://github.com/THtianhao/ComfyUI-FaceChain": [
        [
            "FC CropAndPaste",
            "FC CropBottom",
            "FC CropToOrigin",
            "FC FaceDetectCrop",
            "FC FaceFusion",
            "FC FaceSegAndReplace",
            "FC FaceSegment",
            "FC MaskOP",
            "FC RemoveCannyFace",
            "FC ReplaceByMask",
            "FC StyleLoraLoad"
        ],
        {
            "title_aux": "ComfyUI-FaceChain"
        }
    ],
    "https://github.com/THtianhao/ComfyUI-Portrait-Maker": [
        [
            "PM_BoxCropImage",
            "PM_ColorTransfer",
            "PM_ExpandMaskBox",
            "PM_FaceFusion",
            "PM_FaceShapMatch",
            "PM_FaceSkin",
            "PM_GetImageInfo",
            "PM_ImageResizeTarget",
            "PM_ImageScaleShort",
            "PM_MakeUpTransfer",
            "PM_MaskDilateErode",
            "PM_MaskMerge2Image",
            "PM_PortraitEnhancement",
            "PM_RatioMerge2Image",
            "PM_ReplaceBoxImg",
            "PM_RetinaFace",
            "PM_Similarity",
            "PM_SkinRetouching",
            "PM_SuperColorTransfer",
            "PM_SuperMakeUpTransfer"
        ],
        {
            "title_aux": "ComfyUI-Portrait-Maker"
        }
    ],
    "https://github.com/TJ16th/comfyUI_TJ_NormalLighting": [
        [
            "EulerLightingNode"
        ],
        {
            "title_aux": "comfyUI_TJ_NormalLighting"
        }
    ],
    "https://github.com/TKRLAB/ComfyUI_Prompt_List_JSON": [
        [
            "ComfyUI_Prompt_JSON"
        ],
        {
            "author": "TKRLAB",
            "description": "ComfyUI JSON-based prompt management tool.",
            "title": "ComfyUI_Prompt_List_JSON",
            "title_aux": "Prompt List JSON"
        }
    ],
    "https://github.com/TMElyralab/Comfyui-MusePose": [
        [
            "filenamestring",
            "musepose",
            "museposealign"
        ],
        {
            "title_aux": "Comfyui-MusePose"
        }
    ],
    "https://github.com/TRI3D-LC/ComfyUI-MiroBoard": [
        [
            "add-image-miro-board"
        ],
        {
            "title_aux": "ComfyUI-MiroBoard"
        }
    ],
    "https://github.com/TRI3D-LC/tri3d-comfyui-nodes": [
        [
            "get_histogram_limits",
            "main_light_layer",
            "main_scaled_paste",
            "simple_rescale_histogram",
            "tri3d-HistogramEqualization",
            "tri3d-LAB_2_RGB",
            "tri3d-RGB_2_LAB",
            "tri3d-adjust-neck",
            "tri3d-atr-parse",
            "tri3d-atr-parse-batch",
            "tri3d-bgremove-mega",
            "tri3d-clean_mask",
            "tri3d-clear-memory",
            "tri3d-clipdrop-bgremove-api",
            "tri3d-clipdrop-bgreplace-api",
            "tri3d-composite-image-splitter",
            "tri3d-dwpose",
            "tri3d-extract-hand",
            "tri3d-extract-masks-batch",
            "tri3d-extract-parts-batch",
            "tri3d-extract-parts-batch2",
            "tri3d-extract-parts-mask-batch",
            "tri3d-extract-pascal-parts-batch",
            "tri3d-extract_pose_part",
            "tri3d-face-recognise",
            "tri3d-flexible_color_extract",
            "tri3d-float-to-image",
            "tri3d-fuzzification",
            "tri3d-get_histogram_limits",
            "tri3d-get_mean_and_standard_deviation",
            "tri3d-get_threshold_for_bg_swap",
            "tri3d-image-mask-2-box",
            "tri3d-image-mask-box-2-image",
            "tri3d-interaction-canny",
            "tri3d-levindabhi-cloth-seg",
            "tri3d-load-pose-json",
            "tri3d-load_AEMatter_Model",
            "tri3d-luminosity-match",
            "tri3d-main_transparent_background",
            "tri3d-photoroom-bgremove-api",
            "tri3d-pose-adaption",
            "tri3d-pose-to-image",
            "tri3d-position-hands",
            "tri3d-position-parts-batch",
            "tri3d-position-pascal-parts-batch",
            "tri3d-recolor-mask",
            "tri3d-recolor-mask-LAB_space",
            "tri3d-recolor-mask-LAB_space_manual",
            "tri3d-recolor-mask-RGB_space",
            "tri3d-renormalize_array",
            "tri3d-run_AEMatter_inference",
            "tri3d-scaled-paste",
            "tri3d-scaled-paste_unsafe",
            "tri3d-simple_bg_swap",
            "tri3d-simple_rescale_histogram",
            "tri3d-skin-feathered-padded-mask",
            "tri3d-swap-pixels",
            "tri3d_H_Stack_Images",
            "tri3d_SaveImage_absolute",
            "tri3d_SaveText_absolute",
            "tri3d_SmartBox",
            "tri3d_Wait_And_Read_File",
            "tri3d_extract_facer_mask",
            "tri3d_fill_mask",
            "tri3d_is_only_trouser",
            "tri3d_position_pose_part"
        ],
        {
            "title_aux": "tri3d-comfyui-nodes"
        }
    ],
    "https://github.com/TTPlanetPig/Comfyui_Hunyuan3D": [
        [
            "GifImageViewerNode",
            "Hunyuan3DNode",
            "SquareImage"
        ],
        {
            "title_aux": "Comfyui_Hunyuan3D"
        }
    ],
    "https://github.com/TTPlanetPig/Comfyui_JC2": [
        [
            "ExtraOptionsNode",
            "JoyCaption2",
            "JoyCaption2_simple"
        ],
        {
            "title_aux": "Comfyui_JC2"
        }
    ],
    "https://github.com/TTPlanetPig/Comfyui_Object_Migration": [
        [
            "TTP_Expand_And_Mask",
            "TTP_text_mix"
        ],
        {
            "title_aux": "Clothing Migration Kit"
        }
    ],
    "https://github.com/TTPlanetPig/Comfyui_TTP_CN_Preprocessor": [
        [
            "TTPlanet_Tile_Preprocessor_GF",
            "TTPlanet_Tile_Preprocessor_Simple",
            "TTPlanet_Tile_Preprocessor_cufoff",
            "TTPlanet_inpainting_Preprecessor"
        ],
        {
            "title_aux": "for comfyui image proprocessor"
        }
    ],
    "https://github.com/TTPlanetPig/Comfyui_TTP_Toolset": [
        [
            "TTP_CoordinateSplitter",
            "TTP_Expand_And_Mask",
            "TTP_Image_Assy",
            "TTP_Image_Tile_Batch",
            "TTP_Tile_image_size",
            "TTP_condsetarea_merge",
            "TTP_condsetarea_merge_test",
            "TTP_condtobatch",
            "TTP_text_mix",
            "TTPlanet_Tile_Preprocessor_Simple",
            "TeaCacheHunyuanVideoSampler"
        ],
        {
            "title_aux": "Comfyui_TTP_Toolset"
        }
    ],
    "https://github.com/TW-CUI/TW-CUI-Util": [
        [
            "TWCUI_Util_CommonSDXLResolutions",
            "TWCUI_Util_FloatLiteral",
            "TWCUI_Util_GenerationParameters",
            "TWCUI_Util_GenerationPrompts",
            "TWCUI_Util_IntLiteral",
            "TWCUI_Util_ModelVAELORALoader",
            "TWCUI_Util_ModelVAELoader",
            "TWCUI_Util_MultilineStringLiteral",
            "TWCUI_Util_SaveImage",
            "TWCUI_Util_SaveImageAdvanced",
            "TWCUI_Util_StringLiteral"
        ],
        {
            "title_aux": "TW-CUI-Util"
        }
    ],
    "https://github.com/TZOOTZ/ComfyUI-TZOOTZ_VHS": [
        [
            "TZOOTZ_VHSNode"
        ],
        {
            "title_aux": "TZOOTZ VHS Effect Node"
        }
    ],
    "https://github.com/TaiTair/comfyui-simswap": [
        [
            "Simswap",
            "SimswapBuildFaceModel",
            "SimswapFaceSwapOpt",
            "SimswapImageDublicator",
            "SimswapLoadFaceModel",
            "SimswapMaskHelper",
            "SimswapOptions",
            "SimswapRestoreFace",
            "SimswapSaveFaceModel"
        ],
        {
            "title_aux": "Simswap Node for ComfyUI"
        }
    ],
    "https://github.com/Taremin/comfyui-prompt-extranetworks": [
        [
            "PromptExtraNetworks"
        ],
        {
            "title_aux": "ComfyUI Prompt ExtraNetworks"
        }
    ],
    "https://github.com/Taremin/comfyui-string-tools": [
        [
            "StringToolsBalancedChoice",
            "StringToolsConcat",
            "StringToolsRandomChoice",
            "StringToolsString",
            "StringToolsText"
        ],
        {
            "title_aux": "ComfyUI String Tools"
        }
    ],
    "https://github.com/Taremin/webui-monaco-prompt": [
        [
            "WebuiMonacoPromptFind",
            "WebuiMonacoPromptReplace"
        ],
        {
            "title_aux": "WebUI Monaco Prompt"
        }
    ],
    "https://github.com/TeaCrab/ComfyUI-TeaNodes": [
        [
            "TC_ColorFill",
            "TC_CropTo",
            "TC_EqualizeCLAHE",
            "TC_ImageResize",
            "TC_ImageScale",
            "TC_KorniaGamma",
            "TC_RandomColorFill",
            "TC_SizeApproximation"
        ],
        {
            "title_aux": "ComfyUI-TeaNodes"
        }
    ],
    "https://github.com/TechnoByteJS/ComfyUI-TechNodes": [
        [
            "ClipQuant",
            "MBW Layers String",
            "ModelQuant",
            "SD1 MBW Layers",
            "SD1 MBW Layers Binary",
            "SDNext Merge",
            "SDXL MBW Layers",
            "SDXL MBW Layers Binary",
            "VAE Merge",
            "VAEQuant",
            "VAERepeat"
        ],
        {
            "title_aux": "TechNodes"
        }
    ],
    "https://github.com/TemryL/ComfyS3": [
        [
            "DownloadFileS3",
            "LoadImageS3",
            "SaveImageS3",
            "SaveVideoFilesS3",
            "UploadFileS3"
        ],
        {
            "title_aux": "ComfyS3"
        }
    ],
    "https://github.com/TemryL/ComfyUI-IDM-VTON": [
        [
            "IDM-VTON",
            "PipelineLoader"
        ],
        {
            "title_aux": "ComfyUI-IDM-VTON [WIP]"
        }
    ],
    "https://github.com/TencentQQGYLab/ComfyUI-ELLA": [
        [
            "CombineClipEllaEmbeds",
            "ConcatConditionEllaEmbeds",
            "ConditionToEllaEmbeds",
            "ELLALoader",
            "EllaApply",
            "EllaCombineEmbeds",
            "EllaEncode",
            "EllaTextEncode",
            "SetEllaTimesteps",
            "T5TextEncode #ELLA",
            "T5TextEncoderLoader #ELLA"
        ],
        {
            "title_aux": "ComfyUI-ELLA"
        }
    ],
    "https://github.com/TheBarret/ZSuite": [
        [
            "ZSuite: Prompter",
            "ZSuite: RF Noise",
            "ZSuite: SeedMod"
        ],
        {
            "title_aux": "ZSuite"
        }
    ],
    "https://github.com/TheBill2001/comfyui-upscale-by-model": [
        [
            "UpscaleImageByUsingModel"
        ],
        {
            "author": "Tr\u1ea7n Nam Tu\u1ea5n",
            "description": "This custom node allow upscaling an image by a factor using a model.",
            "nickname": "Upscale Image By (Using Model)",
            "title": "Upscale Image By (Using Model)",
            "title_aux": "comfyui-upscale-by-model"
        }
    ],
    "https://github.com/TheMistoAI/ComfyUI-Anyline": [
        [
            "AnyLinePreprocessor"
        ],
        {
            "title_aux": "Anyline"
        }
    ],
    "https://github.com/ThereforeGames/ComfyUI-Unprompted": [
        [
            "Unprompted",
            "UnpromptedSetRack"
        ],
        {
            "title_aux": "ComfyUI-Unprompted"
        }
    ],
    "https://github.com/TinyTerra/ComfyUI_tinyterraNodes": [
        [
            "ttN KSampler_v2",
            "ttN advPlot combo",
            "ttN advPlot images",
            "ttN advPlot range",
            "ttN advPlot string",
            "ttN advanced xyPlot",
            "ttN compareInput",
            "ttN concat",
            "ttN conditioning",
            "ttN debugInput",
            "ttN float",
            "ttN hiresfixScale",
            "ttN imageOutput",
            "ttN imageREMBG",
            "ttN int",
            "ttN multiModelMerge",
            "ttN pipe2BASIC",
            "ttN pipe2DETAILER",
            "ttN pipeEDIT",
            "ttN pipeEncodeConcat",
            "ttN pipeIN",
            "ttN pipeKSampler",
            "ttN pipeKSamplerAdvanced",
            "ttN pipeKSamplerAdvanced_v2",
            "ttN pipeKSamplerSDXL",
            "ttN pipeKSamplerSDXL_v2",
            "ttN pipeKSampler_v2",
            "ttN pipeLoader",
            "ttN pipeLoaderSDXL",
            "ttN pipeLoaderSDXL_v2",
            "ttN pipeLoader_v2",
            "ttN pipeLoraStack",
            "ttN pipeOUT",
            "ttN seed",
            "ttN text",
            "ttN text3BOX_3WAYconcat",
            "ttN text7BOX_concat",
            "ttN textCycleLine",
            "ttN textDebug",
            "ttN textOutput",
            "ttN tinyLoader",
            "ttN xyPlot"
        ],
        {
            "author": "tinyterra",
            "description": "This extension offers extensive xyPlot, various pipe nodes, fullscreen image viewer based on node history, dynamic widgets, interface customization, and more.",
            "nickname": "\ud83c\udf0f",
            "nodename_pattern": "^ttN ",
            "title": "tinyterraNodes",
            "title_aux": "ComfyUI_tinyterraNodes"
        }
    ],
    "https://github.com/Tlant/ComfyUI-OllamaPromptsGeneratorTlant": [
        [
            "LoadRandomTxtFileTlant",
            "OllamaPromptsGeneratorTlant"
        ],
        {
            "title_aux": "ComfyUI-OllamaPromptsGeneratorTlant"
        }
    ],
    "https://github.com/Trgtuan10/ComfyUI_YoloSegment_Mask": [
        [
            "Object Mask"
        ],
        {
            "title_aux": "ComfyUI_YoloSegment_Mask"
        }
    ],
    "https://github.com/TripleHeadedMonkey/ComfyUI_MileHighStyler": [
        [
            "menus"
        ],
        {
            "title_aux": "ComfyUI_MileHighStyler"
        }
    ],
    "https://github.com/Tropfchen/ComfyUI-Embedding_Picker": [
        [
            "EmbeddingPicker"
        ],
        {
            "title_aux": "Embedding Picker"
        }
    ],
    "https://github.com/Tropfchen/ComfyUI-yaResolutionSelector": [
        [
            "YARS",
            "YARSAdv"
        ],
        {
            "title_aux": "YARS: Yet Another Resolution Selector"
        }
    ],
    "https://github.com/Trung0246/ComfyUI-0246": [
        [
            "0246.Beautify",
            "0246.BoxRange",
            "0246.CastReroute",
            "0246.Cloud",
            "0246.Count",
            "0246.Highway",
            "0246.HighwayBatch",
            "0246.Hold",
            "0246.Hub",
            "0246.Junction",
            "0246.JunctionBatch",
            "0246.Loop",
            "0246.Merge",
            "0246.Meta",
            "0246.RandomInt",
            "0246.Script",
            "0246.ScriptNode",
            "0246.ScriptPile",
            "0246.ScriptRule",
            "0246.Stringify",
            "0246.Switch",
            "0246.Tag"
        ],
        {
            "author": "Trung0246",
            "description": "Random nodes for ComfyUI I made to solve my struggle with ComfyUI (ex: pipe, process). Have varying quality.",
            "nickname": "ComfyUI-0246",
            "title": "ComfyUI-0246",
            "title_aux": "ComfyUI-0246"
        }
    ],
    "https://github.com/Ttl/ComfyUi_NNLatentUpscale": [
        [
            "NNLatentUpscale"
        ],
        {
            "preemptions": [
                "NNLatentUpscale"
            ],
            "title_aux": "ComfyUI Neural Network Latent Upscale"
        }
    ],
    "https://github.com/TylerZoro/SD3-Scaling": [
        [
            "SD3ImageScaleToTotalPixels"
        ],
        {
            "title_aux": "SD3-Scaling"
        }
    ],
    "https://github.com/Umikaze-job/select_folder_path_easy": [
        [
            "SelectFolderPathEasy"
        ],
        {
            "title_aux": "select_folder_path_easy"
        }
    ],
    "https://github.com/VAST-AI-Research/ComfyUI-Tripo": [
        [
            "TripoAPIDraft",
            "TripoAnimateRetargetNode",
            "TripoAnimateRigNode",
            "TripoConvertNode",
            "TripoGLBViewer",
            "TripoRefineModel",
            "TripoTextureModel"
        ],
        {
            "title_aux": "Tripo for ComfyUI"
        }
    ],
    "https://github.com/Vaibhavs10/ComfyUI-DDUF": [
        [
            "DDUFLoader",
            "DiffusersModelMakeup",
            "DiffusersPipelineLoader",
            "DiffusersSchedulerLoader",
            "DiffusersSimpleSampler"
        ],
        {
            "title_aux": "ComfyUI-DDUF"
        }
    ],
    "https://github.com/VangengLab/ComfyUI-LivePortrait_v2": [
        [
            "LivePortraitProcess_animal"
        ],
        {
            "title_aux": "ComfyUI-LivePortrait_v2"
        }
    ],
    "https://github.com/VangengLab/ComfyUI-LivePortrait_v3": [
        [
            "LivePortraitp2p"
        ],
        {
            "title_aux": "ComfyUI-LivePortrait_v3"
        }
    ],
    "https://github.com/VertexStudio/roblox-comfyui-nodes": [
        [
            "FirstLetterNode",
            "FlowNodes",
            "MirrorEffectNode",
            "SaveImageNode",
            "ScaleImageNode",
            "SwitchImageNode",
            "SwitchTextNode",
            "TextToImageNode"
        ],
        {
            "title_aux": "roblox-comfyui-nodes"
        }
    ],
    "https://github.com/VikramxD/VEnhancer-ComfyUI-Wrapper": [
        [
            "MultiGPUInference",
            "MultiGPUVEnhancerLoader",
            "SingleGPUInference",
            "SingleGPUVEnhancerLoader",
            "VideoLoader",
            "VideoSaver"
        ],
        {
            "title_aux": "VEnhancer ComfyUI Extension"
        }
    ],
    "https://github.com/Visionatrix/ComfyUI-Visionatrix": [
        [
            "VixUiCheckbox",
            "VixUiCheckboxLogic",
            "VixUiList",
            "VixUiListLogic",
            "VixUiPrompt",
            "VixUiRangeFloat",
            "VixUiRangeInt",
            "VixUiRangeScaleFloat",
            "VixUiWorkflowMetadata"
        ],
        {
            "title_aux": "ComfyUI-Visionatrix"
        }
    ],
    "https://github.com/VrchStudio/comfyui-web-viewer": [
        [
            "VrchAnyOSCControlNode",
            "VrchAudioGenresNode",
            "VrchAudioRecorderNode",
            "VrchAudioSaverNode",
            "VrchBooleanKeyControlNode",
            "VrchChannelOSCControlNode",
            "VrchChannelX4OSCControlNode",
            "VrchDelayOSCControlNode",
            "VrchFloatKeyControlNode",
            "VrchFloatOSCControlNode",
            "VrchImageFlipBookWebViewerNode",
            "VrchImageSaverNode",
            "VrchImageSwitchOSCControlNode",
            "VrchImageWebViewerNode",
            "VrchInstantQueueKeyControlNode",
            "VrchIntKeyControlNode",
            "VrchIntOSCControlNode",
            "VrchJsonUrlLoaderNode",
            "VrchOSCControlSettingsNode",
            "VrchSwitchOSCControlNode",
            "VrchTextConcatOSCControlNode",
            "VrchTextKeyControlNode",
            "VrchTextSwitchOSCControlNode",
            "VrchVideoWebViewerNode",
            "VrchWebViewerNode",
            "VrchXYOSCControlNode",
            "VrchXYZOSCControlNode"
        ],
        {
            "title_aux": "ComfyUI Web Viewer"
        }
    ],
    "https://github.com/VykosX/ControlFlowUtils": [
        [
            "Cycle",
            "CycleContinue",
            "CycleEnd",
            "DataMonitor",
            "FallbackAnyBatch",
            "FallbackImagePreviewer",
            "FolderSearch",
            "GarbageCollector",
            "HaltExecution",
            "IfConditionSelector",
            "ImageResolutionAdjust",
            "InvertCondition",
            "LoopClose",
            "LoopOpen",
            "LoraSelector",
            "MemoryStorage",
            "ModelSelector",
            "NullInput",
            "NullOutput",
            "ReadTextFile",
            "SaveTextFile",
            "SimpleToggle",
            "StringOperation",
            "UniversalSwitch",
            "UnloadModels",
            "VAESelector",
            "Wait"
        ],
        {
            "title_aux": "ControlFlowUtils"
        }
    ],
    "https://github.com/WASasquatch/ComfyUI_Preset_Merger": [
        [
            "Preset_Model_Merge"
        ],
        {
            "title_aux": "ComfyUI Preset Merger"
        }
    ],
    "https://github.com/WASasquatch/FreeU_Advanced": [
        [
            "FreeU (Advanced)",
            "FreeU_V2 (Advanced)"
        ],
        {
            "title_aux": "FreeU_Advanced"
        }
    ],
    "https://github.com/WASasquatch/PPF_Noise_ComfyUI": [
        [
            "Blend Latents (PPF Noise)",
            "Cross-Hatch Power Fractal (PPF Noise)",
            "Images as Latents (PPF Noise)",
            "Perlin Power Fractal Latent (PPF Noise)"
        ],
        {
            "title_aux": "PPF_Noise_ComfyUI"
        }
    ],
    "https://github.com/WASasquatch/PowerNoiseSuite": [
        [
            "Blend Latents (PPF Noise)",
            "Cross-Hatch Power Fractal (PPF Noise)",
            "Cross-Hatch Power Fractal Settings (PPF Noise)",
            "Images as Latents (PPF Noise)",
            "Latent Adjustment (PPF Noise)",
            "Latents to CPU (PPF Noise)",
            "Linear Cross-Hatch Power Fractal (PPF Noise)",
            "Perlin Power Fractal Latent (PPF Noise)",
            "Perlin Power Fractal Settings (PPF Noise)",
            "Power KSampler Advanced (PPF Noise)",
            "Power-Law Noise (PPF Noise)"
        ],
        {
            "title_aux": "Power Noise Suite for ComfyUI"
        }
    ],
    "https://github.com/WASasquatch/WAS_Extras": [
        [
            "BLVAEEncode",
            "CLIPTextEncodeList",
            "CLIPTextEncodeSequence2",
            "ConditioningBlend",
            "DebugInput",
            "KSamplerSeq",
            "KSamplerSeq2",
            "VAEEncodeForInpaint (WAS)",
            "VividSharpen"
        ],
        {
            "title_aux": "WAS_Extras"
        }
    ],
    "https://github.com/WASasquatch/was-node-suite-comfyui": [
        [
            "BLIP Analyze Image",
            "BLIP Model Loader",
            "Blend Latents",
            "Boolean To Text",
            "Bounded Image Blend",
            "Bounded Image Blend with Mask",
            "Bounded Image Crop",
            "Bounded Image Crop with Mask",
            "Bus Node",
            "CLIP Input Switch",
            "CLIP Vision Input Switch",
            "CLIPSEG2",
            "CLIPSeg Batch Masking",
            "CLIPSeg Masking",
            "CLIPSeg Model Loader",
            "CLIPTextEncode (BlenderNeko Advanced + NSP)",
            "CLIPTextEncode (NSP)",
            "Cache Node",
            "Checkpoint Loader",
            "Checkpoint Loader (Simple)",
            "Conditioning Input Switch",
            "Constant Number",
            "Control Net Model Input Switch",
            "Convert Masks to Images",
            "Create Grid Image",
            "Create Grid Image from Batch",
            "Create Morph Image",
            "Create Morph Image from Path",
            "Create Video from Path",
            "Debug Number to Console",
            "Dictionary to Console",
            "Diffusers Hub Model Down-Loader",
            "Diffusers Model Loader",
            "Export API",
            "HSL to Hex",
            "Hex to HSL",
            "Image Analyze",
            "Image Aspect Ratio",
            "Image Batch",
            "Image Blank",
            "Image Blend",
            "Image Blend by Mask",
            "Image Blending Mode",
            "Image Bloom Filter",
            "Image Bounds",
            "Image Bounds to Console",
            "Image Canny Filter",
            "Image Chromatic Aberration",
            "Image Color Palette",
            "Image Crop Face",
            "Image Crop Location",
            "Image Crop Square Location",
            "Image Displacement Warp",
            "Image Dragan Photography Filter",
            "Image Edge Detection Filter",
            "Image Film Grain",
            "Image Filter Adjustments",
            "Image Flip",
            "Image Generate Gradient",
            "Image Gradient Map",
            "Image High Pass Filter",
            "Image History Loader",
            "Image Input Switch",
            "Image Levels Adjustment",
            "Image Load",
            "Image Lucy Sharpen",
            "Image Median Filter",
            "Image Mix RGB Channels",
            "Image Monitor Effects Filter",
            "Image Nova Filter",
            "Image Padding",
            "Image Paste Crop",
            "Image Paste Crop by Location",
            "Image Paste Face",
            "Image Perlin Noise",
            "Image Perlin Power Fractal",
            "Image Pixelate",
            "Image Power Noise",
            "Image Rembg (Remove Background)",
            "Image Remove Background (Alpha)",
            "Image Remove Color",
            "Image Resize",
            "Image Rotate",
            "Image Rotate Hue",
            "Image SSAO (Ambient Occlusion)",
            "Image SSDO (Direct Occlusion)",
            "Image Save",
            "Image Seamless Texture",
            "Image Select Channel",
            "Image Select Color",
            "Image Send HTTP",
            "Image Shadows and Highlights",
            "Image Size to Number",
            "Image Stitch",
            "Image Style Filter",
            "Image Threshold",
            "Image Tiled",
            "Image Transpose",
            "Image Voronoi Noise Filter",
            "Image fDOF Filter",
            "Image to Latent Mask",
            "Image to Noise",
            "Image to Seed",
            "Images to Linear",
            "Images to RGB",
            "Inset Image Bounds",
            "Integer place counter",
            "KSampler (WAS)",
            "KSampler Cycle",
            "Latent Batch",
            "Latent Input Switch",
            "Latent Noise Injection",
            "Latent Size to Number",
            "Latent Upscale by Factor (WAS)",
            "Load Cache",
            "Load Image Batch",
            "Load Lora",
            "Load Text File",
            "Logic Boolean",
            "Logic Boolean Primitive",
            "Logic Comparison AND",
            "Logic Comparison OR",
            "Logic Comparison XOR",
            "Logic NOT",
            "Lora Input Switch",
            "Lora Loader",
            "Mask Arbitrary Region",
            "Mask Batch",
            "Mask Batch to Mask",
            "Mask Ceiling Region",
            "Mask Crop Dominant Region",
            "Mask Crop Minority Region",
            "Mask Crop Region",
            "Mask Dilate Region",
            "Mask Dominant Region",
            "Mask Erode Region",
            "Mask Fill Holes",
            "Mask Floor Region",
            "Mask Gaussian Region",
            "Mask Invert",
            "Mask Minority Region",
            "Mask Paste Region",
            "Mask Rect Area",
            "Mask Rect Area (Advanced)",
            "Mask Smooth Region",
            "Mask Threshold Region",
            "Masks Add",
            "Masks Combine Batch",
            "Masks Combine Regions",
            "Masks Subtract",
            "MiDaS Depth Approximation",
            "MiDaS Mask Image",
            "MiDaS Model Loader",
            "Model Input Switch",
            "Number Counter",
            "Number Input Condition",
            "Number Input Switch",
            "Number Multiple Of",
            "Number Operation",
            "Number PI",
            "Number to Float",
            "Number to Int",
            "Number to Seed",
            "Number to String",
            "Number to Text",
            "Prompt Multiple Styles Selector",
            "Prompt Styles Selector",
            "Random Number",
            "SAM Image Mask",
            "SAM Model Loader",
            "SAM Parameters",
            "SAM Parameters Combine",
            "Samples Passthrough (Stat System)",
            "Save Text File",
            "Seed",
            "String to Text",
            "Tensor Batch to Image",
            "Text Add Token by Input",
            "Text Add Tokens",
            "Text Compare",
            "Text Concatenate",
            "Text Contains",
            "Text Dictionary Convert",
            "Text Dictionary Get",
            "Text Dictionary Keys",
            "Text Dictionary New",
            "Text Dictionary To Text",
            "Text Dictionary Update",
            "Text File History Loader",
            "Text Find",
            "Text Find and Replace",
            "Text Find and Replace Input",
            "Text Find and Replace by Dictionary",
            "Text Input Switch",
            "Text List",
            "Text List Concatenate",
            "Text List to Text",
            "Text Load Line From File",
            "Text Multiline",
            "Text Multiline (Code Compatible)",
            "Text Parse A1111 Embeddings",
            "Text Parse Noodle Soup Prompts",
            "Text Parse Tokens",
            "Text Random Line",
            "Text Random Prompt",
            "Text Shuffle",
            "Text Sort",
            "Text String",
            "Text String Truncate",
            "Text to Conditioning",
            "Text to Console",
            "Text to Number",
            "Text to String",
            "True Random.org Number Generator",
            "Upscale Model Loader",
            "Upscale Model Switch",
            "VAE Input Switch",
            "Video Dump Frames",
            "Write to GIF",
            "Write to Video",
            "unCLIP Checkpoint Loader"
        ],
        {
            "title_aux": "WAS Node Suite"
        }
    ],
    "https://github.com/WX-NPS1598/ComfyUI-Auto_Crop_By_NPS": [
        [
            "AutoCropByNPS"
        ],
        {
            "title_aux": "Auto Crop By NPS"
        }
    ],
    "https://github.com/WaddingtonHoldings/ComfyUI-InstaSD": [
        [
            "InstaCBoolean",
            "InstaCFloat",
            "InstaCInteger",
            "InstaCLoadImageFromS3",
            "InstaCLoraLoader",
            "InstaCSaveImageToS3",
            "InstaCSeed",
            "InstaCText",
            "InstaCTextML",
            "InstaPromptMultipleStyleSelector",
            "InstaPromptStyleSelector",
            "LoadVideo",
            "PreViewVideo"
        ],
        {
            "title_aux": "InstaSD nodes for ComfyUI"
        }
    ],
    "https://github.com/WainWong/ComfyUI-Loop-image": [
        [
            "CyberEve_BatchImageLoopClose",
            "CyberEve_BatchImageLoopOpen",
            "CyberEve_LoopIndexSwitch",
            "CyberEve_MaskMerge",
            "CyberEve_MaskSegmentation",
            "CyberEve_SingleImageLoopClose",
            "CyberEve_SingleImageLoopOpen"
        ],
        {
            "title_aux": "ComfyUI-Loop-image"
        }
    ],
    "https://github.com/Wakfull33/ComfyUI-SaveImageCivitAI": [
        [
            "SaveCivitai"
        ],
        {
            "title_aux": "ComfyUI-SaveImageCivitAI"
        }
    ],
    "https://github.com/WebDev9000/WebDev9000-Nodes": [
        [
            "IgnoreBraces",
            "SettingsSwitch"
        ],
        {
            "title_aux": "WebDev9000-Nodes"
        }
    ],
    "https://github.com/Wenaka2004/ComfyUI-TagClassifier": [
        [
            "LLMProcessingNode"
        ],
        {
            "title_aux": "ComfyUI-TagClassifier"
        }
    ],
    "https://github.com/Wicloz/ComfyUI-Simply-Nodes": [
        [
            "WF_ConditionalLoraLoader",
            "WF_FixupPixelArt",
            "WF_MultilineText",
            "WF_RandomStyle",
            "WF_ResolutionSDXL",
            "WF_TextFlow"
        ],
        {
            "title_aux": "ComfyUI Simply Nodes"
        }
    ],
    "https://github.com/X-T-E-R/ComfyUI-EasyCivitai-XTNodes": [
        [
            "CheckpointLoaderSimpleWithPreviews",
            "CivitaiCheckpointLoaderSimple",
            "CivitaiLoraLoader",
            "CivitaiLoraLoaderStacked",
            "CivitaiLoraLoaderStackedAdvanced",
            "LoraLoaderStackedAdvancedWithPreviews",
            "LoraLoaderStackedWithPreviews",
            "LoraLoaderWithPreviews",
            "XTNodesCleanPrompt",
            "XTNodesPromptConcatenate"
        ],
        {
            "title_aux": "ComfyUI Easy Civitai (XTNodes)"
        }
    ],
    "https://github.com/XLabs-AI/x-flux-comfyui": [
        [
            "ApplyAdvancedFluxControlNet",
            "ApplyAdvancedFluxIPAdapter",
            "ApplyFluxControlNet",
            "ApplyFluxIPAdapter",
            "FluxLoraLoader",
            "LoadFluxControlNet",
            "LoadFluxIPAdapter",
            "XlabsSampler"
        ],
        {
            "title_aux": "x-flux-comfyui"
        }
    ],
    "https://github.com/Xclbr7/ComfyUI-Merlin": [
        [
            "GeminiPromptExpander",
            "Magic Photo Prompter \ud83e\ude84"
        ],
        {
            "title_aux": "ComfyUI-Merlin: Magic Photo Prompter"
        }
    ],
    "https://github.com/XmYx/deforum-comfy-nodes": [
        [
            "DeforumAddNoiseNode",
            "DeforumAnimParamsNode",
            "DeforumAreaPromptNode",
            "DeforumBaseParamsNode",
            "DeforumCacheLatentNode",
            "DeforumCadenceNode",
            "DeforumCadenceParamsNode",
            "DeforumColorMatchNode",
            "DeforumColorParamsNode",
            "DeforumConditioningBlendNode",
            "DeforumDepthParamsNode",
            "DeforumDiffusionParamsNode",
            "DeforumFILMInterpolationNode",
            "DeforumFrameWarpNode",
            "DeforumGetCachedLatentNode",
            "DeforumHybridMotionNode",
            "DeforumHybridParamsNode",
            "DeforumHybridScheduleNode",
            "DeforumIteratorNode",
            "DeforumKSampler",
            "DeforumLoadVideo",
            "DeforumNoiseParamsNode",
            "DeforumPromptNode",
            "DeforumSeedNode",
            "DeforumSetVAEDownscaleRatioNode",
            "DeforumSimpleInterpolationNode",
            "DeforumSingleSampleNode",
            "DeforumTranslationParamsNode",
            "DeforumVideoSaveNode"
        ],
        {
            "title_aux": "Deforum Nodes"
        }
    ],
    "https://github.com/Xyem/Xycuno-Oobabooga": [
        [
            "Oobabooga"
        ],
        {
            "title_aux": "Xycuno Oobabooga"
        }
    ],
    "https://github.com/YMC-GitHub/ymc-node-suite-comfyui": [
        [
            "canvas-util-cal-size",
            "conditioning-util-input-switch",
            "cutoff-region-util",
            "hks-util-cal-denoise-step",
            "img-util-get-image-size",
            "img-util-switch-input-image",
            "io-image-save",
            "io-text-save",
            "io-util-file-list-get",
            "io-util-file-list-get-text",
            "number-util-random-num",
            "pipe-util-to-basic-pipe",
            "region-util-get-by-center-and-size",
            "region-util-get-by-lt",
            "region-util-get-crop-location-from-center-size-text",
            "region-util-get-pad-out-location-by-size",
            "text-preset-colors",
            "text-util-join-text",
            "text-util-loop-text",
            "text-util-path-list",
            "text-util-prompt-add-prompt",
            "text-util-prompt-adv-dup",
            "text-util-prompt-adv-search",
            "text-util-prompt-del",
            "text-util-prompt-dup",
            "text-util-prompt-join",
            "text-util-prompt-search",
            "text-util-prompt-shuffle",
            "text-util-prompt-std",
            "text-util-prompt-unweight",
            "text-util-random-text",
            "text-util-search-text",
            "text-util-show-text",
            "text-util-switch-text",
            "xyz-util-txt-to-int"
        ],
        {
            "title_aux": "ymc-node-suite-comfyui"
        }
    ],
    "https://github.com/YOUR-WORST-TACO/ComfyUI-TacoNodes": [
        [
            "Example",
            "TacoAnimatedLoader",
            "TacoGifMaker",
            "TacoImg2ImgAnimatedLoader",
            "TacoImg2ImgAnimatedProcessor",
            "TacoLatent"
        ],
        {
            "title_aux": "ComfyUI-TacoNodes"
        }
    ],
    "https://github.com/Yanick112/ComfyUI-ToSVG": [
        [
            "ConvertRasterToVectorBW",
            "ConvertRasterToVectorColor",
            "ConvertVectorToRaster",
            "SaveSVG"
        ],
        {
            "title_aux": "ComfyUI-ToSVG"
        }
    ],
    "https://github.com/YarvixPA/ComfyUI-NeuralMedia": [
        [
            "ApplyControlNet",
            "CLIPVisionAndStyleApply",
            "InpaintConditioningNode",
            "LoadImagesFromFolderNode",
            "MultiClipVisionAndStyleApply",
            "MultiControlnet",
            "MultiControlnetApply",
            "MultiControlnetUnion",
            "RemoveBackgroundNode",
            "SDXLTextEncoderSimpleNode",
            "SaveCaptionsImages",
            "TextFieldNode",
            "TileCheckpointPatchNode",
            "UpscaleImageWithModel",
            "VTracerImageVectorizerNode"
        ],
        {
            "title_aux": "ComfyUI-NeuralMedia"
        }
    ],
    "https://github.com/YinBailiang/MergeBlockWeighted_fo_ComfyUI": [
        [
            "MergeBlockWeighted"
        ],
        {
            "title_aux": "MergeBlockWeighted_fo_ComfyUI"
        }
    ],
    "https://github.com/Yuan-ManX/ComfyUI-LLaMA-Mesh": [
        [
            "Apply Gradient Color",
            "Chat LLaMa Mesh",
            "Visualize Mesh"
        ],
        {
            "title_aux": "ComfyUI-LLaMA-Mesh"
        }
    ],
    "https://github.com/Yuan-ManX/ComfyUI-SoundHub": [
        [
            "Load Audio",
            "Preview Audio",
            "Save Audio"
        ],
        {
            "title_aux": "ComfyUI-SoundHub"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-APISR": [
        [
            "APISR_Lterative_Zho",
            "APISR_ModelLoader_Zho",
            "APISR_Zho"
        ],
        {
            "title_aux": "APISR IN COMFYUI"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-Animated-optical-illusions": [
        [
            "AOI_Processing_Zho"
        ],
        {
            "title_aux": "ComfyUI-Animated-optical-illusions"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-ArtGallery": [
        [
            "ArtGallery_Zho",
            "ArtistsImage_Zho",
            "CamerasImage_Zho",
            "FilmsImage_Zho",
            "MovementsImage_Zho",
            "StylesImage_Zho"
        ],
        {
            "title_aux": "ComfyUI-ArtGallery"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-BRIA_AI-RMBG": [
        [
            "BRIA_RMBG_ModelLoader_Zho",
            "BRIA_RMBG_Zho"
        ],
        {
            "title_aux": "ComfyUI-BRIA_AI-RMBG"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-DepthFM": [
        [
            "DepthFM_Literative_Zho",
            "DepthFM_ModelLoader_Zho",
            "DepthFM_Zho"
        ],
        {
            "title_aux": "DepthFM IN COMFYUI"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-Gemini": [
        [
            "ConcatText_Zho",
            "DisplayText_Zho",
            "Gemini_15P_API_S_Advance_Zho",
            "Gemini_15P_API_S_Chat_Advance_Zho",
            "Gemini_API_Chat_Zho",
            "Gemini_API_S_Chat_Zho",
            "Gemini_API_S_Vsion_ImgURL_Zho",
            "Gemini_API_S_Zho",
            "Gemini_API_Vsion_ImgURL_Zho",
            "Gemini_API_Zho",
            "Gemini_FileUpload_API_S_Zho",
            "Gemini_File_API_S_Zho"
        ],
        {
            "title_aux": "ComfyUI-Gemini"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-InstantID": [
        [
            "IDBaseModelLoader_fromhub",
            "IDBaseModelLoader_local",
            "IDControlNetLoader",
            "IDGenerationNode",
            "ID_Prompt_Styler",
            "InsightFaceLoader_Zho",
            "Ipadapter_instantidLoader"
        ],
        {
            "title_aux": "ComfyUI-InstantID"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-Phi-3-mini": [
        [
            "Phi3mini_4k_Chat_Zho",
            "Phi3mini_4k_ModelLoader_Zho",
            "Phi3mini_4k_Zho"
        ],
        {
            "title_aux": "Phi-3-mini in ComfyUI"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-PhotoMaker-ZHO": [
        [
            "BaseModel_Loader_fromhub",
            "BaseModel_Loader_local",
            "LoRALoader",
            "NEW_PhotoMaker_Generation",
            "PhotoMakerAdapter_Loader_fromhub",
            "PhotoMakerAdapter_Loader_local",
            "PhotoMaker_Generation",
            "Prompt_Styler",
            "Ref_Image_Preprocessing"
        ],
        {
            "title_aux": "ComfyUI PhotoMaker (ZHO)"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-PixArt-alpha-Diffusers": [
        [
            "PA_BaseModelLoader_fromhub_Zho",
            "PA_Generation_Zho",
            "PA_Styler_Zho"
        ],
        {
            "title_aux": "ComfyUI-PixArt-alpha-Diffusers"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-Q-Align": [
        [
            "QAlign_Zho"
        ],
        {
            "title_aux": "ComfyUI-Q-Align"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-Qwen": [
        [
            "Qwen2_Chat_Zho",
            "Qwen2_ModelLoader_Zho",
            "Qwen2_Zho"
        ],
        {
            "title_aux": "Qwen-2.5 in ComfyUI"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-Qwen-VL-API": [
        [
            "QWenVL_API_S_Multi_Zho",
            "QWenVL_API_S_Zho"
        ],
        {
            "title_aux": "ComfyUI-Qwen-VL-API"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-SVD-ZHO": [
        [
            "SVD_Aspect_Ratio_Zho",
            "SVD_Steps_MotionStrength_Seed_Zho",
            "SVD_Styler_Zho"
        ],
        {
            "title_aux": "ComfyUI-SVD-ZHO (WIP)"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-SegMoE": [
        [
            "SMoE_Generation_Zho",
            "SMoE_ModelLoader_Zho"
        ],
        {
            "title_aux": "ComfyUI SegMoE"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-Text_Image-Composite": [
        [
            "AlphaChanelAddByMask",
            "ImageCompositeBy_BG_Zho",
            "ImageCompositeBy_Zho",
            "ImageComposite_BG_Zho",
            "ImageComposite_Zho",
            "RGB_Image_Zho",
            "Text_Image_Frame_Zho",
            "Text_Image_Multiline_Zho",
            "Text_Image_Zho"
        ],
        {
            "title_aux": "ComfyUI-Text_Image-Composite [WIP]"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-UltraEdit-ZHO": [
        [
            "UltraEdit_Generation_Zho",
            "UltraEdit_ModelLoader_Zho",
            "UltraEdit_ModelLoader_local_Zho"
        ],
        {
            "title_aux": "ComfyUI-UltraEdit-ZHO"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/ComfyUI-YoloWorld-EfficientSAM": [
        [
            "ESAM_ModelLoader_Zho",
            "Yoloworld_ESAM_DetectorProvider_Zho",
            "Yoloworld_ESAM_Zho",
            "Yoloworld_ModelLoader_Zho"
        ],
        {
            "title_aux": "ComfyUI YoloWorld-EfficientSAM"
        }
    ],
    "https://github.com/ZHO-ZHO-ZHO/comfyui-portrait-master-zh-cn": [
        [
            "PortraitMaster_\u4e2d\u6587\u7248"
        ],
        {
            "title_aux": "comfyui-portrait-master-zh-cn"
        }
    ],
    "https://github.com/ZZXYWQ/ComfyUI-ZZXYWQ": [
        [
            "StreamRecorder",
            "VideoFormatConverter",
            "ZZX_PaintsUndo"
        ],
        {
            "title_aux": "ZZX Nodes"
        }
    ],
    "https://github.com/ZaneA/ComfyUI-ImageReward": [
        [
            "ImageRewardLoader",
            "ImageRewardScore"
        ],
        {
            "title_aux": "ImageReward"
        }
    ],
    "https://github.com/ZeDarkAdam/ComfyUI-Embeddings-Tools": [
        [
            "EmbeddingsNameLoader",
            "EmbendingList"
        ],
        {
            "title_aux": "ComfyUI-Embeddings-Tools"
        }
    ],
    "https://github.com/Zeks/comfyui-rapidfire": [
        [
            "CsvWriterNode",
            "ImmatureImageCounter",
            "ImmatureImageDataLoader"
        ],
        {
            "title_aux": "comfyui-rapidfire"
        }
    ],
    "https://github.com/a-und-b/ComfyUI_Delay": [
        [
            "Add Delay"
        ],
        {
            "title_aux": "ComfyUI_Delay"
        }
    ],
    "https://github.com/a-und-b/ComfyUI_JSON_Helper": [
        [
            "JSONStringToObjectNode"
        ],
        {
            "title_aux": "ComfyUI_JSON_Helper"
        }
    ],
    "https://github.com/a1lazydog/ComfyUI-AudioScheduler": [
        [
            "AmplitudeToGraph",
            "AmplitudeToNumber",
            "AudioToAmplitudeGraph",
            "AudioToAudioData",
            "AudioToFFTs",
            "BatchAmplitudeSchedule",
            "ClipAmplitude",
            "FloatArrayToGraph",
            "GateNormalizedAmplitude",
            "NormalizeAmplitude",
            "NormalizedAmplitudeDrivenString",
            "NormalizedAmplitudeToGraph",
            "NormalizedAmplitudeToNumber",
            "TransientAmplitudeBasic"
        ],
        {
            "title_aux": "ComfyUI-AudioScheduler"
        }
    ],
    "https://github.com/abdozmantar/ComfyUI-DeepExtract": [
        [
            "VocalAndSoundRemoverNode"
        ],
        {
            "title_aux": "DeepExtract"
        }
    ],
    "https://github.com/aburahamu/ComfyUI-IsNiceParts": [
        [
            "NiceHand"
        ],
        {
            "title_aux": "ComfyUI-IsNiceParts"
        }
    ],
    "https://github.com/aburahamu/ComfyUI-RequestsPoster": [
        [
            "GetImageFromSD3byI2I",
            "GetImageFromSD3byT2I",
            "PostImage2Discord",
            "PostImage2X",
            "PostText"
        ],
        {
            "title_aux": "ComfyUI-RequestPoster"
        }
    ],
    "https://github.com/abyz22/image_control": [
        [
            "abyz22_AddPrompt",
            "abyz22_Convertpipe",
            "abyz22_Editpipe",
            "abyz22_FirstNonNull",
            "abyz22_FromBasicPipe_v2",
            "abyz22_Frompipe",
            "abyz22_ImpactWildcardEncode",
            "abyz22_ImpactWildcardEncode_GetPrompt",
            "abyz22_Ksampler",
            "abyz22_Padding Image",
            "abyz22_RandomMask",
            "abyz22_RemoveControlnet",
            "abyz22_ResizeOpenpose",
            "abyz22_SaveImage",
            "abyz22_SetQueue",
            "abyz22_ToBasicPipe",
            "abyz22_Topipe",
            "abyz22_blend_onecolor",
            "abyz22_blendimages",
            "abyz22_bypass",
            "abyz22_censoring",
            "abyz22_drawmask",
            "abyz22_lamaInpaint",
            "abyz22_lamaPreprocessor",
            "abyz22_makecircles",
            "abyz22_path_generator",
            "abyz22_setimageinfo",
            "abyz22_smallhead"
        ],
        {
            "title_aux": "image_control"
        }
    ],
    "https://github.com/acorderob/sd-webui-prompt-postprocessor": [
        [
            "ACBPromptPostProcessor"
        ],
        {
            "author": "ACB",
            "description": "Node for processing prompts. Includes the following options: send to negative prompt, set variables, if/elif/else command for conditional content, wildcards and choices.",
            "nickname": "ACB PPP",
            "title": "Prompt Post Processor",
            "title_aux": "Prompt PostProcessor"
        }
    ],
    "https://github.com/adbrasi/ComfyUI-TrashNodes-DownloadHuggingface": [
        [
            "DownloadLinkChecker",
            "ShowFileNames"
        ],
        {
            "title_aux": "ComfyUI-TrashNodes-DownloadHuggingface"
        }
    ],
    "https://github.com/adieyal/comfyui-dynamicprompts": [
        [
            "DPCombinatorialGenerator",
            "DPFeelingLucky",
            "DPJinja",
            "DPMagicPrompt",
            "DPOutput",
            "DPRandomGenerator"
        ],
        {
            "title_aux": "DynamicPrompts Custom Nodes"
        }
    ],
    "https://github.com/adigayung/ComfyUI-Translator": [
        [
            "CLIP Text Encode (Auto Translate)",
            "Prompt Text (Auto Translate)"
        ],
        {
            "title_aux": "ComfyUI-Translator"
        }
    ],
    "https://github.com/adriflex/ComfyUI_Blender_Texdiff": [
        [
            "ViewportColor",
            "ViewportDepth"
        ],
        {
            "title_aux": "ComfyUI_Blender_Texdiff"
        }
    ],
    "https://github.com/aegis72/aegisflow_utility_nodes": [
        [
            "Add Text To Image",
            "Aegisflow CLIP Pass",
            "Aegisflow Conditioning Pass",
            "Aegisflow Image Pass",
            "Aegisflow Latent Pass",
            "Aegisflow Mask Pass",
            "Aegisflow Model Pass",
            "Aegisflow Pos/Neg Pass",
            "Aegisflow SDXL Tuple Pass",
            "Aegisflow VAE Pass",
            "Aegisflow controlnet preprocessor bus",
            "Apply Instagram Filter",
            "Binary INT Switch",
            "Brightness_Contrast_Ally",
            "Flatten Colors",
            "Gaussian Blur_Ally",
            "GlitchThis Effect",
            "Hue Rotation",
            "Image Flip_ally",
            "Placeholder Tuple",
            "Swap Color Mode",
            "aegisflow Multi_Pass",
            "aegisflow Multi_Pass XL",
            "af_pipe_in_15",
            "af_pipe_in_xl",
            "af_pipe_out_15",
            "af_pipe_out_xl"
        ],
        {
            "title_aux": "AegisFlow Utility Nodes"
        }
    ],
    "https://github.com/aegis72/comfyui-styles-all": [
        [
            "menus"
        ],
        {
            "title_aux": "ComfyUI-styles-all"
        }
    ],
    "https://github.com/ahernandezmiro/ComfyUI-GCP_Storage_tools": [
        [
            "GCPReadImageNode",
            "GCPWriteImageNode"
        ],
        {
            "title_aux": "ComfyUI-GCP_Storage_tools"
        }
    ],
    "https://github.com/ai-liam/comfyui-liam": [
        [
            "AiStoreAzureGPTLiam",
            "GetBetterDepthImage",
            "LiamLibDisplayText",
            "LiamLibFillImage",
            "LiamLibImageToGray",
            "LiamLibLoadImage",
            "LiamLibMergeText",
            "LiamLibSaveImg",
            "LiamLibSaveText",
            "OllamaApiTNodeLiam",
            "PreviewReliefImage",
            "SpeechRecognitionLiam",
            "SpeechSynthesisLiam"
        ],
        {
            "title_aux": "LiamUtil"
        }
    ],
    "https://github.com/ai-liam/comfyui_liam_util": [
        [
            "LiamLoadImage"
        ],
        {
            "title_aux": "LiamUtil (single node)"
        }
    ],
    "https://github.com/ai-shizuka/ComfyUI-tbox": [
        [
            "AnimalPosePreprocessor",
            "BatchManager",
            "CannyPreprocessor",
            "ConstrainImageNode",
            "DWPosePreprocessor",
            "DWPreprocessor",
            "DensePosePreprocessor",
            "GFPGANNode",
            "ImageLoader",
            "ImageResize",
            "ImageSaver",
            "ImageSize",
            "ImagesSaver",
            "LineArtPreprocessor",
            "LineartStandardPreprocessor",
            "MaskAddNode",
            "MiDaSDepthPreprocessor",
            "PurgeVRAMNode",
            "VideoInfo",
            "VideoLoader",
            "VideoSaver",
            "WatermarkNode"
        ],
        {
            "author": "tstandley",
            "title_aux": "ComfyUI-tbox"
        }
    ],
    "https://github.com/aianimation55/ComfyUI-FatLabels": [
        [
            "FatLabels"
        ],
        {
            "title_aux": "Comfy UI FatLabels"
        }
    ],
    "https://github.com/aidenli/ComfyUI_NYJY": [
        [
            "CivitaiPrompt",
            "ConverAnyToString",
            "CustomLatentImage-NYJY",
            "CustomLatentImageSimple",
            "FloatSlider-NYJY",
            "GetItemFromList",
            "JoyCaption",
            "JoyCaptionAlpha1Online",
            "JoyCaptionAlpha2Online",
            "JoyTag",
            "JsonDumps",
            "JsonLoads",
            "SplitString",
            "Translate"
        ],
        {
            "title_aux": "ComfyUI_NYJY"
        }
    ],
    "https://github.com/aigc-apps/EasyAnimate": [
        [
            "EasyAnimateI2VSampler",
            "EasyAnimateT2VSampler",
            "EasyAnimateV2VSampler",
            "EasyAnimateV5_I2VSampler",
            "EasyAnimateV5_T2VSampler",
            "EasyAnimateV5_V2VSampler",
            "EasyAnimate_TextBox",
            "LoadEasyAnimateLora",
            "LoadEasyAnimateModel",
            "TextBox"
        ],
        {
            "title_aux": "Video Generation Nodes for EasyAnimate"
        }
    ],
    "https://github.com/aimerib/ComfyUI_HigherBitDepthSaveImage": [
        [
            "SaveImageHigherBitDepth"
        ],
        {
            "title_aux": "ComfyUI-HigherBitDepthSaveImage"
        }
    ],
    "https://github.com/ainewsto/comfyui-labs-google": [
        [
            "ComfyUI-ImageFx",
            "ComfyUI-Whisk",
            "ComfyUI-Whisk-Prompts"
        ],
        {
            "title_aux": "comfyui-labs-google"
        }
    ],
    "https://github.com/aisabervisionlab/ComfyUI_merge_ASVL": [
        [
            "ASVL"
        ],
        {
            "title_aux": "ComfyUI_merge_ASVL"
        }
    ],
    "https://github.com/akatz-ai/ComfyUI-AKatz-Nodes": [
        [
            "AK_AdjustDepthmapBrightness",
            "AK_AdjustListSize",
            "AK_AnimatedDilationMaskLinear",
            "AK_AudioFramesyncSchedule",
            "AK_AudioreactiveDilateMaskInfinite",
            "AK_AudioreactiveDilationMask",
            "AK_AudioreactiveDynamicDilationMask",
            "AK_BinaryAmplitudeGate",
            "AK_BrightnessToFloatList",
            "AK_ConvertAudioToSaltAudio",
            "AK_ConvertListToFloatList",
            "AK_ConvertSaltAudioToAudio",
            "AK_DilateMaskLinearInfinite",
            "AK_FadeBetweenBatches",
            "AK_FlexFeatureToFloatList",
            "AK_FloatListToDilateMaskSchedule",
            "AK_FloatListToFlexFeature",
            "AK_IPAdapterCustomWeights",
            "AK_KeyframeScheduler",
            "AK_LagChop",
            "AK_ListToNumpyFloatArray",
            "AK_MakeDepthmapSeamless",
            "AK_NormalizeMaskImage",
            "AK_RescaleFloatList",
            "AK_ScaleMask",
            "AK_ScheduledBinaryComparison",
            "AK_ShrinkNumSequence",
            "AK_SplitImageBatch",
            "AK_VideoSpeedAdjust",
            "Scale Mask Node"
        ],
        {
            "author": "akatz",
            "description": "Custom node pack for nodes I use in my workflows.",
            "nickname": "Akatz Custom Nodes",
            "title": "Akatz Custom Nodes",
            "title_aux": "Akatz Custom Nodes"
        }
    ],
    "https://github.com/akatz-ai/ComfyUI-DepthCrafter-Nodes": [
        [
            "DepthCrafter",
            "DownloadAndLoadDepthCrafterModel"
        ],
        {
            "author": "akatz",
            "description": "Custom nodes for use with DepthCrafter. Create consistent depth maps for your videos.",
            "nickname": "DepthCrafter Nodes",
            "title": "DepthCrafter Nodes",
            "title_aux": "DepthCrafter Nodes"
        }
    ],
    "https://github.com/akatz-ai/ComfyUI-Depthflow-Nodes": [
        [
            "Depthflow",
            "DepthflowEffectDOF",
            "DepthflowEffectVignette",
            "DepthflowMotionArc",
            "DepthflowMotionCosine",
            "DepthflowMotionExponential",
            "DepthflowMotionLinear",
            "DepthflowMotionPresetCircle",
            "DepthflowMotionPresetDolly",
            "DepthflowMotionPresetHorizontal",
            "DepthflowMotionPresetOrbital",
            "DepthflowMotionPresetVertical",
            "DepthflowMotionPresetZoom",
            "DepthflowMotionSetTarget",
            "DepthflowMotionSine"
        ],
        {
            "author": "akatz",
            "description": "Custom nodes for use with Tremeschin's Depthflow library.",
            "nickname": "Depthflow Nodes",
            "title": "Depthflow Nodes",
            "title_aux": "\ud83c\udf0a Depthflow Nodes"
        }
    ],
    "https://github.com/akatz-ai/ComfyUI-X-Portrait-Nodes": [
        [
            "DownloadXPortraitModel",
            "XPortrait"
        ],
        {
            "author": "akatz",
            "description": "Custom nodes for use with X-Portrait. Animate portraits with an input video and a reference image.",
            "nickname": "X-Portrait Nodes",
            "title": "X-Portrait Nodes",
            "title_aux": "ComfyUI-X-Portrait-Nodes"
        }
    ],
    "https://github.com/akierson/ComfyUI-textnodes": [
        [
            "Prompt Truncate",
            "Tidy Tags"
        ],
        {
            "title_aux": "ComfyUI-textnodes"
        }
    ],
    "https://github.com/akierson/comfyui-colornodes": [
        [
            "Color Picker",
            "Color to Hex",
            "Color to RGB",
            "Image Replace Color",
            "Invert Color"
        ],
        {
            "title_aux": "comfyui-colornodes"
        }
    ],
    "https://github.com/akspa0/ComfyUI-FapMixPlus": [
        [
            "fapMix",
            "preFapMix"
        ],
        {
            "title_aux": "ComfyUI-FapMixPlus"
        }
    ],
    "https://github.com/al-swaiti/All-IN-ONE-style": [
        [
            "ComfyUIStyler",
            "menus"
        ],
        {
            "title_aux": "All-IN-ONE-style"
        }
    ],
    "https://github.com/al-swaiti/ComfyUI-CascadeResolutions": [
        [
            "CascadeResolutions"
        ],
        {
            "title_aux": "ComfyUI-CascadeResolutions"
        }
    ],
    "https://github.com/al-swaiti/ComfyUI-OllamaGemini": [
        [
            "BRIA_RMBG",
            "BRIA_RMBG_ModelLoader",
            "ComfyUIStyler",
            "ConvertRasterToVector",
            "FLUXResolutions",
            "GeminiAPI",
            "OllamaAPI",
            "Save text",
            "SaveSVG",
            "TextSplitByDelimiter",
            "menus"
        ],
        {
            "title_aux": "GeminiOllama ComfyUI Extension"
        }
    ],
    "https://github.com/alanhuang67/ComfyUI-FAI-Node": [
        [
            "FAIDynamicMask",
            "FAIScaleScheduler",
            "FAI_Voronoi_Generator"
        ],
        {
            "title_aux": "FAI-Node"
        }
    ],
    "https://github.com/alessandrozonta/ComfyUI-CenterNode": [
        [
            "BBoxCrop"
        ],
        {
            "title_aux": "ComfyUI-CenterNode"
        }
    ],
    "https://github.com/alessandrozonta/ComfyUI-Layers": [
        [
            "LayersSaver - Save Layer",
            "LayersSaver - Save Layer From Images"
        ],
        {
            "title_aux": "Save Layers Node for ComfyUI"
        }
    ],
    "https://github.com/alessandrozonta/ComfyUI-OpenPose": [
        [
            "OpenPose - Get poses"
        ],
        {
            "author": "joe",
            "title_aux": "OpenPose Node"
        }
    ],
    "https://github.com/alexcong/ComfyUI_QwenVL": [
        [
            "Qwen2.5",
            "Qwen2VL"
        ],
        {
            "title_aux": "Qwen2-VL wrapper for ComfyUI"
        }
    ],
    "https://github.com/alexgenovese/ComfyUI_HF_Servelress_Inference": [
        [
            "HF_QuestionAnswer",
            "Job_Caption",
            "Joy_caption",
            "Joy_caption_load"
        ],
        {
            "author": "Alex Genovese",
            "description": "Huggingface Api Serverless request",
            "nickname": "alexgenovese",
            "title": "Huggingface Api Serverless",
            "title_aux": "Huggingface Api Serverless"
        }
    ],
    "https://github.com/alexisrolland/ComfyUI-Phi": [
        [
            "LoadPhi",
            "LoadPhiVision",
            "RunPhi",
            "RunPhiVision"
        ],
        {
            "title_aux": "ComfyUI-Phi"
        }
    ],
    "https://github.com/alexopus/ComfyUI-Image-Saver": [
        [
            "Cfg Literal (Image Saver)",
            "Checkpoint Loader with Name (Image Saver)",
            "Float Literal (Image Saver)",
            "Image Saver",
            "Int Literal (Image Saver)",
            "Sampler Selector (Image Saver)",
            "SamplerToString (Image Saver)",
            "Scheduler Selector (Comfy) (Image Saver)",
            "Scheduler Selector (Image Saver)",
            "SchedulerComfyToString (Image Saver)",
            "SchedulerToString (Image Saver)",
            "Seed Generator (Image Saver)",
            "String Literal (Image Saver)",
            "UNet loader with Name (Image Saver)",
            "Width/Height Literal (Image Saver)"
        ],
        {
            "title_aux": "ComfyUI Image Saver"
        }
    ],
    "https://github.com/alisson-anjos/ComfyUI-Ollama-Describer": [
        [
            "InputText",
            "OllamaCaptionerExtraOptions",
            "OllamaImageCaptioner",
            "OllamaImageDescriber",
            "OllamaTextDescriber",
            "ShowText",
            "TextTransformer"
        ],
        {
            "title_aux": "ComfyUI-Ollama-Describer"
        }
    ],
    "https://github.com/alpertunga-bile/image-caption-comfyui": [
        [
            "Image Caption Node",
            "Insert Prompt Node"
        ],
        {
            "title_aux": "image-caption-comfyui"
        }
    ],
    "https://github.com/alpertunga-bile/prompt-generator-comfyui": [
        [
            "Prompt Generator"
        ],
        {
            "title_aux": "prompt-generator"
        }
    ],
    "https://github.com/alsritter/asymmetric-tiling-comfyui": [
        [
            "Asymmetric_Tiling_KSampler"
        ],
        {
            "title_aux": "asymmetric-tiling-comfyui"
        }
    ],
    "https://github.com/alt-key-project/comfyui-dream-project": [
        [
            "Analyze Palette [Dream]",
            "Beat Curve [Dream]",
            "Big Float Switch [Dream]",
            "Big Image Switch [Dream]",
            "Big Int Switch [Dream]",
            "Big Latent Switch [Dream]",
            "Big Palette Switch [Dream]",
            "Big Text Switch [Dream]",
            "Boolean To Float [Dream]",
            "Boolean To Int [Dream]",
            "Build Prompt [Dream]",
            "CSV Curve [Dream]",
            "CSV Generator [Dream]",
            "Calculation [Dream]",
            "Common Frame Dimensions [Dream]",
            "Compare Palettes [Dream]",
            "FFMPEG Video Encoder [Dream]",
            "File Count [Dream]",
            "Finalize Prompt [Dream]",
            "Float Input [Dream]",
            "Float to Log Entry [Dream]",
            "Frame Count Calculator [Dream]",
            "Frame Counter (Directory) [Dream]",
            "Frame Counter (Simple) [Dream]",
            "Frame Counter Info [Dream]",
            "Frame Counter Offset [Dream]",
            "Frame Counter Time Offset [Dream]",
            "Image Brightness Adjustment [Dream]",
            "Image Color Shift [Dream]",
            "Image Contrast Adjustment [Dream]",
            "Image Motion [Dream]",
            "Image Sequence Blend [Dream]",
            "Image Sequence Loader [Dream]",
            "Image Sequence Saver [Dream]",
            "Image Sequence Tweening [Dream]",
            "Int Input [Dream]",
            "Int to Log Entry [Dream]",
            "Laboratory [Dream]",
            "Linear Curve [Dream]",
            "Log Entry Joiner [Dream]",
            "Log File [Dream]",
            "Noise from Area Palettes [Dream]",
            "Noise from Palette [Dream]",
            "Palette Color Align [Dream]",
            "Palette Color Shift [Dream]",
            "Sample Image Area as Palette [Dream]",
            "Sample Image as Palette [Dream]",
            "Saw Curve [Dream]",
            "Sine Curve [Dream]",
            "Smooth Event Curve [Dream]",
            "String Input [Dream]",
            "String Tokenizer [Dream]",
            "String to Log Entry [Dream]",
            "Text Input [Dream]",
            "Triangle Curve [Dream]",
            "Triangle Event Curve [Dream]",
            "WAV Curve [Dream]"
        ],
        {
            "title_aux": "Dream Project Animation Nodes"
        }
    ],
    "https://github.com/alt-key-project/comfyui-dream-video-batches": [
        [
            "Blended Transition [DVB]",
            "Calculation [DVB]",
            "Create Frame Set [DVB]",
            "Divide [DVB]",
            "Fade From Black [DVB]",
            "Fade To Black [DVB]",
            "Float Input [DVB]",
            "For Each Done [DVB]",
            "For Each Filename [DVB]",
            "Frame Set Append [DVB]",
            "Frame Set Frame Dimensions Scaled [DVB]",
            "Frame Set Index Offset [DVB]",
            "Frame Set Merger [DVB]",
            "Frame Set Reindex [DVB]",
            "Frame Set Repeat [DVB]",
            "Frame Set Reverse [DVB]",
            "Frame Set Split Beginning [DVB]",
            "Frame Set Split End [DVB]",
            "Frame Set Splitter [DVB]",
            "Generate Inbetween Frames [DVB]",
            "Int Input [DVB]",
            "Linear Camera Pan [DVB]",
            "Linear Camera Roll [DVB]",
            "Linear Camera Zoom [DVB]",
            "Load Image From Path [DVB]",
            "Multiply [DVB]",
            "Sine Camera Pan [DVB]",
            "Sine Camera Roll [DVB]",
            "Sine Camera Zoom [DVB]",
            "String Input [DVB]",
            "Text Input [DVB]",
            "Trace Memory Allocation [DVB]",
            "Unwrap Frame Set [DVB]"
        ],
        {
            "title_aux": "Dream Video Batches"
        }
    ],
    "https://github.com/an90ray/ComfyUI_RErouter_CustomNodes": [
        [
            "CLIPTextEncode (RE)",
            "CLIPTextEncodeSDXL (RE)",
            "CLIPTextEncodeSDXLRefiner (RE)",
            "Int (RE)",
            "RErouter <=",
            "RErouter =>",
            "String (RE)"
        ],
        {
            "title_aux": "ComfyUI_RErouter_CustomNodes"
        }
    ],
    "https://github.com/andersxa/comfyui-PromptAttention": [
        [
            "CLIPAttentionMaskEncode"
        ],
        {
            "title_aux": "CLIP Directional Prompt Attention"
        }
    ],
    "https://github.com/andygill/comfyui-sunflower-nodes": [
        [
            "DepthViewToIsometric",
            "DisparityToDepthView",
            "EquirectangularToRectilinear",
            "ImageChannelSelect",
            "MaskChannelSelect",
            "ResizeDown"
        ],
        {
            "title_aux": "comfyui-sunflower-nodes"
        }
    ],
    "https://github.com/angeloshredder/StableCascadeResizer": [
        [
            "CascadeResize"
        ],
        {
            "title_aux": "StableCascadeResizer"
        }
    ],
    "https://github.com/anhkhoatranle30/Handy-Nodes-ComfyUI": [
        [
            "Custom Save Image //Handy"
        ],
        {
            "author": "Khoa Tran",
            "description": "This extension offers various handy nodes.",
            "nickname": "Handy-Nodes-ComfyUI",
            "title": "Handy-Nodes-ComfyUI",
            "title_aux": "Handy Node ComfyUI"
        }
    ],
    "https://github.com/arcum42/ComfyUI_SageUtils": [
        [
            "Sage_AdvSamplerInfo",
            "Sage_CacheMaintenance",
            "Sage_CheckpointLoaderRecent",
            "Sage_CheckpointLoaderSimple",
            "Sage_CleanText",
            "Sage_CollectKeywordsFromLoraStack",
            "Sage_ConditioningOneOut",
            "Sage_ConditioningRngOut",
            "Sage_ConditioningZeroOut",
            "Sage_ConstructMetadata",
            "Sage_ConstructMetadataLite",
            "Sage_DualCLIPTextEncode",
            "Sage_EmptyLatentImagePassthrough",
            "Sage_GetFileHash",
            "Sage_JoinText",
            "Sage_KSampler",
            "Sage_LastLoraInfo",
            "Sage_LoadImage",
            "Sage_LogicalSwitch",
            "Sage_LoraStack",
            "Sage_LoraStackLoader",
            "Sage_LoraStackRecent",
            "Sage_ModelInfo",
            "Sage_ModelReport",
            "Sage_PonyPrefix",
            "Sage_SamplerInfo",
            "Sage_SaveImageWithMetadata",
            "Sage_SetBool",
            "Sage_SetFloat",
            "Sage_SetInteger",
            "Sage_SetText",
            "Sage_TripleJoinText",
            "Sage_UNETLoader",
            "Sage_ViewText"
        ],
        {
            "title_aux": "Sage Utils"
        }
    ],
    "https://github.com/asaddi/ComfyUI-YALLM-node": [
        [
            "LLMChat",
            "LLMMinP",
            "LLMModel",
            "LLMPrependAppend",
            "LLMProvider",
            "LLMTemperature",
            "LLMTextLatch",
            "LLMTopK",
            "LLMTopP"
        ],
        {
            "title_aux": "ComfyUI-YALLM-node"
        }
    ],
    "https://github.com/asagi4/ComfyUI-Adaptive-Guidance": [
        [
            "AdaptiveGuidance",
            "AdaptiveProjectedGuidance",
            "PerpNegAdaptiveGuidanceGuider"
        ],
        {
            "title_aux": "Adaptive Guidance for ComfyUI"
        }
    ],
    "https://github.com/asagi4/ComfyUI-CADS": [
        [
            "CADS"
        ],
        {
            "title_aux": "ComfyUI-CADS"
        }
    ],
    "https://github.com/asagi4/ComfyUI-NPNet": [
        [
            "NPNetGoldenNoise"
        ],
        {
            "title_aux": "ComfyUI NPNet (Golden Noise)"
        }
    ],
    "https://github.com/asagi4/comfyui-prompt-control": [
        [
            "AttentionMaskHookExperimental",
            "PCAddMaskToCLIP",
            "PCAddMaskToCLIPMany",
            "PCLazyLoraLoader",
            "PCLazyLoraLoaderAdvanced",
            "PCLazyTextEncode",
            "PCLazyTextEncodeAdvanced",
            "PCLoraHooksFromText",
            "PCSetLogLevel",
            "PCSetPCTextEncodeSettings",
            "PCTextEncode",
            "PCTextEncodeWithRange"
        ],
        {
            "author": "asagi4",
            "description": "Control LoRA and prompt scheduling, advanced text encoding, regional prompting, and much more, through your text prompt. Generates dynamic graphs that are literally identical to handcrafted noodle soup.",
            "nickname": "ComfyUI Prompt Control",
            "title": "ComfyUI Prompt Control",
            "title_aux": "ComfyUI Prompt Control"
        }
    ],
    "https://github.com/asagi4/comfyui-utility-nodes": [
        [
            "MUForceCacheClear",
            "MUJinjaRender",
            "MUReplaceModelWeights",
            "MUSimpleWildcard"
        ],
        {
            "title_aux": "asagi4/comfyui-utility-nodes"
        }
    ],
    "https://github.com/aszc-dev/ComfyUI-CoreMLSuite": [
        [
            "Core ML Converter",
            "Core ML LCM Converter",
            "Core ML LoRA Loader",
            "CoreMLModelAdapter",
            "CoreMLSampler",
            "CoreMLSamplerAdvanced",
            "CoreMLUNetLoader"
        ],
        {
            "title_aux": "Core ML Suite for ComfyUI"
        }
    ],
    "https://github.com/audioscavenger/ComfyUI-Thumbnails": [
        [
            "LoadImage"
        ],
        {
            "author": "AudioscavengeR",
            "description": "Load Image thumbnails and show input subfolders.",
            "nickname": "LoadImageThumbnails",
            "title": "LoadImageThumbnails",
            "title_aux": "ComfyUI-Thumbnails"
        }
    ],
    "https://github.com/audioscavenger/save-image-extended-comfyui": [
        [
            "SaveImageExtended"
        ],
        {
            "author": "AudioscavengeR",
            "description": "1 custom node to save your pictures in various folders and formats.",
            "nickname": "Save Image Extended",
            "title": "Save Image Extended",
            "title_aux": "Save Image Extended for ComfyUI"
        }
    ],
    "https://github.com/avatechai/avatar-graph-comfyui": [
        [
            "ApplyMeshTransformAsShapeKey",
            "B_ENUM",
            "B_VECTOR3",
            "B_VECTOR4",
            "Combine Points",
            "CreateShapeFlow",
            "ExportBlendshapes",
            "ExportGLTF",
            "Extract Boundary Points",
            "Image Alpha Mask Merge",
            "ImageBridge",
            "LoadImageFromRequest",
            "LoadImageWithAlpha",
            "LoadValueFromRequest",
            "SAM MultiLayer",
            "Save Image With Workflow"
        ],
        {
            "author": "Avatech Limited",
            "description": "Include nodes for sam + bpy operation, that allows workflow creations for generative 2d character rig.",
            "nickname": "Avatar Graph",
            "title": "Avatar Graph",
            "title_aux": "Avatar Graph"
        }
    ],
    "https://github.com/aws-samples/comfyui-llm-node-for-amazon-bedrock": [
        [
            "Bedrock - Claude",
            "Bedrock - Claude Multimodal",
            "Bedrock - SDXL",
            "Bedrock - Titan Inpainting",
            "Bedrock - Titan Outpainting",
            "Bedrock - Titan Text to Image",
            "Bedrock - Titan Variation",
            "Image From S3",
            "Image From URL",
            "Image To S3",
            "JSON Text Extraction",
            "Prompt Regex Remove",
            "Prompt Template",
            "Prompt Template with Two Inputs"
        ],
        {
            "title_aux": "Amazon Bedrock nodes for ComfyUI"
        }
    ],
    "https://github.com/azure-dragon-ai/ComfyUI-ClipScore-Nodes": [
        [
            "HaojihuiClipScoreFakeImageProcessor",
            "HaojihuiClipScoreImageProcessor",
            "HaojihuiClipScoreImageScore",
            "HaojihuiClipScoreLoader",
            "HaojihuiClipScoreRealImageProcessor",
            "HaojihuiClipScoreTextProcessor"
        ],
        {
            "title_aux": "ComfyUI-ClipScore-Nodes"
        }
    ],
    "https://github.com/badayvedat/ComfyUI-fal-Connector": [
        [
            "RemoteCheckpointLoader_fal",
            "RemoteLoraLoader_fal"
        ],
        {
            "title_aux": "ComfyUI-fal-Connector"
        }
    ],
    "https://github.com/badjeff/comfyui_lora_tag_loader": [
        [
            "LoraTagLoader"
        ],
        {
            "title_aux": "LoRA Tag Loader for ComfyUI"
        }
    ],
    "https://github.com/baicai99/ComfyUI-FrameSkipping": [
        [
            "FrameSelector",
            "FrameSkipping",
            "FrameTruncating",
            "IntOperationsNode",
            "MaskFrameSkipping",
            "MaskGenerator",
            "MaskSelector"
        ],
        {
            "title_aux": "ComfyUI-FrameSkipping"
        }
    ],
    "https://github.com/bananasss00/ComfyUI-SP-Nodes": [
        [
            "BoolSwitchOutStr",
            "CivitaiPrompts",
            "ComfyuiRuntimeArgs",
            "FaceScatter",
            "FaceScatter2",
            "FluxInspireLbw_Batch",
            "FluxInspireLbw_BlockVectorPreset",
            "GodnessMerger_Apply",
            "GodnessMerger_InputBlocks",
            "GodnessMerger_InputBlocksExperimental",
            "GodnessMerger_LabelEmb",
            "GodnessMerger_MiddleBlock",
            "GodnessMerger_MiddleBlockExperimental",
            "GodnessMerger_NoiseInjection",
            "GodnessMerger_Out",
            "GodnessMerger_OutputBlocks",
            "GodnessMerger_OutputBlocksExperimental",
            "GodnessMerger_RAW_Apply",
            "GodnessMerger_TimeEmbed",
            "ImageMonitor",
            "ImgMetaValueExtractor",
            "LoraLoaderByPath",
            "LoraLoaderFromFolder",
            "LoraLoaderOnlyModelByPath",
            "NoiseInjectionEssentialsHookProvider",
            "PreviewImageWEBP",
            "PromptChecker",
            "RandomPromptFromBook",
            "Random_Model_Merge",
            "SD3BlocksMultiply",
            "SD3Multiply",
            "SP-CheckpointSave",
            "SP-UnetSave",
            "SP_DDInpaint_Pipe",
            "SP_DictValue",
            "SP_DynamicCombo",
            "SP_FlorenceCaption",
            "SP_FluxFastMergePatchFP8 [Experimental]",
            "SP_FluxLoader",
            "SP_FluxUnsampler",
            "SP_FluxUnsampler_ForwardODESampler",
            "SP_FluxUnsampler_InverseSampler",
            "SP_HiresGen",
            "SP_HiresGen_Dynamic",
            "SP_HiresGen_HiresCfg",
            "SP_HiresGen_Sharpen",
            "SP_HunyuanLoader",
            "SP_KSampler",
            "SP_KSamplerSelect",
            "SP_KoboldCpp",
            "SP_KoboldCppWithContext",
            "SP_KoboldCpp_BannedTokens",
            "SP_KoboldCpp_OverrideCfg",
            "SP_ListAny",
            "SP_Pipe",
            "SP_Pipe_ToBasicPipe",
            "SP_SD3Loader",
            "SP_SDLoader",
            "SP_Supir",
            "SP_SupirSampler",
            "SP_SupirSampler_DPMPP2M",
            "SP_SupirSampler_EDM",
            "SP_UnlistValues",
            "SP_WebsocketSendImage",
            "SP_XYGrid",
            "SP_XYValues",
            "ScatterParams",
            "ScatterParamsBatch",
            "SendTelegramChatBot",
            "StrToCombo",
            "TextSplitJoinByDelimiter"
        ],
        {
            "author": "SeniorPioner",
            "description": "Node Pack: PromptChecker for token toggling, KoboldCPP API, ModelMerging, Telegram-Bot-API, and more",
            "nickname": "SP-Nodes",
            "title": "SP-Nodes",
            "title_aux": "SP-Nodes"
        }
    ],
    "https://github.com/bananasss00/ComfyUI-flux_fill_patcher": [
        [
            "ApplyFluxFillPatch"
        ],
        {
            "title_aux": "ComfyUI-flux_fill_patcher"
        }
    ],
    "https://github.com/banodoco/steerable-motion": [
        [
            "BatchCreativeInterpolation",
            "IpaConfiguration",
            "RemoveAndInterpolateFrames"
        ],
        {
            "title_aux": "Steerable Motion"
        }
    ],
    "https://github.com/banqingyuan/ComfyUI-text-replace": [
        [
            "ChatOverlayNode",
            "ExtractJsonNode",
            "ImageEraseNode",
            "OCRLocNode"
        ],
        {
            "title_aux": "ComfyUI-text-replace"
        }
    ],
    "https://github.com/bartly/Comfyui_babel_removebg_api": [
        [
            "BabelRemovebg"
        ],
        {
            "title_aux": "Babel Removebg Api Node for ComfyUI"
        }
    ],
    "https://github.com/bash-j/mikey_nodes": [
        [
            "AddMetaData",
            "Batch Crop Image",
            "Batch Crop Resize Inplace",
            "Batch Load Images",
            "Batch Resize Image for SDXL",
            "Checkpoint Loader Simple Mikey",
            "CheckpointHash",
            "CheckpointSaveModelOnly",
            "CinematicLook",
            "Empty Latent Ratio Custom SDXL",
            "Empty Latent Ratio Select SDXL",
            "EvalFloats",
            "FaceFixerOpenCV",
            "FileNamePrefix",
            "FileNamePrefixDateDirFirst",
            "Float to String",
            "GetSubdirectories",
            "HaldCLUT",
            "Image Caption",
            "ImageBorder",
            "ImageOverlay",
            "ImagePaste",
            "Int to String",
            "LMStudioPrompt",
            "Load Image Based on Number",
            "LoraSyntaxProcessor",
            "Mikey Sampler",
            "Mikey Sampler Base Only",
            "Mikey Sampler Base Only Advanced",
            "Mikey Sampler Tiled",
            "Mikey Sampler Tiled Base Only",
            "MikeyLatentTileSampler",
            "MikeyLatentTileSamplerCustom",
            "MikeySamplerTiledAdvanced",
            "MikeySamplerTiledAdvancedBaseOnly",
            "ModelMergePixArtSigmaXL2_1024MS",
            "ModelMergeTrainDiff",
            "ModelMergeTrainDiffPixartSigmaXL2_1024MS",
            "MosaicExpandImage",
            "OobaPrompt",
            "PresetRatioSelector",
            "Prompt With SDXL",
            "Prompt With Style",
            "Prompt With Style V2",
            "Prompt With Style V3",
            "Range Float",
            "Range Integer",
            "Ratio Advanced",
            "Resize Image for SDXL",
            "SD3TextConditioningWithOptionsOnePrompt",
            "SRFloatPromptInput",
            "SRIntPromptInput",
            "SRStringPromptInput",
            "Save Image If True",
            "Save Image With Prompt Data",
            "Save Images Mikey",
            "Save Images No Display",
            "SaveMetaData",
            "SearchAndReplace",
            "Seed String",
            "Style Conditioner",
            "Style Conditioner Base Only",
            "Text2InputOr3rdOption",
            "TextCombinations",
            "TextCombinations3",
            "TextConcat",
            "TextPadderMikey",
            "TextPreserve",
            "Upscale Tile Calculator",
            "Wildcard Processor",
            "WildcardAndLoraSyntaxProcessor",
            "WildcardOobaPrompt"
        ],
        {
            "title_aux": "Mikey Nodes"
        }
    ],
    "https://github.com/bear2b/comfyui-argo-nodes": [
        [
            "ColorMatrixGPU",
            "LoadGridFromURL",
            "SaveGridToS3"
        ],
        {
            "title_aux": "ColorMatrixGPU Node for ComfyUI"
        }
    ],
    "https://github.com/bedovyy/ComfyUI_NAIDGenerator": [
        [
            "ColorizeNAID",
            "DeclutterNAID",
            "EmotionNAID",
            "GenerateNAID",
            "Img2ImgOptionNAID",
            "InpaintingOptionNAID",
            "LineArtNAID",
            "MaskImageToNAID",
            "ModelOptionNAID",
            "NetworkOptionNAID",
            "PromptToNAID",
            "RemoveBGNAID",
            "SketchNAID",
            "V4BasePrompt",
            "V4NegativePrompt",
            "VibeTransferOptionNAID"
        ],
        {
            "title_aux": "ComfyUI_NAIDGenerator"
        }
    ],
    "https://github.com/benjiyaya/ComfyUI-HunyuanVideoImagesGuider": [
        [
            "Hunyuan Video Image To Guider"
        ],
        {
            "title_aux": "ComfyUI-HunyuanVideoImagesGuider"
        }
    ],
    "https://github.com/bentoml/comfy-pack": [
        [
            "CPackInputAny",
            "CPackInputFile",
            "CPackInputImage",
            "CPackInputInt",
            "CPackInputString",
            "CPackOutputFile",
            "CPackOutputImage"
        ],
        {
            "title_aux": "Comfy-Pack"
        }
    ],
    "https://github.com/bilal-arikan/ComfyUI_TextAssets": [
        [
            "LoadTextAsset"
        ],
        {
            "title_aux": "ComfyUI_TextAssets"
        }
    ],
    "https://github.com/billwuhao/ComfyUI_OneButtonPrompt_Flux": [
        [
            "OneButtonPromptFlux"
        ],
        {
            "title_aux": "ComfyUI_OneButtonPrompt_Flux"
        }
    ],
    "https://github.com/bitaffinity/ComfyUI_HF_Inference": [
        [
            "Classification",
            "FeatureExtraction",
            "Generation",
            "ObjectDetection",
            "QuestionAnswering",
            "Segmentation",
            "TextToImage",
            "Translation"
        ],
        {
            "title_aux": "ComfyUI_HF_Inference"
        }
    ],
    "https://github.com/black-forest-labs/bfl-comfy-nodes": [
        [
            "FLUX 1.0 [canny]",
            "FLUX 1.0 [depth]",
            "FLUX 1.0 [dev]",
            "FLUX 1.0 [fill]",
            "FLUX 1.0 [pro]",
            "FLUX 1.1 [pro]",
            "FLUX 1.1 [ultra]"
        ],
        {
            "title_aux": "Black Forest Labs API Nodes"
        }
    ],
    "https://github.com/blackcodetavern/ComfyUI-Benripack": [
        [
            "AnimationExtractor",
            "CharacterPipe",
            "Load3DModel"
        ],
        {
            "title_aux": "ComfyUI-Benripack"
        }
    ],
    "https://github.com/blepping/ComfyUI-bleh": [
        [
            "BlehBlockCFG",
            "BlehBlockOps",
            "BlehDeepShrink",
            "BlehDisableNoise",
            "BlehDiscardPenultimateSigma",
            "BlehForceSeedSampler",
            "BlehGlobalSageAttention",
            "BlehHyperTile",
            "BlehInsaneChainSampler",
            "BlehLatentOps",
            "BlehLatentScaleBy",
            "BlehModelPatchConditional",
            "BlehPlug",
            "BlehRefinerAfter",
            "BlehSageAttentionSampler",
            "BlehSetSamplerPreset"
        ],
        {
            "title_aux": "ComfyUI-bleh"
        }
    ],
    "https://github.com/blepping/ComfyUI-sonar": [
        [
            "NoisyLatentLike",
            "SONAR_CUSTOM_NOISE to NOISE",
            "SamplerConfigOverride",
            "SamplerSonarDPMPPSDE",
            "SamplerSonarEuler",
            "SamplerSonarEulerA",
            "SonarAdvanced1fNoise",
            "SonarAdvancedPowerLawNoise",
            "SonarAdvancedPyramidNoise",
            "SonarBlendedNoise",
            "SonarChannelNoise",
            "SonarCompositeNoise",
            "SonarCustomNoise",
            "SonarGuidanceConfig",
            "SonarGuidedNoise",
            "SonarModulatedNoise",
            "SonarRandomNoise",
            "SonarRepeatedNoise",
            "SonarScheduledNoise"
        ],
        {
            "title_aux": "ComfyUI-sonar"
        }
    ],
    "https://github.com/blepping/comfyui_jankdiffusehigh": [
        [
            "DiffuseHighParam",
            "DiffuseHighSampler"
        ],
        {
            "title_aux": "comfyui_jankdiffusehigh"
        }
    ],
    "https://github.com/blepping/comfyui_jankhidiffusion": [
        [
            "ApplyMSWMSAAttention",
            "ApplyMSWMSAAttentionSimple",
            "ApplyRAUNet",
            "ApplyRAUNetSimple"
        ],
        {
            "title_aux": "comfyui_jankhidiffusion"
        }
    ],
    "https://github.com/blepping/comfyui_overly_complicated_sampling": [
        [
            "OCS Group",
            "OCS ModelSetMaxSigma",
            "OCS MultiParam",
            "OCS Param",
            "OCS Sampler",
            "OCS SimpleRestartSchedule",
            "OCS Substeps",
            "OCSNoise PerlinAdvanced",
            "OCSNoise PerlinSimple",
            "OCSNoise to SONAR_CUSTOM_NOISE"
        ],
        {
            "title_aux": "comfyui_overly_complicated_sampling"
        }
    ],
    "https://github.com/blob8/ComfyUI_sloppy-comic": [
        [
            "Generate Comic",
            "LLM API Request"
        ],
        {
            "title_aux": "ComfyUI_sloppy-comic"
        }
    ],
    "https://github.com/blueraincoatli/comfyUI_SillyNodes": [
        [
            "BooleanJumper|SillyNode",
            "QueueSequence|SillyNode",
            "Screenshots|SillyNode",
            "dummyInput|SillyNode",
            "dummyInput|blueraincoat"
        ],
        {
            "title_aux": "comfyUI_SillyNodes"
        }
    ],
    "https://github.com/bluevisor/ComfyUI_PS_Blend_Node": [
        [
            "PSBlendNode"
        ],
        {
            "title_aux": "ComfyUI_PS_Blend_Node"
        }
    ],
    "https://github.com/bmad4ever/comfyui_ab_samplercustom": [
        [
            "AB SamplerCustom (experimental)"
        ],
        {
            "title_aux": "comfyui_ab_sampler"
        }
    ],
    "https://github.com/bmad4ever/comfyui_lists_cartesian_product": [
        [
            "AnyListCartesianProduct"
        ],
        {
            "title_aux": "Lists Cartesian Product"
        }
    ],
    "https://github.com/bmad4ever/comfyui_quilting": [
        [
            "GuessQuiltingBlockSize_Bmad",
            "ImageQuiltingSeamlessMB_Bmad",
            "ImageQuiltingSeamlessSB_Bmad",
            "ImageQuilting_Bmad",
            "LatentQuiltingSeamlessMB_Bmad",
            "LatentQuiltingSeamlessSB_Bmad",
            "LatentQuilting_Bmad"
        ],
        {
            "title_aux": "comfyui_quilting"
        }
    ],
    "https://github.com/bmad4ever/comfyui_wfc_like": [
        [
            "WFC_CustomTemperature_Bmad",
            "WFC_CustomValueWeights_Bmad",
            "WFC_Decode_BMad",
            "WFC_EmptyState_Bmad",
            "WFC_Encode_BMad",
            "WFC_Filter_Bmad",
            "WFC_GenParallel_Bmad",
            "WFC_Generate_BMad",
            "WFC_SampleNode_BMad"
        ],
        {
            "title_aux": "comfyui_wfc_like"
        }
    ],
    "https://github.com/bobmagicii/comfykit-custom-nodes": [
        [
            "LoraStackFiveSimple",
            "LoraThree",
            "LoraWithMeta",
            "TypecasterClip",
            "TypecasterCond",
            "TypecasterImage",
            "TypecasterLatent",
            "TypecasterModel",
            "TypecasterVae"
        ],
        {
            "title_aux": "ComfyKit Custom Nodes"
        }
    ],
    "https://github.com/bombax-xiaoice/ComfyUI-Allegro": [
        [
            "AllegroDecoder",
            "AllegroEncoder",
            "AllegroSampler",
            "AllegroTextEncoder",
            "LoadAllegroModel"
        ],
        {
            "title_aux": "ComfyUI-Allegro"
        }
    ],
    "https://github.com/bombax-xiaoice/ComfyUI-MagicDance": [
        [
            "LoadMagicDanceModel",
            "MagicDanceDecoder",
            "MagicDanceEncoder",
            "MagicDanceSampler"
        ],
        {
            "title_aux": "ComfyUI-MagicDance"
        }
    ],
    "https://github.com/bombax-xiaoice/ComfyUI-Open-Sora-I2V": [
        [
            "OpenSoraDecoder",
            "OpenSoraEncoder",
            "OpenSoraLoader",
            "OpenSoraSampler",
            "OpenSoraTextEncoder"
        ],
        {
            "title_aux": "ComfyUI-Open-Sora-I2V"
        }
    ],
    "https://github.com/bombax-xiaoice/ComfyUI-OpenSoraPlan": [
        [
            "OpenSoraPlan0LoaderT2V",
            "OpenSoraPlan1LoaderT2V",
            "OpenSoraPlan2LoaderI2V",
            "OpenSoraPlan2LoaderT2V",
            "OpenSoraPlan2SamplerI2V",
            "OpenSoraPlan3LoaderI2V",
            "OpenSoraPlan3LoaderT2V",
            "OpenSoraPlan3SamplerI2V",
            "OpenSoraPlanDecoder",
            "OpenSoraPlanPromptRefiner",
            "OpenSoraPlanSamplerT2V"
        ],
        {
            "title_aux": "ComfyUI-OpenSoraPlan"
        }
    ],
    "https://github.com/bombless/comfyUI-RememberingUtils": [
        [
            "RememberLastSeed",
            "ShowLastSeed",
            "ShowLastText"
        ],
        {
            "title_aux": "Remembering utils"
        }
    ],
    "https://github.com/bongsang/ComfyUI-Bongsang": [
        [
            "AnyInfo",
            "RgbChannel"
        ],
        {
            "title_aux": "ComfyUI-Bongsang"
        }
    ],
    "https://github.com/boredofnames/ComfyUI-ntfy": [
        [
            "Ntfy",
            "SaveImageAndNtfy"
        ],
        {
            "title_aux": "ComfyUI-ntfy"
        }
    ],
    "https://github.com/bradsec/ComfyUI_ResolutionSelector": [
        [
            "ResolutionSelector"
        ],
        {
            "title_aux": "ResolutionSelector for ComfyUI"
        }
    ],
    "https://github.com/braintacles/braintacles-comfyui-nodes": [
        [
            "CLIPTextEncodeSDXL-Multi-IO",
            "CLIPTextEncodeSDXL-Pipe",
            "Empty Latent Image from Aspect-Ratio",
            "Interval Sampler",
            "Random Find and Replace"
        ],
        {
            "title_aux": "braintacles-nodes"
        }
    ],
    "https://github.com/brayevalerien/ComfyUI-resynthesizer": [
        [
            "Resynthesize"
        ],
        {
            "title_aux": "ComfyUI Resynthesizer"
        }
    ],
    "https://github.com/brianfitzgerald/style_aligned_comfy": [
        [
            "StyleAlignedBatchAlign",
            "StyleAlignedReferenceSampler",
            "StyleAlignedSampleReferenceLatents"
        ],
        {
            "title_aux": "StyleAligned for ComfyUI"
        }
    ],
    "https://github.com/bronkula/comfyui-fitsize": [
        [
            "FS: Crop Image Into Even Pieces",
            "FS: Fit Image And Resize",
            "FS: Fit Size From Image",
            "FS: Fit Size From Int",
            "FS: Image Region To Mask",
            "FS: Load Image And Resize To Fit",
            "FS: Pick Image From Batch",
            "FS: Pick Image From Batches",
            "FS: Pick Image From List"
        ],
        {
            "title_aux": "comfyui-fitsize"
        }
    ],
    "https://github.com/bruefire/ComfyUI-SeqImageLoader": [
        [
            "VFrame Loader With Mask Editor",
            "Video Loader With Mask Editor"
        ],
        {
            "title_aux": "ComfyUI Sequential Image Loader"
        }
    ],
    "https://github.com/budihartono/comfyui_otonx_nodes": [
        [
            "OTX Integer Multiple Inputs 4",
            "OTX Integer Multiple Inputs 5",
            "OTX Integer Multiple Inputs 6",
            "OTX KSampler Feeder",
            "OTX Versatile Multiple Inputs 4",
            "OTX Versatile Multiple Inputs 5",
            "OTX Versatile Multiple Inputs 6"
        ],
        {
            "title_aux": "Otonx's Custom Nodes"
        }
    ],
    "https://github.com/bvhari/ComfyUI_ImageProcessing": [
        [
            "BilateralFilter",
            "Brightness",
            "Gamma",
            "Hue",
            "Saturation",
            "SigmoidCorrection",
            "UnsharpMask"
        ],
        {
            "title_aux": "ImageProcessing"
        }
    ],
    "https://github.com/bvhari/ComfyUI_PerpCFG": [
        [
            "PerpCFG"
        ],
        {
            "title_aux": "ComfyUI_PerpCFG"
        }
    ],
    "https://github.com/bvhari/ComfyUI_PerpWeight": [
        [
            "CLIPTextEncodePerpWeight"
        ],
        {
            "title_aux": "ComfyUI_PerpWeight"
        }
    ],
    "https://github.com/bvhari/ComfyUI_SUNoise": [
        [
            "SUNoiseLatent",
            "SamplersSUNoise",
            "SamplersSUNoiseAdvanced"
        ],
        {
            "title_aux": "ComfyUI_SUNoise"
        }
    ],
    "https://github.com/c0ffymachyne/ComfyUI_BeatByte": [
        [
            "BytebeatSynth"
        ],
        {
            "title_aux": "Bytebeat Synthesizer: Composing with Operators"
        }
    ],
    "https://github.com/c0ffymachyne/ComfyUI_SignalProcessing": [
        [
            "SignalProcessingBaxandall3BandEQ",
            "SignalProcessingBaxandallEQ",
            "SignalProcessingCompressor",
            "SignalProcessingConvolutionReverb",
            "SignalProcessingFilter",
            "SignalProcessingHarmonicsEnhancer",
            "SignalProcessingLimiter",
            "SignalProcessingLoadAudio",
            "SignalProcessingLoudness",
            "SignalProcessingMixdown",
            "SignalProcessingNormalizer",
            "SignalProcessingPadSynth",
            "SignalProcessingPadSynthChoir",
            "SignalProcessingPaulStretch",
            "SignalProcessingPitchShifter",
            "SignalProcessingSaturation",
            "SignalProcessingSpectrogram",
            "SignalProcessingStereoWidening",
            "SignalProcessingWaveform"
        ],
        {
            "title_aux": "ComfyUI Signal Processing"
        }
    ],
    "https://github.com/calcuis/gguf": [
        [
            "ClipLoaderGGUF",
            "DualClipLoaderGGUF",
            "GGUFSave",
            "LoaderGGUF",
            "LoaderGGUFAdvanced",
            "TENSORCut",
            "TripleClipLoaderGGUF"
        ],
        {
            "preemptions": [
                "LoaderGGUF",
                "ClipLoaderGGUF",
                "DualClipLoaderGGUF",
                "TripleClipLoaderGGUF",
                "LoaderGGUFAdvanced",
                "GGUFSave"
            ],
            "title_aux": "gguf"
        }
    ],
    "https://github.com/caleboleary/ComfyUI-Arc2Face": [
        [
            "Arc2FaceEncoderLoader",
            "Arc2FaceFaceExtractor",
            "Arc2FaceGenerator",
            "Arc2FaceImageGridGenerator",
            "Arc2FaceImg2ImgGenerator",
            "Arc2FaceUNetLoader"
        ],
        {
            "title_aux": "Arc2Face ComfyUI Node Library"
        }
    ],
    "https://github.com/camenduru/ComfyUI-TostAI": [
        [
            "SendToTostAI"
        ],
        {
            "title_aux": "ComfyUI-TostAI"
        }
    ],
    "https://github.com/catboxanon/comfyui_stealth_pnginfo": [
        [
            "CatboxAnonSaveImageStealth"
        ],
        {
            "title_aux": "comfyui_stealth_pnginfo"
        }
    ],
    "https://github.com/cdb-boop/ComfyUI-Bringing-Old-Photos-Back-to-Life": [
        [
            "BOPBTL_BlendFaces",
            "BOPBTL_DetectEnhanceBlendFaces",
            "BOPBTL_DetectFaces",
            "BOPBTL_EnhanceFaces",
            "BOPBTL_EnhanceFacesAdvanced",
            "BOPBTL_LoadFaceDetectorModel",
            "BOPBTL_LoadFaceEnhancerModel",
            "BOPBTL_LoadRestoreOldPhotosModel",
            "BOPBTL_LoadScratchMaskModel",
            "BOPBTL_RestoreOldPhotos",
            "BOPBTL_ScratchMask"
        ],
        {
            "title_aux": "ComfyUI Bringing Old Photos Back to Life"
        }
    ],
    "https://github.com/cdb-boop/comfyui-image-round": [
        [
            "ComfyUI_Image_Round__ImageCropAdvanced",
            "ComfyUI_Image_Round__ImageRound",
            "ComfyUI_Image_Round__ImageRoundAdvanced"
        ],
        {
            "title_aux": "comfyui-image-round"
        }
    ],
    "https://github.com/cdxOo/comfyui-text-node-with-comments": [
        [
            "text-node-with-comments"
        ],
        {
            "title_aux": "Text Node With Comments (@cdxoo)"
        }
    ],
    "https://github.com/celoron/ComfyUI-VisualQueryTemplate": [
        [
            "VisualQueryTemplateNode"
        ],
        {
            "title_aux": "ComfyUI-VisualQueryTemplate"
        }
    ],
    "https://github.com/celsojr2013/comfyui_jamworks_client": [
        [
            "Jamworks_Download",
            "Jamworks_Login",
            "Shell_Command"
        ],
        {
            "title_aux": "comfyui_jamworks_client"
        }
    ],
    "https://github.com/celsojr2013/comfyui_simpletools": [
        [
            "GoogleTranslator",
            "Parameters",
            "ResolutionSolver"
        ],
        {
            "title_aux": "ComfyUI SimpleTools Suit"
        }
    ],
    "https://github.com/cenzijing/ComfyUI-Markmap": [
        [
            "MarkmapNode",
            "ReadHtmlNode"
        ],
        {
            "title_aux": "ComfyUI-Markmap"
        }
    ],
    "https://github.com/cerspense/ComfyUI_cspnodes": [
        [
            "DepthToNormalMap",
            "GetMP4Prompt",
            "ImageDirIterator",
            "IncrementEveryN",
            "Modelscopet2v",
            "Modelscopev2v",
            "RemapRange",
            "ResizeByImage",
            "SplitImageChannels",
            "VidDirIterator"
        ],
        {
            "title_aux": "cspnodes"
        }
    ],
    "https://github.com/ceruleandeep/ComfyUI-LLaVA-Captioner": [
        [
            "LlavaCaptioner"
        ],
        {
            "title_aux": "ComfyUI LLaVA Captioner"
        }
    ],
    "https://github.com/chakib-belgaid/ComfyUI-autosize": [
        [
            "CustomAutoSize",
            "SDXLAutoSize"
        ],
        {
            "title_aux": "ComfyUI-autosize"
        }
    ],
    "https://github.com/chakib-belgaid/Comfyui_Prompt_styler": [
        [
            "Prompt_Styler"
        ],
        {
            "title_aux": "ComfyUI Style Plugin"
        }
    ],
    "https://github.com/chandlergis/ComfyUI-IMG_Query": [
        [
            "ImageRequestNode"
        ],
        {
            "title_aux": "ComfyUI-IMG_Query"
        }
    ],
    "https://github.com/chandlergis/ComfyUI_EmojiOverlay": [
        [
            "Image Emoji Overlay"
        ],
        {
            "title_aux": "ComfyUI_EmojiOverlay"
        }
    ],
    "https://github.com/changwook987/ComfyUI-Small-Utility": [
        [
            "Eval",
            "RandomEmptyLatent"
        ],
        {
            "title_aux": "ComfyUI-Small-Utility"
        }
    ],
    "https://github.com/chaojie/ComfyUI-AniPortrait": [
        [
            "AniPortraitLoader",
            "AniPortraitRun",
            "Box2Video",
            "CoverVideo",
            "MaskList2Video"
        ],
        {
            "title_aux": "ComfyUI-AniPortrait"
        }
    ],
    "https://github.com/chaojie/ComfyUI-CameraCtrl-Wrapper": [
        [
            "CameraBasic",
            "CameraCombine",
            "CameraCtrlLoader",
            "CameraCtrlRun",
            "CameraJoin",
            "CameraTrajectory"
        ],
        {
            "title_aux": "ComfyUI-CameraCtrl-Wrapper"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Champ": [
        [
            "ChampLoader",
            "ChampRun",
            "ImageCombineOneColumn",
            "ImageCombineOneRow"
        ],
        {
            "title_aux": "ComfyUI-Champ"
        }
    ],
    "https://github.com/chaojie/ComfyUI-DragAnything": [
        [
            "DragAnythingLoader",
            "DragAnythingPipelineRun",
            "DragAnythingPipelineRunRandom",
            "DragAnythingRun",
            "DragAnythingRunRandom",
            "LoadText",
            "SaveText",
            "VHS_FILENAMES_STRING"
        ],
        {
            "title_aux": "ComfyUI-DragAnything"
        }
    ],
    "https://github.com/chaojie/ComfyUI-DragNUWA": [
        [
            "BrushMotion",
            "CompositeMotionBrush",
            "CompositeMotionBrushWithoutModel",
            "DragNUWA Run",
            "DragNUWA Run MotionBrush",
            "Get First Image",
            "Get Last Image",
            "InstantCameraMotionBrush",
            "InstantObjectMotionBrush",
            "Load CheckPoint DragNUWA",
            "Load MotionBrush From Optical Flow",
            "Load MotionBrush From Optical Flow Directory",
            "Load MotionBrush From Optical Flow Without Model",
            "Load MotionBrush From Tracking Points",
            "Load MotionBrush From Tracking Points Without Model",
            "Load Pose KeyPoints",
            "Loop",
            "LoopEnd_IMAGE",
            "LoopStart_IMAGE",
            "Split Tracking Points"
        ],
        {
            "title_aux": "ComfyUI-DragNUWA"
        }
    ],
    "https://github.com/chaojie/ComfyUI-DynamiCrafter": [
        [
            "DynamiCrafter Simple",
            "DynamiCrafterInterp Simple",
            "DynamiCrafterInterpLoader",
            "DynamiCrafterLoader"
        ],
        {
            "title_aux": "ComfyUI-DynamiCrafter"
        }
    ],
    "https://github.com/chaojie/ComfyUI-EasyAnimate": [
        [
            "EasyAnimateLoader",
            "EasyAnimateRun"
        ],
        {
            "title_aux": "ComfyUI-EasyAnimate"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Gemma": [
        [
            "GemmaLoader",
            "GemmaRun"
        ],
        {
            "title_aux": "ComfyUI-Gemma"
        }
    ],
    "https://github.com/chaojie/ComfyUI-I2VGEN-XL": [
        [
            "I2VGEN-XL Simple",
            "Modelscope Pipeline Loader"
        ],
        {
            "title_aux": "ComfyUI-I2VGEN-XL"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Img2Img-Turbo": [
        [
            "Img2ImgTurboEdgeLoader",
            "Img2ImgTurboEdgeRun",
            "Img2ImgTurboSketchLoader",
            "Img2ImgTurboSketchRun"
        ],
        {
            "title_aux": "ComfyUI-Img2Img-Turbo"
        }
    ],
    "https://github.com/chaojie/ComfyUI-LaVIT": [
        [
            "VHS_FILENAMES_STRING_LaVIT",
            "VideoLaVITI2I",
            "VideoLaVITI2V",
            "VideoLaVITI2VLong",
            "VideoLaVITLoader",
            "VideoLaVITT2V",
            "VideoLaVITT2VLong",
            "VideoLaVITUnderstandingImage",
            "VideoLaVITUnderstandingLoader",
            "VideoLaVITUnderstandingVideo",
            "VideoLaVITVideoDetokenizerLoader",
            "VideoLaVITVideoReconstruction"
        ],
        {
            "title_aux": "ComfyUI-LaVIT"
        }
    ],
    "https://github.com/chaojie/ComfyUI-LightGlue": [
        [
            "LightGlue Loader",
            "LightGlue Simple",
            "LightGlue Simple Multi"
        ],
        {
            "title_aux": "ComfyUI-LightGlue"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Moore-AnimateAnyone": [
        [
            "Moore-AnimateAnyone Denoising Unet",
            "Moore-AnimateAnyone Image Encoder",
            "Moore-AnimateAnyone Pipeline Loader",
            "Moore-AnimateAnyone Pose Guider",
            "Moore-AnimateAnyone Reference Unet",
            "Moore-AnimateAnyone Simple",
            "Moore-AnimateAnyone VAE"
        ],
        {
            "title_aux": "ComfyUI-Moore-AnimateAnyone"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Motion-Vector-Extractor": [
        [
            "Motion Vector Extractor",
            "VideoCombineThenPath"
        ],
        {
            "title_aux": "ComfyUI-Motion-Vector-Extractor"
        }
    ],
    "https://github.com/chaojie/ComfyUI-MotionCtrl": [
        [
            "Load Motion Camera Preset",
            "Load Motion Traj Preset",
            "Load Motionctrl Checkpoint",
            "Motionctrl Cond",
            "Motionctrl Sample",
            "Motionctrl Sample Simple",
            "Select Image Indices"
        ],
        {
            "title_aux": "ComfyUI-MotionCtrl"
        }
    ],
    "https://github.com/chaojie/ComfyUI-MotionCtrl-SVD": [
        [
            "Load Motionctrl-SVD Camera Preset",
            "Load Motionctrl-SVD Checkpoint",
            "Motionctrl-SVD Sample Simple"
        ],
        {
            "title_aux": "ComfyUI-MotionCtrl-SVD"
        }
    ],
    "https://github.com/chaojie/ComfyUI-MuseTalk": [
        [
            "MuseTalkCupAudio",
            "MuseTalkRun",
            "VHS_FILENAMES_STRING_MuseTalk"
        ],
        {
            "title_aux": "ComfyUI-MuseTalk"
        }
    ],
    "https://github.com/chaojie/ComfyUI-MuseV": [
        [
            "MuseVRun",
            "MuseVRunVid2Vid",
            "VHS_FILENAMES_STRING_MuseV"
        ],
        {
            "author": "infguo",
            "title_aux": "ComfyUI-MuseV"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Open-Sora": [
        [
            "OpenSoraLoader",
            "OpenSoraRun",
            "OpenSoraSampler"
        ],
        {
            "title_aux": "ComfyUI-Open-Sora"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Open-Sora-Plan": [
        [
            "OpenSoraPlanDecode",
            "OpenSoraPlanLoader",
            "OpenSoraPlanRun",
            "OpenSoraPlanSample"
        ],
        {
            "title_aux": "ComfyUI-Open-Sora-Plan"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Panda3d": [
        [
            "Panda3dAmbientLight",
            "Panda3dAttachNewNode",
            "Panda3dBase",
            "Panda3dDirectionalLight",
            "Panda3dLoadDepthModel",
            "Panda3dLoadModel",
            "Panda3dLoadTexture",
            "Panda3dModelMerge",
            "Panda3dTest",
            "Panda3dTextureMerge"
        ],
        {
            "title_aux": "ComfyUI-Panda3d"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Pymunk": [
        [
            "PygameRun",
            "PygameSurface",
            "PymunkDynamicBox",
            "PymunkDynamicCircle",
            "PymunkRun",
            "PymunkShapeMerge",
            "PymunkSpace",
            "PymunkStaticLine"
        ],
        {
            "title_aux": "ComfyUI-Pymunk"
        }
    ],
    "https://github.com/chaojie/ComfyUI-RAFT": [
        [
            "Load MotionBrush",
            "RAFT Run",
            "Save MotionBrush",
            "VizMotionBrush"
        ],
        {
            "title_aux": "ComfyUI-RAFT"
        }
    ],
    "https://github.com/chaojie/ComfyUI-SimDA": [
        [
            "SimDALoader",
            "SimDARun",
            "SimDATrain",
            "VHS_FILENAMES_STRING_SimDA"
        ],
        {
            "title_aux": "ComfyUI-SimDA"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Trajectory": [
        [
            "Trajectory_Canvas_Tab"
        ],
        {
            "author": "Lerc",
            "description": "This extension provides a full page image editor with mask support. There are two nodes, one to receive images from the editor and one to send images to the editor.",
            "nickname": "Canvas Tab",
            "title": "Canvas Tab",
            "title_aux": "ComfyUI-Trajectory"
        }
    ],
    "https://github.com/chaojie/ComfyUI-Video-Editing-X-Attention": [
        [
            "StringList",
            "VEXAGuidance",
            "VEXALoader",
            "VEXARun"
        ],
        {
            "title_aux": "ComfyUI-Video-Editing-X-Attention"
        }
    ],
    "https://github.com/chaojie/ComfyUI-dust3r": [
        [
            "CameraPoseVideo",
            "Dust3rLoader",
            "Dust3rRun"
        ],
        {
            "title_aux": "ComfyUI-dust3r"
        }
    ],
    "https://github.com/chaojie/ComfyUI_StreamingT2V": [
        [
            "LoadText_StreamingT2V",
            "PromptTravelIndex",
            "SaveText_StreamingT2V",
            "StreamingT2VLoaderAnimateDiff",
            "StreamingT2VLoaderAnimateDiffModel",
            "StreamingT2VLoaderEnhanceModel",
            "StreamingT2VLoaderModelscopeModel",
            "StreamingT2VLoaderModelscopeT2V",
            "StreamingT2VLoaderSVD",
            "StreamingT2VLoaderSVDModel",
            "StreamingT2VLoaderStreamModel",
            "StreamingT2VLoaderVidXTendModel",
            "StreamingT2VRunEnhanceStep",
            "StreamingT2VRunI2V",
            "StreamingT2VRunLongStep",
            "StreamingT2VRunLongStepVidXTendPipeline",
            "StreamingT2VRunLongStepVidXTendPipelineCustomRef",
            "StreamingT2VRunLongStepVidXTendPipelineCustomRefOutExtendOnly",
            "StreamingT2VRunLongStepVidXTendPipelinePromptTravel",
            "StreamingT2VRunShortStepAnimateDiff",
            "StreamingT2VRunShortStepModelscopeT2V",
            "StreamingT2VRunShortStepSVD",
            "StreamingT2VRunT2V",
            "VHS_FILENAMES_STRING_StreamingT2V"
        ],
        {
            "title_aux": "ComfyUI_StreamingT2V"
        }
    ],
    "https://github.com/chaosaiart/Chaosaiart-Nodes": [
        [
            "chaosaiart_Any_Switch",
            "chaosaiart_Any_Switch_Big_Number",
            "chaosaiart_Any_Switch_small",
            "chaosaiart_AutoNone_Switch_small",
            "chaosaiart_CheckpointLoader",
            "chaosaiart_CheckpointPrompt",
            "chaosaiart_CheckpointPrompt2",
            "chaosaiart_CheckpointPrompt_Frame",
            "chaosaiart_CheckpointPrompt_FrameMixer",
            "chaosaiart_ControlNetApply",
            "chaosaiart_ControlNetApply2",
            "chaosaiart_ControlNetApply3",
            "chaosaiart_Denoising_Switch",
            "chaosaiart_EmptyLatentImage",
            "chaosaiart_FramePromptCLIPEncode",
            "chaosaiart_Frame_Switch",
            "chaosaiart_KSampler1",
            "chaosaiart_KSampler2",
            "chaosaiart_KSampler3",
            "chaosaiart_KSampler4",
            "chaosaiart_KSampler5",
            "chaosaiart_KSampler7",
            "chaosaiart_KSampler_a1",
            "chaosaiart_KSampler_a1a",
            "chaosaiart_KSampler_a2",
            "chaosaiart_KSampler_expert_0",
            "chaosaiart_KSampler_expert_1",
            "chaosaiart_Ksampler_attribut",
            "chaosaiart_Load_Image_Batch",
            "chaosaiart_Load_Image_Batch_2img",
            "chaosaiart_MainPromptCLIPEncode",
            "chaosaiart_Number",
            "chaosaiart_Number2",
            "chaosaiart_Number_Counter",
            "chaosaiart_Number_Switch",
            "chaosaiart_Prompt",
            "chaosaiart_Prompt_Frame",
            "chaosaiart_Prompt_mixer_byFrame",
            "chaosaiart_SaveImage",
            "chaosaiart_Show_Info",
            "chaosaiart_Simple_Prompt",
            "chaosaiart_Style_Node",
            "chaosaiart_TextCLIPEncode",
            "chaosaiart_TextCLIPEncode_lora",
            "chaosaiart_adjust_color",
            "chaosaiart_any_array2input_1Input",
            "chaosaiart_any_array2input_all_big",
            "chaosaiart_any_array2input_all_small",
            "chaosaiart_any_input2array_big",
            "chaosaiart_any_input2array_small",
            "chaosaiart_controlnet_weidgth",
            "chaosaiart_convert",
            "chaosaiart_convert_Prompt",
            "chaosaiart_forPreview",
            "chaosaiart_image_loop",
            "chaosaiart_img2gif",
            "chaosaiart_img2video",
            "chaosaiart_lora",
            "chaosaiart_lora_advanced",
            "chaosaiart_merge_Folders",
            "chaosaiart_oneNode",
            "chaosaiart_reloadAny_Load",
            "chaosaiart_reloadAny_Save",
            "chaosaiart_reloadIMG_Load",
            "chaosaiart_reloadIMG_Save",
            "chaosaiart_reloadLatent_Load",
            "chaosaiart_reloadLatent_Save",
            "chaosaiart_restarter",
            "chaosaiart_restarter_advanced",
            "chaosaiart_video2img1",
            "chaosaiart_zoom_frame"
        ],
        {
            "title_aux": "Chaosaiart-Nodes"
        }
    ],
    "https://github.com/chenbaiyujason/ComfyUI_StepFun": [
        [
            "CombineStrings",
            "JSONParser",
            "StepFunClient",
            "TextImageChat",
            "VideoChat",
            "VideoFileUploader"
        ],
        {
            "title_aux": "ComfyUI-SCStepFun"
        }
    ],
    "https://github.com/cherninlab/logo-generator-comfyui": [
        [
            "GoogleFontsLogo"
        ],
        {
            "title_aux": "Logo Generator Node for ComfyUI"
        }
    ],
    "https://github.com/chesnokovivan/ComfyUI-Novakid": [
        [
            "Novakid Styler"
        ],
        {
            "title_aux": "ComfyUI-Novakid"
        }
    ],
    "https://github.com/chflame163/ComfyUI_CatVTON_Wrapper": [
        [
            "CatVTONWrapper"
        ],
        {
            "author": "chflame",
            "description": "CatVTON warpper for ComfyUI",
            "nickname": "CatVTON_Wrapper",
            "title": "CatVTON_Wrapper",
            "title_aux": "ComfyUI_CatVTON_Wrapper"
        }
    ],
    "https://github.com/chflame163/ComfyUI_FaceSimilarity": [
        [
            "Face Similarity"
        ],
        {
            "title_aux": "ComfyUI Face Similarity"
        }
    ],
    "https://github.com/chflame163/ComfyUI_LayerStyle": [
        [
            "LayerColor: AutoAdjust",
            "LayerColor: AutoAdjustV2",
            "LayerColor: AutoBrightness",
            "LayerColor: Brightness & Contrast",
            "LayerColor: BrightnessContrastV2",
            "LayerColor: Color of Shadow & Highlight",
            "LayerColor: ColorAdapter",
            "LayerColor: ColorBalance",
            "LayerColor: ColorTemperature",
            "LayerColor: ColorofShadowHighlightV2",
            "LayerColor: Exposure",
            "LayerColor: Gamma",
            "LayerColor: HSV",
            "LayerColor: LAB",
            "LayerColor: LUT Apply",
            "LayerColor: Levels",
            "LayerColor: RGB",
            "LayerColor: YUV",
            "LayerFilter: AddGrain",
            "LayerFilter: ChannelShake",
            "LayerFilter: ColorMap",
            "LayerFilter: Film",
            "LayerFilter: FilmV2",
            "LayerFilter: GaussianBlur",
            "LayerFilter: GaussianBlurV2",
            "LayerFilter: HDREffects",
            "LayerFilter: LightLeak",
            "LayerFilter: MotionBlur",
            "LayerFilter: Sharp & Soft",
            "LayerFilter: SkinBeauty",
            "LayerFilter: SoftLight",
            "LayerFilter: WaterColor",
            "LayerMask: BlendIf Mask",
            "LayerMask: CreateGradientMask",
            "LayerMask: ImageToMask",
            "LayerMask: MaskBoxDetect",
            "LayerMask: MaskByColor",
            "LayerMask: MaskEdgeShrink",
            "LayerMask: MaskEdgeUltraDetail",
            "LayerMask: MaskEdgeUltraDetail V2",
            "LayerMask: MaskGradient",
            "LayerMask: MaskGrain",
            "LayerMask: MaskGrow",
            "LayerMask: MaskInvert",
            "LayerMask: MaskMotionBlur",
            "LayerMask: MaskPreview",
            "LayerMask: MaskStroke",
            "LayerMask: PixelSpread",
            "LayerMask: RemBgUltra",
            "LayerMask: RmBgUltra V2",
            "LayerMask: SegformerB2ClothesUltra",
            "LayerMask: SegformerClothesPipelineLoader",
            "LayerMask: SegformerFashionPipelineLoader",
            "LayerMask: SegformerUltraV2",
            "LayerMask: Shadow & Highlight Mask",
            "LayerMask: ShadowHighlightMaskV2",
            "LayerStyle: ColorOverlay",
            "LayerStyle: ColorOverlay V2",
            "LayerStyle: DropShadow",
            "LayerStyle: DropShadow V2",
            "LayerStyle: DropShadow V3",
            "LayerStyle: Gradient Map",
            "LayerStyle: GradientOverlay",
            "LayerStyle: GradientOverlay V2",
            "LayerStyle: InnerGlow",
            "LayerStyle: InnerGlow V2",
            "LayerStyle: InnerShadow",
            "LayerStyle: InnerShadow V2",
            "LayerStyle: OuterGlow",
            "LayerStyle: OuterGlow V2",
            "LayerStyle: Stroke",
            "LayerStyle: Stroke V2",
            "LayerUtility: AnyRerouter",
            "LayerUtility: BatchSelector",
            "LayerUtility: Boolean",
            "LayerUtility: BooleanOperator",
            "LayerUtility: BooleanOperatorV2",
            "LayerUtility: CheckMask",
            "LayerUtility: CheckMaskV2",
            "LayerUtility: ChoiceTextPreset",
            "LayerUtility: ColorImage",
            "LayerUtility: ColorImage V2",
            "LayerUtility: ColorName",
            "LayerUtility: ColorPicker",
            "LayerUtility: CropBoxResolve",
            "LayerUtility: CropByMask",
            "LayerUtility: CropByMask V2",
            "LayerUtility: CropByMask V3",
            "LayerUtility: ExtendCanvas",
            "LayerUtility: ExtendCanvasV2",
            "LayerUtility: Float",
            "LayerUtility: GetImageSize",
            "LayerUtility: GetMainColors",
            "LayerUtility: GetMainColorsV2",
            "LayerUtility: GradientImage",
            "LayerUtility: GradientImage V2",
            "LayerUtility: GrayValue",
            "LayerUtility: HLFrequencyDetailRestore",
            "LayerUtility: HSV Value",
            "LayerUtility: ICMask",
            "LayerUtility: ICMaskCropBack",
            "LayerUtility: If",
            "LayerUtility: ImageBlend",
            "LayerUtility: ImageBlend V2",
            "LayerUtility: ImageBlendAdvance",
            "LayerUtility: ImageBlendAdvance V2",
            "LayerUtility: ImageBlendAdvance V3",
            "LayerUtility: ImageChannelMerge",
            "LayerUtility: ImageChannelSplit",
            "LayerUtility: ImageCombineAlpha",
            "LayerUtility: ImageHub",
            "LayerUtility: ImageMaskScaleAs",
            "LayerUtility: ImageMaskScaleAsV2",
            "LayerUtility: ImageOpacity",
            "LayerUtility: ImageReel",
            "LayerUtility: ImageReelComposit",
            "LayerUtility: ImageRemoveAlpha",
            "LayerUtility: ImageScaleByAspectRatio",
            "LayerUtility: ImageScaleByAspectRatio V2",
            "LayerUtility: ImageScaleRestore",
            "LayerUtility: ImageScaleRestore V2",
            "LayerUtility: ImageShift",
            "LayerUtility: ImageTaggerSave",
            "LayerUtility: Integer",
            "LayerUtility: LayerImageTransform",
            "LayerUtility: LayerMaskTransform",
            "LayerUtility: LoadVQAModel",
            "LayerUtility: NameToColor",
            "LayerUtility: NumberCalculator",
            "LayerUtility: NumberCalculatorV2",
            "LayerUtility: PrintInfo",
            "LayerUtility: PurgeVRAM",
            "LayerUtility: QueueStop",
            "LayerUtility: RGB Value",
            "LayerUtility: RandomGenerator",
            "LayerUtility: RandomGeneratorV2",
            "LayerUtility: RestoreCropBox",
            "LayerUtility: RoundedRectangle",
            "LayerUtility: Seed",
            "LayerUtility: SimpleTextImage",
            "LayerUtility: String",
            "LayerUtility: StringCondition",
            "LayerUtility: SwitchCase",
            "LayerUtility: TextBox",
            "LayerUtility: TextImage",
            "LayerUtility: TextImage V2",
            "LayerUtility: TextJoin",
            "LayerUtility: TextJoinV2",
            "LayerUtility: TextPreseter",
            "LayerUtility: VQAPrompt",
            "LayerUtility: XY to Percent"
        ],
        {
            "author": "chflame",
            "description": "A set of nodes for ComfyUI that can composite layer and mask to achieve Photoshop like functionality.",
            "nickname": "LayerStyle",
            "title": "LayerStyle",
            "title_aux": "ComfyUI Layer Style"
        }
    ],
    "https://github.com/chflame163/ComfyUI_LayerStyle_Advance": [
        [
            "LayerMask: BBoxJoin",
            "LayerMask: BenUltra",
            "LayerMask: BiRefNetUltra",
            "LayerMask: BiRefNetUltraV2",
            "LayerMask: DrawBBoxMask",
            "LayerMask: DrawBBoxMaskV2",
            "LayerMask: EVFSAMUltra",
            "LayerMask: Florence2Ultra",
            "LayerMask: HumanPartsUltra",
            "LayerMask: LoadBenModel",
            "LayerMask: LoadBiRefNetModel",
            "LayerMask: LoadBiRefNetModelV2",
            "LayerMask: LoadFlorence2Model",
            "LayerMask: LoadSegmentAnythingModels",
            "LayerMask: MaskByDifferent",
            "LayerMask: MediapipeFacialSegment",
            "LayerMask: ObjectDetectorFL2",
            "LayerMask: ObjectDetectorGemini",
            "LayerMask: ObjectDetectorMask",
            "LayerMask: ObjectDetectorYOLO8",
            "LayerMask: ObjectDetectorYOLOWorld",
            "LayerMask: PersonMaskUltra",
            "LayerMask: PersonMaskUltra V2",
            "LayerMask: SAM2Ultra",
            "LayerMask: SAM2VideoUltra",
            "LayerMask: SegmentAnythingUltra",
            "LayerMask: SegmentAnythingUltra V2",
            "LayerMask: SegmentAnythingUltra V3",
            "LayerMask: TransparentBackgroundUltra",
            "LayerMask: YoloV8Detect",
            "LayerUtility: AddBlindWaterMark",
            "LayerUtility: CreateQRCode",
            "LayerUtility: DecodeQRCode",
            "LayerUtility: DeepSeekAPI",
            "LayerUtility: Florence2Image2Prompt",
            "LayerUtility: Gemini",
            "LayerUtility: GetColorTone",
            "LayerUtility: GetColorToneV2",
            "LayerUtility: ImageAutoCrop",
            "LayerUtility: ImageAutoCrop V2",
            "LayerUtility: ImageAutoCrop V3",
            "LayerUtility: ImageRewardFilter",
            "LayerUtility: JoyCaption2",
            "LayerUtility: JoyCaption2ExtraOptions",
            "LayerUtility: JoyCaption2Split",
            "LayerUtility: LaMa",
            "LayerUtility: LlamaVision",
            "LayerUtility: LoadJoyCaption2Model",
            "LayerUtility: LoadPSD",
            "LayerUtility: LoadSmolLM2Model",
            "LayerUtility: LoadSmolVLMModel",
            "LayerUtility: PhiPrompt",
            "LayerUtility: PromptEmbellish",
            "LayerUtility: PromptTagger",
            "LayerUtility: QWenImage2Prompt",
            "LayerUtility: SD3NegativeConditioning",
            "LayerUtility: SaveImagePlus",
            "LayerUtility: ShowBlindWaterMark",
            "LayerUtility: SmolLM2",
            "LayerUtility: SmolVLM",
            "LayerUtility: UserPromptGeneratorReplaceWord",
            "LayerUtility: UserPromptGeneratorTxt2ImgPrompt",
            "LayerUtility: UserPromptGeneratorTxt2ImgPromptWithReference",
            "LayerUtility: ZhipuGLM4",
            "LayerUtility: ZhipuGLM4V"
        ],
        {
            "author": "chflame",
            "description": "A set of nodes for ComfyUI that can composite layer and mask to achieve Photoshop like functionality.",
            "nickname": "LayerStyle",
            "title": "LayerStyle",
            "title_aux": "ComfyUI_LayerStyle_Advance"
        }
    ],
    "https://github.com/chflame163/ComfyUI_MSSpeech_TTS": [
        [
            "Input Trigger",
            "MicrosoftSpeech_TTS",
            "Play Sound",
            "Play Sound (loop)"
        ],
        {
            "title_aux": "ComfyUI_MSSpeech_TTS"
        }
    ],
    "https://github.com/chflame163/ComfyUI_OmniGen_Wrapper": [
        [
            "dzOmniGenWrapper"
        ],
        {
            "title_aux": "ComfyUI_OmniGen_Wrapper"
        }
    ],
    "https://github.com/chflame163/ComfyUI_WordCloud": [
        [
            "ComfyWordCloud",
            "LoadTextFile",
            "RGB_Picker"
        ],
        {
            "title_aux": "ComfyUI_WordCloud"
        }
    ],
    "https://github.com/chibiace/ComfyUI-Chibi-Nodes": [
        [
            "ConditionText",
            "ConditionTextMulti",
            "ConditionTextPrompts",
            "ImageAddText",
            "ImageSimpleResize",
            "ImageSizeInfo",
            "ImageTool",
            "Int2String",
            "LoadEmbedding",
            "LoadImageExtended",
            "Loader",
            "Prompts",
            "RandomResolutionLatent",
            "SaveImages",
            "SeedGenerator",
            "SimpleSampler",
            "TextSplit",
            "Textbox",
            "Wildcards"
        ],
        {
            "title_aux": "ComfyUI-Chibi-Nodes"
        }
    ],
    "https://github.com/choey/Comfy-Topaz": [
        [
            "TopazPhotoAI",
            "TopazSharpenSettings",
            "TopazUpscaleSettings"
        ],
        {
            "title_aux": "Comfy-Topaz"
        }
    ],
    "https://github.com/chris-arsenault/ComfyUI-AharaNodes": [
        [
            "FrameSegmenter",
            "FrameSegmenterIndexer",
            "RepeatSampler",
            "RepeatSamplerConfigNode",
            "RepeatSamplerConfigPatchLatent",
            "RepeatSamplerConfigPatchModel"
        ],
        {
            "title_aux": "ComfyUI-AharaNodes"
        }
    ],
    "https://github.com/chris-the-wiz/EmbeddingsCurveEditor_ComfyUI": [
        [
            "Embeddings Curve Editor"
        ],
        {
            "title_aux": "EmbeddingsCurveEditor_ComfyUI"
        }
    ],
    "https://github.com/chrisfreilich/virtuoso-nodes": [
        [
            "BlackAndWhite",
            "BlendIf",
            "BlendModes",
            "ColorBalance",
            "ColorBalanceAdvanced",
            "GaussianBlur",
            "GaussianBlurDepth",
            "HueSat",
            "HueSatAdvanced",
            "LensBlur",
            "LensBlurDepth",
            "Levels",
            "MergeRGB",
            "MotionBlur",
            "MotionBlurDepth",
            "SelectiveColor",
            "SolidColor",
            "SolidColorHSV",
            "SolidColorRGB",
            "SplitRGB"
        ],
        {
            "author": "Chris Freilich",
            "description": "This extension provides a \"Levels\" node.",
            "nickname": "Virtuoso Pack - Contrast",
            "title": "Virtuoso Pack - Contrast",
            "title_aux": "Virtuoso Nodes for ComfyUI"
        }
    ],
    "https://github.com/chrisgoringe/cg-image-picker": [
        [
            "Preview Chooser",
            "Preview Chooser Fabric",
            "Simple Chooser"
        ],
        {
            "author": "chrisgoringe",
            "description": "Custom nodes that preview images and pause the workflow to allow the user to select one or more to progress",
            "nickname": "Image Chooser",
            "title": "Image Chooser",
            "title_aux": "Image chooser"
        }
    ],
    "https://github.com/chrisgoringe/cg-noisetools": [
        [
            "Batch Noise Simulate",
            "Mix Noise",
            "Seperable Batch Noise",
            "Shape Noise",
            "Split Sigmas with Rewind"
        ],
        {
            "title_aux": "Noise variation and batch noise tools"
        }
    ],
    "https://github.com/chrisgoringe/cg-use-everywhere": [
        [
            "Seed Everywhere"
        ],
        {
            "nodename_pattern": "(^(Prompts|Anything) Everywhere|Simple String)",
            "title_aux": "Use Everywhere (UE Nodes)"
        }
    ],
    "https://github.com/chrissy0/chris-comfyui-nodes": [
        [
            "PadImageSquare"
        ],
        {
            "title_aux": "chris-comfyui-nodes"
        }
    ],
    "https://github.com/christian-byrne/audio-separation-nodes-comfyui": [
        [
            "AudioCombine",
            "AudioCrop",
            "AudioGetTempo",
            "AudioSeparation",
            "AudioSpeedShift",
            "AudioTempoMatch",
            "AudioVideoCombine"
        ],
        {
            "title_aux": "audio-separation-nodes-comfyui"
        }
    ],
    "https://github.com/christian-byrne/img2colors-comfyui-node": [
        [
            "bmy_Img2ColorNode"
        ],
        {
            "author": "christian-byrne",
            "description": "",
            "nickname": "img2color",
            "title": "Img2Color Node - Detect and describe color palettes in images",
            "title_aux": "Img2color - Extract Colors from Image"
        }
    ],
    "https://github.com/christian-byrne/img2txt-comfyui-nodes": [
        [
            "img2txt BLIP/Llava Multimodel Tagger"
        ],
        {
            "author": "christian-byrne",
            "title": "Img2Txt auto captioning",
            "title_aux": "img2txt-comfyui-nodes"
        }
    ],
    "https://github.com/christian-byrne/size-match-compositing-nodes": [
        [
            "Composite Alpha Layer",
            "Size Match Images/Masks"
        ],
        {
            "title_aux": "Node - Size Matcher"
        }
    ],
    "https://github.com/christian-byrne/youtube-dl-comfyui": [
        [
            "YoutubeDL"
        ],
        {
            "title_aux": "youtube-dl-comfyui"
        }
    ],
    "https://github.com/ciga2011/ComfyUI-MarkItDown": [
        [
            "WIZ_AUDIO2MARKDOWN",
            "WIZ_EXCEL2MARKDOWN",
            "WIZ_HTML2MARKDOWN",
            "WIZ_IMAGE2MARKDOWN",
            "WIZ_IPYNB2MARKDOWN",
            "WIZ_LLM_CLIENT",
            "WIZ_MARKITDOWN",
            "WIZ_PDF2MARKDOWN",
            "WIZ_POWERPOINT2MARKDOWN",
            "WIZ_WORD2MARKDOWN"
        ],
        {
            "title_aux": "ComfyUI MarkItDown"
        }
    ],
    "https://github.com/ciga2011/ComfyUI-Pollinations": [
        [
            "PollinationsNode"
        ],
        {
            "title_aux": "ComfyUI Pollinations"
        }
    ],
    "https://github.com/ciri/comfyui-model-downloader": [
        [
            "Auto Model Downloader",
            "CivitAI Downloader",
            "HF Downloader"
        ],
        {
            "title_aux": "ComfyUI Model Downloader"
        }
    ],
    "https://github.com/city96/ComfyUI-GGUF": [
        [
            "CLIPLoaderGGUF",
            "DualCLIPLoaderGGUF",
            "TripleCLIPLoaderGGUF",
            "UnetLoaderGGUF",
            "UnetLoaderGGUFAdvanced"
        ],
        {
            "preemptions": [
                "CLIPLoaderGGUF",
                "DualCLIPLoaderGGUF",
                "TripleCLIPLoaderGGUF",
                "UnetLoaderGGUF",
                "UnetLoaderGGUFAdvanced"
            ],
            "title_aux": "ComfyUI-GGUF"
        }
    ],
    "https://github.com/city96/ComfyUI_ColorMod": [
        [
            "CV2Tonemap",
            "CV2TonemapDrago",
            "CV2TonemapDurand",
            "CV2TonemapMantiuk",
            "CV2TonemapReinhard",
            "ColorModCompress",
            "ColorModEdges",
            "ColorModMove",
            "ColorModPivot",
            "ColorspaceConvert",
            "HDRCreate",
            "HDRExposureFusion",
            "LoadImageHDR",
            "LoadImageHighPrec",
            "PreviewImageHighPrec",
            "SaveImageHDR",
            "SaveImageHighPrec"
        ],
        {
            "title_aux": "ComfyUI_ColorMod"
        }
    ],
    "https://github.com/city96/ComfyUI_DiT": [
        [
            "DiTCheckpointLoader",
            "DiTCheckpointLoaderSimple",
            "DiTLabelCombine",
            "DiTLabelSelect",
            "DiTSampler"
        ],
        {
            "title_aux": "ComfyUI_DiT [WIP]"
        }
    ],
    "https://github.com/city96/ComfyUI_ExtraModels": [
        [
            "DiTCondLabelEmpty",
            "DiTCondLabelSelect",
            "DitCheckpointLoader",
            "EmptyDCAELatentImage",
            "EmptySanaLatentImage",
            "ExtraVAELoader",
            "GemmaLoader",
            "GemmaTextEncode",
            "HYDiTCheckpointLoader",
            "HYDiTSrcSizeCond",
            "HYDiTTextEncode",
            "HYDiTTextEncodeSimple",
            "HYDiTTextEncoderLoader",
            "MiaoBiCLIPLoader",
            "MiaoBiDiffusersLoader",
            "OverrideCLIPDevice",
            "OverrideVAEDevice",
            "PixArtCheckpointLoader",
            "PixArtCheckpointLoaderSimple",
            "PixArtControlNetCond",
            "PixArtLoraLoader",
            "PixArtResolutionCond",
            "PixArtResolutionSelect",
            "PixArtT5FromSD3CLIP",
            "PixArtT5TextEncode",
            "SanaCheckpointLoader",
            "SanaResolutionCond",
            "SanaResolutionSelect",
            "SanaTextEncode",
            "T5TextEncode",
            "T5v11Loader"
        ],
        {
            "title_aux": "Extra Models for ComfyUI"
        }
    ],
    "https://github.com/city96/ComfyUI_NetDist": [
        [
            "CombineImageBatch",
            "FetchRemote",
            "LoadCurrentWorkflowJSON",
            "LoadDiskWorkflowJSON",
            "LoadImageUrl",
            "LoadLatentNumpy",
            "LoadLatentUrl",
            "RemoteChainEnd",
            "RemoteChainStart",
            "RemoteQueueSimple",
            "RemoteQueueWorker",
            "SaveDiskWorkflowJSON",
            "SaveImageUrl",
            "SaveLatentNumpy"
        ],
        {
            "title_aux": "ComfyUI_NetDist"
        }
    ],
    "https://github.com/city96/SD-Latent-Interposer": [
        [
            "LatentInterposer"
        ],
        {
            "title_aux": "Latent-Interposer"
        }
    ],
    "https://github.com/city96/SD-Latent-Upscaler": [
        [
            "LatentUpscaler"
        ],
        {
            "title_aux": "SD-Latent-Upscaler"
        }
    ],
    "https://github.com/civen-cn/ComfyUI-PaddleOcr": [
        [
            "OcrBlur",
            "OcrBoxMask",
            "OcrImageText"
        ],
        {
            "title_aux": "ComfyUI-PaddleOcr"
        }
    ],
    "https://github.com/civen-cn/ComfyUI-Whisper-Translator": [
        [
            "Add Subtitles To FramesX",
            "Apply WhisperX"
        ],
        {
            "title_aux": "ComfyUI Whisper Translator"
        }
    ],
    "https://github.com/civitai/civitai_comfy_nodes": [
        [
            "CivitAI_Checkpoint_Loader",
            "CivitAI_Lora_Loader"
        ],
        {
            "title_aux": "Civitai Comfy Nodes"
        }
    ],
    "https://github.com/claussteinmassl/ComfyUI-CS-CustomNodes": [
        [
            "CS Transform"
        ],
        {
            "title_aux": "CS Transform Node for ComfyUI"
        }
    ],
    "https://github.com/clhui/ComfyUi-clh-Tool": [
        [
            "EchartGraph_clh",
            "EchartOptionByPath_clh",
            "EchartOption_clh",
            "INTConstant_clh",
            "JavaScript_clh",
            "JoinStringMulti_clh",
            "MathExpression_clh",
            "SetRedis|clh",
            "ShowText_clh",
            "SomethingToString_clh",
            "String2FatLabels_clh",
            "String2Image_clh",
            "StringConstant_clh"
        ],
        {
            "author": "Dr.Lt.Data",
            "description": "This extension offers various detector nodes and detailer nodes that allow you to configure a workflow that automatically enhances facial details. And provide iterative upscaler.",
            "nickname": "CLH Simple Tool",
            "title": "CLH simple Tool",
            "title_aux": "Clh Tool for ComfyUI"
        }
    ],
    "https://github.com/codeprimate/ComfyUI-MaskContourProcessor": [
        [
            "MaskContourProcessor"
        ],
        {
            "title_aux": "ComfyUI Mask Contour Processor"
        }
    ],
    "https://github.com/comfyanonymous/ComfyUI": [
        [
            "AddNoise",
            "AlignYourStepsScheduler",
            "BasicGuider",
            "BasicScheduler",
            "BetaSamplingScheduler",
            "CFGGuider",
            "CLIPAttentionMultiply",
            "CLIPLoader",
            "CLIPMergeAdd",
            "CLIPMergeSimple",
            "CLIPMergeSubtract",
            "CLIPSave",
            "CLIPSetLastLayer",
            "CLIPTextEncode",
            "CLIPTextEncodeControlnet",
            "CLIPTextEncodeFlux",
            "CLIPTextEncodeHunyuanDiT",
            "CLIPTextEncodePixArtAlpha",
            "CLIPTextEncodeSD3",
            "CLIPTextEncodeSDXL",
            "CLIPTextEncodeSDXLRefiner",
            "CLIPVisionEncode",
            "CLIPVisionLoader",
            "Canny",
            "CheckpointLoader",
            "CheckpointLoaderSimple",
            "CheckpointSave",
            "ConditioningAverage",
            "ConditioningCombine",
            "ConditioningConcat",
            "ConditioningSetArea",
            "ConditioningSetAreaPercentage",
            "ConditioningSetAreaStrength",
            "ConditioningSetMask",
            "ConditioningSetTimestepRange",
            "ConditioningStableAudio",
            "ConditioningZeroOut",
            "ControlNetApply",
            "ControlNetApplyAdvanced",
            "ControlNetApplySD3",
            "ControlNetInpaintingAliMamaApply",
            "ControlNetLoader",
            "CropMask",
            "DiffControlNetLoader",
            "DifferentialDiffusion",
            "DiffusersLoader",
            "DisableNoise",
            "DualCFGGuider",
            "DualCLIPLoader",
            "EmptyCosmosLatentVideo",
            "EmptyHunyuanLatentVideo",
            "EmptyImage",
            "EmptyLTXVLatentVideo",
            "EmptyLatentAudio",
            "EmptyLatentImage",
            "EmptyMochiLatentVideo",
            "EmptySD3LatentImage",
            "ExponentialScheduler",
            "FeatherMask",
            "FlipSigmas",
            "FluxGuidance",
            "FreeU",
            "FreeU_V2",
            "GITSScheduler",
            "GLIGENLoader",
            "GLIGENTextBoxApply",
            "GrowMask",
            "HyperTile",
            "HypernetworkLoader",
            "ImageBatch",
            "ImageBlend",
            "ImageBlur",
            "ImageColorToMask",
            "ImageCompositeMasked",
            "ImageCrop",
            "ImageFromBatch",
            "ImageInvert",
            "ImageOnlyCheckpointLoader",
            "ImageOnlyCheckpointSave",
            "ImagePadForOutpaint",
            "ImageQuantize",
            "ImageScale",
            "ImageScaleBy",
            "ImageScaleToTotalPixels",
            "ImageSharpen",
            "ImageToMask",
            "ImageUpscaleWithModel",
            "InpaintModelConditioning",
            "InstructPixToPixConditioning",
            "InvertMask",
            "JoinImageWithAlpha",
            "KSampler",
            "KSamplerAdvanced",
            "KSamplerSelect",
            "KarrasScheduler",
            "LTXVConditioning",
            "LTXVImgToVideo",
            "LTXVScheduler",
            "LaplaceScheduler",
            "LatentAdd",
            "LatentApplyOperation",
            "LatentApplyOperationCFG",
            "LatentBatch",
            "LatentBatchSeedBehavior",
            "LatentBlend",
            "LatentComposite",
            "LatentCompositeMasked",
            "LatentCrop",
            "LatentFlip",
            "LatentFromBatch",
            "LatentInterpolate",
            "LatentMultiply",
            "LatentOperationSharpen",
            "LatentOperationTonemapReinhard",
            "LatentRotate",
            "LatentSubtract",
            "LatentUpscale",
            "LatentUpscaleBy",
            "Load3D",
            "Load3DAnimation",
            "LoadAudio",
            "LoadImage",
            "LoadImageMask",
            "LoadLatent",
            "LoraLoader",
            "LoraLoaderModelOnly",
            "LoraSave",
            "Mahiro",
            "MaskComposite",
            "MaskToImage",
            "ModelMergeAdd",
            "ModelMergeAuraflow",
            "ModelMergeBlocks",
            "ModelMergeFlux1",
            "ModelMergeLTXV",
            "ModelMergeMochiPreview",
            "ModelMergeSD1",
            "ModelMergeSD2",
            "ModelMergeSD35_Large",
            "ModelMergeSD3_2B",
            "ModelMergeSDXL",
            "ModelMergeSimple",
            "ModelMergeSubtract",
            "ModelSamplingAuraFlow",
            "ModelSamplingContinuousEDM",
            "ModelSamplingContinuousV",
            "ModelSamplingDiscrete",
            "ModelSamplingFlux",
            "ModelSamplingLTXV",
            "ModelSamplingSD3",
            "ModelSamplingStableCascade",
            "ModelSave",
            "Morphology",
            "PatchModelAddDownscale",
            "PerpNeg",
            "PerpNegGuider",
            "PerturbedAttentionGuidance",
            "PhotoMakerEncode",
            "PhotoMakerLoader",
            "PolyexponentialScheduler",
            "PorterDuffImageComposite",
            "Preview3D",
            "PreviewAudio",
            "PreviewImage",
            "RandomNoise",
            "RebatchImages",
            "RebatchLatents",
            "RepeatImageBatch",
            "RepeatLatentBatch",
            "RescaleCFG",
            "SDTurboScheduler",
            "SD_4XUpscale_Conditioning",
            "SV3D_Conditioning",
            "SVD_img2vid_Conditioning",
            "SamplerCustom",
            "SamplerCustomAdvanced",
            "SamplerDPMAdaptative",
            "SamplerDPMPP_2M_SDE",
            "SamplerDPMPP_2S_Ancestral",
            "SamplerDPMPP_3M_SDE",
            "SamplerDPMPP_SDE",
            "SamplerEulerAncestral",
            "SamplerEulerAncestralCFGPP",
            "SamplerEulerCFGpp",
            "SamplerLCMUpscale",
            "SamplerLMS",
            "SaveAnimatedPNG",
            "SaveAnimatedWEBP",
            "SaveAudio",
            "SaveImage",
            "SaveImageWebsocket",
            "SaveLatent",
            "SelfAttentionGuidance",
            "SetLatentNoiseMask",
            "SetUnionControlNetType",
            "SkipLayerGuidanceDiT",
            "SkipLayerGuidanceSD3",
            "SolidMask",
            "SplitImageWithAlpha",
            "SplitSigmas",
            "SplitSigmasDenoise",
            "StableCascade_EmptyLatentImage",
            "StableCascade_StageB_Conditioning",
            "StableCascade_StageC_VAEEncode",
            "StableCascade_SuperResolutionControlnet",
            "StableZero123_Conditioning",
            "StableZero123_Conditioning_Batched",
            "StubConstantImage",
            "StubFloat",
            "StubImage",
            "StubInt",
            "StubMask",
            "StyleModelApply",
            "StyleModelLoader",
            "TestAccumulateNode",
            "TestAccumulationGetItemNode",
            "TestAccumulationGetLengthNode",
            "TestAccumulationHeadNode",
            "TestAccumulationSetItemNode",
            "TestAccumulationTailNode",
            "TestAccumulationToListNode",
            "TestBoolOperationNode",
            "TestCustomIsChanged",
            "TestCustomValidation1",
            "TestCustomValidation2",
            "TestCustomValidation3",
            "TestCustomValidation4",
            "TestCustomValidation5",
            "TestDynamicDependencyCycle",
            "TestExecutionBlocker",
            "TestFloatConditions",
            "TestForLoopClose",
            "TestForLoopOpen",
            "TestIntConditions",
            "TestIntMathOperation",
            "TestIsChangedWithConstants",
            "TestLazyMixImages",
            "TestListToAccumulationNode",
            "TestMakeListNode",
            "TestMixedExpansionReturns",
            "TestStringConditions",
            "TestToBoolNode",
            "TestVariadicAverage",
            "TestWhileLoopClose",
            "TestWhileLoopOpen",
            "ThresholdMask",
            "TomePatchModel",
            "TorchCompileModel",
            "TripleCLIPLoader",
            "UNETLoader",
            "UNetCrossAttentionMultiply",
            "UNetSelfAttentionMultiply",
            "UNetTemporalAttentionMultiply",
            "UpscaleModelLoader",
            "VAEDecode",
            "VAEDecodeAudio",
            "VAEDecodeTiled",
            "VAEEncode",
            "VAEEncodeAudio",
            "VAEEncodeForInpaint",
            "VAEEncodeTiled",
            "VAELoader",
            "VAESave",
            "VPScheduler",
            "VideoLinearCFGGuidance",
            "VideoTriangleCFGGuidance",
            "WebcamCapture",
            "unCLIPCheckpointLoader",
            "unCLIPConditioning"
        ],
        {
            "title_aux": "ComfyUI"
        }
    ],
    "https://github.com/comfyanonymous/ComfyUI_TensorRT": [
        [
            "DYNAMIC_TRT_MODEL_CONVERSION",
            "STATIC_TRT_MODEL_CONVERSION",
            "TensorRTLoader"
        ],
        {
            "title_aux": "TensorRT Node for ComfyUI"
        }
    ],
    "https://github.com/comfyanonymous/ComfyUI_experiments": [
        [
            "ModelMergeBlockNumber",
            "ModelMergeSDXL",
            "ModelMergeSDXLDetailedTransformers",
            "ModelMergeSDXLTransformers",
            "ModelSamplerTonemapNoiseTest",
            "ReferenceOnlySimple",
            "RescaleClassifierFreeGuidanceTest",
            "TonemapNoiseWithRescaleCFG"
        ],
        {
            "title_aux": "ComfyUI_experiments"
        }
    ],
    "https://github.com/concarne000/ConCarneNode": [
        [
            "BingImageGrabber",
            "Hermes",
            "Zephyr"
        ],
        {
            "title_aux": "ConCarneNode"
        }
    ],
    "https://github.com/conquestace/ComfyUI-ImageUploader": [
        [
            "ImageUploader"
        ],
        {
            "author": "ConquestAce",
            "description": "Upload to temporary websites with API.",
            "nickname": "Image Uploader",
            "title": "Image Uploader",
            "title_aux": "Image Uploader"
        }
    ],
    "https://github.com/coreyryanhanson/ComfyQR": [
        [
            "comfy-qr-by-image-size",
            "comfy-qr-by-module-size",
            "comfy-qr-by-module-split",
            "comfy-qr-mask_errors"
        ],
        {
            "title_aux": "ComfyQR"
        }
    ],
    "https://github.com/coreyryanhanson/ComfyQR-scanning-nodes": [
        [
            "comfy-qr-read",
            "comfy-qr-validate"
        ],
        {
            "title_aux": "ComfyQR-scanning-nodes"
        }
    ],
    "https://github.com/cozy-comfyui/cozy_comm": [
        [
            "CozyDiscordPost"
        ],
        {
            "nodename_pattern": " \\(cozy\\)",
            "title_aux": "Cozy Communication"
        }
    ],
    "https://github.com/cozymantis/cozy-utils-comfyui-nodes": [
        [
            "Cozy Sampler Options"
        ],
        {
            "title_aux": "Cozy Utils"
        }
    ],
    "https://github.com/cozymantis/human-parser-comfyui-node": [
        [
            "Cozy Human Parser ATR",
            "Cozy Human Parser LIP",
            "Cozy Human Parser Pascal"
        ],
        {
            "title_aux": "Cozy Human Parser"
        }
    ],
    "https://github.com/cozymantis/pose-generator-comfyui-node": [
        [
            "Cozy Pose Body Reference",
            "Cozy Pose Face Reference"
        ],
        {
            "title_aux": "Cozy Reference Pose Generator"
        }
    ],
    "https://github.com/cr7Por/ComfyUI_DepthFlow": [
        [
            "DepthFlowSimple"
        ],
        {
            "title_aux": "ComfyUI_DepthFlow"
        }
    ],
    "https://github.com/crystian/ComfyUI-Crystools": [
        [],
        {
            "author": "Crystian",
            "description": "Plugins for multiples uses, mainly for debugging, you need them! IG: https://www.instagram.com/crystian.ia",
            "nickname": "Crystools",
            "nodename_pattern": " \\[Crystools\\]$",
            "title": "Crystools",
            "title_aux": "Crystools"
        }
    ],
    "https://github.com/cubiq/Block_Patcher_ComfyUI": [
        [
            "FluxBlockPatcherSampler",
            "FluxBlockShareKV",
            "PlotBlockParams"
        ],
        {
            "title_aux": "Flux blocks patcher sampler"
        }
    ],
    "https://github.com/cubiq/ComfyUI_FaceAnalysis": [
        [
            "FaceAlign",
            "FaceAnalysisModels",
            "FaceBoundingBox",
            "FaceEmbedDistance",
            "FaceSegmentation",
            "FaceWarp"
        ],
        {
            "title_aux": "Face Analysis for ComfyUI"
        }
    ],
    "https://github.com/cubiq/ComfyUI_IPAdapter_plus": [
        [
            "IPAAdapterFaceIDBatch",
            "IPAdapter",
            "IPAdapterAdvanced",
            "IPAdapterBatch",
            "IPAdapterClipVisionEnhancer",
            "IPAdapterClipVisionEnhancerBatch",
            "IPAdapterCombineEmbeds",
            "IPAdapterCombineParams",
            "IPAdapterCombineWeights",
            "IPAdapterEmbeds",
            "IPAdapterEmbedsBatch",
            "IPAdapterEncoder",
            "IPAdapterFaceID",
            "IPAdapterFaceIDKolors",
            "IPAdapterFromParams",
            "IPAdapterInsightFaceLoader",
            "IPAdapterLoadEmbeds",
            "IPAdapterMS",
            "IPAdapterModelLoader",
            "IPAdapterNoise",
            "IPAdapterPreciseComposition",
            "IPAdapterPreciseCompositionBatch",
            "IPAdapterPreciseStyleTransfer",
            "IPAdapterPreciseStyleTransferBatch",
            "IPAdapterPromptScheduleFromWeightsStrategy",
            "IPAdapterRegionalConditioning",
            "IPAdapterSaveEmbeds",
            "IPAdapterStyleComposition",
            "IPAdapterStyleCompositionBatch",
            "IPAdapterTiled",
            "IPAdapterTiledBatch",
            "IPAdapterUnifiedLoader",
            "IPAdapterUnifiedLoaderCommunity",
            "IPAdapterUnifiedLoaderFaceID",
            "IPAdapterWeights",
            "IPAdapterWeightsFromStrategy",
            "PrepImageForClipVision"
        ],
        {
            "preemptions": [
                "IPAAdapterFaceIDBatch",
                "IPAdapter",
                "IPAdapterAdvanced",
                "IPAdapterBatch",
                "IPAdapterClipVisionEnhancer",
                "IPAdapterClipVisionEnhancerBatch",
                "IPAdapterCombineEmbeds",
                "IPAdapterCombineParams",
                "IPAdapterCombineWeights",
                "IPAdapterEmbeds",
                "IPAdapterEmbedsBatch",
                "IPAdapterEncoder",
                "IPAdapterFaceID",
                "IPAdapterFromParams",
                "IPAdapterInsightFaceLoader",
                "IPAdapterLoadEmbeds",
                "IPAdapterMS",
                "IPAdapterModelLoader",
                "IPAdapterNoise",
                "IPAdapterPreciseComposition",
                "IPAdapterPreciseCompositionBatch",
                "IPAdapterPreciseStyleTransfer",
                "IPAdapterPreciseStyleTransferBatch",
                "IPAdapterPromptScheduleFromWeightsStrategy",
                "IPAdapterRegionalConditioning",
                "IPAdapterSaveEmbeds",
                "IPAdapterStyleComposition",
                "IPAdapterStyleCompositionBatch",
                "IPAdapterTiled",
                "IPAdapterTiledBatch",
                "IPAdapterUnifiedLoader",
                "IPAdapterUnifiedLoaderCommunity",
                "IPAdapterUnifiedLoaderFaceID",
                "IPAdapterWeights",
                "IPAdapterWeightsFromStrategy",
                "PrepImageForClipVision"
            ],
            "title_aux": "ComfyUI_IPAdapter_plus"
        }
    ],
    "https://github.com/cubiq/ComfyUI_InstantID": [
        [
            "ApplyInstantID",
            "ApplyInstantIDAdvanced",
            "ApplyInstantIDControlNet",
            "FaceKeypointsPreprocessor",
            "InstantIDAttentionPatch",
            "InstantIDFaceAnalysis",
            "InstantIDModelLoader"
        ],
        {
            "title_aux": "ComfyUI InstantID (Native Support)"
        }
    ],
    "https://github.com/cubiq/ComfyUI_SimpleMath": [
        [
            "SimpleMath",
            "SimpleMathDebug"
        ],
        {
            "title_aux": "Simple Math"
        }
    ],
    "https://github.com/cubiq/ComfyUI_essentials": [
        [
            "ApplyCLIPSeg+",
            "BatchCount+",
            "CLIPTextEncodeSDXL+",
            "ConditioningCombineMultiple+",
            "ConsoleDebug+",
            "DebugTensorShape+",
            "DisplayAny",
            "DrawText+",
            "ExtractKeyframes+",
            "FluxAttentionSeeker+",
            "FluxBlocksBuster+",
            "FluxSamplerParams+",
            "GetImageSize+",
            "GuidanceTimestepping+",
            "ImageApplyLUT+",
            "ImageBatchMultiple+",
            "ImageBatchToList+",
            "ImageCASharpening+",
            "ImageColorMatch+",
            "ImageColorMatchAdobe+",
            "ImageComposite+",
            "ImageCompositeFromMaskBatch+",
            "ImageCrop+",
            "ImageDesaturate+",
            "ImageEnhanceDifference+",
            "ImageExpandBatch+",
            "ImageFlip+",
            "ImageFromBatch+",
            "ImageHistogramMatch+",
            "ImageListToBatch+",
            "ImagePosterize+",
            "ImagePreviewFromLatent+",
            "ImageRandomTransform+",
            "ImageRemoveAlpha+",
            "ImageRemoveBackground+",
            "ImageResize+",
            "ImageSeamCarving+",
            "ImageSmartSharpen+",
            "ImageTile+",
            "ImageToDevice+",
            "ImageUntile+",
            "InjectLatentNoise+",
            "KSamplerVariationsStochastic+",
            "KSamplerVariationsWithNoise+",
            "LoadCLIPSegModels+",
            "LorasForFluxParams+",
            "MaskBatch+",
            "MaskBlur+",
            "MaskBoundingBox+",
            "MaskExpandBatch+",
            "MaskFix+",
            "MaskFlip+",
            "MaskFromBatch+",
            "MaskFromColor+",
            "MaskFromList+",
            "MaskFromRGBCMYBW+",
            "MaskFromSegmentation+",
            "MaskPreview+",
            "MaskSmooth+",
            "ModelCompile+",
            "ModelSamplingSD3Advanced+",
            "NoiseFromImage+",
            "PixelOEPixelize+",
            "PlotParameters+",
            "RemBGSession+",
            "RemoveLatentMask+",
            "SD3AttentionSeekerLG+",
            "SD3AttentionSeekerT5+",
            "SD3NegativeConditioning+",
            "SDXLEmptyLatentSizePicker+",
            "SamplerSelectHelper+",
            "SchedulerSelectHelper+",
            "SimpleComparison+",
            "SimpleCondition+",
            "SimpleMath+",
            "SimpleMathBoolean+",
            "SimpleMathCondition+",
            "SimpleMathDual+",
            "SimpleMathFloat+",
            "SimpleMathInt+",
            "SimpleMathPercent+",
            "SimpleMathSlider+",
            "SimpleMathSliderLowRes+",
            "TextEncodeForSamplerParams+",
            "TransitionMask+",
            "TransparentBGSession+"
        ],
        {
            "title_aux": "ComfyUI Essentials"
        }
    ],
    "https://github.com/cubiq/PuLID_ComfyUI": [
        [
            "ApplyPulid",
            "ApplyPulidAdvanced",
            "PulidEvaClipLoader",
            "PulidInsightFaceLoader",
            "PulidModelLoader"
        ],
        {
            "title_aux": "PuLID_ComfyUI"
        }
    ],
    "https://github.com/cuongloveit/comfy_http_request": [
        [
            "Send Http Request",
            "Send Http request"
        ],
        {
            "title_aux": "comfy_http_request"
        }
    ],
    "https://github.com/curiousjp/ComfyUI-MaskBatchPermutations": [
        [
            "CombinatorialDetailer",
            "FlattenAgainstOriginal",
            "PermuteMaskBatch"
        ],
        {
            "title_aux": "ComfyUI-MaskBatchPermutations"
        }
    ],
    "https://github.com/czcz1024/Comfyui-FaceCompare": [
        [
            "FaceCompare"
        ],
        {
            "author": "czcz1024",
            "description": "Face Compare",
            "nickname": "Face Compare",
            "title": "Face Compare",
            "title_aux": "Face Compare"
        }
    ],
    "https://github.com/da2el-ai/ComfyUI-d2-send-eagle": [
        [
            "D2 Send Eagle"
        ],
        {
            "author": "da2el",
            "description": "Send images to Eagle, an image management application",
            "title": "D2 Send Eagle",
            "title_aux": "D2 Send Eagle"
        }
    ],
    "https://github.com/da2el-ai/ComfyUI-d2-size-selector": [
        [
            "D2_SizeSelector"
        ],
        {
            "author": "da2el",
            "description": "Easy select image size",
            "title": "D2 Size Selector",
            "title_aux": "D2 Size Selector"
        }
    ],
    "https://github.com/da2el-ai/ComfyUI-d2-steps": [
        [
            "D2 Refiner Steps",
            "D2 Refiner Steps A1111",
            "D2 Refiner Steps Tester"
        ],
        {
            "author": "da2el",
            "description": "Calculate the steps for the refiner",
            "title": "D2 Steps",
            "title_aux": "D2 Steps"
        }
    ],
    "https://github.com/da2el-ai/ComfyUI-d2-xyplot-utils": [
        [
            "D2 Checkpoint List",
            "D2 Checkpoint Loader",
            "D2 Multi Output",
            "D2 Prompt SR",
            "D2 Regex Switcher"
        ],
        {
            "author": "da2el",
            "description": "A parameter output node compatible with qq-nodes-comfyui. It outputs parameters such as Prompt S/R and seed.",
            "title": "D2 XYPlot Utils",
            "title_aux": "D2 XYPlot Utils"
        }
    ],
    "https://github.com/da2el-ai/D2-nodes-ComfyUI": [
        [
            "D2 Checkpoint Loader",
            "D2 Controlnet Loader",
            "D2 EmptyImage Alpha",
            "D2 Filename Template",
            "D2 Folder Image Queue",
            "D2 Get Image Size",
            "D2 Grid Image",
            "D2 Image Resize",
            "D2 Image Stack",
            "D2 KSampler",
            "D2 KSampler(Advanced)",
            "D2 List To String",
            "D2 Load Folder Images",
            "D2 Load Image",
            "D2 Multi Output",
            "D2 Pipe",
            "D2 Preview Image",
            "D2 Refiner Steps",
            "D2 Refiner Steps A1111",
            "D2 Refiner Steps Tester",
            "D2 Regex Replace",
            "D2 Regex Switcher",
            "D2 Resize Calculator",
            "D2 Size Slector",
            "D2 XY Annotation",
            "D2 XY Checkpoint List",
            "D2 XY Folder Images",
            "D2 XY Grid Image",
            "D2 XY List To Plot",
            "D2 XY Lora List",
            "D2 XY Model List",
            "D2 XY Plot",
            "D2 XY Plot Easy",
            "D2 XY Prompt SR",
            "D2 XY Prompt SR2",
            "D2 XY Seed",
            "D2 XY String To Plot"
        ],
        {
            "author": "da2el",
            "description": "A Collection of Handy Custom Nodes for ComfyUI",
            "title": "D2 Nodes",
            "title_aux": "D2 Nodes ComfyUI"
        }
    ],
    "https://github.com/dadoirie/ComfyUI_Dados_Nodes": [
        [
            "PinterestImageNode"
        ],
        {
            "title_aux": "ComfyUI_Dados_Nodes"
        }
    ],
    "https://github.com/dafeng012/comfyui-imgmake": [
        [
            "LoadImageListPlus",
            "LoadImagesFromPath_lp",
            "SaveImage_lp",
            "SelectImageName",
            "VideoKeyFramesExtractor",
            "ebsynth_hecheng",
            "ebsynth_main",
            "ebsynth_process",
            "image2mask",
            "video2image"
        ],
        {
            "title_aux": "comfyui-imgmake"
        }
    ],
    "https://github.com/dagthomas/comfyui_dagthomas": [
        [
            "APNLatent",
            "CustomPromptLoader",
            "DynamicStringCombinerNode",
            "FileReaderNode",
            "FlexibleStringMergerNode",
            "GPT4MiniNode",
            "GPT4VisionNode",
            "GeminiCustomVision",
            "GeminiTextOnly",
            "Gpt4CustomVision",
            "Gpt4VisionCloner",
            "OllamaNode",
            "OllamaVisionNode",
            "PGSD3LatentGenerator",
            "PhiCustomModelInference",
            "PhiModelInference",
            "PhiModelLoader",
            "PromptGenerator",
            "RandomIntegerNode",
            "SentenceMixerNode",
            "StringMergerNode"
        ],
        {
            "title_aux": "SDXL Auto Prompter"
        }
    ],
    "https://github.com/daniabib/ComfyUI_ProPainter_Nodes": [
        [
            "ProPainterInpaint",
            "ProPainterOutpaint"
        ],
        {
            "title_aux": "ComfyUI ProPainter Nodes"
        }
    ],
    "https://github.com/daniel-lewis-ab/ComfyUI-Llama": [
        [
            "Call LLM Advanced",
            "Call LLM Basic",
            "LLM_Create_Completion Advanced",
            "LLM_Detokenize",
            "LLM_Embed",
            "LLM_Eval",
            "LLM_Load_State",
            "LLM_Reset",
            "LLM_Sample",
            "LLM_Save_State",
            "LLM_Token_BOS",
            "LLM_Token_EOS",
            "LLM_Tokenize",
            "Load LLM Model Advanced",
            "Load LLM Model Basic"
        ],
        {
            "title_aux": "ComfyUI-Llama"
        }
    ],
    "https://github.com/daniel-lewis-ab/ComfyUI-TTS": [
        [
            "Load_Piper_Model",
            "Piper_Speak_Text"
        ],
        {
            "title_aux": "ComfyUI-TTS"
        }
    ],
    "https://github.com/darkpixel/darkprompts": [
        [
            "DarkAnyToString",
            "DarkCheckpointRandomizer",
            "DarkCheckpointSwitcher",
            "DarkCombine",
            "DarkFaceIndexGenerator",
            "DarkFaceIndexShuffle",
            "DarkFolders",
            "DarkLoRALoader",
            "DarkLoraStackFromString",
            "DarkPopLoraFromStack",
            "DarkPrompt"
        ],
        {
            "title_aux": "DarkPrompts"
        }
    ],
    "https://github.com/darth-veitcher/comfydv": [
        [
            "CircuitBreaker",
            "FormatString",
            "ModelUnloader",
            "RandomChoice"
        ],
        {
            "author": "Darth Veitcher",
            "description": "This collection of nodes provides string formatting, random choices, model memory management, and other quality of life improvements.",
            "nickname": "DV Nodes",
            "title": "Comfy DV Nodes",
            "title_aux": "Comfy DV"
        }
    ],
    "https://github.com/daryltucker/ComfyUI-LoadFiles": [
        [
            "CountLines",
            "ListFilenames",
            "LoadImages"
        ],
        {
            "title_aux": "ComfyUI-LoadFiles"
        }
    ],
    "https://github.com/dave-palt/comfyui_DSP_imagehelpers": [
        [
            "dsp-imagehelpers-concat"
        ],
        {
            "title_aux": "comfyui_DSP_imagehelpers"
        }
    ],
    "https://github.com/daxcay/ComfyUI-DataSet": [
        [
            "DataSet_ClaudeAIChat",
            "DataSet_ClaudeAIChatImage",
            "DataSet_ConceptManager",
            "DataSet_CopyFiles",
            "DataSet_FindAndReplace",
            "DataSet_GroqChat",
            "DataSet_GroqChatImage",
            "DataSet_LoadImage",
            "DataSet_OpenAIChat",
            "DataSet_OpenAIChatImage",
            "DataSet_OpenAIChatImageBatch",
            "DataSet_PathSelector",
            "DataSet_SaveImage",
            "DataSet_SaveImagePro",
            "DataSet_TextFilesLoad",
            "DataSet_TextFilesLoadFromList",
            "DataSet_TextFilesSave",
            "DataSet_TriggerWords",
            "DataSet_Visualizer"
        ],
        {
            "author": "Daxton Caylor",
            "description": "Data Research, Preparation, and Manipulation Nodes for Model Trainers, Artists, Designers, and Animators.",
            "nickname": "ComfyUI-DataSet",
            "title": "ComfyUI-DataSet",
            "title_aux": "ComfyUI-DataSet"
        }
    ],
    "https://github.com/daxcay/ComfyUI-JDCN": [
        [
            "JDCN_AnyCheckpointLoader",
            "JDCN_AnyFileList",
            "JDCN_AnyFileListHelper",
            "JDCN_AnyFileListRandom",
            "JDCN_AnyFileSelector",
            "JDCN_BatchCounter",
            "JDCN_BatchCounterAdvance",
            "JDCN_BatchImageLoadFromDir",
            "JDCN_BatchImageLoadFromList",
            "JDCN_BatchLatentLoadFromDir",
            "JDCN_BatchLatentLoadFromList",
            "JDCN_BatchSaveLatent",
            "JDCN_BoolInt",
            "JDCN_EnableDisable",
            "JDCN_FileMover",
            "JDCN_ImageSaver",
            "JDCN_ListToString",
            "JDCN_LoadImage",
            "JDCN_ReBatch",
            "JDCN_SeamlessExperience",
            "JDCN_ShowAny",
            "JDCN_SplitString",
            "JDCN_StringManipulator",
            "JDCN_StringToList",
            "JDCN_SwapInputs",
            "JDCN_TXTFileSaver",
            "JDCN_VHSFileMover"
        ],
        {
            "author": "Daxton Caylor & Jerry Davos",
            "description": "Custom Utility Nodes for Artists, Designers and Animators.",
            "nickname": "ComfyUI-JDCN",
            "title": "ComfyUI-JDCN",
            "title_aux": "ComfyUI-JDCN"
        }
    ],
    "https://github.com/daxcay/ComfyUI-TG": [
        [
            "TG_ImageSaver"
        ],
        {
            "author": "Daxton Caylor",
            "description": "This node enables someone to run comfyui in telegram.",
            "nickname": "ComfyUI-TG",
            "title": "ComfyUI-TG",
            "title_aux": "ComfyUI-TG"
        }
    ],
    "https://github.com/daxcay/ComfyUI-WA": [
        [
            "WA_ImageSaver"
        ],
        {
            "author": "Daxton Caylor",
            "description": "This node enables someone to run comfyui in whatsapp.",
            "nickname": "ComfyUI-WA",
            "title": "ComfyUI-WA",
            "title_aux": "ComfyUI-WA"
        }
    ],
    "https://github.com/daxcay/ComfyUI-YouTubeVideoPlayer": [
        [
            "YouTubeVideoPlayer"
        ],
        {
            "author": "Daxton Caylor & Jerry Davos",
            "description": "YouTube Video Player in Comfy.",
            "nickname": "ComfyUI-YouTubeVideoPlayer",
            "title": "ComfyUI-YouTubeVideoPlayer",
            "title_aux": "ComfyUI-YouTubeVideoPlayer"
        }
    ],
    "https://github.com/dchatel/comfyui_davcha": [
        [
            "ApplyMask",
            "ConditioningCompress",
            "DStack",
            "DavchaCLIPMergeSimple",
            "DavchaCLIPTextEncode",
            "DavchaConditioningConcat",
            "DavchaEmptyLatentImage",
            "DavchaLoadVideo",
            "DavchaMaskImage",
            "DavchaModelMergeSD1",
            "DavchaModelMergeSDXL",
            "DavchaModelMergeSimple",
            "DavchaPop",
            "PercentPadding",
            "ResizeCropFit",
            "SmartMask",
            "SoftErosion",
            "StringScheduleHelper"
        ],
        {
            "title_aux": "comfyui_davcha"
        }
    ],
    "https://github.com/dchatel/comfyui_facetools": [
        [
            "BiSeNetMask",
            "CropFaces",
            "DetectFaces",
            "GenderFaceFilter",
            "JonathandinuMask",
            "MergeWarps",
            "OrderedFaceFilter",
            "WarpFacesBack"
        ],
        {
            "title_aux": "comfyui_facetools"
        }
    ],
    "https://github.com/denfrost/Den_ComfyUI_Workflow": [
        [
            "Den_BatchIndex_AS",
            "Den_CropImage_AS",
            "Den_Eval_AS",
            "Den_FaceRestoreCFWithModel",
            "Den_GPTLoaderSimple_llama",
            "Den_GPTSampler_llama",
            "Den_ImageMixMasked_As",
            "Den_ImageToLatentSpace",
            "Den_ImageToMask_AS",
            "Den_Int2Any_AS",
            "Den_LatentAdd_AS",
            "Den_LatentMixMasked_As",
            "Den_LatentMix_AS",
            "Den_LatentToImages_AS",
            "Den_LoadLatent_AS",
            "Den_MapRange_AS",
            "Den_MaskToImage_AS",
            "Den_Math_AS",
            "Den_NoiseImage_AS",
            "Den_Number2Float_AS",
            "Den_Number2Int_AS",
            "Den_Number_AS",
            "Den_SVD_img2vid",
            "Den_SaveLatent_AS",
            "Den_TextToImage_AS",
            "Den_TextWildcardList_AS",
            "Increment_AS"
        ],
        {
            "title_aux": "Den_ComfyUI_Workflows"
        }
    ],
    "https://github.com/deroberon/StableZero123-comfyui": [
        [
            "SDZero ImageSplit",
            "Stablezero123",
            "Stablezero123WithDepth"
        ],
        {
            "title_aux": "StableZero123-comfyui"
        }
    ],
    "https://github.com/deroberon/demofusion-comfyui": [
        [
            "Batch Unsampler",
            "Demofusion",
            "Demofusion From Single File",
            "Iterative Mixing KSampler"
        ],
        {
            "title_aux": "demofusion-comfyui"
        }
    ],
    "https://github.com/dfghsdh/ComfyUI_FluxPromptGen": [
        [
            "FluxImageCaptionNode",
            "FluxPromptGeneratorNode"
        ],
        {
            "title_aux": "ComfyUI_FluxPromptGen"
        }
    ],
    "https://github.com/dfl/comfyui-clip-with-break": [
        [
            "AdvancedCLIPTextEncodeWithBreak",
            "CLIPTextEncodeWithBreak"
        ],
        {
            "author": "dfl",
            "description": "CLIP text encoder that does BREAK prompting like A1111",
            "nickname": "CLIP with BREAK",
            "title": "CLIP with BREAK syntax",
            "title_aux": "CLIP with BREAK syntax"
        }
    ],
    "https://github.com/dfl/comfyui-tcd-scheduler": [
        [
            "SamplerTCD",
            "SamplerTCD EulerA",
            "TCDScheduler"
        ],
        {
            "title_aux": "ComfyUI-TCD-scheduler"
        }
    ],
    "https://github.com/diStyApps/ComfyUI-disty-Flow": [
        [
            "Flow"
        ],
        {
            "title_aux": "Flow - Streamlined Way to ComfyUI"
        }
    ],
    "https://github.com/diStyApps/ComfyUI_FrameMaker": [
        [
            "FrameMaker",
            "FrameMakerBatch"
        ],
        {
            "title_aux": "ComfyUI Frame Maker"
        }
    ],
    "https://github.com/dicksondickson/ComfyUI-Dickson-Nodes": [
        [
            "DicksonColorMatch",
            "DicksonLoadImage",
            "Dickson_TTP_Preprocessor_Simple",
            "Dickson_TTP_Preprocessor_cufoff",
            "Dickson_TTP_Tile_Preprocessor_GF"
        ],
        {
            "description": "This is a set of custom nodes that I've either written myself or adapted from other authors for my own convenience. Currently includes color matching node forked from StableSR and TTPlanet's controlnet preprocessor. https://github.com/dicksondickson",
            "nickname": "Dickson Nodes",
            "title": "Dickson Nodes",
            "title_aux": "ComfyUI-Dickson-Nodes"
        }
    ],
    "https://github.com/digitaljohn/comfyui-propost": [
        [
            "ProPostApplyLUT",
            "ProPostDepthMapBlur",
            "ProPostFilmGrain",
            "ProPostRadialBlur",
            "ProPostVignette"
        ],
        {
            "title_aux": "ComfyUI-ProPost"
        }
    ],
    "https://github.com/dimtoneff/ComfyUI-PixelArt-Detector": [
        [
            "PixelArtAddDitherPattern",
            "PixelArtDetectorConverter",
            "PixelArtDetectorSave",
            "PixelArtDetectorToImage",
            "PixelArtLoadPalettes"
        ],
        {
            "title_aux": "ComfyUI PixelArt Detector"
        }
    ],
    "https://github.com/diontimmer/ComfyUI-Vextra-Nodes": [
        [
            "Add Text To Image",
            "Apply Instagram Filter",
            "Create Solid Color",
            "Flatten Colors",
            "Generate Noise Image",
            "GlitchThis Effect",
            "Hue Rotation",
            "Load Picture Index",
            "Pixel Sort",
            "Play Sound At Execution",
            "Prettify Prompt Using distilgpt2",
            "Swap Color Mode"
        ],
        {
            "title_aux": "ComfyUI-Vextra-Nodes"
        }
    ],
    "https://github.com/discopixel-studio/comfyui-discopixel": [
        [
            "PhotoroomRemoveBG"
        ],
        {
            "author": "Anson Kao",
            "description": "A small collection of custom nodes for use with ComfyUI, by Discopixel",
            "nickname": "ComfyUI Discopixel",
            "title": "ComfyUI Discopixel",
            "title_aux": "PhotoRoom Nodes by Discopixel"
        }
    ],
    "https://github.com/discus0434/comfyui-caching-embeddings": [
        [
            "CachingCLIPTextEncode"
        ],
        {
            "title_aux": "ComfyUI Caching Embeddings"
        }
    ],
    "https://github.com/discus0434/comfyui-flux-accelerator": [
        [
            "\ud83c\udf6dFluxAccelerator"
        ],
        {
            "title_aux": "ComfyUI Flux Accelerator"
        }
    ],
    "https://github.com/djbielejeski/a-person-mask-generator": [
        [
            "APersonFaceLandmarkMaskGenerator",
            "APersonMaskGenerator"
        ],
        {
            "title_aux": "a-person-mask-generator"
        }
    ],
    "https://github.com/dmMaze/sketch2manga": [
        [
            "BlendScreentone",
            "EmptyLatentImageAdvanced"
        ],
        {
            "title_aux": "Sketch2Manga"
        }
    ],
    "https://github.com/dmarx/ComfyUI-AudioReactive": [
        [
            "OpAbs",
            "OpBandpass",
            "OpClamp",
            "OpHarmonic",
            "OpModulo",
            "OpNormalize",
            "OpNovelty",
            "OpPercussive",
            "OpPow",
            "OpPow2",
            "OpPredominant_pulse",
            "OpQuantize",
            "OpRms",
            "OpSmoosh",
            "OpSmooth",
            "OpSqrt",
            "OpStretch",
            "OpSustain",
            "OpThreshold"
        ],
        {
            "title_aux": "ComfyUI-AudioReactive"
        }
    ],
    "https://github.com/dmarx/ComfyUI-Keyframed": [
        [
            "Example",
            "KfAddCurveToPGroup",
            "KfAddCurveToPGroupx10",
            "KfApplyCurveToCond",
            "KfConditioningAdd",
            "KfConditioningAddx10",
            "KfCurveConstant",
            "KfCurveDraw",
            "KfCurveFromString",
            "KfCurveFromYAML",
            "KfCurveInverse",
            "KfCurveToAcnLatentKeyframe",
            "KfCurvesAdd",
            "KfCurvesAddx10",
            "KfCurvesDivide",
            "KfCurvesMultiply",
            "KfCurvesMultiplyx10",
            "KfCurvesSubtract",
            "KfDebug_Clip",
            "KfDebug_Cond",
            "KfDebug_Curve",
            "KfDebug_Float",
            "KfDebug_Image",
            "KfDebug_Int",
            "KfDebug_Latent",
            "KfDebug_Model",
            "KfDebug_Passthrough",
            "KfDebug_Segs",
            "KfDebug_String",
            "KfDebug_Vae",
            "KfDrawSchedule",
            "KfEvaluateCurveAtT",
            "KfGetCurveFromPGroup",
            "KfGetScheduleConditionAtTime",
            "KfGetScheduleConditionSlice",
            "KfKeyframedCondition",
            "KfKeyframedConditionWithText",
            "KfPGroupCurveAdd",
            "KfPGroupCurveMultiply",
            "KfPGroupDraw",
            "KfPGroupProd",
            "KfPGroupSum",
            "KfSetCurveLabel",
            "KfSetKeyframe",
            "KfSinusoidalAdjustAmplitude",
            "KfSinusoidalAdjustFrequency",
            "KfSinusoidalAdjustPhase",
            "KfSinusoidalAdjustWavelength",
            "KfSinusoidalEntangledZeroOneFromFrequencyx2",
            "KfSinusoidalEntangledZeroOneFromFrequencyx3",
            "KfSinusoidalEntangledZeroOneFromFrequencyx4",
            "KfSinusoidalEntangledZeroOneFromFrequencyx5",
            "KfSinusoidalEntangledZeroOneFromFrequencyx6",
            "KfSinusoidalEntangledZeroOneFromFrequencyx7",
            "KfSinusoidalEntangledZeroOneFromFrequencyx8",
            "KfSinusoidalEntangledZeroOneFromFrequencyx9",
            "KfSinusoidalEntangledZeroOneFromWavelengthx2",
            "KfSinusoidalEntangledZeroOneFromWavelengthx3",
            "KfSinusoidalEntangledZeroOneFromWavelengthx4",
            "KfSinusoidalEntangledZeroOneFromWavelengthx5",
            "KfSinusoidalEntangledZeroOneFromWavelengthx6",
            "KfSinusoidalEntangledZeroOneFromWavelengthx7",
            "KfSinusoidalEntangledZeroOneFromWavelengthx8",
            "KfSinusoidalEntangledZeroOneFromWavelengthx9",
            "KfSinusoidalGetAmplitude",
            "KfSinusoidalGetFrequency",
            "KfSinusoidalGetPhase",
            "KfSinusoidalGetWavelength",
            "KfSinusoidalWithFrequency",
            "KfSinusoidalWithWavelength"
        ],
        {
            "title_aux": "ComfyUI-Keyframed"
        }
    ],
    "https://github.com/drago87/ComfyUI_Dragos_Nodes": [
        [
            "file_padding",
            "image_info",
            "lora_loader",
            "vae_loader"
        ],
        {
            "title_aux": "ComfyUI_Dragos_Nodes"
        }
    ],
    "https://github.com/dreamhartley/ComfyUI_show_seed": [
        [
            "Show Seed"
        ],
        {
            "title_aux": "ComfyUI_show_seed"
        }
    ],
    "https://github.com/drmbt/comfyui-dreambait-nodes": [
        [
            "AudioInfoPlus",
            "BoolPlusPlus",
            "DRMBT_AspectPadImageForOutpainting",
            "DRMBT_LoadMedia",
            "DRMBT_MultiMinMax",
            "DRMBT_String_Item_Menu",
            "DictToOutputs",
            "DownloadAndLoadMiniCPMV",
            "DreambaitFolderOpener",
            "DynamicDictionary",
            "ImageFrameBlend",
            "ImageResizeFaceAware",
            "ListItemExtract",
            "ListItemSelector",
            "LoadAudioPlus",
            "MiniCPMVNode",
            "MusicGen",
            "NormalizeAudio",
            "NumberPlusPlus",
            "NumberRemap",
            "Qwen2AudioInstruct",
            "StringToDict",
            "SwitchDuo",
            "TextLineSelect",
            "TextLinesToList",
            "TextPlusPlus"
        ],
        {
            "title_aux": "comfyui-dreambait-nodes"
        }
    ],
    "https://github.com/drustan-hawk/primitive-types": [
        [
            "float",
            "int",
            "string",
            "string_multiline"
        ],
        {
            "title_aux": "primitive-types"
        }
    ],
    "https://github.com/ducido/ObjectFusion_ComfyUI_nodes": [
        [
            "Custom ESAM_ModelLoader_Zho",
            "Custom Generate Stable Diffsution Prompt With LLM",
            "Custom Yoloworld_ESAM_Zho",
            "Custom Yoloworld_ModelLoader_Zho",
            "ObjectCrop"
        ],
        {
            "title_aux": "ObjectFusion_ComfyUI_nodes"
        }
    ],
    "https://github.com/duskfallcrew/Comfyui_EmbeddingMerge_Node/raw/refs/heads/main/merge_embed.py": [
        [
            "EmbeddingMerger"
        ],
        {
            "title_aux": "Embedding Merge for ComfyUI"
        }
    ],
    "https://github.com/dymokomi/comfyui_dygen": [
        [
            "AdaptiveColorCircles",
            "AdaptiveColorLines",
            "AdaptiveColorRectangles",
            "BinaryPatternStamper",
            "DYImageCluster",
            "DYImageMasks",
            "DYImagePalette",
            "DYImageQuantize",
            "ImageListToGrid",
            "ImageScaler",
            "RandomLines"
        ],
        {
            "title_aux": "comfyui_dygen"
        }
    ],
    "https://github.com/e7mac/ComfyUI-ShadertoyGL": [
        [
            "ColorChannelOffset",
            "Shader",
            "Shadertoy"
        ],
        {
            "title_aux": "ComfyUI-ShadertoyGL"
        }
    ],
    "https://github.com/ealkanat/comfyui-easy-padding": [
        [
            "comfyui-easy-padding"
        ],
        {
            "title_aux": "ComfyUI Easy Padding"
        }
    ],
    "https://github.com/eastoc/ComfyUI_SemanticSAM": [
        [
            "PointPrompt",
            "SemanticSAMLoader",
            "SemanticSAMSegment"
        ],
        {
            "title_aux": "Semantic-SAM"
        }
    ],
    "https://github.com/edelvarden/ComfyUI-ImageMetadataExtension": [
        [
            "CreateExtraMetaData",
            "SaveImageWithMetaData"
        ],
        {
            "title_aux": "ComfyUI-ImageMetadataExtension"
        }
    ],
    "https://github.com/edenartlab/eden_comfy_pipelines": [
        [
            "Animation_RGB_Mask",
            "AspectPadImageForOutpainting",
            "CLIP_Interrogator",
            "ConvertToGrayscale",
            "DepthSlicer",
            "Eden_Bool",
            "Eden_BoolBinaryOperation",
            "Eden_Compare",
            "Eden_DebugPrint",
            "Eden_DepthSlice_MaskVideo",
            "Eden_DetermineFrameCount",
            "Eden_Float",
            "Eden_FloatToInt",
            "Eden_GPTPromptEnhancer",
            "Eden_IMG_padder",
            "Eden_IMG_unpadder",
            "Eden_Image_Math",
            "Eden_Int",
            "Eden_IntToFloat",
            "Eden_MaskBoundingBox",
            "Eden_MaskCombiner",
            "Eden_Math",
            "Eden_RandomPromptFromFile",
            "Eden_RepeatLatentBatch",
            "Eden_Seed",
            "Eden_String",
            "Eden_StringHash",
            "Eden_StringReplace",
            "Eden_gpt4_node",
            "Extend_Sequence",
            "FolderScanner",
            "GetRandomFile",
            "Get_Prefixed_Imgs",
            "HistogramMatching",
            "IMG_blender",
            "IMG_resolution_multiple_of",
            "IMG_scaler",
            "IP_Adapter_Settings_Distribution",
            "If ANY execute A else B",
            "ImageDescriptionNode",
            "ImageFolderIterator",
            "KeyframeBlender",
            "LatentTypeConversion",
            "Linear_Combine_IP_Embeds",
            "LoadImagesByFilename",
            "LoadRandomImage",
            "Load_Embeddings_From_Folder",
            "MaskFromRGB_KMeans",
            "ParallaxZoom",
            "Random_Style_Mixture",
            "SaveImageAdvanced",
            "SavePosEmbeds",
            "VAEDecode_to_folder",
            "VideoFrameSelector",
            "WidthHeightPicker"
        ],
        {
            "title_aux": "Eden.art nodesuite"
        }
    ],
    "https://github.com/edenartlab/sd-lora-trainer": [
        [
            "Eden_LoRa_trainer"
        ],
        {
            "title_aux": "Eden.art LoRa Trainer"
        }
    ],
    "https://github.com/educator-art/ComfyUI-Load-DirectoryFiles": [
        [
            "Load Images and Prompts from Directory",
            "Load Images and Prompts from Directory(Advanced)"
        ],
        {
            "title_aux": "ComfyUI-Load-DirectoryFiles"
        }
    ],
    "https://github.com/emojiiii/ComfyUI_Emojiiii_Custom_Nodes": [
        [
            "BatchImageProcessor",
            "Caption",
            "CaptionDownload",
            "KolorsMultiTextEncode",
            "MultiTextEncode"
        ],
        {
            "title_aux": "ComfyUI_Emojiiii_Custom_Nodes"
        }
    ],
    "https://github.com/envy-ai/ComfyUI-ConDelta": [
        [
            "ApplyConDelta",
            "ApplyConDeltaAutoScale",
            "ClampConDelta",
            "ConditioningAddConDelta",
            "ConditioningAddConDeltaAutoScale",
            "ConditioningAverageMultiple",
            "ConditioningGetNoise",
            "ConditioningScale",
            "ConditioningSubtract",
            "ExtendedConditioningAverage",
            "HardClampConDelta",
            "LoadConditioningDelta",
            "MaskConDelta",
            "SaveConditioningDelta",
            "ThresholdConditioning"
        ],
        {
            "title_aux": "ComfyUI-ConDelta"
        }
    ],
    "https://github.com/erosDiffusion/ComfyUI-enricos-nodes": [
        [
            "Compositor3",
            "CompositorConfig3",
            "CompositorTools3",
            "CompositorTransformsOutV3"
        ],
        {
            "title_aux": "Compositor Node"
        }
    ],
    "https://github.com/evanspearman/ComfyMath": [
        [
            "CM_BoolBinaryOperation",
            "CM_BoolToInt",
            "CM_BoolUnaryOperation",
            "CM_BreakoutVec2",
            "CM_BreakoutVec3",
            "CM_BreakoutVec4",
            "CM_ComposeVec2",
            "CM_ComposeVec3",
            "CM_ComposeVec4",
            "CM_FloatBinaryCondition",
            "CM_FloatBinaryOperation",
            "CM_FloatToInt",
            "CM_FloatToNumber",
            "CM_FloatUnaryCondition",
            "CM_FloatUnaryOperation",
            "CM_IntBinaryCondition",
            "CM_IntBinaryOperation",
            "CM_IntToBool",
            "CM_IntToFloat",
            "CM_IntToNumber",
            "CM_IntUnaryCondition",
            "CM_IntUnaryOperation",
            "CM_NearestSDXLExtendedResolution",
            "CM_NearestSDXLResolution",
            "CM_NumberBinaryCondition",
            "CM_NumberBinaryOperation",
            "CM_NumberToFloat",
            "CM_NumberToInt",
            "CM_NumberUnaryCondition",
            "CM_NumberUnaryOperation",
            "CM_SDXLExtendedResolution",
            "CM_SDXLResolution",
            "CM_Vec2BinaryCondition",
            "CM_Vec2BinaryOperation",
            "CM_Vec2ScalarOperation",
            "CM_Vec2ToScalarBinaryOperation",
            "CM_Vec2ToScalarUnaryOperation",
            "CM_Vec2UnaryCondition",
            "CM_Vec2UnaryOperation",
            "CM_Vec3BinaryCondition",
            "CM_Vec3BinaryOperation",
            "CM_Vec3ScalarOperation",
            "CM_Vec3ToScalarBinaryOperation",
            "CM_Vec3ToScalarUnaryOperation",
            "CM_Vec3UnaryCondition",
            "CM_Vec3UnaryOperation",
            "CM_Vec4BinaryCondition",
            "CM_Vec4BinaryOperation",
            "CM_Vec4ScalarOperation",
            "CM_Vec4ToScalarBinaryOperation",
            "CM_Vec4ToScalarUnaryOperation",
            "CM_Vec4UnaryCondition",
            "CM_Vec4UnaryOperation"
        ],
        {
            "title_aux": "ComfyMath"
        }
    ],
    "https://github.com/evolox/ComfyUI-GeneraNodes": [
        [
            "Genera.BatchPreviewer",
            "Genera.BatchTester",
            "Genera.GCPStorageNode",
            "Genera.MaskDrawer",
            "Genera.Utils",
            "PDPStage1",
            "PainterNode",
            "UniversalSwitch"
        ],
        {
            "title_aux": "ComfyUI-GeneraNodes"
        }
    ],
    "https://github.com/exdysa/comfyui-selector": [
        [
            "Fork",
            "ForkClip",
            "Recourse",
            "Recourse+/-",
            "RecourseCkpt",
            "RecourseImage",
            "Selector",
            "Unite"
        ],
        {
            "author": "\"\u02f6\ud835\udfa2\u292c\u2ad2\u2d56s\u143c\u02f6\"",
            "description": "\"EXDYSA. Selector and Recourse. Presets & failsafes. Work flow.\"",
            "nickname": "\"Selector\"",
            "title": "\"Selector\"",
            "title_aux": "comfyui-selector"
        }
    ],
    "https://github.com/exectails/comfyui-et_dynamicprompts": [
        [
            "ETDynamicPrompt"
        ],
        {
            "title_aux": "Dynamic Prompts"
        }
    ],
    "https://github.com/exectails/comfyui-et_infoutils": [
        [
            "ETInspectTextNode",
            "ETIntBoxNode",
            "ETPresentImageNode",
            "ETShowDataNode",
            "ETStringBoxNode",
            "ETTextBoxNode",
            "ETTokenCountNode"
        ],
        {
            "title_aux": "Info Utils"
        }
    ],
    "https://github.com/exectails/comfyui-et_stringutils": [
        [
            "ETATOI",
            "ETITOA",
            "ETJoinTextNode",
            "ETReplaceTextNode",
            "ETSplitTextNode",
            "ETSwitchTextNode",
            "ETTextFormatter10Node",
            "ETTextFormatter2Node",
            "ETTextFormatter5Node"
        ],
        {
            "title_aux": "String Utils"
        }
    ],
    "https://github.com/ez-af/ComfyUI-EZ-AF-Nodes": [
        [
            "EZ Concatenate Text",
            "EZ Load from CSV",
            "EZ String"
        ],
        {
            "title_aux": "ComfyUI-EZ-AF-Nodes"
        }
    ],
    "https://github.com/fablestudio/ComfyUI-Showrunner-Utils": [
        [
            "AlignFace",
            "GenerateTimestamp",
            "GetMostCommonColors",
            "ReadImage",
            "RenderOpenStreetMapTile"
        ],
        {
            "title_aux": "ComfyUI-Showrunner-Utils"
        }
    ],
    "https://github.com/facok/ComfyUI-HunyuanVideoMultiLora": [
        [
            "HunyuanVideoLoraLoader"
        ],
        {
            "title_aux": "ComfyUI-HunyuanVideoMultiLora"
        }
    ],
    "https://github.com/facok/ComfyUI-TeaCacheHunyuanVideo": [
        [
            "TeaCacheHunyuanVideoSampler_FOK"
        ],
        {
            "title_aux": "ComfyUI-TeaCacheHunyuanVideo"
        }
    ],
    "https://github.com/fairy-root/ComfyUI-GLHF": [
        [
            "glhf_chat"
        ],
        {
            "title_aux": "ComfyUI-GLHF"
        }
    ],
    "https://github.com/fairy-root/Flux-Prompt-Generator": [
        [
            "FluxPromptGenerator"
        ],
        {
            "title_aux": "Flux Prompt Generator for ComfyUI"
        }
    ],
    "https://github.com/fairy-root/comfyui-ollama-llms": [
        [
            "ConcatenateText",
            "llava",
            "ollama"
        ],
        {
            "title_aux": "Ollama and Llava Vision integration for ComfyUI"
        }
    ],
    "https://github.com/fallingmeteorite/nsfw-image-check-comfyui": [
        [
            "NsfwCheckNode"
        ],
        {
            "title_aux": "nsfw-image-check-comfyui"
        }
    ],
    "https://github.com/fashn-AI/ComfyUI-FASHN": [
        [
            "FASHN"
        ],
        {
            "title_aux": "FASHN Virtual Try-On"
        }
    ],
    "https://github.com/fearnworks/ComfyUI_FearnworksNodes": [
        [
            "Count Files in Directory (FW)",
            "Count Tokens (FW)",
            "CountTokens",
            "FileCountInDirectory",
            "Token Count Ranker(FW)",
            "TokenCountRanker",
            "Trim To Tokens (FW)",
            "TrimToTokens"
        ],
        {
            "title_aux": "Fearnworks Nodes"
        }
    ],
    "https://github.com/fexli/fexli-util-node-comfyui": [
        [
            "FEBCPrompt",
            "FEBatchGenStringBCDocker",
            "FEColor2Image",
            "FEColorOut",
            "FEDataInsertor",
            "FEDataPacker",
            "FEDataUnpacker",
            "FEDeepClone",
            "FEDictPacker",
            "FEDictUnpacker",
            "FEEncLoraLoader",
            "FEExtraInfoAdd",
            "FEGenStringBCDocker",
            "FEGenStringGPT",
            "FEImageNoiseGenerate",
            "FEImagePadForOutpaint",
            "FEImagePadForOutpaintByImage",
            "FEOperatorIf",
            "FEPythonStrOp",
            "FERandomBool",
            "FERandomLoraSelect",
            "FERandomPrompt",
            "FERandomizedColor2Image",
            "FERandomizedColorOut",
            "FERerouteWithName",
            "FESaveEncryptImage",
            "FETextCombine",
            "FETextCombine2Any",
            "FETextInput"
        ],
        {
            "title_aux": "fexli-util-node-comfyui"
        }
    ],
    "https://github.com/fexploit/ComfyUI-AutoLabel": [
        [
            "AutoLabel"
        ],
        {
            "title_aux": "ComfyUI-AutoLabel"
        }
    ],
    "https://github.com/fexploit/ComfyUI-AutoTrimBG": [
        [
            "RonLayers/TrimBg: RonLayersTrimBgUltraV2"
        ],
        {
            "title_aux": "ComfyUI-AutoTrimBG"
        }
    ],
    "https://github.com/fexploit/ComfyUI-Classifier": [
        [
            "ClassifierNode"
        ],
        {
            "title_aux": "ComfyUI-Classifier"
        }
    ],
    "https://github.com/filipemeneses/comfy_pixelization": [
        [
            "Pixelization"
        ],
        {
            "title_aux": "Pixelization"
        }
    ],
    "https://github.com/filliptm/ComfyUI_FL-Trainer": [
        [
            "FL_ImageCaptionSaver",
            "FL_KohyaSSAdvConfig",
            "FL_KohyaSSDatasetConfig",
            "FL_KohyaSSInitWorkspace",
            "FL_KohyaSSTrain",
            "FL_Kohya_EasyTrain",
            "FL_LoadImagesFromDirectoryPath",
            "FL_SliderLoraAdvConfig",
            "FL_SliderLoraDatasetConfig",
            "FL_SliderLoraInitWorkspace",
            "FL_SliderLoraTrain"
        ],
        {
            "title_aux": "ComfyUI_FL-Trainer"
        }
    ],
    "https://github.com/filliptm/ComfyUI_Fill-Nodes": [
        [
            "FL_ApplyMask",
            "FL_Ascii",
            "FL_BatchAlign",
            "FL_BulkPDFLoader",
            "FL_BulletHellGame",
            "FL_CaptionSaver_V2",
            "FL_CaptionToCSV",
            "FL_CodeNode",
            "FL_ColorPicker",
            "FL_Dalle3",
            "FL_DirectoryCrawl",
            "FL_Dither",
            "FL_FractalKSampler",
            "FL_GPT_Vision",
            "FL_Glitch",
            "FL_GoogleDriveDownloader",
            "FL_GradGenerator",
            "FL_HFHubModelUploader",
            "FL_HF_Character",
            "FL_HF_UploaderAbsolute",
            "FL_HalftonePattern",
            "FL_HexagonalPattern",
            "FL_ImageAdjuster",
            "FL_ImageBatchToGrid",
            "FL_ImageBatchToImageList",
            "FL_ImageCaptionLayout",
            "FL_ImageCaptionLayoutPDF",
            "FL_ImageCaptionSaver",
            "FL_ImageCollage",
            "FL_ImageDimensionDisplay",
            "FL_ImageListToImageBatch",
            "FL_ImageNotes",
            "FL_ImagePixelator",
            "FL_ImageRandomizer",
            "FL_ImageSlicer",
            "FL_ImagesToPDF",
            "FL_InfiniteZoom",
            "FL_InpaintCrop",
            "FL_Inpaint_Stitch",
            "FL_KSamplerXYZPlot",
            "FL_KsamplerBasic",
            "FL_KsamplerPlus",
            "FL_KsamplerSettings",
            "FL_LoadImage",
            "FL_MadLibGenerator",
            "FL_Math",
            "FL_MirrorAndAppendCaptions",
            "FL_NFTGenerator",
            "FL_NodeLoader",
            "FL_NodePackLoader",
            "FL_OllamaCaptioner",
            "FL_PDFImageExtractor",
            "FL_PDFLoader",
            "FL_PDFMerger",
            "FL_PDFSaver",
            "FL_PDFTextExtractor",
            "FL_PDFToImages",
            "FL_Padding",
            "FL_PaperDrawn",
            "FL_PasteOnCanvas",
            "FL_PathTypeChecker",
            "FL_PixelArtShader",
            "FL_PixelSort",
            "FL_ProResVideo",
            "FL_PromptSelector",
            "FL_RandomNumber",
            "FL_RetroEffect",
            "FL_Ripple",
            "FL_SDUltimate_Slices",
            "FL_SamplerStrings",
            "FL_SaveAndDisplayImage",
            "FL_SaveCSV",
            "FL_SaveImages",
            "FL_SaveWebPImage(SaveImage)",
            "FL_SchedulerStrings",
            "FL_SendToDiscordWebhook",
            "FL_SeparateMaskComponents",
            "FL_Shadertoy",
            "FL_SimpleGPTVision",
            "FL_SystemCheck",
            "FL_TetrisGame",
            "FL_TimeLine",
            "FL_UpscaleModel",
            "FL_VideoCropMask",
            "FL_VideoRecompose",
            "FL_ZipDirectory",
            "FL_ZipSave",
            "GradientImageGenerator",
            "SaveWebPImage"
        ],
        {
            "title_aux": "ComfyUI_Fill-Nodes"
        }
    ],
    "https://github.com/florestefano1975/ComfyUI-Advanced-Sequence-Seed": [
        [
            "AdvancedSequenceSeedNode"
        ],
        {
            "title_aux": "Advanced Sequence Seed Generator"
        }
    ],
    "https://github.com/florestefano1975/ComfyUI-CogVideoX": [
        [
            "CogVideoX Image-2-Video Extended",
            "CogVideoX Save Video"
        ],
        {
            "title_aux": "ComfyUI-CogVideoX"
        }
    ],
    "https://github.com/florestefano1975/ComfyUI-HiDiffusion": [
        [
            "HiDiffusionSD15",
            "HiDiffusionSD21",
            "HiDiffusionSDXL",
            "HiDiffusionSDXLTurbo"
        ],
        {
            "title_aux": "ComfyUI HiDiffusion"
        }
    ],
    "https://github.com/florestefano1975/ComfyUI-StabilityAI-Suite": [
        [
            "StabilityAI Suite - Creative Upscale",
            "StabilityAI Suite - Creative Upscale Recover File",
            "StabilityAI Suite - Image Core + Style Preset",
            "StabilityAI Suite - Inpainting",
            "StabilityAI Suite - Outpainting",
            "StabilityAI Suite - Remove Background",
            "StabilityAI Suite - SD3",
            "StabilityAI Suite - Search and Replace"
        ],
        {
            "title_aux": "ComfyUI StabilityAI Suite"
        }
    ],
    "https://github.com/florestefano1975/comfyui-portrait-master": [
        [
            "PortraitMaster",
            "PortraitMasterBaseCharacter",
            "PortraitMasterMakeup",
            "PortraitMasterSkinDetails",
            "PortraitMasterStylePose"
        ],
        {
            "title_aux": "comfyui-portrait-master"
        }
    ],
    "https://github.com/florestefano1975/comfyui-prompt-composer": [
        [
            "PromptComposerCustomLists",
            "PromptComposerEffect",
            "PromptComposerGrouping",
            "PromptComposerMerge",
            "PromptComposerStyler",
            "PromptComposerTextSingle",
            "promptComposerTextMultiple"
        ],
        {
            "title_aux": "comfyui-prompt-composer"
        }
    ],
    "https://github.com/flowtyone/ComfyUI-Flowty-CRM": [
        [
            "CCMSampler",
            "CRMModelLoader",
            "CRMModeler",
            "CRMModelerCuda",
            "CRMPoseSampler",
            "CRMPoserConfig",
            "CRMPreprocessForPoser",
            "CRMViewer"
        ],
        {
            "title_aux": "ComfyUI-Flowty-CRM"
        }
    ],
    "https://github.com/flowtyone/ComfyUI-Flowty-LDSR": [
        [
            "LDSRModelLoader",
            "LDSRUpscale",
            "LDSRUpscaler"
        ],
        {
            "title_aux": "ComfyUI-Flowty-LDSR"
        }
    ],
    "https://github.com/flowtyone/ComfyUI-Flowty-TripoSR": [
        [
            "TripoSRModelLoader",
            "TripoSRSampler",
            "TripoSRViewer"
        ],
        {
            "title_aux": "ComfyUI-Flowty-TripoSR"
        }
    ],
    "https://github.com/flycarl/ComfyUI-Pixelate": [
        [
            "ComfyUIPixelate"
        ],
        {
            "title_aux": "ComfyUI-Pixelate"
        }
    ],
    "https://github.com/flyingshutter/As_ComfyUI_CustomNodes": [
        [
            "BatchIndex_AS",
            "CropImage_AS",
            "Eval_AS",
            "ImageMixMasked_As",
            "ImageToMask_AS",
            "Increment_AS",
            "Int2Any_AS",
            "LatentAdd_AS",
            "LatentMixMasked_As",
            "LatentMix_AS",
            "LatentToImages_AS",
            "LoadLatent_AS",
            "MapRange_AS",
            "MaskToImage_AS",
            "Math_AS",
            "NoiseImage_AS",
            "Number2Float_AS",
            "Number2Int_AS",
            "Number_AS",
            "SaveLatent_AS",
            "TextToImage_AS",
            "TextWildcardList_AS"
        ],
        {
            "title_aux": "As_ComfyUI_CustomNodes"
        }
    ],
    "https://github.com/fmatray/ComfyUI_BattlemapGrid": [
        [
            "Battlemap Grid",
            "Compass",
            "Map Generator",
            "Map Generator(Outdoors)"
        ],
        {
            "title_aux": "ComfyUI_BattlemapGrid"
        }
    ],
    "https://github.com/fofr/ComfyUI-HyperSDXL1StepUnetScheduler": [
        [
            "HyperSDXL1StepUnetScheduler"
        ],
        {
            "title_aux": "ComfyUI-HyperSDXL1StepUnetScheduler (ByteDance)"
        }
    ],
    "https://github.com/fofr/ComfyUI-Prompter-fofrAI": [
        [
            "List sampler \ud83e\udeb4",
            "Prompt from template \ud83e\udeb4"
        ],
        {
            "title_aux": "ComfyUI-Prompter-fofrAI"
        }
    ],
    "https://github.com/fofr/comfyui-fofr-toolkit": [
        [
            "Incrementer \ud83e\udeb4",
            "Width and height for scaling image to ideal resolution \ud83e\udeb4",
            "Width and height from aspect ratio \ud83e\udeb4"
        ],
        {
            "title_aux": "comfyui-fofr-toolkit"
        }
    ],
    "https://github.com/forever22777/comfyui-self-guidance": [
        [
            "CLIPConditioning",
            "CheckpointLoaderMixWithDiffusers",
            "SelfGuidanceSampler"
        ],
        {
            "title_aux": "Self-Guidance nodes"
        }
    ],
    "https://github.com/foxtrot-roger/comfyui-rf-nodes": [
        [
            "LogBool",
            "LogFloat",
            "LogInt",
            "LogNumber",
            "LogString",
            "LogVec2",
            "LogVec3",
            "RF_AtIndexString",
            "RF_BoolToString",
            "RF_FloatToString",
            "RF_IntToString",
            "RF_JsonStyleLoader",
            "RF_MergeLines",
            "RF_NumberToString",
            "RF_OptionsString",
            "RF_RangeFloat",
            "RF_RangeInt",
            "RF_RangeNumber",
            "RF_SavePromptInfo",
            "RF_SplitLines",
            "RF_TextConcatenate",
            "RF_TextInput",
            "RF_TextReplace",
            "RF_Timestamp",
            "RF_ToString",
            "RF_Vec2ToString",
            "RF_Vec3ToString",
            "TextLine"
        ],
        {
            "title_aux": "RF Nodes"
        }
    ],
    "https://github.com/frankchieng/ComfyUI_Aniportrait": [
        [
            "AniPortrait_Audio2Video",
            "AniPortrait_Audio_Path",
            "AniPortrait_LoadVideoPath",
            "AniPortrait_Pose_Gen_Video",
            "AniPortrait_Ref_Image_Path",
            "AniPortrait_Video_Gen_Pose"
        ],
        {
            "title_aux": "ComfyUI_Aniportrait"
        }
    ],
    "https://github.com/frankchieng/ComfyUI_MagicClothing": [
        [
            "MagicClothing_Animatediff",
            "MagicClothing_Generate",
            "MagicClothing_Inpainting"
        ],
        {
            "title_aux": "ComfyUI_MagicClothing"
        }
    ],
    "https://github.com/frankchieng/ComfyUI_llm_easyanimiate": [
        [],
        {
            "nodename_pattern": "^FrankChiengEasyAnimate",
            "title_aux": "ComfyUI_llm_easyanimiate"
        }
    ],
    "https://github.com/freelifehacker/ComfyUI-ImgMask2PNG": [
        [
            "ImageMask2PNG"
        ],
        {
            "title_aux": "ComfyUI-ImgMask2PNG"
        }
    ],
    "https://github.com/fsdymy1024/ComfyUI_fsdymy": [
        [
            "IPAdapterLayerWeight",
            "Preview Image Without Metadata",
            "PreviewImageWithoutMetadata",
            "Save Image Without Metadata",
            "SaveImageWithoutMetadata",
            "ShowText",
            "ZhiPuAiNode"
        ],
        {
            "title_aux": "ComfyUI_fsdymy"
        }
    ],
    "https://github.com/fssorc/ComfyUI_FFT": [
        [
            "FFTNode",
            "FindFFTSpot",
            "InvertFFTNode",
            "InvertFFTWithMask"
        ],
        {
            "title_aux": "ComfyUI_FFT"
        }
    ],
    "https://github.com/fssorc/ComfyUI_FaceShaper": [
        [
            "FaceAlignmentCropper",
            "FaceShaper",
            "FaceShaperComposite",
            "FaceShaperCropper",
            "FaceShaperFaceMask",
            "FaceShaperLoadInsightFaceCropper",
            "FaceShaperLoadMediaPipeCropper",
            "FaceShaperMatchV2",
            "FaceShaperModels",
            "FaceShaperShowLandMarks"
        ],
        {
            "title_aux": "ComfyUI_FaceShaper"
        }
    ],
    "https://github.com/fssorc/ComfyUI_RopeWrapper": [
        [
            "RopeVideoCombine",
            "RopeWrapper_DetectNode",
            "RopeWrapper_FaceRestore",
            "RopeWrapper_LoadModels",
            "RopeWrapper_LoadSwapInfo",
            "RopeWrapper_OptionNode",
            "RopeWrapper_SaveSwapInfo",
            "RopeWrapper_SwapNode",
            "RopeWrapper_SwapNodeTEST"
        ],
        {
            "title_aux": "ComfyUI_RopeWrapper"
        }
    ],
    "https://github.com/fssorc/ComfyUI_pose_inter": [
        [
            "Pose_Inter"
        ],
        {
            "title_aux": "ComfyUI_pose_inter"
        }
    ],
    "https://github.com/gelasdev/ComfyUI-FLUX-BFL-API": [
        [
            "FluxDevRedux_BFL",
            "FluxDev_BFL",
            "FluxPro11Redux_BFL",
            "FluxPro11UltraRedux_BFL",
            "FluxPro11Ultra_BFL",
            "FluxPro11_BFL",
            "FluxProCanny_BFL",
            "FluxProDepth_BFL",
            "FluxProFill_BFL",
            "FluxPro_BFL"
        ],
        {
            "title_aux": "ComfyUI-FLUX-BFL-API"
        }
    ],
    "https://github.com/gemell1/ComfyUI_GMIC": [
        [
            "GmicCliWrapper",
            "GmicQtWrapper"
        ],
        {
            "title_aux": "ComfyUI_GMIC"
        }
    ],
    "https://github.com/geocine/geocine-comfyui": [
        [
            "Image Scale",
            "Image Selector",
            "LoRA Name List",
            "Seed to Noise"
        ],
        {
            "title_aux": "geocine-comfyui"
        }
    ],
    "https://github.com/ggarra13/ComfyUI-mrv2": [
        [
            "mrv2AnnotationsImageNode",
            "mrv2SaveEXRImage"
        ],
        {
            "title_aux": "ComfyUI-mrv2"
        }
    ],
    "https://github.com/giriss/comfy-image-saver": [
        [
            "Cfg Literal",
            "Checkpoint Selector",
            "Int Literal",
            "Sampler Selector",
            "Save Image w/Metadata",
            "Scheduler Selector",
            "Seed Generator",
            "String Literal",
            "Width/Height Literal"
        ],
        {
            "title_aux": "Save Image with Generation Metadata"
        }
    ],
    "https://github.com/gisu/comfyui-foxpack": [
        [
            "Add_To_List",
            "BaseSamplerSetup",
            "Big_Prompter",
            "Change_Entries_In_A_List",
            "Change_Entry_From_List",
            "CheckpointMetaExtractor",
            "CheckpointSelector",
            "Complete_Setup",
            "Convert_Into",
            "Negate_Boolean",
            "Optional_Value_Override",
            "OverrideSamplerSetup",
            "Override_Value_If_Unset",
            "Pick_Value_From_Dict",
            "Pick_Values_From_List",
            "Refine_Prompt",
            "Refine_Setup",
            "Remap_Values",
            "Remove_Values_From_List",
            "Select_By_Index",
            "Select_Line_By_Index",
            "Select_String_By_Index",
            "SetupSelector",
            "Show_Type",
            "Split_Entry_In_2Chunks",
            "Split_Entry_In_4Chunks",
            "Split_Entry_In_6Chunks",
            "Split_Entry_In_8Chunks",
            "Step_Denoise",
            "UniversalLatentHelper",
            "Universal_VAE_Loader"
        ],
        {
            "title_aux": "foxpack"
        }
    ],
    "https://github.com/githubYiheng/ComfyUI_Change_IMAGE_BOREDER": [
        [
            "ChangeImageBorder"
        ],
        {
            "title_aux": "ComfyUI_Change_IMAGE_BOREDER"
        }
    ],
    "https://github.com/githubYiheng/ComfyUI_GetFileNameFromURL": [
        [
            "GetFileNameFromURL"
        ],
        {
            "title_aux": "ComfyUI_GetFileNameFromURL"
        }
    ],
    "https://github.com/githubYiheng/comfyui_kmeans_filter": [
        [
            "ImageKmeansFilter"
        ],
        {
            "title_aux": "comfyui_kmeans_filter"
        }
    ],
    "https://github.com/githubYiheng/comfyui_meanshift_filter": [
        [
            "ImageMeanshiftFilter"
        ],
        {
            "title_aux": "comfyui_meanshift_filter"
        }
    ],
    "https://github.com/githubYiheng/comfyui_private_postprocessor": [
        [
            "ImageCPostprocessor",
            "PrivateImageMask"
        ],
        {
            "title_aux": "comfyui_private_postprocessor"
        }
    ],
    "https://github.com/glibsonoran/Plush-for-ComfyUI": [
        [
            "AI Chooser",
            "Add Parameters",
            "AdvPromptEnhancer",
            "Custom API Key",
            "DalleImage",
            "Enhancer",
            "Image Mixer",
            "ImgTextSwitch",
            "Load Remote Models",
            "ParseJSON",
            "Plush-Exif Wrangler",
            "Random Image Output",
            "Random Mixer",
            "Random Output",
            "Tagger",
            "Text (Any)",
            "Type Converter",
            "mulTextSwitch"
        ],
        {
            "title_aux": "Plush-for-ComfyUI"
        }
    ],
    "https://github.com/glifxyz/ComfyUI-GlifNodes": [
        [
            "FilmGrain",
            "FluxReduxFloatRamp",
            "GlifConsistencyDecoder",
            "GlifPatchConsistencyDecoderTiled",
            "GlifVariable",
            "HFHubEmbeddingLoader",
            "HFHubLoraLoader",
            "ImagePaddingAdvanced",
            "ImageToMultipleOf",
            "LoraLoaderFromURL",
            "SDXLAspectRatio"
        ],
        {
            "title_aux": "ComfyUI-GlifNodes"
        }
    ],
    "https://github.com/glowcone/comfyui-base64-to-image": [
        [
            "LoadImageFromBase64"
        ],
        {
            "title_aux": "Load Image From Base64 URI"
        }
    ],
    "https://github.com/glowcone/comfyui-string-converter": [
        [
            "StringToFloat",
            "StringToInt"
        ],
        {
            "title_aux": "String Converter"
        }
    ],
    "https://github.com/goburiin/nsfwrecog-comfyui": [
        [
            "NSFWDetectorNode"
        ],
        {
            "title_aux": "nsfwrecog-comfyui"
        }
    ],
    "https://github.com/godmt/ComfyUI-List-Utils": [
        [
            "GODMT_AnyCast",
            "GODMT_AnyToDict",
            "GODMT_BatchGetByIndex",
            "GODMT_BatchItemCast",
            "GODMT_BatchSlice",
            "GODMT_BatchToList",
            "GODMT_CreateArange",
            "GODMT_CreateBatch",
            "GODMT_CreateLinspace",
            "GODMT_CreateList",
            "GODMT_CreateRange",
            "GODMT_Exec",
            "GODMT_GetLength",
            "GODMT_GetShape",
            "GODMT_GetWidgetsValues",
            "GODMT_ListDir",
            "GODMT_ListGetByIndex",
            "GODMT_ListSlice",
            "GODMT_ListToBatch",
            "GODMT_MergeBatch",
            "GODMT_MergeList",
            "GODMT_Pack",
            "GODMT_SplitString",
            "GODMT_Unpack"
        ],
        {
            "title_aux": "ComfyUI-List-Utils"
        }
    ],
    "https://github.com/godspede/ComfyUI_Substring": [
        [
            "SubstringTheory"
        ],
        {
            "title_aux": "ComfyUI Substring"
        }
    ],
    "https://github.com/gokayfem/ComfyUI-Depth-Visualization": [
        [
            "DepthViewer"
        ],
        {
            "title_aux": "ComfyUI-Depth-Visualization"
        }
    ],
    "https://github.com/gokayfem/ComfyUI-Dream-Interpreter": [
        [
            "DreamViewer"
        ],
        {
            "title_aux": "ComfyUI-Dream-Interpreter"
        }
    ],
    "https://github.com/gokayfem/ComfyUI-Texture-Simple": [
        [
            "TextureViewer"
        ],
        {
            "title_aux": "ComfyUI-Texture-Simple"
        }
    ],
    "https://github.com/gokayfem/ComfyUI_VLM_nodes": [
        [
            "AudioLDM2Node",
            "ChatMusician",
            "CreativeArtPromptGenerator",
            "Joytag",
            "JsonToText",
            "KeywordExtraction",
            "Kosmos2model",
            "LLMLoader",
            "LLMOptionalMemoryFreeAdvanced",
            "LLMOptionalMemoryFreeSimple",
            "LLMPromptGenerator",
            "LLMSampler",
            "LLava Loader Simple",
            "LLavaOptionalMemoryFreeAdvanced",
            "LLavaOptionalMemoryFreeSimple",
            "LLavaPromptGenerator",
            "LLavaSamplerAdvanced",
            "LLavaSamplerSimple",
            "LlavaClipLoader",
            "MCLLaVAModel",
            "MiniCPMNode",
            "MolmoNode",
            "MoonDream",
            "Moondream2model",
            "Paligemma",
            "PlayMusic",
            "PromptGenerateAPI",
            "Qwen2VLNode",
            "SaveAudioNode",
            "SimpleText",
            "StructuredOutput",
            "Suggester",
            "UformGen2QwenNode",
            "ViewText"
        ],
        {
            "title_aux": "VLM_nodes"
        }
    ],
    "https://github.com/gonzalu/ComfyUI_YFG_Comical": [
        [
            "Image10Switcher_node",
            "Image15Switcher_node",
            "Image20Switcher_node",
            "Image3Switcher_node",
            "Image5Switcher_node",
            "MonoClip_node",
            "PixelArt_node",
            "VAEDecodePreview_node",
            "image2contrastMask_node",
            "image2imbgg_node",
            "image_halftone",
            "image_histograms_node",
            "image_histograms_node_compact",
            "images_side_by_side",
            "imgbbLoader_node",
            "smartCheckpointLoader_node",
            "storeURL_node",
            "textMaskOverlay_node"
        ],
        {
            "author": "Manny Gonzalez",
            "description": "Utility custom nodes for special effects, image manipulation and quality of life tools.",
            "nickname": "\ud83d\udc2f YFG Comical Nodes",
            "title": "\ud83d\udc2f YFG Comical Nodes",
            "title_aux": "\ud83d\ude38 YFG Comical Nodes"
        }
    ],
    "https://github.com/gorillaframeai/GF_nodes": [
        [
            "GFrbmg2"
        ],
        {
            "title_aux": "GFrbmg2"
        }
    ],
    "https://github.com/gremlation/ComfyUI-ImageLabel": [
        [
            "gremlation:ComfyUI-ImageLabel:ImageLabel"
        ],
        {
            "title_aux": "ComfyUI-ImageLabel"
        }
    ],
    "https://github.com/gremlation/ComfyUI-JMESPath": [
        [
            "gremlation:ComfyUI-JMESPath"
        ],
        {
            "title_aux": "ComfyUI-JMESPath"
        }
    ],
    "https://github.com/gremlation/ComfyUI-ViewData": [
        [
            "gremlation:ComfyUI-ViewData:ViewData"
        ],
        {
            "title_aux": "ComfyUI-ViewData"
        }
    ],
    "https://github.com/gremlation/ComfyUI-jq": [
        [
            "gremlation:ComfyUI-jq"
        ],
        {
            "title_aux": "ComfyUI-jq"
        }
    ],
    "https://github.com/griptape-ai/ComfyUI-Griptape": [
        [
            "Griptape Agent Config: Amazon Bedrock Drivers",
            "Griptape Agent Config: Amazon Bedrock [DEPRECATED]",
            "Griptape Agent Config: Anthropic Drivers",
            "Griptape Agent Config: Anthropic [DEPRECATED]",
            "Griptape Agent Config: Azure OpenAI Drivers",
            "Griptape Agent Config: Azure OpenAI [DEPRECATED]",
            "Griptape Agent Config: Cohere Drivers",
            "Griptape Agent Config: Custom Structure",
            "Griptape Agent Config: Environment Variables",
            "Griptape Agent Config: Expand",
            "Griptape Agent Config: Google Drivers",
            "Griptape Agent Config: Google [DEPRECATED]",
            "Griptape Agent Config: HuggingFace Drivers",
            "Griptape Agent Config: HuggingFace [DEPRECATED]",
            "Griptape Agent Config: LM Studio Drivers",
            "Griptape Agent Config: LM Studio [DEPRECATED]",
            "Griptape Agent Config: Ollama Drivers",
            "Griptape Agent Config: Ollama [DEPRECATED]",
            "Griptape Agent Config: OpenAI Compatible Drivers",
            "Griptape Agent Config: OpenAI Compatible [DEPRECATED]",
            "Griptape Agent Config: OpenAI Drivers",
            "Griptape Agent Config: OpenAI [DEPRECATED]",
            "Griptape Audio Transcription Driver: OpenAI",
            "Griptape Code: Run Griptape Cloud Structure",
            "Griptape Code: Run Python",
            "Griptape Combine: Merge Inputs",
            "Griptape Combine: Merge Texts",
            "Griptape Combine: RAG Module List",
            "Griptape Combine: Rules List",
            "Griptape Combine: Tool List",
            "Griptape Config: Environment Variables",
            "Griptape Convert: Agent to Tool",
            "Griptape Convert: Text to CLIP Encode",
            "Griptape Convert: Text to Combo",
            "Griptape Create: Agent",
            "Griptape Create: Agent from Config",
            "Griptape Create: CLIP Text Encode",
            "Griptape Create: Image Inpainting Variation",
            "Griptape Create: Image Variation",
            "Griptape Create: Image from Text",
            "Griptape Create: Rules",
            "Griptape Create: Text",
            "Griptape Display: Artifact",
            "Griptape Display: Data as Text",
            "Griptape Display: Image",
            "Griptape Display: Text",
            "Griptape Driver: Amazon Bedrock Stable Diffusion",
            "Griptape Driver: Amazon Bedrock Titan",
            "Griptape Driver: Azure OpenAI Image Generation",
            "Griptape Driver: Black Forest Labs Image Generation",
            "Griptape Driver: Leonardo.AI",
            "Griptape Driver: OpenAI Compatible Image Generation",
            "Griptape Driver: OpenAI Image Generation",
            "Griptape Embedding Driver: Amazon Bedrock Titan",
            "Griptape Embedding Driver: Amazon SageMaker Jumpstart",
            "Griptape Embedding Driver: Azure OpenAI",
            "Griptape Embedding Driver: Cohere",
            "Griptape Embedding Driver: Google",
            "Griptape Embedding Driver: HuggingFace",
            "Griptape Embedding Driver: LM Studio",
            "Griptape Embedding Driver: Ollama",
            "Griptape Embedding Driver: OpenAI",
            "Griptape Embedding Driver: OpenAI Compatible",
            "Griptape Embedding Driver: Voyage AI",
            "Griptape Expand: Agent Nodes",
            "Griptape Load: Audio",
            "Griptape Load: Image From URL",
            "Griptape Load: Text",
            "Griptape Prompt Driver: Amazon Bedrock",
            "Griptape Prompt Driver: Amazon SageMaker Jumpstart",
            "Griptape Prompt Driver: Anthropic",
            "Griptape Prompt Driver: Azure OpenAI",
            "Griptape Prompt Driver: Cohere",
            "Griptape Prompt Driver: Google",
            "Griptape Prompt Driver: HuggingFace",
            "Griptape Prompt Driver: LM Studio",
            "Griptape Prompt Driver: Ollama",
            "Griptape Prompt Driver: OpenAI",
            "Griptape Prompt Driver: OpenAI Compatible",
            "Griptape RAG Query: Translate Module",
            "Griptape RAG Rerank: Text Chunks Module",
            "Griptape RAG Response: Footnote Prompt Module",
            "Griptape RAG Response: Prompt Module",
            "Griptape RAG Response: Text Chunks Module",
            "Griptape RAG Retrieve: Text Loader Module",
            "Griptape RAG Retrieve: Vector Store Module",
            "Griptape RAG: Engine",
            "Griptape Replace: Rulesets on Agent",
            "Griptape Replace: Tools on Agent",
            "Griptape Rerank Driver: Cohere",
            "Griptape Run: Agent",
            "Griptape Run: Audio Transcription",
            "Griptape Run: Image Description",
            "Griptape Run: Parallel Image Description",
            "Griptape Run: Prompt Task",
            "Griptape Run: Task",
            "Griptape Run: Text Extraction",
            "Griptape Run: Text Summary",
            "Griptape Run: Text to Speech",
            "Griptape Run: Tool Task",
            "Griptape Run: Toolkit Task",
            "Griptape Save: Text",
            "Griptape Set: Default Agent",
            "Griptape Text To Speech Driver: ElevenLabs",
            "Griptape Text To Speech Driver: OpenAI",
            "Griptape Tool: Audio Transcription",
            "Griptape Tool: Calculator",
            "Griptape Tool: DateTime",
            "Griptape Tool: Extraction",
            "Griptape Tool: FileManager",
            "Griptape Tool: Griptape Cloud KnowledgeBase",
            "Griptape Tool: Prompt Summary",
            "Griptape Tool: Query",
            "Griptape Tool: RAG",
            "Griptape Tool: Text to Speech",
            "Griptape Tool: VectorStore",
            "Griptape Tool: WebScraper",
            "Griptape Tool: WebSearch",
            "Griptape Util: Create Agent Modelfile",
            "Griptape Util: Create Model from Modelfile",
            "Griptape Util: Remove Ollama Model",
            "Griptape Util: Switch Node",
            "Griptape Vector Store Driver: Amazon OpenSearch",
            "Griptape Vector Store Driver: Azure MongoDB",
            "Griptape Vector Store Driver: Griptape Cloud",
            "Griptape Vector Store Driver: Local",
            "Griptape Vector Store Driver: Marqo",
            "Griptape Vector Store Driver: MongoDB Atlas",
            "Griptape Vector Store Driver: PGVector",
            "Griptape Vector Store Driver: Pinecone",
            "Griptape Vector Store Driver: Qdrant",
            "Griptape Vector Store Driver: Redis",
            "Griptape Vector Store: Add Text",
            "Griptape Vector Store: Query",
            "Griptape WebSearch Driver: DuckDuckGo",
            "Griptape WebSearch Driver: Exa",
            "Griptape WebSearch Driver: Google",
            "Griptape WebSearch Driver: Tavily"
        ],
        {
            "author": "Jason Schleifer",
            "description": "This extension offers various nodes that allow you to work with LLMs using the Griptape Python Framework (https://griptape.ai)",
            "nickname": "ComfyUI-Griptape",
            "title": "ComfyUI Griptape Nodes",
            "title_aux": "ComfyUI Griptape Nodes"
        }
    ],
    "https://github.com/gseth/ControlAltAI-Nodes": [
        [
            "BooleanBasic",
            "BooleanReverse",
            "ChooseUpscaleModel",
            "FluxAttentionCleanup",
            "FluxAttentionControl",
            "FluxControlNetApply",
            "FluxResolutionNode",
            "FluxSampler",
            "FluxUnionControlNetApply",
            "GetImageSizeRatio",
            "IntegerSettings",
            "NoisePlusBlend",
            "RegionMaskConditioning",
            "RegionMaskGenerator",
            "RegionMaskProcessor",
            "RegionMaskValidator",
            "RegionOverlayVisualizer"
        ],
        {
            "title_aux": "ControlAltAI Nodes"
        }
    ],
    "https://github.com/gt732/ComfyUI-DreamWaltz-G": [
        [
            "DreamWaltzGStageOneTrainer",
            "DreamWaltzGStageTwoTrainer"
        ],
        {
            "title_aux": "ComfyUI-DreamWaltz-G"
        }
    ],
    "https://github.com/guill/abracadabra-comfyui": [
        [
            "AbracadabraNode",
            "AbracadabraNodeDefSummary"
        ],
        {
            "title_aux": "abracadabra-comfyui"
        }
    ],
    "https://github.com/guyaton/guy-nodes-comfyui": [
        [
            "GuyRecommendedLatentResCalc"
        ],
        {
            "title_aux": "guy-nodes-comfyui"
        }
    ],
    "https://github.com/hackkhai/ComfyUI-Image-Matting": [
        [
            "ApplyMatting",
            "CreateTrimap",
            "MattingModelLoader"
        ],
        {
            "title_aux": "ComfyUI-Image-Matting"
        }
    ],
    "https://github.com/hanoixan/ComfyUI-DataBeast": [
        [
            "DBConvertToBoolean //DataBeast",
            "DBConvertToFloat //DataBeast",
            "DBConvertToInt //DataBeast",
            "DBConvertToString //DataBeast",
            "DBFloatExpression //DataBeast",
            "DBGetBatchList //DataBeast",
            "DBGetItem //DataBeast",
            "DBLoadData //DataBeast",
            "DBStringExpression //DataBeast"
        ],
        {
            "author": "hanoixan",
            "description": "This extension provides nodes for controlling data-driven processing in Comfy-UI",
            "nickname": "DataBeast",
            "title": "DataBeast",
            "title_aux": "ComfyUI DataBeast"
        }
    ],
    "https://github.com/haohaocreates/ComfyUI-HH-Image-Selector": [
        [
            "Image Selector"
        ],
        {
            "title_aux": "ComfyUI-HH-Image-Selector"
        }
    ],
    "https://github.com/hay86/ComfyUI_DDColor": [
        [
            "D_DDColor"
        ],
        {
            "title_aux": "ComfyUI DDColor"
        }
    ],
    "https://github.com/hay86/ComfyUI_Dreamtalk": [
        [
            "D_DreamTalk"
        ],
        {
            "title_aux": "ComfyUI Dreamtalk"
        }
    ],
    "https://github.com/hay86/ComfyUI_Hallo": [
        [
            "D_HalloNode"
        ],
        {
            "title_aux": "ComfyUI Hallo"
        }
    ],
    "https://github.com/hay86/ComfyUI_LatentSync": [
        [
            "D_LatentSyncNode"
        ],
        {
            "title_aux": "ComfyUI LatentSync"
        }
    ],
    "https://github.com/hay86/ComfyUI_MiniCPM-V": [
        [
            "D_MiniCPM_VQA"
        ],
        {
            "title_aux": "ComfyUI MiniCPM-V"
        }
    ],
    "https://github.com/hay86/ComfyUI_OpenVoice": [
        [
            "D_OpenVoice_STS",
            "D_OpenVoice_TTS",
            "D_OpenVoice_TTS_V2"
        ],
        {
            "title_aux": "ComfyUI OpenVoice"
        }
    ],
    "https://github.com/hben35096/ComfyUI-ReplenishNodes": [
        [
            "Batch Image Blend",
            "FLOAT Output",
            "Fill Alpha",
            "Get Batch Count",
            "Image Blend BG",
            "Integer Output",
            "Load CLIP Name",
            "Load Ckpt Name",
            "Load Lora Name",
            "Load Sampler Name",
            "Load Scheduler Name",
            "Load UNET Name",
            "Mask Levels Adjust",
            "Multi Line Text",
            "Multiple Image Blend",
            "RN_MultipleImageBlend_2",
            "Seed Output"
        ],
        {
            "title_aux": "ComfyUI-ReplenishNodes"
        }
    ],
    "https://github.com/hben35096/ComfyUI-ToolBox": [
        [
            "AutoDLDownload",
            "CreatePaths",
            "FolderDeleter",
            "FolderViewe",
            "PathOutput"
        ],
        {
            "title_aux": "ComfyUI-ToolBox"
        }
    ],
    "https://github.com/heshengtao/comfyui_LLM_party": [
        [
            "About_us",
            "AmapRegeoTool",
            "AmapWeatherTool",
            "Browser_display",
            "CLIPTextEncode_party",
            "Combine_Videos_party",
            "Dingding",
            "Dingding_tool",
            "EasyOCR_advance",
            "EasyOCR_choose",
            "FeishuDownloadAudio",
            "FeishuDownloadImage",
            "FeishuGetHistory",
            "FeishuSendMsg",
            "FileOnlineDelete_gitee",
            "FileOnlineStorage_gitee",
            "FilePathExists",
            "FolderCleaner",
            "GGUFLoader",
            "GeocodeTool",
            "Image2Video_party",
            "Images2Image",
            "KG_csv_toolkit_developer",
            "KG_csv_toolkit_user",
            "KG_json_toolkit_developer",
            "KG_json_toolkit_user",
            "KG_neo_toolkit_developer",
            "KG_neo_toolkit_user",
            "KSampler_party",
            "LLM",
            "LLM_api_loader",
            "LLM_local",
            "LLM_local_loader",
            "LLavaLoader",
            "LorapathLoader",
            "Lorebook",
            "Mcp_tool",
            "RSS_loader",
            "RSS_tool",
            "SpeedChange",
            "URL2IMG",
            "VAEDecode_party",
            "accuweather_tool",
            "advance_ebd_tool",
            "aisuite_loader",
            "any2str",
            "any_switcher",
            "api_function",
            "api_tool",
            "arxiv_tool",
            "bing_loader",
            "bing_tool",
            "bool_logic",
            "browser_use_tool",
            "check_text",
            "check_web_tool",
            "classify_function",
            "classify_function_plus",
            "classify_persona",
            "classify_persona_plus",
            "clear_file",
            "clear_model",
            "custom_persona",
            "custom_string_format",
            "dall_e_tool",
            "discord_bot",
            "discord_file_monitor",
            "discord_send",
            "duckduckgo_loader",
            "duckduckgo_tool",
            "easy_GGUFLoader",
            "easy_LLM_api_loader",
            "easy_LLM_local_loader",
            "easy_LLavaLoader",
            "easy_load_llm_lora",
            "easy_vlmLoader",
            "ebd_tool",
            "embeddings_function",
            "end_anything",
            "end_dialog",
            "end_workflow",
            "extra_parameters",
            "feishu",
            "feishu_tool",
            "file_combine",
            "file_combine_plus",
            "file_path_iterator",
            "files_read_tool",
            "fish_tts",
            "fish_whisper",
            "flux_persona",
            "genai_api_loader",
            "get_string",
            "github_tool",
            "google_loader",
            "google_tool",
            "got_ocr",
            "gpt_sovits",
            "graph_md_to_html",
            "html2img_function",
            "ic_lora_persona",
            "image_iterator",
            "img2path",
            "interpreter_function",
            "interpreter_tool",
            "interrupt_loop",
            "json2text",
            "json_extractor",
            "json_get_value",
            "json_iterator",
            "json_parser",
            "json_writing",
            "keyword_tool",
            "list_append",
            "list_append_plus",
            "list_extend",
            "list_extend_plus",
            "listen_audio",
            "load_SQL_memo",
            "load_bool",
            "load_ebd",
            "load_excel",
            "load_file",
            "load_file_folder",
            "load_float",
            "load_img_path",
            "load_int",
            "load_keyword",
            "load_llm_lora",
            "load_memo",
            "load_name",
            "load_openai_ebd",
            "load_persona",
            "load_redis_memo",
            "load_url",
            "load_wikipedia",
            "md_to_excel",
            "md_to_html",
            "mini_error_correction",
            "mini_flux_prompt",
            "mini_flux_tag",
            "mini_intent_recognition",
            "mini_ocr",
            "mini_party",
            "mini_sd_prompt",
            "mini_sd_tag",
            "mini_story",
            "mini_summary",
            "mini_translate",
            "none2false",
            "omost_decode",
            "omost_json2py",
            "omost_setting",
            "open_url_function",
            "open_url_tool",
            "openai_dall_e",
            "openai_ebd_tool",
            "openai_tts",
            "openai_whisper",
            "parameter_combine",
            "parameter_combine_plus",
            "parameter_function",
            "path2img_tool",
            "red_book_text_persona",
            "replace_string",
            "save_SQL_memo",
            "save_ebd_database",
            "save_memo",
            "save_openai_ebd",
            "save_redis_memo",
            "savepersona",
            "searxng_tool",
            "send_to_wechat_official",
            "show_text_party",
            "sql_tool",
            "srt2txt",
            "start_anything",
            "start_dialog",
            "start_workflow",
            "story_json_tool",
            "str2float",
            "str2int",
            "string_combine",
            "string_combine_plus",
            "string_logic",
            "substring",
            "svg2html",
            "svg2img_function",
            "text2json",
            "text2parameters",
            "text_iterator",
            "text_writing",
            "time_sleep",
            "time_tool",
            "tool_combine",
            "tool_combine_plus",
            "translate_persona",
            "txt2srt",
            "url2img_tool",
            "vlmLoader",
            "weekday_tool",
            "whisper_local",
            "wikipedia_tool",
            "work_wechat",
            "work_wechat_tool",
            "workflow_tool",
            "workflow_transfer",
            "workflow_transfer_v2"
        ],
        {
            "title_aux": "comfyui_LLM_party"
        }
    ],
    "https://github.com/heshengtao/comfyui_LLM_schools": [
        [
            "CausalLM_trainer",
            "IA3_Arguments",
            "LLM_Arguments",
            "Lora_or_adapter_Arguments",
            "P_or_Prompt_Arguments",
            "Prefix_Arguments",
            "download_dataset",
            "get_dataset_name",
            "split_dataset"
        ],
        {
            "title_aux": "comfyui_LLM_schools"
        }
    ],
    "https://github.com/hhhzzyang/Comfyui_Lama": [
        [
            "LamaApply",
            "LamaModelLoader",
            "YamlConfigLoader"
        ],
        {
            "title_aux": "Comfyui-Lama"
        }
    ],
    "https://github.com/hieuck/ComfyUI-BiRefNet": [
        [
            "BiRefNet"
        ],
        {
            "title_aux": "ComfyUI-BiRefNet-Fix utils"
        }
    ],
    "https://github.com/hiforce/comfyui-hiforce-plugin": [
        [
            "HfBoolSwitchKSampleStatus",
            "HfImageAutoExpansionSquare",
            "HfImageToRGB",
            "HfImageToRGBA",
            "HfInitImageWithMaxSize",
            "HfIterativeLatentUpscale",
            "HfLoadImageWithCropper",
            "HfLookbackSamplerLoader",
            "HfLoopback",
            "HfResizeImage",
            "HfSampler",
            "HfSamplerLoader",
            "HfSamplerLoopback",
            "HfSaveImage",
            "HfSwitchKSampleStatus",
            "HfTwoSamplersForMask",
            "HfTwoStepSamplers",
            "LoadImageFromURL"
        ],
        {
            "title_aux": "Comfyui HiFORCE Plugin"
        }
    ],
    "https://github.com/hinablue/ComfyUI_3dPoseEditor": [
        [
            "Hina.PoseEditor3D"
        ],
        {
            "title_aux": "ComfyUI 3D Pose Editor"
        }
    ],
    "https://github.com/hodanajan/optimal-crop-resolution": [
        [
            "AspectRatioCalculator"
        ],
        {
            "title_aux": "optimal-crop-resolution"
        }
    ],
    "https://github.com/holchan/ComfyUI-ModelDownloader": [
        [
            "LoRADownloader",
            "ModelDownloader"
        ],
        {
            "title_aux": "ComfyUI-ModelDownloader"
        }
    ],
    "https://github.com/hoveychen/ComfyUI-MusePose-Remaster": [
        [
            "musepose_getposes",
            "musepose_inference"
        ],
        {
            "title_aux": "ComfyUI-MusePose-Remaster"
        }
    ],
    "https://github.com/huagetai/ComfyUI-Gaffer": [
        [
            "ApplyICLight",
            "CalculateNormalMap",
            "GrayScaler",
            "ICLightModelLoader",
            "LightSource"
        ],
        {
            "title_aux": "comfyui's gaffer(ComfyUI native implementation of IC-Light. )"
        }
    ],
    "https://github.com/huagetai/ComfyUI_LightGradient": [
        [
            "ImageGradient",
            "MaskGradient"
        ],
        {
            "title_aux": "Light Gradient for ComfyUI"
        }
    ],
    "https://github.com/huanngzh/ComfyUI-MVAdapter": [
        [
            "BiRefNet",
            "ControlImagePreprocessor",
            "ControlNetModelLoader",
            "DiffusersMVSampler",
            "DiffusersModelMakeup",
            "DiffusersPipelineLoader",
            "DiffusersSampler",
            "DiffusersSchedulerLoader",
            "DiffusersVaeLoader",
            "ImagePreprocessor",
            "LdmPipelineLoader",
            "LdmVaeLoader",
            "LoraModelLoader"
        ],
        {
            "title_aux": "ComfyUI-MVAdapter"
        }
    ],
    "https://github.com/huchenlei/ComfyUI-IC-Light-Native": [
        [
            "ICLightApplyMaskGrey",
            "ICLightAppply",
            "VAEEncodeArgMax"
        ],
        {
            "title_aux": "ComfyUI-IC-Light-Native"
        }
    ],
    "https://github.com/huchenlei/ComfyUI-layerdiffuse": [
        [
            "LayeredDiffusionApply",
            "LayeredDiffusionCondApply",
            "LayeredDiffusionCondJointApply",
            "LayeredDiffusionDecode",
            "LayeredDiffusionDecodeRGBA",
            "LayeredDiffusionDecodeSplit",
            "LayeredDiffusionDiffApply",
            "LayeredDiffusionJointApply"
        ],
        {
            "title_aux": "ComfyUI-layerdiffuse (layerdiffusion)"
        }
    ],
    "https://github.com/huchenlei/ComfyUI-openpose-editor": [
        [
            "huchenlei.LoadOpenposeJSON"
        ],
        {
            "title_aux": "ComfyUI-openpose-editor"
        }
    ],
    "https://github.com/huchenlei/ComfyUI_DanTagGen": [
        [
            "PromptDanTagGen"
        ],
        {
            "title_aux": "ComfyUI_DanTagGen"
        }
    ],
    "https://github.com/huchenlei/ComfyUI_densediffusion": [
        [
            "DenseDiffusionAddCondNode",
            "DenseDiffusionApplyNode"
        ],
        {
            "title_aux": "ComfyUI DenseDiffusion"
        }
    ],
    "https://github.com/huchenlei/ComfyUI_omost": [
        [
            "OmostDenseDiffusionLayoutNode",
            "OmostGreedyBagsTextEmbeddingNode",
            "OmostLLMChatNode",
            "OmostLLMHTTPServerNode",
            "OmostLLMLoaderNode",
            "OmostLayoutCondNode",
            "OmostLoadCanvasConditioningNode",
            "OmostLoadCanvasPythonCodeNode",
            "OmostRenderCanvasConditioningNode"
        ],
        {
            "title_aux": "ComfyUI_omost"
        }
    ],
    "https://github.com/hughescr/ComfyUI-OpenPose-Keypoint-Extractor": [
        [
            "Openpose Keypoint Extractor"
        ],
        {
            "title_aux": "OpenPose Keypoint Extractor"
        }
    ],
    "https://github.com/hustille/ComfyUI_Fooocus_KSampler": [
        [
            "KSampler With Refiner (Fooocus)"
        ],
        {
            "title_aux": "ComfyUI_Fooocus_KSampler"
        }
    ],
    "https://github.com/hustille/ComfyUI_hus_utils": [
        [
            "3way Prompt Styler",
            "Batch State",
            "Date Time Format",
            "Debug Extra",
            "Fetch widget value",
            "Text Hash"
        ],
        {
            "title_aux": "hus' utils for ComfyUI"
        }
    ],
    "https://github.com/hwhaocool/ComfyUI-Select-Any": [
        [
            "SelectAnyValues"
        ],
        {
            "title_aux": "ComfyUI-Select-Any"
        }
    ],
    "https://github.com/hylarucoder/comfyui-copilot": [
        [
            "EagleImageNode",
            "SDXLPromptStyler",
            "SDXLPromptStylerAdvanced",
            "SDXLResolutionPresets"
        ],
        {
            "title_aux": "comfyui-copilot"
        }
    ],
    "https://github.com/hyunamy/comfy-ui-on-complete-email-me": [
        [
            "OnCompleteEmailMe",
            "OnCompleteWebhook"
        ],
        {
            "title_aux": "Comfy-UI on-complete-email-me"
        }
    ],
    "https://github.com/hzane/OmniGen-ComfyUI": [
        [
            "OmniGenLoader",
            "OmniGenNode"
        ],
        {
            "title_aux": "OmniGen-ComfyUI"
        }
    ],
    "https://github.com/iFREEGROUP/comfyui-undistort": [
        [
            "IG_LoadCheckerboardImageForCalibrateCamera",
            "IG_MatrixAndDistCoefToText",
            "IG_Undistort"
        ],
        {
            "title_aux": "comfyui-undistort"
        }
    ],
    "https://github.com/iamandeepsandhu/ComfyUI-NSFW-Check": [
        [
            "NSFWScore"
        ],
        {
            "title_aux": "NSFW Check for ComfyUI"
        }
    ],
    "https://github.com/icesun963/ComfyUI_HFDownLoad": [
        [
            "Apply EasyOCR V2",
            "HFDownLoad_Tool",
            "LayerMask: SegmentAnythingUltra V2.1",
            "LayerUtility: LaMa V2"
        ],
        {
            "author": "chflame",
            "description": "A set of nodes for ComfyUI that can composite layer and mask to achieve Photoshop like functionality.",
            "nickname": "LayerStyle",
            "title": "LayerStyle",
            "title_aux": "HFDownLoad Node for ComfyUI"
        }
    ],
    "https://github.com/idrirap/ComfyUI-Lora-Auto-Trigger-Words": [
        [
            "FusionText",
            "LoraListNames",
            "LoraLoaderAdvanced",
            "LoraLoaderStackedAdvanced",
            "LoraLoaderStackedVanilla",
            "LoraLoaderVanilla",
            "LoraTagsOnly",
            "Randomizer",
            "TagsFormater",
            "TagsSelector",
            "TextInputBasic"
        ],
        {
            "title_aux": "ComfyUI-Lora-Auto-Trigger-Words"
        }
    ],
    "https://github.com/iemesowum/ComfyUI_IsaacNodes": [
        [
            "I_AmplitudeToWeights",
            "I_BinaryAmplitudeGate",
            "I_UnmixAudio",
            "I_WeightsListToWeights"
        ],
        {
            "author": "Isaac Emesowum",
            "description": "This extension offers automatic drums extraction from audio files, as well as a few helper nodes to support my audio synchronization AnimateDiff workflows.",
            "nickname": "Isaac's Nodes",
            "title": "Isaac's Nodes",
            "title_aux": "Isaac's Nodes"
        }
    ],
    "https://github.com/if-ai/ComfyUI-IF_AI_HFDownloaderNode": [
        [
            "IF_HFDownload",
            "IF_HFDownloadNode"
        ],
        {
            "title_aux": "ComfyUI-IF_AI_HFDownloaderNode"
        }
    ],
    "https://github.com/if-ai/ComfyUI-IF_AI_WishperSpeechNode": [
        [
            "IF_WhisperSpeech"
        ],
        {
            "title_aux": "ComfyUI-IF_AI_WishperSpeechNode"
        }
    ],
    "https://github.com/if-ai/ComfyUI-IF_AI_tools": [
        [
            "IF_ChatPrompt",
            "IF_DisplayOmni",
            "IF_DisplayText",
            "IF_DisplayTextWildcard",
            "IF_ImagePrompt",
            "IF_JoinText",
            "IF_LoadImagesS",
            "IF_PromptMkr",
            "IF_SaveText",
            "IF_StepCounter",
            "IF_TextTyper",
            "IF_VisualizeGraph",
            "IF_tools_LoadImagesS"
        ],
        {
            "title_aux": "ComfyUI-IF_AI_tools"
        }
    ],
    "https://github.com/if-ai/ComfyUI-IF_MemoAvatar": [
        [
            "IF_MemoAvatar",
            "IF_MemoCheckpointLoader"
        ],
        {
            "title_aux": "ComfyUI-IF_MemoAvatar"
        }
    ],
    "https://github.com/if-ai/ComfyUI-IF_Trellis": [
        [
            "IF_TrellisCheckpointLoader",
            "IF_TrellisImageTo3D"
        ],
        {
            "title_aux": "ComfyUI-IF_Trellis"
        }
    ],
    "https://github.com/ihmily/ComfyUI-Light-Tool": [
        [
            "Light-Tool: AddBackground",
            "Light-Tool: AddBackgroundV2",
            "Light-Tool: BoundingBoxCropping",
            "Light-Tool: GetImageSize",
            "Light-Tool: ImageConcat",
            "Light-Tool: ImageMaskApply",
            "Light-Tool: ImageOverlay",
            "Light-Tool: ImageToMask",
            "Light-Tool: InputText",
            "Light-Tool: InputTextList",
            "Light-Tool: InvertMask",
            "Light-Tool: IsTransparent",
            "Light-Tool: LoadImage",
            "Light-Tool: LoadImageFromURL",
            "Light-Tool: LoadImagesFromDir",
            "Light-Tool: MaskBoundingBoxCropping",
            "Light-Tool: MaskContourExtractor",
            "Light-Tool: MaskImageToTransparent",
            "Light-Tool: MaskToImage",
            "Light-Tool: PhantomTankEffect",
            "Light-Tool: PreviewVideo",
            "Light-Tool: RGB2RGBA",
            "Light-Tool: RGBA2RGB",
            "Light-Tool: ResizeImage",
            "Light-Tool: SaveToAliyunOSS",
            "Light-Tool: SaveVideo",
            "Light-Tool: ShowText",
            "Light-Tool: SolidColorBackground",
            "Light-Tool: TextConnect"
        ],
        {
            "author": "Hmily",
            "description": "An awesome light image processing tool nodes for ComfyUI.",
            "nickname": "ComfyUI-Light-Tool",
            "title": "ComfyUI-Light-Tool",
            "title_aux": "ComfyUI-Light-Tool"
        }
    ],
    "https://github.com/imb101/ComfyUI-FaceSwap": [
        [
            "FaceSwapNode"
        ],
        {
            "title_aux": "FaceSwap"
        }
    ],
    "https://github.com/inflamously/comfyui-prompt-enhancer": [
        [
            "PROMPT_ENHANCE_Simple"
        ],
        {
            "title_aux": "comfyui-prompt-enhancer"
        }
    ],
    "https://github.com/injet-zhou/comfyui_extra_api": [
        [
            "SimpleGenImageInterface"
        ],
        {
            "title_aux": "comfyui_extra_api"
        }
    ],
    "https://github.com/inventorado/ComfyUI_NNT": [
        [
            "NntAnalyzeInferenceMetrics",
            "NntAnalyzeModel",
            "NntCompileModel",
            "NntDatasetToImageTensor",
            "NntDatasetToTargetTensor",
            "NntDatasetToTensor",
            "NntDatasetToTextTensor",
            "NntDefineActivationLayer",
            "NntDefineAlibiPositionalBias",
            "NntDefineConvLayer",
            "NntDefineDenseLayer",
            "NntDefineFlattenLayer",
            "NntDefineGRULayer",
            "NntDefineLSTMLayer",
            "NntDefineLinearAttention",
            "NntDefineLocalAttention",
            "NntDefineMultiheadAttention",
            "NntDefineNormLayer",
            "NntDefinePoolingLayer",
            "NntDefinePositionalEncoding",
            "NntDefineRNNLayer",
            "NntDefineReformerAttention",
            "NntDefineRelativePositionBias",
            "NntDefineReshapeLayer",
            "NntDefineRotaryPositionalEmbedding",
            "NntDefineTransformerEncoderLayer",
            "NntDefineTransformerXLAttention",
            "NntDefineVanillaAttention",
            "NntEditModelLayers",
            "NntEvaluatePredictions",
            "NntFileLoader",
            "NntFineTuneModel",
            "NntHuggingFaceDataLoader",
            "NntImageToTensor",
            "NntInference",
            "NntInputLayer",
            "NntLoadModel",
            "NntMergeExtendModel",
            "NntPlotTensors",
            "NntRandomTensorGenerator",
            "NntSHAPSummaryNode",
            "NntSaveModel",
            "NntShowLayerStack",
            "NntShowModelInfo",
            "NntTensorElementToImage",
            "NntTensorOperations",
            "NntTensorSlice",
            "NntTensorToText",
            "NntTextBatchProcessor",
            "NntTextToTensor",
            "NntTimeSeriesDataLoader",
            "NntTorchvisionDataLoader",
            "NntTorchvisionDatasets",
            "NntTrainModel",
            "NntTrainingHyperparameters",
            "NntVisualizeConfidenceScores",
            "NntVisualizeGraph",
            "NntVisualizePredictionMetrics",
            "NntVisualizeTrainingMetrics"
        ],
        {
            "title_aux": "ComfyUI Neural Network Toolkit NNT "
        }
    ],
    "https://github.com/iwanders/ComfyUI_nodes": [
        [
            "IW_JsonPickItem",
            "IW_ModelHook",
            "IW_StringConcat",
            "IW_StringFromInt",
            "IW_StringNode",
            "IW_StringPrint",
            "IW_StringReplace",
            "IW_StringSave",
            "IW_TokenizerVocab"
        ],
        {
            "title_aux": "iwanders/ComfyUI_nodes"
        }
    ],
    "https://github.com/jacklukai/ComfyUI_DeployCash": [
        [
            "DeployCash",
            "DeployCash_saveImage",
            "DeployCash_textInput"
        ],
        {
            "title_aux": "ComfyUI_DeployCash"
        }
    ],
    "https://github.com/jags111/ComfyUI_Jags_Audiotools": [
        [
            "BatchJoinAudio",
            "BatchToList",
            "BitCrushAudioFX",
            "BulkVariation",
            "ChorusAudioFX",
            "ClippingAudioFX",
            "CompressorAudioFX",
            "ConcatAudioList",
            "ConvolutionAudioFX",
            "CutAudio",
            "DelayAudioFX",
            "DistortionAudioFX",
            "DuplicateAudio",
            "GainAudioFX",
            "GenerateAudioSample",
            "GenerateAudioWave",
            "GetAudioFromFolderIndex",
            "GetSingle",
            "GetStringByIndex",
            "HighShelfFilter",
            "HighpassFilter",
            "ImageToSpectral",
            "InvertAudioFX",
            "JoinAudio",
            "LadderFilter",
            "LimiterAudioFX",
            "ListToBatch",
            "LoadAudioDir",
            "LoadAudioFile",
            "LoadAudioModel (DD)",
            "LoadVST3",
            "LowShelfFilter",
            "LowpassFilter",
            "MP3CompressorAudioFX",
            "MixAudioTensors",
            "NoiseGateAudioFX",
            "OTTAudioFX",
            "PeakFilter",
            "PhaserEffectAudioFX",
            "PitchShiftAudioFX",
            "PlotSpectrogram",
            "PreviewAudioFile",
            "PreviewAudioTensor",
            "ResampleAudio",
            "ReverbAudioFX",
            "ReverseAudio",
            "SaveAudioTensor",
            "SequenceVariation",
            "SliceAudio",
            "SoundPlayer",
            "StretchAudio",
            "samplerate"
        ],
        {
            "author": "jags111",
            "description": "This extension offers various audio generation tools",
            "nickname": "Audiotools",
            "title": "Jags_Audiotools",
            "title_aux": "Jags_Audiotools"
        }
    ],
    "https://github.com/jags111/ComfyUI_Jags_VectorMagic": [
        [
            "CircularVAEDecode",
            "JagsCLIPSeg",
            "JagsClipseg",
            "JagsCombineMasks",
            "SVG",
            "YoloSEGdetectionNode",
            "YoloSegNode",
            "color_drop",
            "xy_Tiling_KSampler"
        ],
        {
            "author": "jags111",
            "description": "This extension offers various vector manipulation and  generation tools",
            "nickname": "Jags_VectorMagic",
            "title": "Jags_VectorMagic",
            "title_aux": "Jags_VectorMagic"
        }
    ],
    "https://github.com/jags111/efficiency-nodes-comfyui": [
        [
            "AnimateDiff Script",
            "Apply ControlNet Stack",
            "Control Net Stacker",
            "Eff. Loader SDXL",
            "Efficient Loader",
            "HighRes-Fix Script",
            "Image Overlay",
            "Join XY Inputs of Same Type",
            "KSampler (Efficient)",
            "KSampler Adv. (Efficient)",
            "KSampler SDXL (Eff.)",
            "LatentUpscaler",
            "LoRA Stack to String converter",
            "LoRA Stacker",
            "Manual XY Entry Info",
            "NNLatentUpscale",
            "Noise Control Script",
            "Pack SDXL Tuple",
            "Tiled Upscaler Script",
            "Unpack SDXL Tuple",
            "XY Input: Add/Return Noise",
            "XY Input: Aesthetic Score",
            "XY Input: CFG Scale",
            "XY Input: Checkpoint",
            "XY Input: Clip Skip",
            "XY Input: Control Net",
            "XY Input: Control Net Plot",
            "XY Input: Denoise",
            "XY Input: LoRA",
            "XY Input: LoRA Plot",
            "XY Input: LoRA Stacks",
            "XY Input: Manual XY Entry",
            "XY Input: Prompt S/R",
            "XY Input: Refiner On/Off",
            "XY Input: Sampler/Scheduler",
            "XY Input: Seeds++ Batch",
            "XY Input: Steps",
            "XY Input: VAE",
            "XY Plot"
        ],
        {
            "title_aux": "Efficiency Nodes for ComfyUI Version 2.0+"
        }
    ],
    "https://github.com/jakechai/ComfyUI-JakeUpgrade": [
        [
            "Animation Prompt JK",
            "Animation Value JK",
            "Base Image Parameters Extract JK",
            "Base Model Parameters Extract JK",
            "Base Model Parameters JK",
            "Base Model Parameters SD3API JK",
            "Base Model Pipe Extract JK",
            "Base Model Pipe JK",
            "Bool Binary And JK",
            "Bool Binary OR JK",
            "CM_BoolBinaryOperation JK",
            "CM_BoolToInt JK",
            "CM_BoolUnaryOperation JK",
            "CM_BreakoutVec2 JK",
            "CM_BreakoutVec3 JK",
            "CM_BreakoutVec4 JK",
            "CM_ComposeVec2 JK",
            "CM_ComposeVec3 JK",
            "CM_ComposeVec4 JK",
            "CM_FloatBinaryCondition JK",
            "CM_FloatBinaryOperation JK",
            "CM_FloatToInt JK",
            "CM_FloatToNumber JK",
            "CM_FloatUnaryCondition JK",
            "CM_FloatUnaryOperation JK",
            "CM_IntBinaryCondition JK",
            "CM_IntBinaryOperation JK",
            "CM_IntToBool JK",
            "CM_IntToFloat JK",
            "CM_IntToNumber JK",
            "CM_IntUnaryCondition JK",
            "CM_IntUnaryOperation JK",
            "CM_NumberBinaryCondition JK",
            "CM_NumberBinaryOperation JK",
            "CM_NumberToFloat JK",
            "CM_NumberToInt JK",
            "CM_NumberUnaryCondition JK",
            "CM_NumberUnaryOperation JK",
            "CM_PromptCombine_JK",
            "CM_StringBinaryCondition_JK",
            "CM_Vec2BinaryCondition JK",
            "CM_Vec2BinaryOperation JK",
            "CM_Vec2FloatOperation_JK",
            "CM_Vec2ToFloatBinaryOperation JK",
            "CM_Vec2ToFloatUnaryOperation JK",
            "CM_Vec2UnaryCondition JK",
            "CM_Vec2UnaryOperation JK",
            "CM_Vec3BinaryCondition JK",
            "CM_Vec3BinaryOperation JK",
            "CM_Vec3FloatOperation_JK",
            "CM_Vec3ToFloatBinaryOperation JK",
            "CM_Vec3ToFloatUnaryOperation JK",
            "CM_Vec3UnaryCondition JK",
            "CM_Vec3UnaryOperation JK",
            "CM_Vec4BinaryCondition JK",
            "CM_Vec4BinaryOperation JK",
            "CM_Vec4FloatOperation_JK",
            "CM_Vec4ToFloatBinaryOperation JK",
            "CM_Vec4ToFloatUnaryOperation JK",
            "CM_Vec4UnaryCondition JK",
            "CM_Vec4UnaryOperation JK",
            "CR Apply ControlNet JK",
            "CR Apply LoRA Stack JK",
            "CR Apply Multi-ControlNet Adv JK",
            "CR Apply Multi-ControlNet JK",
            "CR Aspect Ratio JK",
            "CR Boolean JK",
            "CR Clip Input Switch JK",
            "CR Conditioning Input Switch JK",
            "CR ControlNet Input Switch JK",
            "CR ControlNet Loader JK",
            "CR ControlNet Stack Input Switch JK",
            "CR Float Input Switch JK",
            "CR Guider Input Switch JK",
            "CR Image Input Switch JK",
            "CR Impact Pipe Input Switch JK",
            "CR Int Input Switch JK",
            "CR Latent Input Switch JK",
            "CR LoRA Stack JK",
            "CR Load LoRA JK",
            "CR Mask Input Switch JK",
            "CR Mesh Input Switch JK",
            "CR Model Input Switch JK",
            "CR Multi-ControlNet Param Stack JK",
            "CR Multi-ControlNet Stack JK",
            "CR Noise Input Switch JK",
            "CR Obit Pose Input Switch JK",
            "CR Orbit Pose Input Switch JK",
            "CR Pipe Input Switch JK",
            "CR Ply Input Switch JK",
            "CR SD1.5 Aspect Ratio JK",
            "CR SD3 Aspect Ratio JK",
            "CR SDXL Aspect Ratio JK",
            "CR Sampler Input Switch JK",
            "CR Sigmas Input Switch JK",
            "CR Text Input Switch JK",
            "CR VAE Input Switch JK",
            "Ckpt Loader JK",
            "Color Grading JK",
            "Detailer Parameters JK",
            "Embedding Picker JK",
            "Embedding Picker Multi JK",
            "Empty Latent Color JK",
            "Evaluate Examples JK",
            "Evaluate Floats JK",
            "Evaluate Ints JK",
            "Evaluate Strings JK",
            "Get Size JK",
            "Guidance Default JK",
            "HintImageEnchance JK",
            "IPAAdapterFaceIDBatch",
            "IPAdapter",
            "IPAdapterAdvanced",
            "IPAdapterBatch",
            "IPAdapterClipVisionEnhancer",
            "IPAdapterClipVisionEnhancerBatch",
            "IPAdapterCombineEmbeds",
            "IPAdapterCombineParams",
            "IPAdapterCombineWeights",
            "IPAdapterEmbeds",
            "IPAdapterEmbedsBatch",
            "IPAdapterEncoder",
            "IPAdapterFaceID",
            "IPAdapterFaceIDKolors",
            "IPAdapterFromParams",
            "IPAdapterInsightFaceLoader",
            "IPAdapterLoadEmbeds",
            "IPAdapterMS",
            "IPAdapterModelLoader",
            "IPAdapterNoise",
            "IPAdapterPreciseComposition",
            "IPAdapterPreciseCompositionBatch",
            "IPAdapterPreciseStyleTransfer",
            "IPAdapterPreciseStyleTransferBatch",
            "IPAdapterPromptScheduleFromWeightsStrategy",
            "IPAdapterRegionalConditioning",
            "IPAdapterSaveEmbeds",
            "IPAdapterStyleComposition",
            "IPAdapterStyleCompositionBatch",
            "IPAdapterTiled",
            "IPAdapterTiledBatch",
            "IPAdapterUnifiedLoader",
            "IPAdapterUnifiedLoaderCommunity",
            "IPAdapterUnifiedLoaderFaceID",
            "IPAdapterWeights",
            "IPAdapterWeightsFromStrategy",
            "Image Crop by Mask Params JK",
            "Image Crop by Mask Resolution JK",
            "Image Remove Alpha JK",
            "Image Resize Mode JK",
            "Image Upscale Parameters Extract JK",
            "Is Mask Empty JK",
            "Ksampler Parameters Default JK",
            "Ksampler Parameters JK",
            "Latent Crop Offset JK",
            "Latent Upscale Parameters Extract JK",
            "Load Image With Alpha JK",
            "Load Image With Metadata JK",
            "Make Image Grid JK",
            "Metadata Pipe Extract JK",
            "Metadata Pipe JK",
            "NodesState JK",
            "Noise Injection Parameters JK",
            "Noise Injection Pipe Extract JK",
            "Orbit Poses JK",
            "OrbitLists to OrbitPoses JK",
            "OrbitPoses to OrbitLists JK",
            "Pipe End JK",
            "PrepImageForClipVision",
            "Project Setting JK",
            "Random Beats JK",
            "Refine 1 Parameters Extract JK",
            "Refine 2 Parameters Extract JK",
            "Refine Model Parameters JK",
            "Refine Pipe Extract JK",
            "Refine Pipe JK",
            "Reroute Ckpt JK",
            "Reroute List JK",
            "Reroute Resize JK",
            "Reroute Sampler JK",
            "Reroute String JK",
            "Reroute Upscale JK",
            "Reroute Vae JK",
            "SDXL Target Res JK",
            "SDXLPromptStylerAll",
            "SDXLPromptStylerHorror",
            "SDXLPromptStylerMisc",
            "SDXLPromptStylerbyArtist",
            "SDXLPromptStylerbyCamera",
            "SDXLPromptStylerbyComposition",
            "SDXLPromptStylerbyCyberpunkSurrealism",
            "SDXLPromptStylerbyDepth",
            "SDXLPromptStylerbyDiva",
            "SDXLPromptStylerbyEnvironment",
            "SDXLPromptStylerbyFantasySetting",
            "SDXLPromptStylerbyFilter",
            "SDXLPromptStylerbyFocus",
            "SDXLPromptStylerbyFooocus",
            "SDXLPromptStylerbyImpressionism",
            "SDXLPromptStylerbyLighting",
            "SDXLPromptStylerbyMarc",
            "SDXLPromptStylerbyMileHigh",
            "SDXLPromptStylerbyMood",
            "SDXLPromptStylerbyMre",
            "SDXLPromptStylerbyMythicalCreature",
            "SDXLPromptStylerbyOriginal",
            "SDXLPromptStylerbyQuantumRealism",
            "SDXLPromptStylerbySai",
            "SDXLPromptStylerbySteamPunkRealism",
            "SDXLPromptStylerbySubject",
            "SDXLPromptStylerbySurrealism",
            "SDXLPromptStylerbyTheme",
            "SDXLPromptStylerbyTimeofDay",
            "SDXLPromptStylerbyTwri",
            "SDXLPromptStylerbyWyvern",
            "SDXLPromptbyCelticArt",
            "SDXLPromptbyContemporaryNordicArt",
            "SDXLPromptbyFashionArt",
            "SDXLPromptbyGothicRevival",
            "SDXLPromptbyIrishFolkArt",
            "SDXLPromptbyRomanticNationalismArt",
            "SDXLPromptbySportsArt",
            "SDXLPromptbyStreetArt",
            "SDXLPromptbyVikingArt",
            "SDXLPromptbyWildlifeArt",
            "Sampler Loader JK",
            "Save Image with Metadata Flow JK",
            "Save Image with Metadata JK",
            "Scale To Resolution JK",
            "Split Image Grid JK",
            "Stability Conservative Upscale",
            "Stability Control Sketch",
            "Stability Control Structure",
            "Stability Control Style",
            "Stability Creative Upscale",
            "Stability Erase",
            "Stability Fast Upscale",
            "Stability Image Core",
            "Stability Image Ultra",
            "Stability Inpainting",
            "Stability Outpainting",
            "Stability Remove Background",
            "Stability Replace Background and Relight",
            "Stability SD3",
            "Stability Search And Recolor",
            "Stability Search and Replace",
            "String To Combo JK",
            "Tiling Mode JK",
            "Upscale Method JK",
            "Upscale Model Loader JK",
            "Upscale Model Parameters Extract JK",
            "Upscale Model Parameters JK",
            "Vae Loader JK"
        ],
        {
            "title_aux": "ComfyUI-JakeUpgrade"
        }
    ],
    "https://github.com/jamal-alkharrat/ComfyUI_rotate_image": [
        [
            "RotateImage"
        ],
        {
            "title_aux": "ComfyUI_rotate_image"
        }
    ],
    "https://github.com/jamesWalker55/comfyui-p2ldgan": [
        [
            "P2LDGAN"
        ],
        {
            "title_aux": "ComfyUI - P2LDGAN Node"
        }
    ],
    "https://github.com/jamesWalker55/comfyui-various": [
        [
            "BatchLoadImage",
            "BatchSaveImage",
            "GroupInfoExtractFloat",
            "GroupInfoExtractInt",
            "GroupLoadBatchImages",
            "GroupLoadImage",
            "JWDatetimeString",
            "JWImageBatchCount",
            "JWImageContrast",
            "JWImageExtractFromBatch",
            "JWImageFlip",
            "JWImageLevels",
            "JWImageLoadRGB",
            "JWImageLoadRGBA",
            "JWImageLoadRGBA From Clipboard",
            "JWImageLoadRGBFromClipboard",
            "JWImageLoadRGBIfExists",
            "JWImageMix",
            "JWImageResize",
            "JWImageResizeByFactor",
            "JWImageResizeByLongerSide",
            "JWImageResizeByShorterSide",
            "JWImageResizeToSquare",
            "JWImageSaturation",
            "JWImageSaveToPath",
            "JWImageSequenceExtractFromBatch",
            "JWImageStackChannels",
            "JWInfoHashExtractFloat",
            "JWInfoHashExtractInteger",
            "JWInfoHashExtractString",
            "JWInfoHashFromInfoHashList",
            "JWInfoHashFromRangedInfo",
            "JWInfoHashListExtractStringList",
            "JWInfoHashListFromRangedInfo",
            "JWInfoHashPrint",
            "JWLoadImageSequence",
            "JWLoadImagesFromString",
            "JWLoopImageSequence",
            "JWMaskLikeImageSize",
            "JWMaskResize",
            "JWMaskSequenceApplyToLatent",
            "JWMaskSequenceFromMask",
            "JWMaskSequenceJoin",
            "JWPrintFloat",
            "JWPrintImage",
            "JWPrintInteger",
            "JWPrintLatent",
            "JWPrintMask",
            "JWPrintString",
            "JWRangedInfoCalculateSubBatch",
            "JWReferenceOnly",
            "JWSaveImageSequence",
            "JWStringListCLIPEncode",
            "JWStringListFromString",
            "JWStringListFromStrings",
            "JWStringListJoin",
            "JWStringListRepeat",
            "JWStringListToFormatedString",
            "JWStringListToString",
            "JWUncropCrop",
            "JWUncropNewRect",
            "JWUncropUncrop",
            "JamesLoadImageGroup",
            "RAFTEstimate",
            "RAFTFlowToImage",
            "RAFTLoadFlowFromEXRChannels",
            "RCReceiveFloat",
            "RCReceiveFloatList",
            "RCReceiveInt",
            "RCReceiveIntList",
            "RCReceiveLatent",
            "RCSendLatent"
        ],
        {
            "nodename_pattern": "^JW",
            "title_aux": "Various ComfyUI Nodes by Type"
        }
    ],
    "https://github.com/jammyfu/ComfyUI_PaintingCoderUtils": [
        [
            "ClickPopup",
            "ColorPicker",
            "DynamicImageCombiner",
            "DynamicMaskCombiner",
            "ImageLatentCreator",
            "ImageResolutionAdjuster",
            "ImageSizeCreator",
            "ImageToBase64",
            "MaskPreview",
            "MultilineTextInput",
            "PaintingCoder::ImageSwitch",
            "PaintingCoder::LatentSwitch",
            "PaintingCoder::MaskSwitch",
            "PaintingCoder::TextSwitch",
            "PaintingCoder::WebImageLoader",
            "RemoveEmptyLinesAndLeadingSpaces",
            "RemoveEmptyLinesAndLeadingSpacesAdvance",
            "ShowTextPlus",
            "SimpleTextInput",
            "TextCombiner",
            "WebImageLoader"
        ],
        {
            "title_aux": "Painting Coder Utils"
        }
    ],
    "https://github.com/jax-explorer/comfyui-model-dynamic-loader": [
        [
            "ComfyOnlineSaveFile",
            "ComfyOnlineUploadAnything",
            "EmbeddingLoader",
            "LoadHunyuanLoraFromCivitAI",
            "LoadHunyuanLoraFromComfyOnline",
            "LoadHunyuanLoraFromHF",
            "LoadLoraFromCivitAI",
            "LoadLoraFromComfyOnline",
            "LoadLoraFromHF",
            "SaveAudioAsWav"
        ],
        {
            "title_aux": "comfyui-model-dynamic-loader"
        }
    ],
    "https://github.com/jax-explorer/fast_video_comfyui": [
        [
            "FastImageListToImageBatch"
        ],
        {
            "title_aux": "fast_video_comfyui"
        }
    ],
    "https://github.com/jeffrey2212/ComfyUI-PonyCharacterPrompt": [
        [
            "Pony Character Prompt Picker"
        ],
        {
            "title_aux": "Pony Character Prompt Picker for ComfyUI"
        }
    ],
    "https://github.com/jeffy5/comfyui-faceless-node": [
        [
            "FacelessFaceRestore",
            "FacelessFaceSwap",
            "FacelessLoadImageUrl",
            "FacelessLoadVideo",
            "FacelessLoadVideoImages",
            "FacelessLoadVideoUrl",
            "FacelessMergeVideos",
            "FacelessRemoveBackground",
            "FacelessSaveVideo",
            "FacelessUploadVideo",
            "FacelessVideoFaceRestore",
            "FacelessVideoFaceSwap",
            "FacelessVideoRemoveBackground"
        ],
        {
            "title_aux": "Faceless Node for ComfyUI"
        }
    ],
    "https://github.com/jerrylongyan/ComfyUI-My-Mask": [
        [
            "MaskToBottonHalfConvexMask",
            "MaskToConvexMask"
        ],
        {
            "title_aux": "ComfyUI-My-Mask"
        }
    ],
    "https://github.com/jesenzhang/ComfyUI_StreamDiffusion": [
        [
            "StreamDiffusion_Loader",
            "StreamDiffusion_Sampler"
        ],
        {
            "title_aux": "ComfyUI_StreamDiffusion"
        }
    ],
    "https://github.com/jhj0517/ComfyUI-Moondream-Gaze-Detection": [
        [
            "(Down)Load Moondream Model",
            "Gaze Detection",
            "Gaze Detection Video"
        ],
        {
            "title_aux": "ComfyUI-Moondream-Gaze-Detection"
        }
    ],
    "https://github.com/jiaqianjing/ComfyUI-MidjourneyHub": [
        [
            "MidjourneyActionNode",
            "MidjourneyBatchActionNode",
            "MidjourneyImagineNode"
        ],
        {
            "title_aux": "ComfyUI-MidjourneyHub"
        }
    ],
    "https://github.com/jiaxiangc/ComfyUI-ResAdapter": [
        [
            "ResAdapterLoader"
        ],
        {
            "title_aux": "ResAdapter for ComfyUI"
        }
    ],
    "https://github.com/jitcoder/lora-info": [
        [
            "ImageFromURL",
            "LoraInfo"
        ],
        {
            "title_aux": "LoraInfo"
        }
    ],
    "https://github.com/jjkramhoeft/ComfyUI-Jjk-Nodes": [
        [
            "JjkConcat",
            "JjkShowText",
            "JjkText",
            "SDXLRecommendedImageSize"
        ],
        {
            "title_aux": "ComfyUI-Jjk-Nodes"
        }
    ],
    "https://github.com/jkrauss82/ultools-comfyui": [
        [
            "CLIPTextEncodeWithStats",
            "OpenPoseEditorAdv",
            "SaveImgAdv",
            "SolidMaskAdv"
        ],
        {
            "title_aux": "ULTools for ComfyUI"
        }
    ],
    "https://github.com/jn-jairo/jn_comfyui": [
        [
            "JN_AreaAround",
            "JN_AreaInfo",
            "JN_AreaNormalize",
            "JN_AreaToMask",
            "JN_AreaWidthHeight",
            "JN_AreaXY",
            "JN_AudioArrayToBatch",
            "JN_AudioAutoTune",
            "JN_AudioBatchToArray",
            "JN_AudioCompare",
            "JN_AudioConcatenation",
            "JN_AudioGetChannels",
            "JN_AudioInfo",
            "JN_AudioNoiseReduction",
            "JN_AudioNormalize",
            "JN_AudioPitch",
            "JN_AudioPlot",
            "JN_AudioReverberation",
            "JN_AudioSampleRate",
            "JN_AudioSetChannels",
            "JN_AudioSlice",
            "JN_AudioSpeed",
            "JN_AudioSplitChannels",
            "JN_AudioStackChannels",
            "JN_AudioTempo",
            "JN_AudioTrimSilence",
            "JN_AudioVolume",
            "JN_Blip",
            "JN_BlipLoader",
            "JN_BooleanOperation",
            "JN_Condition",
            "JN_CoolDown",
            "JN_CoolDownOutput",
            "JN_DatetimeFormat",
            "JN_DatetimeInfo",
            "JN_DatetimeNow",
            "JN_Dump",
            "JN_DumpOutput",
            "JN_Exec",
            "JN_ExecOutput",
            "JN_FaceCrop",
            "JN_FaceRestoreModelLoader",
            "JN_FaceRestoreWithModel",
            "JN_FirstActive",
            "JN_Flow",
            "JN_FlowOutput",
            "JN_ImageAddBackground",
            "JN_ImageAddMask",
            "JN_ImageBatch",
            "JN_ImageCenterArea",
            "JN_ImageCrop",
            "JN_ImageGrid",
            "JN_ImageInfo",
            "JN_ImageRemoveBackground",
            "JN_ImageSharpness",
            "JN_ImageSquare",
            "JN_ImageToMask",
            "JN_ImageUncrop",
            "JN_KSampler",
            "JN_KSamplerAdvancedParams",
            "JN_KSamplerFaceRestoreParams",
            "JN_KSamplerResizeInputParams",
            "JN_KSamplerResizeMaskAreaParams",
            "JN_KSamplerResizeOutputParams",
            "JN_KSamplerSeamlessParams",
            "JN_KSamplerTileParams",
            "JN_KeyValue",
            "JN_LoadAudioDirectory",
            "JN_LoadImageDirectory",
            "JN_LogicOperation",
            "JN_MaskBatch",
            "JN_MaskInfo",
            "JN_MaskToArea",
            "JN_MaskToImage",
            "JN_MathOperation",
            "JN_MathOperationArray",
            "JN_MeowHrtfAudio3d",
            "JN_MeowHrtfModel",
            "JN_MeowHrtfPosition",
            "JN_MeowLoadVoice",
            "JN_MeowSaveVoice",
            "JN_MeowSentenceSplit",
            "JN_MeowTts",
            "JN_MeowTtsAudioToContext",
            "JN_MeowTtsCoarse",
            "JN_MeowTtsDecode",
            "JN_MeowTtsFine",
            "JN_MeowTtsLoadContext",
            "JN_MeowTtsModel",
            "JN_MeowTtsModelCoarse",
            "JN_MeowTtsModelEncodec",
            "JN_MeowTtsModelFine",
            "JN_MeowTtsModelHubert",
            "JN_MeowTtsModelSemantic",
            "JN_MeowTtsSaveContext",
            "JN_MeowTtsSemantic",
            "JN_MeowTtsTokenizerHubert",
            "JN_MeowVc",
            "JN_MeowVcConvertVoice",
            "JN_MeowVcEncodeSource",
            "JN_MeowVcEncodeTarget",
            "JN_MeowVcLoadSpeaker",
            "JN_MeowVcModelFreeVC",
            "JN_MeowVcModelWavLM",
            "JN_MeowVcSaveSpeaker",
            "JN_PreviewAudio",
            "JN_PreviewImage",
            "JN_PreviewMask",
            "JN_PrimitiveArrayInfo",
            "JN_PrimitiveBatchToArray",
            "JN_PrimitiveBoolean",
            "JN_PrimitiveFloat",
            "JN_PrimitiveInt",
            "JN_PrimitivePrompt",
            "JN_PrimitiveString",
            "JN_PrimitiveStringMultiline",
            "JN_PrimitiveStringToArray",
            "JN_PrimitiveToArray",
            "JN_PrimitiveToBoolean",
            "JN_PrimitiveToFloat",
            "JN_PrimitiveToInt",
            "JN_PrimitiveToString",
            "JN_RemBGSession",
            "JN_SaveAudio",
            "JN_SaveImage",
            "JN_Seamless",
            "JN_SeamlessBorder",
            "JN_SeamlessBorderCrop",
            "JN_SelectItem",
            "JN_Sleep",
            "JN_SleepOutput",
            "JN_SliceOperation",
            "JN_StopIf",
            "JN_StopIfOutput",
            "JN_TensorInfo",
            "JN_TextConcatenation",
            "JN_TextReplace",
            "JN_TimedeltaFormat",
            "JN_TimedeltaInfo"
        ],
        {
            "title_aux": "JNComfy"
        }
    ],
    "https://github.com/jnxmx/ComfyUI_HuggingFace_Downloader": [
        [
            "HuggingFace Downloader",
            "HuggingFace Model Selector"
        ],
        {
            "title_aux": "ComfyUI_HuggingFace_Downloader"
        }
    ],
    "https://github.com/john-mnz/ComfyUI-Inspyrenet-Rembg": [
        [
            "InspyrenetRembg",
            "InspyrenetRembgAdvanced"
        ],
        {
            "title_aux": "ComfyUI-Inspyrenet-Rembg"
        }
    ],
    "https://github.com/jojkaart/ComfyUI-sampler-lcm-alternative": [
        [
            "LCMScheduler",
            "SamplerLCMAlternative",
            "SamplerLCMCycle",
            "SamplerLCMDualNoise",
            "SamplerLCMDuoFusion",
            "SamplerLCMParallel"
        ],
        {
            "title_aux": "ComfyUI-sampler-lcm-alternative"
        }
    ],
    "https://github.com/jordoh/ComfyUI-Deepface": [
        [
            "DeepfaceExtractFaces",
            "DeepfaceVerify"
        ],
        {
            "title_aux": "ComfyUI Deepface"
        }
    ],
    "https://github.com/jroc22/ComfyUI-CSV-prompt-builder": [
        [
            "BuildPromptFromCSV"
        ],
        {
            "title_aux": "ComfyUI-CSV-prompt-builder"
        }
    ],
    "https://github.com/jstit/comfyui_custom_node_image": [
        [
            "ImageCropCircle"
        ],
        {
            "title_aux": "comfyui_custom_node_image"
        }
    ],
    "https://github.com/jtrue/ComfyUI-JaRue": [
        [
            "Text2Image_jru",
            "YouTube2Prompt_jru"
        ],
        {
            "nodename_pattern": "_jru$",
            "title_aux": "ComfyUI-JaRue"
        }
    ],
    "https://github.com/jtydhr88/ComfyUI-Hunyuan3D-1-wrapper": [
        [
            "Hunyuan3D V1 - Image Loader",
            "Hunyuan3D V1 - Image2Views",
            "Hunyuan3D V1 - Image2Views Pipeline Load",
            "Hunyuan3D V1 - Text2Image",
            "Hunyuan3D V1 - Text2Image Pipeline Load",
            "Hunyuan3D V1 - Views2Mesh",
            "Hunyuan3D V1 - Views2Mesh Pipeline Load"
        ],
        {
            "title_aux": "ComfyUI-Hunyuan3D-1-wrapper"
        }
    ],
    "https://github.com/jtydhr88/ComfyUI-LayerDivider": [
        [
            "LayerDivider - Color Base",
            "LayerDivider - Divide Layer",
            "LayerDivider - Load SAM Mask Generator",
            "LayerDivider - Segment Mask"
        ],
        {
            "title_aux": "ComfyUI LayerDivider"
        }
    ],
    "https://github.com/jurdnisglobby/ComfyUI-Jurdns-Groq-Node": [
        [
            "JurdnsGroqAPIPromptEnhancer"
        ],
        {
            "title_aux": "Jurdns Groq API Node"
        }
    ],
    "https://github.com/justUmen/Bjornulf_custom_nodes": [
        [
            "Bjornulf_APIGenerateCivitAI",
            "Bjornulf_APIGenerateCivitAIAddLORA",
            "Bjornulf_APIGenerateFalAI",
            "Bjornulf_APIGenerateFlux",
            "Bjornulf_APIGenerateStability",
            "Bjornulf_AddLineNumbers",
            "Bjornulf_AnythingToFloat",
            "Bjornulf_AnythingToInt",
            "Bjornulf_AnythingToText",
            "Bjornulf_AudioVideoSync",
            "Bjornulf_CharacterDescriptionGenerator",
            "Bjornulf_CivitAILoraSelector",
            "Bjornulf_CivitAILoraSelectorPONY",
            "Bjornulf_CivitAILoraSelectorSD15",
            "Bjornulf_CivitAILoraSelectorSDXL",
            "Bjornulf_CivitAIModelSelectorFLUX_D",
            "Bjornulf_CivitAIModelSelectorFLUX_S",
            "Bjornulf_CivitAIModelSelectorPony",
            "Bjornulf_CivitAIModelSelectorSD15",
            "Bjornulf_CivitAIModelSelectorSDXL",
            "Bjornulf_CombineBackgroundOverlay",
            "Bjornulf_CombineImages",
            "Bjornulf_CombineTexts",
            "Bjornulf_CombineTextsByLines",
            "Bjornulf_CombineVideoAudio",
            "Bjornulf_ConcatVideos",
            "Bjornulf_ConcatVideosFromList",
            "Bjornulf_ConvertVideo",
            "Bjornulf_FFmpegConfig",
            "Bjornulf_FreeVRAM",
            "Bjornulf_GrayscaleTransform",
            "Bjornulf_GreenScreenToTransparency",
            "Bjornulf_HiResFix",
            "Bjornulf_IfElse",
            "Bjornulf_ImageBlend",
            "Bjornulf_ImageDetails",
            "Bjornulf_ImageMaskCutter",
            "Bjornulf_ImagesListToVideo",
            "Bjornulf_LatentResolutionSelector",
            "Bjornulf_ListLooper",
            "Bjornulf_ListLooperCharacter",
            "Bjornulf_ListLooperOutfitFemale",
            "Bjornulf_ListLooperOutfitMale",
            "Bjornulf_ListLooperScene",
            "Bjornulf_ListLooperStyle",
            "Bjornulf_LoadImageWithTransparency",
            "Bjornulf_LoadImagesFromSelectedFolder",
            "Bjornulf_LoadTextFromFolder",
            "Bjornulf_LoadTextFromPath",
            "Bjornulf_LoaderLoraWithPath",
            "Bjornulf_LoopAllLines",
            "Bjornulf_LoopBasicBatch",
            "Bjornulf_LoopCombosSamplersSchedulers",
            "Bjornulf_LoopFloat",
            "Bjornulf_LoopImages",
            "Bjornulf_LoopInteger",
            "Bjornulf_LoopIntegerSequential",
            "Bjornulf_LoopLinesSequential",
            "Bjornulf_LoopLoraSelector",
            "Bjornulf_LoopModelClipVae",
            "Bjornulf_LoopModelSelector",
            "Bjornulf_LoopSamplers",
            "Bjornulf_LoopSchedulers",
            "Bjornulf_LoopTexts",
            "Bjornulf_LoopWriteText",
            "Bjornulf_MergeImagesHorizontally",
            "Bjornulf_MergeImagesVertically",
            "Bjornulf_OllamaConfig",
            "Bjornulf_OllamaImageVision",
            "Bjornulf_OllamaSystemJobSelector",
            "Bjornulf_OllamaSystemPersonaSelector",
            "Bjornulf_OllamaTalk",
            "Bjornulf_PassPreviewImage",
            "Bjornulf_PauseResume",
            "Bjornulf_PickInput",
            "Bjornulf_RandomImage",
            "Bjornulf_RandomLineFromInput",
            "Bjornulf_RandomLoraSelector",
            "Bjornulf_RandomModelClipVae",
            "Bjornulf_RandomModelSelector",
            "Bjornulf_RandomTexts",
            "Bjornulf_RemoveTransparency",
            "Bjornulf_ResizeImage",
            "Bjornulf_ResizeImagePercentage",
            "Bjornulf_SaveBjornulfLobeChat",
            "Bjornulf_SaveImagePath",
            "Bjornulf_SaveImageToFolder",
            "Bjornulf_SaveText",
            "Bjornulf_SaveTmpImage",
            "Bjornulf_ScramblerCharacter",
            "Bjornulf_SelectImageFromList",
            "Bjornulf_ShowFloat",
            "Bjornulf_ShowInt",
            "Bjornulf_ShowJson",
            "Bjornulf_ShowStringText",
            "Bjornulf_ShowText",
            "Bjornulf_SpeechToText",
            "Bjornulf_TextGenerator",
            "Bjornulf_TextGeneratorCharacterCreature",
            "Bjornulf_TextGeneratorCharacterFemale",
            "Bjornulf_TextGeneratorCharacterMale",
            "Bjornulf_TextGeneratorCharacterObject",
            "Bjornulf_TextGeneratorCharacterPose",
            "Bjornulf_TextGeneratorOutfitFemale",
            "Bjornulf_TextGeneratorOutfitMale",
            "Bjornulf_TextGeneratorScene",
            "Bjornulf_TextGeneratorStyle",
            "Bjornulf_TextReplace",
            "Bjornulf_TextSplitin5",
            "Bjornulf_TextToAnything",
            "Bjornulf_TextToSpeech",
            "Bjornulf_TextToStringAndSeed",
            "Bjornulf_VideoDetails",
            "Bjornulf_VideoPingPong",
            "Bjornulf_VideoPreview",
            "Bjornulf_VideoToImagesList",
            "Bjornulf_WriteText",
            "Bjornulf_WriteTextAdvanced",
            "Bjornulf_imagesToVideo",
            "Bjornulf_ollamaLoader"
        ],
        {
            "title_aux": "Bjornulf_custom_nodes"
        }
    ],
    "https://github.com/k-komarov/comfyui-bunny-cdn-storage": [
        [
            "Save Image to BunnyStorage"
        ],
        {
            "title_aux": "comfyui-bunny-cdn-storage"
        }
    ],
    "https://github.com/ka-puna/comfyui-yanc": [
        [
            "YANC.ConcatStrings",
            "YANC.FormatDatetimeString",
            "YANC.GetWidgetValueString",
            "YANC.IntegerCaster",
            "YANC.MultilineString",
            "YANC.SaveImageWEBP",
            "YANC.TruncateString"
        ],
        {
            "title_aux": "comfyui-yanc"
        }
    ],
    "https://github.com/kaanyalova/ComfyUI_ExtendedImageFormats": [
        [
            "DDSSaveImage",
            "ExtendedSaveImage"
        ],
        {
            "title_aux": "Extended Image Formats for ComfyUI"
        }
    ],
    "https://github.com/kadirnar/ComfyUI-Transformers": [
        [
            "DepthEstimationInference",
            "ImageClassificationPipeline",
            "ImageSegmentationPipeline",
            "LoadDepthModel",
            "ObjectDetectionPipeline"
        ],
        {
            "title_aux": "ComfyUI-Transformers"
        }
    ],
    "https://github.com/kadirnar/ComfyUI-YOLO": [
        [
            "BBoxToCoco",
            "BBoxToXYWH",
            "BBoxVisNode",
            "CocoToNumber",
            "ConvertToDict",
            "CustomUltralyticsModelLoader",
            "GetImageSize",
            "ImageResizeAdvanced",
            "UltralyticsInference",
            "UltralyticsModelLoader",
            "UltralyticsVisualization",
            "ViewText"
        ],
        {
            "title_aux": "ComfyUI-YOLO"
        }
    ],
    "https://github.com/kaibioinfo/ComfyUI_AdvancedRefluxControl": [
        [
            "ReduxAdvanced",
            "StyleModelApplySimple"
        ],
        {
            "title_aux": "Advanced Reflux control"
        }
    ],
    "https://github.com/kale4eat/ComfyUI-path-util": [
        [
            "path_util_PathAbspath",
            "path_util_PathBasename",
            "path_util_PathDirname",
            "path_util_PathExists",
            "path_util_PathIsdir",
            "path_util_PathIsfile",
            "path_util_PathJoin",
            "path_util_PathRelpath",
            "path_util_PathSplitext"
        ],
        {
            "title_aux": "ComfyUI_demucus"
        }
    ],
    "https://github.com/kale4eat/ComfyUI-speech-dataset-toolkit": [
        [
            "SDT_AudioProperty",
            "SDT_BSRoFormerApply",
            "SDT_BSRoFormerLoader",
            "SDT_ConcatAudio",
            "SDT_CutAudio",
            "SDT_DemucsApply",
            "SDT_DemucsLoader",
            "SDT_FasterWhisperListSegments",
            "SDT_FasterWhisperLoader",
            "SDT_FasterWhisperSegmentProperty",
            "SDT_FasterWhisperTextFromSegments",
            "SDT_FasterWhisperTranscribe",
            "SDT_GriffinLim",
            "SDT_JoinAudio",
            "SDT_KotobaWhisperListSegments",
            "SDT_KotobaWhisperLoaderLong",
            "SDT_KotobaWhisperLoaderShort",
            "SDT_KotobaWhisperSegmentProperty",
            "SDT_KotobaWhisperTranscribeLong",
            "SDT_KotobaWhisperTranscribeShort",
            "SDT_LFCC",
            "SDT_LoadAudio",
            "SDT_LoadAudios",
            "SDT_MFCC",
            "SDT_MakeSilenceAudio",
            "SDT_MelBandRoformerLoader",
            "SDT_MelSpectrogram",
            "SDT_NemoAsrListSegments",
            "SDT_NemoAsrListSubwords",
            "SDT_NemoAsrLoader",
            "SDT_NemoAsrSegmentProperty",
            "SDT_NemoAsrSubwordProperty",
            "SDT_NemoAsrTranscribe",
            "SDT_NueAsrLoader",
            "SDT_NueAsrTranscribe",
            "SDT_PlayAudio",
            "SDT_PlotMelFilterBank",
            "SDT_PlotPitch",
            "SDT_PlotSpecgram",
            "SDT_PlotSpectrogram",
            "SDT_PlotWaveForm",
            "SDT_ResampleAudio",
            "SDT_SaveAudio",
            "SDT_SaveAudioWithSequentialNumbering",
            "SDT_SilenceAudio",
            "SDT_SileroVADApply",
            "SDT_SileroVADCollectChunks",
            "SDT_SileroVADListTimestamps",
            "SDT_SileroVADLoader",
            "SDT_SileroVADTimestampProperty",
            "SDT_Spectrogram",
            "SDT_SpeechMOSLoader",
            "SDT_SpeechMOSScore",
            "SDT_SplitAudio",
            "SDT_TrimAudio",
            "SDT_TrimAudioBySample"
        ],
        {
            "title_aux": "ComfyUI-speech-dataset-toolkit"
        }
    ],
    "https://github.com/kale4eat/ComfyUI-string-util": [
        [
            "string_util_Str",
            "string_util_StrConcat",
            "string_util_StrCount",
            "string_util_StrEndsWith",
            "string_util_StrEqual",
            "string_util_StrFind",
            "string_util_StrFormat",
            "string_util_StrJoin",
            "string_util_StrLen",
            "string_util_StrLower",
            "string_util_StrLstrip",
            "string_util_StrNotEqual",
            "string_util_StrReplace",
            "string_util_StrRstrip",
            "string_util_StrSlice",
            "string_util_StrSplit",
            "string_util_StrStartsWith",
            "string_util_StrStrip",
            "string_util_StrUpper"
        ],
        {
            "title_aux": "ComfyUI-string-util"
        }
    ],
    "https://github.com/kale4eat/ComfyUI-text-file-util": [
        [
            "text_file_util_ReadAllLines",
            "text_file_util_ReadAllText",
            "text_file_util_WriteText",
            "text_file_util_WriteTextLines",
            "text_file_util_WriteTextWithSequentialNumbering"
        ],
        {
            "title_aux": "ComfyUI-text-file-util"
        }
    ],
    "https://github.com/kappa54m/ComfyUI_Usability": [
        [
            "KLoadImageByPath",
            "KLoadImageByPathAdvanced",
            "KLoadImageDedup"
        ],
        {
            "title_aux": "ComfyUI Usability"
        }
    ],
    "https://github.com/kasukanra/ComfyUI_StringToHex": [
        [
            "ColorNameToHex"
        ],
        {
            "title_aux": "ComfyUI_StringToHex"
        }
    ],
    "https://github.com/katalist-ai/comfyUI-nsfw-detection": [
        [
            "NudenetDetector"
        ],
        {
            "title_aux": "comfyUI-nsfw-detection"
        }
    ],
    "https://github.com/kazeyori/ComfyUI-QuickImageSequenceProcess": [
        [
            "QuickImageSequenceProcess"
        ],
        {
            "author": "kazeyori",
            "description": "A ComfyUI plugin for efficient image sequence processing. Features frame insertion, duplication, and removal with intuitive controls.",
            "nickname": "QuickSeq",
            "title": "Quick Image Sequence Process",
            "title_aux": "Quick Image Sequence Process"
        }
    ],
    "https://github.com/kealiu/ComfyUI-S3-Tools": [
        [
            "Load Image From S3",
            "Save Image To S3"
        ],
        {
            "title_aux": "ComfyUI Load and Save file to S3"
        }
    ],
    "https://github.com/kealiu/ComfyUI-Zero123-Porting": [
        [
            "Zero123: Image Preprocess",
            "Zero123: Image Rotate in 3D"
        ],
        {
            "title_aux": "ComfyUI-Zero123-Porting"
        }
    ],
    "https://github.com/kealiu/ComfyUI-ZeroShot-MTrans": [
        [
            "ZeST: Grayout Subject"
        ],
        {
            "title_aux": "ComfyUI-ZeroShot-MTrans"
        }
    ],
    "https://github.com/kenjiqq/qq-nodes-comfyui": [
        [
            "Any List",
            "Any List Iterator",
            "Any To Any",
            "Axis Pack",
            "Axis To Any",
            "Axis Unpack",
            "Load Lines From Text File",
            "Slice List",
            "Text Splitter",
            "XY Grid Accumulator",
            "XY Grid Helper"
        ],
        {
            "title_aux": "qq-nodes-comfyui"
        }
    ],
    "https://github.com/kevinmcmahondev/comfyui-skin-tone-detector": [
        [
            "SkinToneDetector"
        ],
        {
            "title_aux": "Skin Tone Detector for ComfyUI"
        }
    ],
    "https://github.com/kft334/Knodes": [
        [
            "Image(s) To Websocket (Base64)",
            "ImageOutput",
            "Load Image (Base64)",
            "Load Images (Base64)"
        ],
        {
            "title_aux": "Knodes"
        }
    ],
    "https://github.com/kijai/ComfyUI-ADMotionDirector": [
        [
            "ADMD_AdditionalModelSelect",
            "ADMD_CheckpointLoader",
            "ADMD_ComfyModelLoader",
            "ADMD_DiffusersLoader",
            "ADMD_InitializeTraining",
            "ADMD_LoadLora",
            "ADMD_MakeBatchList",
            "ADMD_SaveLora",
            "ADMD_TrainLora",
            "ADMD_ValidationSampler",
            "ADMD_ValidationSettings"
        ],
        {
            "title_aux": "Animatediff MotionLoRA Trainer"
        }
    ],
    "https://github.com/kijai/ComfyUI-APISR-KJ": [
        [
            "APISR_upscale"
        ],
        {
            "title_aux": "ComfyUI-APISR"
        }
    ],
    "https://github.com/kijai/ComfyUI-BrushNet-Wrapper": [
        [
            "brushnet_ella_loader",
            "brushnet_ipadapter_matteo",
            "brushnet_model_loader",
            "brushnet_sampler",
            "brushnet_sampler_ella",
            "powerpaint_brushnet_sampler"
        ],
        {
            "title_aux": "ComfyUI-BrushNet-Wrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-CCSR": [
        [
            "CCSR_Model_Select",
            "CCSR_Upscale",
            "DownloadAndLoadCCSRModel"
        ],
        {
            "title_aux": "ComfyUI-CCSR"
        }
    ],
    "https://github.com/kijai/ComfyUI-CogVideoXWrapper": [
        [
            "CogVideoContextOptions",
            "CogVideoControlNet",
            "CogVideoDecode",
            "CogVideoEnhanceAVideo",
            "CogVideoImageEncode",
            "CogVideoImageEncodeFunInP",
            "CogVideoLatentPreview",
            "CogVideoLoraSelect",
            "CogVideoLoraSelectComfy",
            "CogVideoSampler",
            "CogVideoTextEncode",
            "CogVideoTextEncodeCombine",
            "CogVideoTransformerEdit",
            "CogVideoXFasterCache",
            "CogVideoXFunResizeToClosestBucket",
            "CogVideoXModelLoader",
            "CogVideoXTorchCompileSettings",
            "CogVideoXVAELoader",
            "DownloadAndLoadCogVideoControlNet",
            "DownloadAndLoadCogVideoGGUFModel",
            "DownloadAndLoadCogVideoModel",
            "DownloadAndLoadToraModel",
            "ToraEncodeOpticalFlow",
            "ToraEncodeTrajectory"
        ],
        {
            "title_aux": "ComfyUI CogVideoX Wrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-ControlNeXt-SVD": [
        [
            "ControlNextDecode",
            "ControlNextDiffusersScheduler",
            "ControlNextGetPoses",
            "ControlNextSVDApply",
            "ControlNextSampler",
            "DownloadAndLoadControlNeXt"
        ],
        {
            "title_aux": "ComfyUI nodes for ControlNext-SVD v2"
        }
    ],
    "https://github.com/kijai/ComfyUI-DDColor": [
        [
            "DDColor_Colorize"
        ],
        {
            "title_aux": "ComfyUI-DDColor"
        }
    ],
    "https://github.com/kijai/ComfyUI-DepthAnythingV2": [
        [
            "DepthAnything_V2",
            "DownloadAndLoadDepthAnythingV2Model"
        ],
        {
            "title_aux": "ComfyUI-DepthAnythingV2"
        }
    ],
    "https://github.com/kijai/ComfyUI-DiffusionLight": [
        [
            "chrome_ball_to_envmap",
            "exposure_to_hdr"
        ],
        {
            "title_aux": "DiffusionLight implementation for ComfyUI"
        }
    ],
    "https://github.com/kijai/ComfyUI-DynamiCrafterWrapper": [
        [
            "DownloadAndLoadCLIPModel",
            "DownloadAndLoadCLIPVisionModel",
            "DownloadAndLoadDynamiCrafterCNModel",
            "DownloadAndLoadDynamiCrafterModel",
            "DynamiCrafterBatchInterpolation",
            "DynamiCrafterCNLoader",
            "DynamiCrafterControlnetApply",
            "DynamiCrafterI2V",
            "DynamiCrafterLoadInitNoise",
            "DynamiCrafterModelLoader",
            "ToonCrafterDecode",
            "ToonCrafterInterpolation"
        ],
        {
            "title_aux": "ComfyUI-DynamiCrafterWrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-ELLA-wrapper": [
        [
            "diffusers_model_loader",
            "diffusers_sampler",
            "ella_model_loader",
            "ella_sampler",
            "ella_t5_embeds"
        ],
        {
            "title_aux": "ComfyUI-ELLA-wrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-Florence2": [
        [
            "DownloadAndLoadFlorence2Lora",
            "DownloadAndLoadFlorence2Model",
            "Florence2ModelLoader",
            "Florence2Run"
        ],
        {
            "preemptions": [
                "DownloadAndLoadFlorence2Lora",
                "DownloadAndLoadFlorence2Model",
                "Florence2ModelLoader",
                "Florence2Run"
            ],
            "title_aux": "ComfyUI-Florence2"
        }
    ],
    "https://github.com/kijai/ComfyUI-FluxTrainer": [
        [
            "ExtractFluxLoRA",
            "FluxKohyaInferenceSampler",
            "FluxTrainAndValidateLoop",
            "FluxTrainBlockSelect",
            "FluxTrainEnd",
            "FluxTrainLoop",
            "FluxTrainModelSelect",
            "FluxTrainResume",
            "FluxTrainSave",
            "FluxTrainSaveModel",
            "FluxTrainValidate",
            "FluxTrainValidationSettings",
            "FluxTrainerLossConfig",
            "InitFluxLoRATraining",
            "InitFluxTraining",
            "InitSD3LoRATraining",
            "InitSDXLLoRATraining",
            "OptimizerConfig",
            "OptimizerConfigAdafactor",
            "OptimizerConfigProdigy",
            "OptimizerConfigProdigyPlusScheduleFree",
            "SD3ModelSelect",
            "SD3TrainValidationSettings",
            "SDXLModelSelect",
            "SDXLTrainValidate",
            "SDXLTrainValidationSettings",
            "TrainDatasetAdd",
            "TrainDatasetGeneralConfig",
            "TrainDatasetRegularization",
            "UploadToHuggingFace",
            "VisualizeLoss"
        ],
        {
            "title_aux": "ComfyUI Flux Trainer"
        }
    ],
    "https://github.com/kijai/ComfyUI-GIMM-VFI": [
        [
            "DownloadAndLoadGIMMVFIModel",
            "GIMMVFI_interpolate"
        ],
        {
            "title_aux": "ComfyUI-GIMM-VFI"
        }
    ],
    "https://github.com/kijai/ComfyUI-Geowizard": [
        [
            "geowizard_model_loader",
            "geowizard_sampler"
        ],
        {
            "title_aux": "Geowizard depth and normal estimation in ComfyUI"
        }
    ],
    "https://github.com/kijai/ComfyUI-HunyuanVideoWrapper": [
        [
            "DownloadAndLoadHyVideoTextEncoder",
            "HyVideoBlockSwap",
            "HyVideoCFG",
            "HyVideoContextOptions",
            "HyVideoCustomPromptTemplate",
            "HyVideoDecode",
            "HyVideoEmptyTextEmbeds",
            "HyVideoEncode",
            "HyVideoEnhanceAVideo",
            "HyVideoInverseSampler",
            "HyVideoLatentPreview",
            "HyVideoLoraBlockEdit",
            "HyVideoLoraSelect",
            "HyVideoModelLoader",
            "HyVideoPromptMixSampler",
            "HyVideoReSampler",
            "HyVideoSTG",
            "HyVideoSampler",
            "HyVideoTeaCache",
            "HyVideoTextEmbedsLoad",
            "HyVideoTextEmbedsSave",
            "HyVideoTextEncode",
            "HyVideoTextImageEncode",
            "HyVideoTorchCompileSettings",
            "HyVideoVAELoader"
        ],
        {
            "title_aux": "ComfyUI-HunyuanVideoWrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-IC-Light": [
        [
            "BackgroundScaler",
            "CalculateNormalsFromImages",
            "DetailTransfer",
            "ICLightConditioning",
            "LightSource",
            "LoadAndApplyICLightUnet",
            "LoadHDRImage"
        ],
        {
            "title_aux": "ComfyUI-IC-Light"
        }
    ],
    "https://github.com/kijai/ComfyUI-KJNodes": [
        [
            "AddLabel",
            "AppendInstanceDiffusionTracking",
            "AppendStringsToList",
            "AudioConcatenate",
            "BOOLConstant",
            "BatchCLIPSeg",
            "BatchCropFromMask",
            "BatchCropFromMaskAdvanced",
            "BatchUncrop",
            "BatchUncropAdvanced",
            "BboxToInt",
            "BboxVisualize",
            "CameraPoseVisualizer",
            "CheckpointLoaderKJ",
            "CheckpointPerturbWeights",
            "ColorMatch",
            "ColorToMask",
            "CondPassThrough",
            "ConditioningMultiCombine",
            "ConditioningSetMaskAndCombine",
            "ConditioningSetMaskAndCombine3",
            "ConditioningSetMaskAndCombine4",
            "ConditioningSetMaskAndCombine5",
            "CreateAudioMask",
            "CreateFadeMask",
            "CreateFadeMaskAdvanced",
            "CreateFluidMask",
            "CreateGradientFromCoords",
            "CreateGradientMask",
            "CreateInstanceDiffusionTracking",
            "CreateMagicMask",
            "CreateShapeImageOnPath",
            "CreateShapeMask",
            "CreateShapeMaskOnPath",
            "CreateTextMask",
            "CreateTextOnPath",
            "CreateVoronoiMask",
            "CrossFadeImages",
            "CrossFadeImagesMulti",
            "CustomControlNetWeightsFluxFromList",
            "CustomSigmas",
            "DifferentialDiffusionAdvanced",
            "DiffusionModelLoaderKJ",
            "DownloadAndLoadCLIPSeg",
            "DrawInstanceDiffusionTracking",
            "DummyOut",
            "EmptyLatentImageCustomPresets",
            "EmptyLatentImagePresets",
            "FastPreview",
            "FilterZeroMasksAndCorrespondingImages",
            "FlipSigmasAdjusted",
            "FloatConstant",
            "FloatToMask",
            "FloatToSigmas",
            "FluxBlockLoraLoader",
            "FluxBlockLoraSelect",
            "GLIGENTextBoxApplyBatchCoords",
            "GenerateNoise",
            "GetImageRangeFromBatch",
            "GetImageSizeAndCount",
            "GetImagesFromBatchIndexed",
            "GetLatentsFromBatchIndexed",
            "GetMaskSizeAndCount",
            "GradientToFloat",
            "GrowMaskWithBlur",
            "INTConstant",
            "ImageAddMulti",
            "ImageAndMaskPreview",
            "ImageBatchMulti",
            "ImageBatchRepeatInterleaving",
            "ImageBatchTestPattern",
            "ImageConcanate",
            "ImageConcatFromBatch",
            "ImageConcatMulti",
            "ImageCropByMaskAndResize",
            "ImageGrabPIL",
            "ImageGridComposite2x2",
            "ImageGridComposite3x3",
            "ImageGridtoBatch",
            "ImageNormalize_Neg1_To_1",
            "ImagePadForOutpaintMasked",
            "ImagePadForOutpaintTargetSize",
            "ImagePass",
            "ImageResizeKJ",
            "ImageTransformByNormalizedAmplitude",
            "ImageUncropByMask",
            "ImageUpscaleWithModelBatched",
            "InjectNoiseToLatent",
            "InsertImageBatchByIndexes",
            "InsertImagesToBatchIndexed",
            "InterpolateCoords",
            "Intrinsic_lora_sampling",
            "JoinStringMulti",
            "JoinStrings",
            "LoadAndResizeImage",
            "LoadImagesFromFolderKJ",
            "LoadResAdapterNormalization",
            "MaskBatchMulti",
            "MaskOrImageToWeight",
            "MergeImageChannels",
            "ModelPassThrough",
            "ModelSaveKJ",
            "NormalizedAmplitudeToFloatList",
            "NormalizedAmplitudeToMask",
            "OffsetMask",
            "OffsetMaskByNormalizedAmplitude",
            "PatchModelPatcherOrder",
            "PathchSageAttentionKJ",
            "PlotCoordinates",
            "PointsEditor",
            "PreviewAnimation",
            "RemapImageRange",
            "RemapMaskRange",
            "ReplaceImagesInBatch",
            "ResizeMask",
            "ReverseImageBatch",
            "RoundMask",
            "SV3D_BatchSchedule",
            "SaveImageKJ",
            "SaveImageWithAlpha",
            "ScaleBatchPromptSchedule",
            "Screencap_mss",
            "SetShakkerLabsUnionControlNetType",
            "ShuffleImageBatch",
            "SigmasToFloat",
            "Sleep",
            "SomethingToString",
            "SoundReactive",
            "SplineEditor",
            "SplitBboxes",
            "SplitImageChannels",
            "StabilityAPI_SD3",
            "StableZero123_BatchSchedule",
            "StringConstant",
            "StringConstantMultiline",
            "StyleModelApplyAdvanced",
            "Superprompt",
            "TorchCompileControlNet",
            "TorchCompileCosmosModel",
            "TorchCompileLTXModel",
            "TorchCompileModelFluxAdvanced",
            "TorchCompileVAE",
            "TransitionImagesInBatch",
            "TransitionImagesMulti",
            "VRAM_Debug",
            "WebcamCaptureCV2",
            "WeightScheduleConvert",
            "WeightScheduleExtend",
            "WidgetToString"
        ],
        {
            "title_aux": "KJNodes for ComfyUI"
        }
    ],
    "https://github.com/kijai/ComfyUI-KwaiKolorsWrapper": [
        [
            "DownloadAndLoadChatGLM3",
            "DownloadAndLoadKolorsModel",
            "KolorsSampler",
            "KolorsTextEncode",
            "LoadChatGLM3"
        ],
        {
            "title_aux": "ComfyUI-KwaiKolorsWrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-LLaVA-OneVision": [
        [
            "DownloadAndLoadLLaVAOneVisionModel",
            "LLaVA_OneVision_Run",
            "OneVisionCaptionFolder",
            "SaveCaptionToTextFile"
        ],
        {
            "title_aux": "ComfyUI Llava-OneVision"
        }
    ],
    "https://github.com/kijai/ComfyUI-LVCDWrapper": [
        [
            "LVCDDecoder",
            "LVCDSampler",
            "LoadLVCDModel"
        ],
        {
            "title_aux": "ComfyUI wrapper nodes for LVCD"
        }
    ],
    "https://github.com/kijai/ComfyUI-LaVi-Bridge-Wrapper": [
        [
            "lavi_bridge_llama_encoder",
            "lavi_bridge_t5_encoder",
            "lavibridge_model_loader",
            "lavibridge_sampler"
        ],
        {
            "title_aux": "ComfyUI-LaVi-Bridge-Wrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-LivePortraitKJ": [
        [
            "DownloadAndLoadLivePortraitModels",
            "KeypointScaler",
            "KeypointsToImage",
            "LivePortraitComposite",
            "LivePortraitCropper",
            "LivePortraitLoadCropper",
            "LivePortraitLoadFaceAlignmentCropper",
            "LivePortraitLoadMediaPipeCropper",
            "LivePortraitProcess",
            "LivePortraitRetargeting"
        ],
        {
            "title_aux": "ComfyUI-LivePortraitKJ"
        }
    ],
    "https://github.com/kijai/ComfyUI-Lotus": [
        [
            "LoadLotusModel",
            "LotusSampler"
        ],
        {
            "title_aux": "ComfyUI-Lotus"
        }
    ],
    "https://github.com/kijai/ComfyUI-LuminaWrapper": [
        [
            "DownloadAndLoadGemmaModel",
            "DownloadAndLoadLuminaModel",
            "GemmaSampler",
            "LuminaGemmaTextEncode",
            "LuminaGemmaTextEncodeArea",
            "LuminaT2ISampler",
            "LuminaTextAreaAppend"
        ],
        {
            "title_aux": "ComfyUI-LuminaWrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-Marigold": [
        [
            "ColorizeDepthmap",
            "MarigoldDepthEstimation",
            "MarigoldDepthEstimationVideo",
            "MarigoldDepthEstimation_v2",
            "MarigoldDepthEstimation_v2_video",
            "MarigoldModelLoader",
            "RemapDepth",
            "SaveImageOpenEXR"
        ],
        {
            "title_aux": "Marigold depth estimation in ComfyUI"
        }
    ],
    "https://github.com/kijai/ComfyUI-MimicMotionWrapper": [
        [
            "DiffusersScheduler",
            "DownloadAndLoadMimicMotionModel",
            "MimicMotionDecode",
            "MimicMotionGetPoses",
            "MimicMotionSampler"
        ],
        {
            "title_aux": "ComfyUI-MimicMotionWrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-MoGe": [
        [
            "DownloadAndLoadMoGeModel",
            "MoGeProcess"
        ],
        {
            "title_aux": "ComfyUI-MoGe"
        }
    ],
    "https://github.com/kijai/ComfyUI-OpenDiTWrapper": [
        [
            "DownloadAndLoadOpenDiTT5Model",
            "DownloadAndLoadOpenSoraModel",
            "DownloadAndLoadOpenSoraVAE",
            "OpenDiTConditioning",
            "OpenDiTSampler",
            "OpenSoraDecode",
            "OpenSoraEncodeReference"
        ],
        {
            "title_aux": "ComfyUI-OpenDiTWrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-PyramidFlowWrapper": [
        [
            "PyramidFlowLatentPreview",
            "PyramidFlowSampler",
            "PyramidFlowTextEncode",
            "PyramidFlowTorchCompileSettings",
            "PyramidFlowTransformerLoader",
            "PyramidFlowVAEDecode",
            "PyramidFlowVAEEncode",
            "PyramidFlowVAELoader"
        ],
        {
            "title_aux": "ComfyUI PyramidFlow Wrapper"
        }
    ],
    "https://github.com/kijai/ComfyUI-SUPIR": [
        [
            "SUPIR_Upscale",
            "SUPIR_conditioner",
            "SUPIR_decode",
            "SUPIR_encode",
            "SUPIR_first_stage",
            "SUPIR_model_loader",
            "SUPIR_model_loader_v2",
            "SUPIR_model_loader_v2_clip",
            "SUPIR_sample",
            "SUPIR_tiles"
        ],
        {
            "title_aux": "ComfyUI-SUPIR"
        }
    ],
    "https://github.com/kijai/ComfyUI-depth-fm": [
        [
            "Depth_fm"
        ],
        {
            "title_aux": "ComfyUI-depth-fm"
        }
    ],
    "https://github.com/kijai/ComfyUI-moondream": [
        [
            "MoondreamQuery",
            "MoondreamQueryCaptions"
        ],
        {
            "title_aux": "ComfyUI-moondream"
        }
    ],
    "https://github.com/kijai/ComfyUI-segment-anything-2": [
        [
            "DownloadAndLoadSAM2Model",
            "Florence2toCoordinates",
            "Sam2AutoSegmentation",
            "Sam2Segmentation",
            "Sam2VideoSegmentation",
            "Sam2VideoSegmentationAddPoints"
        ],
        {
            "preemptions": [
                "DownloadAndLoadSAM2Model",
                "Florence2toCoordinates",
                "Sam2AutoSegmentation",
                "Sam2Segmentation",
                "Sam2VideoSegmentation",
                "Sam2VideoSegmentationAddPoints"
            ],
            "title_aux": "ComfyUI-segment-anything-2"
        }
    ],
    "https://github.com/kimara-ai/ComfyUI-Kimara-AI-Advanced-Watermarks": [
        [
            "KimaraAIBatchImages",
            "KimaraAIWatermarker"
        ],
        {
            "title_aux": "Kimara.ai's Advanced Watermarking Tools"
        }
    ],
    "https://github.com/kinfolk0117/ComfyUI_GradientDeepShrink": [
        [
            "GradientPatchModelAddDownscale",
            "GradientPatchModelAddDownscaleAdvanced"
        ],
        {
            "title_aux": "ComfyUI_GradientDeepShrink"
        }
    ],
    "https://github.com/kinfolk0117/ComfyUI_GridSwapper": [
        [
            "GridSwapper"
        ],
        {
            "title_aux": "Gridswapper"
        }
    ],
    "https://github.com/kinfolk0117/ComfyUI_Pilgram": [
        [
            "Pilgram"
        ],
        {
            "title_aux": "ComfyUI_Pilgram"
        }
    ],
    "https://github.com/kinfolk0117/ComfyUI_SimpleTiles": [
        [
            "DynamicTileMerge",
            "DynamicTileSplit",
            "TileCalc",
            "TileMerge",
            "TileSplit"
        ],
        {
            "title_aux": "SimpleTiles"
        }
    ],
    "https://github.com/kk8bit/KayTool": [
        [
            "Color_Adjustment",
            "Custom_Save_Image"
        ],
        {
            "title_aux": "KayTool"
        }
    ],
    "https://github.com/klinter007/klinter_nodes": [
        [
            "AspectSelector",
            "FolderLoader",
            "LoadImagePlus",
            "OutpaintPadding",
            "SizeSelector",
            "SpeedRamp",
            "YellowBus",
            "ZoomOutComposer",
            "concat",
            "filter",
            "nodevalue2stringmulti",
            "string_contact_multi"
        ],
        {
            "title_aux": "Klinter_nodes"
        }
    ],
    "https://github.com/knuknX/ComfyUI-Image-Tools": [
        [
            "BatchImagePathLoader",
            "ImageBgRemoveProcessor",
            "ImageCheveretoUploader",
            "ImageStandardResizeProcessor",
            "JSONMessageNotifyTool",
            "PreviewJSONNode",
            "SingleImagePathLoader",
            "SingleImageUrlLoader"
        ],
        {
            "title_aux": "ComfyUI-Image-Tools"
        }
    ],
    "https://github.com/kohya-ss/ControlNet-LLLite-ComfyUI": [
        [
            "LLLiteLoader"
        ],
        {
            "title_aux": "ControlNet-LLLite-ComfyUI"
        }
    ],
    "https://github.com/komojini/ComfyUI_SDXL_DreamBooth_LoRA_CustomNodes": [
        [
            "S3 Bucket LoRA",
            "S3Bucket_Load_LoRA",
            "XL DreamBooth LoRA",
            "XLDB_LoRA"
        ],
        {
            "title_aux": "ComfyUI_SDXL_DreamBooth_LoRA_CustomNodes"
        }
    ],
    "https://github.com/komojini/komojini-comfyui-nodes": [
        [
            "BatchCreativeInterpolationNodeDynamicSettings",
            "CachedGetter",
            "DragNUWAImageCanvas",
            "FlowBuilder",
            "FlowBuilder (adv)",
            "FlowBuilder (advanced)",
            "FlowBuilder (advanced) Setter",
            "FlowBuilderSetter",
            "FlowBuilderSetter (adv)",
            "Getter",
            "ImageCropByRatio",
            "ImageCropByRatioAndResize",
            "ImageGetter",
            "ImageMerger",
            "ImagesCropByRatioAndResizeBatch",
            "KSamplerAdvancedCacheable",
            "KSamplerCacheable",
            "Setter",
            "UltimateVideoLoader",
            "UltimateVideoLoader (simple)",
            "YouTubeVideoLoader"
        ],
        {
            "title_aux": "komojini-comfyui-nodes"
        }
    ],
    "https://github.com/kostenickj/jk-comfyui-helpers": [
        [
            "EasyHRFix",
            "EasyHRFix_Context",
            "JKAnythingToString",
            "JKBigContext",
            "JKDynamicThresholdingMultiModel",
            "JKEasyCheckpointLoader",
            "JKEasyDetailer",
            "JKEasyDetailer_Context",
            "JKEasyKSampler_Context",
            "JKEasyUpscaleImage",
            "JKEasyWatermark",
            "JKInspireSchedulerAdapter",
            "JKLilContext",
            "JKMultiModelSamplerUnpatch",
            "JKStringEmpty",
            "JKStringEquals",
            "JKStringNotEmpty",
            "JKStringNotEquals",
            "JKStringToSamplerAdapter"
        ],
        {
            "title_aux": "comfyui-jk-easy-nodes"
        }
    ],
    "https://github.com/kunieone/ComfyUI_alkaid": [
        [
            "A_EmptyLatentImageLongside",
            "A_Face3DSwapper",
            "A_FaceCrop",
            "A_FacePaste",
            "A_GetImageSize",
            "A_OpenPosePreprocessor",
            "AdapterFace",
            "AdapterFaceLoader",
            "AdapterStyle",
            "AdapterStyleLoader",
            "AlkaidLoader",
            "ApplyAdapter",
            "ApplyControlNet_KPS",
            "CombineAdapterPatch",
            "KSamplerHires"
        ],
        {
            "title_aux": "ComfyUI_alkaid"
        }
    ],
    "https://github.com/kwaroran/abg-comfyui": [
        [
            "Remove Image Background (abg)"
        ],
        {
            "title_aux": "abg-comfyui"
        }
    ],
    "https://github.com/kycg/comfyui-Lora-auto-downloader": [
        [
            "Kw_JsonLoraLoader",
            "Kw_Json_Lora_CivitAIDownloader"
        ],
        {
            "title_aux": "Kw_Json_Lora_CivitAIDownloader"
        }
    ],
    "https://github.com/l-comm/WatermarkRemoval": [
        [
            "FindWatermarkNode",
            "RemoveWatermarkNode"
        ],
        {
            "author": "l-comm",
            "description": "Remove watermark",
            "nickname": "Watermark Removal",
            "title": "Watermark Removal",
            "title_aux": "WatermarkRemoval"
        }
    ],
    "https://github.com/l1yongch1/ComfyUI_PhiCaption": [
        [
            "PhiInfer",
            "PhiModelLoder"
        ],
        {
            "title_aux": "ComfyUI_PhiCaption"
        }
    ],
    "https://github.com/l20richo/ComfyUI-Azure-Blob-Storage": [
        [
            "DownloadFileBLOB",
            "LoadImageBLOB",
            "SaveImageBLOB",
            "SaveVideoFilesBLOB",
            "UploadFileBLOB"
        ],
        {
            "title_aux": "ComfyUI-Azure-Blob-Storage"
        }
    ],
    "https://github.com/laksjdjf/Batch-Condition-ComfyUI": [
        [
            "Batch String",
            "CLIP Text Encode (Batch)",
            "String Input"
        ],
        {
            "title_aux": "Batch-Condition-ComfyUI"
        }
    ],
    "https://github.com/laksjdjf/LCMSampler-ComfyUI": [
        [
            "SamplerLCM",
            "TAESDLoader"
        ],
        {
            "title_aux": "LCMSampler-ComfyUI"
        }
    ],
    "https://github.com/laksjdjf/LoRTnoC-ComfyUI": [
        [
            "LortnocLoader"
        ],
        {
            "title_aux": "LoRTnoC-ComfyUI"
        }
    ],
    "https://github.com/laksjdjf/cd-tuner_negpip-ComfyUI": [
        [
            "CDTuner",
            "Negapip",
            "Negpip"
        ],
        {
            "title_aux": "cd-tuner_negpip-ComfyUI"
        }
    ],
    "https://github.com/laksjdjf/cgem156-ComfyUI": [
        [
            "GradualLatentSampler",
            "LCMSamplerRCFG",
            "LoadAestheticShadow",
            "PredictAesthetic",
            "TCDSampler",
            "TextScheduler"
        ],
        {
            "title_aux": "cgem156-ComfyUI\ud83c\udf4c"
        }
    ],
    "https://github.com/laksjdjf/pfg-ComfyUI": [
        [
            "PFG"
        ],
        {
            "title_aux": "pfg-ComfyUI"
        }
    ],
    "https://github.com/larsupb/LoRA-Merger-ComfyUI": [
        [
            "PM LoRA Apply",
            "PM LoRA Loader",
            "PM LoRA Merger",
            "PM LoRA Resizer",
            "PM LoRA SVD Merger",
            "PM LoRA Save",
            "XY: PM LoRA Modes",
            "XY: PM LoRA SVD Rank",
            "XY: PM LoRA Strengths"
        ],
        {
            "title_aux": "LoRA Power-Merger ComfyUI"
        }
    ],
    "https://github.com/latenightlabs/ComfyUI-LNL": [
        [
            "LNL_FrameSelectorV3",
            "LNL_FrameSelectorV4"
        ],
        {
            "title_aux": "LNL Frame Selector"
        }
    ],
    "https://github.com/lazniak/Head-Orientation-Node-for-ComfyUI---by-PabloGFX": [
        [
            "HeadOrientationNode"
        ],
        {
            "title_aux": "Head-Orientation-Node - by PabloGFX"
        }
    ],
    "https://github.com/lazniak/LiquidTime-Interpolation": [
        [
            "LiquidTime"
        ],
        {
            "title_aux": "LiquidTime - by PabloGFX"
        }
    ],
    "https://github.com/lazniak/comfyui-google-photos-loader": [
        [
            "ContentFilter",
            "DatePicker",
            "Google Photos Album Lister",
            "Google Photos Album Loader",
            "Google Photos Album Selector",
            "Google Photos Cache Manager",
            "Google Photos Clear Cache",
            "Google Photos Images Loader",
            "Google Photos Login/Logout"
        ],
        {
            "title_aux": "Google Photos Loader - by PabloGFX"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_CompareModelWeights": [
        [
            "CheckPointLoader_Compare",
            "CompareModelWeightsDiff",
            "CompareModelWeightsDiffNormalized",
            "PreviewImageCompareModelWeights"
        ],
        {
            "title_aux": "ComfyUI_CompareModelWeights"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_CrossImageAttention": [
        [
            "AppearanceTransferInference",
            "AppearanceTransferModelModelLoader",
            "CIAConfig",
            "LoadImagePath",
            "LoadLatents"
        ],
        {
            "title_aux": "ComfyUI nodes to use CrossImageAttention"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_FluxCustomId": [
        [
            "ApplyCustomIDFlux",
            "CustomIDModelLoader"
        ],
        {
            "title_aux": "ComfyUI_FluxCustomId"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_InternVL2": [
        [
            "DynamicPreprocess",
            "InternVLHFInference",
            "InternVLLMDEPLOYInference",
            "InternVLModelLoader"
        ],
        {
            "title_aux": "ComfyUI_InternVL2"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_LLaSM": [
        [
            "LLaSM2Interface",
            "LLaSM2ModelLoader",
            "LLaSMLoadAudio"
        ],
        {
            "title_aux": "ComfyUI_LLaSM"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_M3Net": [
        [
            "M3Net_Interface",
            "M3Net_ModelLoader"
        ],
        {
            "title_aux": "ComfyUI_M3Net"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_MasaCtrl": [
        [
            "DirectSampler",
            "MasaCtrlConcatImage",
            "MasaCtrlInversion",
            "MasaCtrlLoadImage",
            "MasaCtrlModelLoader",
            "MutualSelfAttentionControlMaskAutoSampler",
            "MutualSelfAttentionControlSampler"
        ],
        {
            "title_aux": "ComfyUI nodes to use MasaCtrl"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_Style_Aligned": [
        [
            "SAControlnet_ModelLoader",
            "SADepth",
            "SAHandler",
            "SAInversion",
            "SASDXLControlnetKsampler",
            "SASDXLKampler",
            "SASDXLTransferKsampler",
            "SASDXL_ModelLoader",
            "SchedulerLoader"
        ],
        {
            "title_aux": "ComfyUI nodes to use Style-Aligned"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_VideoEditing": [
        [
            "LoadVideo2Images",
            "VEdit_ControlNet_ModelLoader",
            "VEdit_ModelLoader",
            "VEdit_Sampler",
            "VEdit_image2canny"
        ],
        {
            "title_aux": "ComfyUI nodes to use VideoEditing"
        }
    ],
    "https://github.com/leeguandong/ComfyUI_VisualAttentionMap": [
        [
            "DecodeLatent",
            "HFModelLoader",
            "ShowCrossAttn",
            "ShowImages",
            "ShowSelfAttn",
            "Text2ImageInference"
        ],
        {
            "title_aux": "ComfyUI_VisualAttentionMap"
        }
    ],
    "https://github.com/leestuartx/ComfyUI-GG": [
        [
            "AddPaddingToImage",
            "ForLoopNode",
            "ImageMetadataExtractor",
            "InputNode",
            "MetadataExtractBySeed",
            "MetadataExtractorBySeed",
            "OutputNode",
            "ResizeImageProportionally",
            "WorkspaceNode"
        ],
        {
            "title_aux": "ComfyUI-GG"
        }
    ],
    "https://github.com/lenskikh/ComfyUI-Prompt-Worker": [
        [
            "Prompt Worker"
        ],
        {
            "title_aux": "Propmt Worker"
        }
    ],
    "https://github.com/leoleelxh/ComfyUI-LLMs": [
        [
            "LLMs Chat",
            "LLMs Vision Unified",
            "LLMs_Vision_Unified"
        ],
        {
            "title_aux": "ComfyUI-LLMs"
        }
    ],
    "https://github.com/lgldlk/ComfyUI-PC-ding-dong": [
        [
            "pc ding dong",
            "pc ding dong text",
            "pc time sleep"
        ],
        {
            "title_aux": "ComfyUI-PC-ding-dong"
        }
    ],
    "https://github.com/liangt/comfyui-loadimagewithsubfolder": [
        [
            "LoadImageWithSubfolder"
        ],
        {
            "title_aux": "comfyui-loadimagewithsubfolder"
        }
    ],
    "https://github.com/licyk/ComfyUI-HakuImg": [
        [
            "BlendImage",
            "Blur",
            "Chromatic",
            "Color",
            "Curve",
            "CustomExif",
            "Flip",
            "Glow",
            "InOutPaint",
            "LenDistortion",
            "PixelOE",
            "Pixelize",
            "SaveImageWithCustomExif",
            "Sketch",
            "TiltShift"
        ],
        {
            "title_aux": "ComfyUI-HakuImg"
        }
    ],
    "https://github.com/licyk/ComfyUI-TCD-Sampler": [
        [
            "TCDScheduler"
        ],
        {
            "title_aux": "ComfyUI-TCD-Sampler"
        }
    ],
    "https://github.com/linshier/comfyui-remote-tools": [
        [
            "LoadBase64(js)",
            "LoadBase64FromRemote",
            "SendBase64ToRemote"
        ],
        {
            "title_aux": "comfyui-remote-tools"
        }
    ],
    "https://github.com/liuqianhonga/ComfyUI-Html2Image": [
        [
            "CameraWatermark",
            "TemplateToImage",
            "WebpageScreenshot"
        ],
        {
            "title_aux": "ComfyUI-Html2Image"
        }
    ],
    "https://github.com/liuqianhonga/ComfyUI-Image-Compressor": [
        [
            "BatchImageCompressor",
            "ImageCompressor"
        ],
        {
            "title_aux": "ComfyUI-Image-Compressor"
        }
    ],
    "https://github.com/liuqianhonga/ComfyUI-QHNodes": [
        [
            "BatchImageCompressor",
            "CameraWatermark",
            "DownloadCheckpoint",
            "DownloadControlNet",
            "DownloadLora",
            "DownloadUNET",
            "DownloadVAE",
            "FileSave",
            "Gemini",
            "ImageCompressor",
            "ImageCountFromFolder",
            "JsonToCSV",
            "JsonUnpack",
            "LoadImageFromFolder",
            "LoadLoraFromFolder",
            "PresetSizeLatent",
            "SamplerSettings",
            "ShowTranslateString",
            "StringConverter",
            "StringFormatter",
            "StringList",
            "StringListFromCSV",
            "StringListToCSV",
            "StringMatcher",
            "StringTranslate",
            "TemplateToImage",
            "TimeFormatter",
            "WebpageScreenshot"
        ],
        {
            "title_aux": "ComfyUI-QHNodes"
        }
    ],
    "https://github.com/liuqianhonga/ComfyUI-String-Helper": [
        [
            "JsonToCSV",
            "ShowTranslateString",
            "StringConverter",
            "StringFormatter",
            "StringList",
            "StringListFromCSV",
            "StringListToCSV",
            "StringMatcher",
            "StringTranslate",
            "TimeFormatter"
        ],
        {
            "title_aux": "ComfyUI-String-Helper"
        }
    ],
    "https://github.com/liushuchun/ComfyUI_Lora_List_With_Url_Loader": [
        [
            "LoraListUrlLoader"
        ],
        {
            "title_aux": "ComfyUI_Lora_List_With_Url_Loader"
        }
    ],
    "https://github.com/liusida/ComfyUI-AutoCropFaces": [
        [
            "AutoCropFaces"
        ],
        {
            "title_aux": "ComfyUI-AutoCropFaces"
        }
    ],
    "https://github.com/liusida/ComfyUI-B-LoRA": [
        [
            "LoadBLoRA"
        ],
        {
            "title_aux": "ComfyUI-B-LoRA"
        }
    ],
    "https://github.com/liusida/ComfyUI-Debug": [
        [
            "DebugInspectorNode",
            "DebugModelInspectorNode",
            "DebugModelPrintOutNode"
        ],
        {
            "title_aux": "ComfyUI-Debug"
        }
    ],
    "https://github.com/liusida/ComfyUI-Login": [
        [
            "LoadImageIncognito"
        ],
        {
            "title_aux": "ComfyUI-Login"
        }
    ],
    "https://github.com/liusida/ComfyUI-SD3-nodes": [
        [
            "SD3EmptyLatent",
            "SD3LoadCLIPs",
            "SD3LoadCheckpoint"
        ],
        {
            "title_aux": "ComfyUI-SD3-nodes"
        }
    ],
    "https://github.com/ljleb/comfy-mecha": [
        [
            "Blocks Mecha Hyper",
            "Float Mecha Hyper",
            "Lora Mecha Recipe",
            "Mecha Deserializer",
            "Mecha Merger",
            "Mecha Recipe List",
            "Mecha Serializer",
            "Model Mecha Recipe"
        ],
        {
            "title_aux": "Mecha Merge Node Pack"
        }
    ],
    "https://github.com/lks-ai/ComfyUI-StableAudioSampler": [
        [
            "StableAudioConditioning",
            "StableAudioLoadModel",
            "StableAudioPrompt",
            "StableAudioSampler"
        ],
        {
            "author": "lks-ai",
            "description": "A Simple integration of Stable Audio Diffusion with knobs and stuff!",
            "nickname": "stableaudio",
            "title": "StableAudioSampler",
            "title_aux": "ComfyUI Stable Audio Open 1.0 Sampler"
        }
    ],
    "https://github.com/lks-ai/anynode": [
        [
            "AnyNode",
            "AnyNodeAnthropic",
            "AnyNodeCodeViewer",
            "AnyNodeExport",
            "AnyNodeGemini",
            "AnyNodeLocal"
        ],
        {
            "author": "newsbubbles",
            "description": "This single node uses an LLM to generate a functionality based on your request. You can make the node do anything.",
            "nickname": "AnyNode",
            "title": "AnyNode v0.1.1",
            "title_aux": "ComfyUI AnyNode: Any Node you ask for"
        }
    ],
    "https://github.com/lldacing/ComfyUI_BiRefNet_ll": [
        [
            "AutoDownloadBiRefNetModel",
            "BlurFusionForegroundEstimation",
            "GetMaskByBiRefNet",
            "LoadRembgByBiRefNetModel",
            "RembgByBiRefNet",
            "RembgByBiRefNetAdvanced"
        ],
        {
            "title_aux": "ComfyUI_BiRefNet_ll"
        }
    ],
    "https://github.com/lldacing/ComfyUI_Patches_ll": [
        [
            "ApplyTeaCachePatch",
            "DitForwardOverrider",
            "FluxForwardOverrider",
            "VideoForwardOverrider"
        ],
        {
            "title_aux": "ComfyUI_Patches_ll"
        }
    ],
    "https://github.com/lldacing/ComfyUI_PuLID_Flux_ll": [
        [
            "ApplyPulidFlux",
            "FixPulidFluxPatch",
            "PulidFluxEvaClipLoader",
            "PulidFluxInsightFaceLoader",
            "PulidFluxModelLoader"
        ],
        {
            "title_aux": "ComfyUI_PuLID_Flux_ll"
        }
    ],
    "https://github.com/lldacing/ComfyUI_StableDelight_ll": [
        [
            "ApplyStableDelight",
            "LoadStableDelightModel"
        ],
        {
            "title_aux": "ComfyUI_StableDelight_ll"
        }
    ],
    "https://github.com/lldacing/ComfyUI_StableHair_ll": [
        [
            "ApplyHairRemover",
            "ApplyHairTransfer",
            "LoadStableHairRemoverModel",
            "LoadStableHairTransferModel"
        ],
        {
            "title_aux": "ComfyUI_StableHair_ll"
        }
    ],
    "https://github.com/lldacing/comfyui-easyapi-nodes": [
        [
            "Base64ToImage",
            "Base64ToMask",
            "BboxToBbox",
            "BboxToCropData",
            "BboxesToBboxes",
            "ColorPicker",
            "ConvertToJsonStr",
            "ConvertTypeToAny",
            "CopyAndRenameFiles",
            "CropImageByBbox",
            "CropTargetSizeImageByBbox",
            "EmptyOutputNode",
            "FilterValueForList",
            "ForEachClose",
            "ForEachOpen",
            "GetImageBatchSize",
            "GetValueFromJsonObj",
            "ImageEqual",
            "ImageToBase64",
            "ImageToBase64Advanced",
            "IndexOfList",
            "IndexesOfList",
            "InnerIntCompare",
            "InnerIntMathOperation",
            "InnerLoopClose",
            "InsightFaceBBOXDetect",
            "IntToList",
            "IntToNumber",
            "IsNoneOrEmpty",
            "IsNoneOrEmptyOptional",
            "JoinList",
            "ListMerge",
            "ListUnWrapper",
            "ListWrapper",
            "LoadImageFromLocalPath",
            "LoadImageFromURL",
            "LoadImageToBase64",
            "LoadJsonStrToList",
            "LoadLocalFilePath",
            "LoadMaskFromLocalPath",
            "LoadMaskFromURL",
            "MaskByBboxes",
            "MaskImageToBase64",
            "MaskToBase64",
            "MaskToBase64Image",
            "MaskToRle",
            "ReadTextFromLocalFile",
            "RleToMask",
            "SDBaseVerNumber",
            "SamAutoMaskSEGS",
            "SamAutoMaskSEGSAdvanced",
            "SaveImagesWithoutOutput",
            "SaveSingleImageWithoutOutput",
            "SaveTextToFileByImagePath",
            "SaveTextToLocalFile",
            "SelectBbox",
            "SelectBboxes",
            "ShowBoolean",
            "ShowFloat",
            "ShowInt",
            "ShowNumber",
            "ShowString",
            "SliceList",
            "SplitStringToList",
            "StringArea",
            "StringToList",
            "TryFreeMemory"
        ],
        {
            "title_aux": "comfyui-easyapi-nodes"
        }
    ],
    "https://github.com/lo-th/Comfyui_three_js": [
        [
            "ThreeView"
        ],
        {
            "title_aux": "Comfyui_three_js"
        }
    ],
    "https://github.com/lodestone-rock/ComfyUI_FluxMod": [
        [
            "FluxModCheckpointLoader",
            "FluxModCheckpointLoaderMini",
            "FluxModSamplerWrapper",
            "KSamplerMod",
            "SkipLayerForward"
        ],
        {
            "title_aux": "ComfyUI_FluxMod"
        }
    ],
    "https://github.com/logtd/ComfyUI-4DHumans": [
        [
            "LoadDetectron",
            "LoadHMR",
            "ProcessHumans",
            "SelectHuman"
        ],
        {
            "title_aux": "ComfyUI-4DHumans"
        }
    ],
    "https://github.com/logtd/ComfyUI-APGScaling": [
        [
            "APGFunction"
        ],
        {
            "title_aux": "ComfyUI-APGScaling"
        }
    ],
    "https://github.com/logtd/ComfyUI-DiLightNet": [
        [
            "LoadDiLightControlNet",
            "PrepareDiLightCond"
        ],
        {
            "title_aux": "ComfyUI-DiLightNet"
        }
    ],
    "https://github.com/logtd/ComfyUI-FLATTEN": [
        [
            "ApplyFlattenAttentionNode",
            "CreateFlowNoiseNode",
            "FlattenCheckpointLoaderNode",
            "KSamplerFlattenNode",
            "TrajectoryNode",
            "UnsamplerFlattenNode"
        ],
        {
            "title_aux": "ComfyUI-FLATTEN"
        }
    ],
    "https://github.com/logtd/ComfyUI-Fluxtapoz": [
        [
            "AddFluxFlow",
            "ApplyFluxRaveAttention",
            "ApplyRefFlux",
            "ApplyRegionalConds",
            "ConfigureModifiedFlux",
            "CreateRegionalCond",
            "FlowEditForwardSampler",
            "FlowEditGuider",
            "FlowEditReverseSampler",
            "FlowEditSampler",
            "FluxAttnOverride",
            "FluxDeGuidance",
            "FluxForwardODESampler",
            "FluxInverseSampler",
            "FluxNoiseMixer",
            "FluxReverseODESampler",
            "InFluxFlipSigmas",
            "InFluxModelSamplingPred",
            "OutFluxModelSamplingPred",
            "PAGAttention",
            "PrepareAttnBank",
            "RFDoubleBlocksOverride",
            "RFSingleBlocksOverride",
            "RegionalStyleModelApply",
            "SEGAttention"
        ],
        {
            "title_aux": "ComfyUI-Fluxtapoz"
        }
    ],
    "https://github.com/logtd/ComfyUI-InstanceDiffusion": [
        [
            "ApplyScaleUModelNode",
            "DownloadInstanceDiffusionModels",
            "InstanceDiffusionTrackingPrompt",
            "LoadInstanceFusersNode",
            "LoadInstancePositionNetModel",
            "LoadInstanceScaleUNode"
        ],
        {
            "title_aux": "InstanceDiffusion Nodes"
        }
    ],
    "https://github.com/logtd/ComfyUI-InversedNoise": [
        [
            "CombineNoiseLatentNode",
            "MixNoiseNode",
            "SamplerInversedEulerNode"
        ],
        {
            "title_aux": "ComfyUI-InversedNoise"
        }
    ],
    "https://github.com/logtd/ComfyUI-LTXTricks": [
        [
            "AddLatentGuide",
            "LTXAttentioOverride",
            "LTXAttentionBank",
            "LTXAttnOverride",
            "LTXFetaEnhance",
            "LTXFlowEditCFGGuider",
            "LTXFlowEditSampler",
            "LTXForwardModelSamplingPred",
            "LTXPerturbedAttention",
            "LTXPrepareAttnInjections",
            "LTXRFForwardODESampler",
            "LTXRFReverseODESampler",
            "LTXReverseModelSamplingPred",
            "ModifyLTXModel"
        ],
        {
            "title_aux": "ComfyUI-LTXTricks"
        }
    ],
    "https://github.com/logtd/ComfyUI-MochiEdit": [
        [
            "MochiPrepareSigmas",
            "MochiResampler",
            "MochiUnsampler",
            "MochiWrapperResampler",
            "MochiWrapperSamplerCustom",
            "MochiWrapperUnsampler"
        ],
        {
            "title_aux": "ComfyUI-MochiEdit"
        }
    ],
    "https://github.com/logtd/ComfyUI-MotionThiefExperiment": [
        [
            "ApplyRefMotionNode",
            "MotionRefSettingsCustomNode",
            "MotionRefSettingsDefaultNode"
        ],
        {
            "title_aux": "ComfyUI-MotionThiefExperiment"
        }
    ],
    "https://github.com/logtd/ComfyUI-RAVE_ATTN": [
        [
            "ApplyRaveAttentionNode",
            "AttentionOverrideSD15Node",
            "AttentionOverrideSDXLNode"
        ],
        {
            "title_aux": "ComfyUI-RAVE Attention"
        }
    ],
    "https://github.com/logtd/ComfyUI-ReNoise": [
        [
            "ReNoiseModelSamplingPred",
            "ReNoiseSampler"
        ],
        {
            "title_aux": "ComfyUI-ReNoise"
        }
    ],
    "https://github.com/logtd/ComfyUI-RefSampling": [
        [
            "ApplyRefContentNode",
            "ApplyRefStyleNode",
            "ApplyRefUNetNode"
        ],
        {
            "title_aux": "ComfyUI-RefSampling"
        }
    ],
    "https://github.com/logtd/ComfyUI-RefUNet": [
        [
            "ConfigRefMapAdv",
            "ConfigureRefNet",
            "CreateRefBank",
            "CustomRefMapSD1",
            "PrepareRefLatents",
            "ReadSampler",
            "RefModelSamplingPred",
            "VisionClipEncode",
            "WriteSampler"
        ],
        {
            "title_aux": "ComfyUI-RefUNet"
        }
    ],
    "https://github.com/logtd/ComfyUI-SEGAttention": [
        [
            "SEGAttention"
        ],
        {
            "title_aux": "ComfyUI-SEGAttention"
        }
    ],
    "https://github.com/logtd/ComfyUI-SSREncoder": [
        [
            "ApplySSR",
            "EncodeSSRQuery",
            "LoadSSRAligner",
            "LoadSSRAttention"
        ],
        {
            "title_aux": "ComfyUI-SSREncoder"
        }
    ],
    "https://github.com/logtd/ComfyUI-SeeCoder": [
        [
            "LoadSeeCoder",
            "LoadSeeCoderUncond",
            "SeecoderEncode"
        ],
        {
            "title_aux": "ComfyUI-SeeCoder"
        }
    ],
    "https://github.com/logtd/ComfyUI-TrackingNodes": [
        [
            "OpenPoseTrackerNode",
            "YOLOTrackerNode"
        ],
        {
            "title_aux": "Tracking Nodes for Videos"
        }
    ],
    "https://github.com/logtd/ComfyUI-ViewCrafter": [
        [
            "ApplyViewCrafter",
            "LoadViewCrafter",
            "ScaleImages"
        ],
        {
            "title_aux": "ComfyUI-ViewCrafter"
        }
    ],
    "https://github.com/longgui0318/comfyui-common-util": [
        [
            "Added Layer Info To Array",
            "Enhanced Random Light Source",
            "Float Relay",
            "HLFrequencyDetailRestore",
            "Image Add Alpha",
            "Image Frequency Analyzer",
            "Image Relay",
            "Image Remove Alpha",
            "Image Resize With Padding",
            "Init Layer Info Array",
            "Int Relay",
            "Layer Image Seleted",
            "Layer Images IPAdapter Advanced",
            "Layer Info Array Fuse",
            "Mask Relay",
            "String Relay"
        ],
        {
            "title_aux": "comfyui-common-util"
        }
    ],
    "https://github.com/longgui0318/comfyui-llm-assistant": [
        [
            "Chat With LLM",
            "Generate Stable Diffsution Prompt With LLM",
            "Translate Text With LLM"
        ],
        {
            "title_aux": "comfyui-llm-assistant"
        }
    ],
    "https://github.com/longgui0318/comfyui-magic-clothing": [
        [
            "Add Magic Clothing Attention",
            "Change Pipeline Dtype And Device",
            "Change Pixel Value Normalization",
            "Diffusers Model Makeup &MC",
            "Diffusers Scheduler Loader &MC",
            "Load Magic Clothing Adapter",
            "Load Magic Clothing Model",
            "Load Magic Clothing Pipeline",
            "Load Magic Clothing Pipeline With Path",
            "RUN Magic Clothing Diffusers Model"
        ],
        {
            "title_aux": "comfyui-magic-clothing"
        }
    ],
    "https://github.com/longgui0318/comfyui-mask-util": [
        [
            "Image Adaptive Crop M&R",
            "Image Adaptive Crop With Mask",
            "Image Change DType",
            "Image Change Device",
            "Image Resolution Adaptive With X",
            "Image Resolution Limit With 8K",
            "Load Image With Name",
            "Mask Change DType",
            "Mask Change Device",
            "Mask Selection Of Masks",
            "Model Change Device",
            "Model Change Device Repeaters",
            "Output Image To Input",
            "Split Masks"
        ],
        {
            "title_aux": "comfyui-mask-util"
        }
    ],
    "https://github.com/lordgasmic/comfyui_save_image_with_options": [
        [
            "SaveImageWithOptions"
        ],
        {
            "title_aux": "comfyui_save_image_with_options"
        }
    ],
    "https://github.com/lordgasmic/comfyui_wildcards": [
        [
            "CLIPTextEncodeWithWildcards"
        ],
        {
            "title_aux": "comfyui_wildcards"
        }
    ],
    "https://github.com/lquesada/ComfyUI-Inpaint-CropAndStitch": [
        [
            "InpaintCrop",
            "InpaintExtendOutpaint",
            "InpaintResize",
            "InpaintStitch"
        ],
        {
            "title_aux": "ComfyUI-Inpaint-CropAndStitch"
        }
    ],
    "https://github.com/lquesada/ComfyUI-Interactive": [
        [
            "InteractiveFloat",
            "InteractiveInteger",
            "InteractiveReset",
            "InteractiveSave",
            "InteractiveSeed",
            "InteractiveSelector",
            "InteractiveSelectorWithParameters",
            "InteractiveString",
            "InteractiveStringAppend",
            "InteractiveStringMultiline",
            "InteractiveSwitch",
            "InteractiveSwitchWithParameters"
        ],
        {
            "title_aux": "ComfyUI-Interactive"
        }
    ],
    "https://github.com/lquesada/ComfyUI-Prompt-Combinator": [
        [
            "PromptCombinator",
            "PromptCombinatorExportGallery",
            "PromptCombinatorMerger",
            "PromptCombinatorRandomPrompt"
        ],
        {
            "title_aux": "ComfyUI-Prompt-Combinator"
        }
    ],
    "https://github.com/lrzjason/Comfyui-In-Context-Lora-Utils": [
        [
            "AddMaskForICLora",
            "AutoPatch",
            "ConcatContextWindow",
            "CreateContextWindow"
        ],
        {
            "title_aux": "Comfyui-In-Context-Lora-Utils"
        }
    ],
    "https://github.com/lrzjason/Comfyui-Kolors-Utils": [
        [
            "SaveKolors",
            "SaveWeightAsKolorsUnet"
        ],
        {
            "title_aux": "Comfyui Kolors Utils"
        }
    ],
    "https://github.com/ltdrdata/ComfyUI-Impact-Pack": [
        [
            "AddMask",
            "AnyPipeToBasic",
            "BasicPipeToDetailerPipe",
            "BasicPipeToDetailerPipeSDXL",
            "BboxDetectorCombined",
            "BboxDetectorCombined_v2",
            "BboxDetectorForEach",
            "BboxDetectorSEGS",
            "BitwiseAndMask",
            "BitwiseAndMaskForEach",
            "CLIPSegDetectorProvider",
            "CfgScheduleHookProvider",
            "CombineRegionalPrompts",
            "CoreMLDetailerHookProvider",
            "CustomNoiseDetailerHookProvider",
            "DenoiseScheduleHookProvider",
            "DenoiseSchedulerDetailerHookProvider",
            "DetailerForEach",
            "DetailerForEachDebug",
            "DetailerForEachDebugPipe",
            "DetailerForEachPipe",
            "DetailerForEachPipeForAnimateDiff",
            "DetailerHookCombine",
            "DetailerPipeToBasicPipe",
            "EditBasicPipe",
            "EditDetailerPipe",
            "EditDetailerPipeSDXL",
            "EmptySegs",
            "FaceDetailer",
            "FaceDetailerPipe",
            "FromBasicPipe",
            "FromBasicPipe_v2",
            "FromDetailerPipe",
            "FromDetailerPipeSDXL",
            "FromDetailerPipe_v2",
            "GITSSchedulerFuncProvider",
            "ImageListToImageBatch",
            "ImageMaskSwitch",
            "ImageReceiver",
            "ImageSender",
            "ImpactAssembleSEGS",
            "ImpactBoolean",
            "ImpactCombineConditionings",
            "ImpactCompare",
            "ImpactConcatConditionings",
            "ImpactConditionalBranch",
            "ImpactConditionalBranchSelMode",
            "ImpactConditionalStopIteration",
            "ImpactControlBridge",
            "ImpactControlNetApplyAdvancedSEGS",
            "ImpactControlNetApplySEGS",
            "ImpactControlNetClearSEGS",
            "ImpactConvertDataType",
            "ImpactCount_Elts_in_SEGS",
            "ImpactDecomposeSEGS",
            "ImpactDilateMask",
            "ImpactDilateMaskInSEGS",
            "ImpactDilate_Mask_SEG_ELT",
            "ImpactDummyInput",
            "ImpactEdit_SEG_ELT",
            "ImpactExecutionOrderController",
            "ImpactFlattenMask",
            "ImpactFloat",
            "ImpactFrom_SEG_ELT",
            "ImpactFrom_SEG_ELT_bbox",
            "ImpactFrom_SEG_ELT_crop_region",
            "ImpactGaussianBlurMask",
            "ImpactGaussianBlurMaskInSEGS",
            "ImpactHFTransformersClassifierProvider",
            "ImpactIPAdapterApplySEGS",
            "ImpactIfNone",
            "ImpactImageBatchToImageList",
            "ImpactImageInfo",
            "ImpactInt",
            "ImpactInversedSwitch",
            "ImpactIsNotEmptySEGS",
            "ImpactKSamplerAdvancedBasicPipe",
            "ImpactKSamplerBasicPipe",
            "ImpactLatentInfo",
            "ImpactListBridge",
            "ImpactLogger",
            "ImpactLogicalOperators",
            "ImpactMakeAnyList",
            "ImpactMakeImageBatch",
            "ImpactMakeImageList",
            "ImpactMakeMaskBatch",
            "ImpactMakeMaskList",
            "ImpactMakeTileSEGS",
            "ImpactMinMax",
            "ImpactNeg",
            "ImpactNegativeConditioningPlaceholder",
            "ImpactNodeSetMuteState",
            "ImpactQueueTrigger",
            "ImpactQueueTriggerCountdown",
            "ImpactRemoteBoolean",
            "ImpactRemoteInt",
            "ImpactSEGSClassify",
            "ImpactSEGSConcat",
            "ImpactSEGSLabelAssign",
            "ImpactSEGSLabelFilter",
            "ImpactSEGSMerge",
            "ImpactSEGSOrderedFilter",
            "ImpactSEGSPicker",
            "ImpactSEGSRangeFilter",
            "ImpactSEGSToMaskBatch",
            "ImpactSEGSToMaskList",
            "ImpactScaleBy_BBOX_SEG_ELT",
            "ImpactSchedulerAdapter",
            "ImpactSegsAndMask",
            "ImpactSegsAndMaskForEach",
            "ImpactSetWidgetValue",
            "ImpactSimpleDetectorSEGS",
            "ImpactSimpleDetectorSEGSPipe",
            "ImpactSimpleDetectorSEGS_for_AD",
            "ImpactSleep",
            "ImpactStringSelector",
            "ImpactSwitch",
            "ImpactValueReceiver",
            "ImpactValueSender",
            "ImpactWildcardEncode",
            "ImpactWildcardProcessor",
            "IterativeImageUpscale",
            "IterativeLatentUpscale",
            "KSamplerAdvancedProvider",
            "KSamplerProvider",
            "LatentPixelScale",
            "LatentReceiver",
            "LatentSender",
            "LatentSwitch",
            "MMDetDetectorProvider",
            "MMDetLoader",
            "MaskDetailerPipe",
            "MaskListToMaskBatch",
            "MaskPainter",
            "MaskRectArea",
            "MaskRectAreaAdvanced",
            "MaskToSEGS",
            "MaskToSEGS_for_AnimateDiff",
            "MasksToMaskList",
            "MediaPipeFaceMeshToSEGS",
            "NoiseInjectionDetailerHookProvider",
            "NoiseInjectionHookProvider",
            "ONNXDetectorProvider",
            "ONNXDetectorSEGS",
            "PixelKSampleHookCombine",
            "PixelKSampleUpscalerProvider",
            "PixelKSampleUpscalerProviderPipe",
            "PixelTiledKSampleUpscalerProvider",
            "PixelTiledKSampleUpscalerProviderPipe",
            "PreviewBridge",
            "PreviewBridgeLatent",
            "PreviewDetailerHookProvider",
            "ReencodeLatent",
            "ReencodeLatentPipe",
            "RegionalPrompt",
            "RegionalSampler",
            "RegionalSamplerAdvanced",
            "RemoveImageFromSEGS",
            "RemoveNoiseMask",
            "SAMDetectorCombined",
            "SAMDetectorSegmented",
            "SAMLoader",
            "SEGSDetailer",
            "SEGSDetailerForAnimateDiff",
            "SEGSLabelFilterDetailerHookProvider",
            "SEGSOrderedFilterDetailerHookProvider",
            "SEGSPaste",
            "SEGSPreview",
            "SEGSPreviewCNet",
            "SEGSRangeFilterDetailerHookProvider",
            "SEGSSwitch",
            "SEGSToImageList",
            "SEGSUpscaler",
            "SEGSUpscalerPipe",
            "SegmDetectorCombined",
            "SegmDetectorCombined_v2",
            "SegmDetectorForEach",
            "SegmDetectorSEGS",
            "Segs  Mask",
            "Segs  Mask ForEach",
            "SegsMaskCombine",
            "SegsToCombinedMask",
            "SetDefaultImageForSEGS",
            "StepsScheduleHookProvider",
            "StringListToString",
            "SubtractMask",
            "SubtractMaskForEach",
            "TiledKSamplerProvider",
            "ToBasicPipe",
            "ToBinaryMask",
            "ToDetailerPipe",
            "ToDetailerPipeSDXL",
            "TwoAdvancedSamplersForMask",
            "TwoSamplersForMask",
            "TwoSamplersForMaskUpscalerProvider",
            "TwoSamplersForMaskUpscalerProviderPipe",
            "UnsamplerDetailerHookProvider",
            "UnsamplerHookProvider",
            "VariationNoiseDetailerHookProvider",
            "WildcardPromptFromString"
        ],
        {
            "author": "Dr.Lt.Data",
            "description": "This extension offers various detector nodes and detailer nodes that allow you to configure a workflow that automatically enhances facial details. And provide iterative upscaler.",
            "nickname": "Impact Pack",
            "preemptions": [
                "SAMLoader"
            ],
            "title": "Impact Pack",
            "title_aux": "ComfyUI Impact Pack"
        }
    ],
    "https://github.com/ltdrdata/ComfyUI-Impact-Subpack": [
        [
            "UltralyticsDetectorProvider"
        ],
        {
            "author": "Dr.Lt.Data",
            "description": "This extension provides UltralyticsDetectorProvider node",
            "nickname": "Impact Subpack",
            "title": "Impact Subpack",
            "title_aux": "ComfyUI Impact Subpack"
        }
    ],
    "https://github.com/ltdrdata/ComfyUI-Inspire-Pack": [
        [
            "AnimeLineArt_Preprocessor_Provider_for_SEGS //Inspire",
            "ApplyLBW //Inspire",
            "ApplyRegionalIPAdapters //Inspire",
            "BindImageListPromptList //Inspire",
            "CLIPTextEncodeWithWeight //Inspire",
            "CacheBackendData //Inspire",
            "CacheBackendDataList //Inspire",
            "CacheBackendDataNumberKey //Inspire",
            "CacheBackendDataNumberKeyList //Inspire",
            "CacheBridge //Inspire",
            "Canny_Preprocessor_Provider_for_SEGS //Inspire",
            "ChangeImageBatchSize //Inspire",
            "ChangeLatentBatchSize //Inspire",
            "CheckpointLoaderSimpleShared //Inspire",
            "ColorMapToMasks //Inspire",
            "ColorMaskToDepthMask //Inspire",
            "Color_Preprocessor_Provider_for_SEGS //Inspire",
            "CompositeNoise //Inspire",
            "ConcatConditioningsWithMultiplier //Inspire",
            "ConditioningStretch //Inspire",
            "ConditioningUpscale //Inspire",
            "DWPreprocessor_Provider_for_SEGS //Inspire",
            "FakeScribblePreprocessor_Provider_for_SEGS //Inspire",
            "FloatRange //Inspire",
            "ForeachListBegin //Inspire",
            "ForeachListEnd //Inspire",
            "FromIPAdapterPipe //Inspire",
            "GlobalSampler //Inspire",
            "GlobalSeed //Inspire",
            "HEDPreprocessor_Provider_for_SEGS //Inspire",
            "HyperTile //Inspire",
            "IPAdapterModelHelper //Inspire",
            "ImageBatchSplitter //Inspire",
            "InpaintPreprocessor_Provider_for_SEGS //Inspire",
            "IsCached //Inspire",
            "KSampler //Inspire",
            "KSamplerAdvanced //Inspire",
            "KSamplerAdvancedPipe //Inspire",
            "KSamplerAdvancedProgress //Inspire",
            "KSamplerPipe //Inspire",
            "KSamplerProgress //Inspire",
            "LatentBatchSplitter //Inspire",
            "LeRes_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
            "LineArt_Preprocessor_Provider_for_SEGS //Inspire",
            "ListCounter //Inspire",
            "LoadImage //Inspire",
            "LoadImageListFromDir //Inspire",
            "LoadImagesFromDir //Inspire",
            "LoadLBW //Inspire",
            "LoadPromptsFromDir //Inspire",
            "LoadPromptsFromFile //Inspire",
            "LoadSinglePromptFromFile //Inspire",
            "LoraBlockInfo //Inspire",
            "LoraLoaderBlockWeight //Inspire",
            "MakeBasicPipe //Inspire",
            "MakeLBW //Inspire",
            "Manga2Anime_LineArt_Preprocessor_Provider_for_SEGS //Inspire",
            "MediaPipeFaceMeshDetectorProvider //Inspire",
            "MediaPipe_FaceMesh_Preprocessor_Provider_for_SEGS //Inspire",
            "MeshGraphormerDepthMapPreprocessorProvider_for_SEGS //Inspire",
            "MiDaS_DepthMap_Preprocessor_Provider_for_SEGS //Inspire",
            "OpenPose_Preprocessor_Provider_for_SEGS //Inspire",
            "PromptBuilder //Inspire",
            "PromptExtractor //Inspire",
            "RGB_HexToHSV //Inspire",
            "RandomGeneratorForList //Inspire",
            "RandomNoise //Inspire",
            "RegionalCFG //Inspire",
            "RegionalConditioningColorMask //Inspire",
            "RegionalConditioningSimple //Inspire",
            "RegionalIPAdapterColorMask //Inspire",
            "RegionalIPAdapterEncodedColorMask //Inspire",
            "RegionalIPAdapterEncodedMask //Inspire",
            "RegionalIPAdapterMask //Inspire",
            "RegionalPromptColorMask //Inspire",
            "RegionalPromptSimple //Inspire",
            "RegionalSeedExplorerColorMask //Inspire",
            "RegionalSeedExplorerMask //Inspire",
            "RemoveBackendData //Inspire",
            "RemoveBackendDataNumberKey //Inspire",
            "RemoveControlNet //Inspire",
            "RemoveControlNetFromRegionalPrompts //Inspire",
            "RetrieveBackendData //Inspire",
            "RetrieveBackendDataNumberKey //Inspire",
            "SaveLBW //Inspire",
            "ScheduledCFGGuider //Inspire",
            "ScheduledPerpNegCFGGuider //Inspire",
            "SeedExplorer //Inspire",
            "SelectNthMask //Inspire",
            "ShowCachedInfo //Inspire",
            "StableCascade_CheckpointLoader //Inspire",
            "TilePreprocessor_Provider_for_SEGS //Inspire",
            "ToIPAdapterPipe //Inspire",
            "UnzipPrompt //Inspire",
            "WildcardEncode //Inspire",
            "WorklistToItemList //Inspire",
            "XY Input: Lora Block Weight //Inspire",
            "ZipPrompt //Inspire",
            "Zoe_DepthMap_Preprocessor_Provider_for_SEGS //Inspire"
        ],
        {
            "author": "Dr.Lt.Data",
            "description": "This extension provides various nodes to support Lora Block Weight, Regional Nodes, Backend Cache, Prompt Utils, List Utils and the Impact Pack.",
            "nickname": "Inspire Pack",
            "nodename_pattern": "Inspire$",
            "title": "Inspire Pack",
            "title_aux": "ComfyUI Inspire Pack"
        }
    ],
    "https://github.com/luandev/ComfyUI-CrewAI": [
        [
            "\ud83d\udcceCrewAI Agent",
            "\ud83d\udcceCrewAI Agent List",
            "\ud83d\udcceCrewAI Crew",
            "\ud83d\udcceCrewAI LLM Chat GPT",
            "\ud83d\udcceCrewAI LLM Hugging Face",
            "\ud83d\udcceCrewAI LLM OpenAI",
            "\ud83d\udcceCrewAI Task",
            "\ud83d\udcceCrewAI Task List"
        ],
        {
            "title_aux": "ComfyUI CrewAI"
        }
    ],
    "https://github.com/lucafoscili/comfyui-lf": [
        [
            "LF_Blend",
            "LF_BlurImages",
            "LF_Boolean",
            "LF_Brightness",
            "LF_CharacterImpersonator",
            "LF_CheckpointSelector",
            "LF_CivitAIMetadataSetup",
            "LF_Clarity",
            "LF_ColorAnalysis",
            "LF_CompareImages",
            "LF_Contrast",
            "LF_ControlPanel",
            "LF_Desaturation",
            "LF_DisplayBoolean",
            "LF_DisplayFloat",
            "LF_DisplayInteger",
            "LF_DisplayJSON",
            "LF_DisplayPrimitiveAsJSON",
            "LF_DisplayString",
            "LF_EmbeddingSelector",
            "LF_ExtractPromptFromLoraTag",
            "LF_ExtractString",
            "LF_FilmGrain",
            "LF_Float",
            "LF_GaussianBlur",
            "LF_GetRandomKeyFromJSON",
            "LF_GetValueFromJSON",
            "LF_ImageClassifier",
            "LF_ImageHistogram",
            "LF_ImageListFromJSON",
            "LF_ImagesEditingBreakpoint",
            "LF_ImagesSlideshow",
            "LF_Integer",
            "LF_IsLandscape",
            "LF_KeywordCounter",
            "LF_KeywordToggleFromJSON",
            "LF_LLMChat",
            "LF_LLMMessenger",
            "LF_LUTApplication",
            "LF_LUTGeneration",
            "LF_Line",
            "LF_LoadAndEditImages",
            "LF_LoadFileOnce",
            "LF_LoadImages",
            "LF_LoadLocalJSON",
            "LF_LoadLoraTags",
            "LF_LoadMetadata",
            "LF_LoraAndEmbeddingSelector",
            "LF_LoraSelector",
            "LF_MarkdownDocGenerator",
            "LF_MathOperation",
            "LF_MultipleImageResizeForWeb",
            "LF_Notify",
            "LF_ParsePromptWithLoraTags",
            "LF_RandomBoolean",
            "LF_RegexReplace",
            "LF_RegionExtractor",
            "LF_ResizeImageByEdge",
            "LF_ResizeImageToDimension",
            "LF_ResizeImageToSquare",
            "LF_ResolutionSwitcher",
            "LF_SamplerSelector",
            "LF_SaveImageForCivitAI",
            "LF_SaveJSON",
            "LF_SaveMarkdown",
            "LF_SchedulerSelector",
            "LF_Sepia",
            "LF_SequentialSeedsGenerator",
            "LF_SetValueInJSON",
            "LF_ShuffleJSONKeys",
            "LF_Something2Number",
            "LF_Something2String",
            "LF_SortJSONKeys",
            "LF_String",
            "LF_StringReplace",
            "LF_StringTemplate",
            "LF_StringToJSON",
            "LF_SwitchFloat",
            "LF_SwitchImage",
            "LF_SwitchInteger",
            "LF_SwitchJSON",
            "LF_SwitchString",
            "LF_UpdateUsageStatistics",
            "LF_UpscaleModelSelector",
            "LF_UrandomSeedGenerator",
            "LF_UsageStatistics",
            "LF_VAESelector",
            "LF_ViewImages",
            "LF_Vignette",
            "LF_WallOfText",
            "LF_WriteJSON"
        ],
        {
            "title_aux": "LF Nodes"
        }
    ],
    "https://github.com/lujiazho/ComfyUI-CatvtonFluxWrapper": [
        [
            "CatvtonFluxSampler",
            "LoadCatvtonFlux",
            "LoadCatvtonFluxLoRA",
            "ModelPrinter"
        ],
        {
            "title_aux": "ComfyUI-CatvtonFluxWrapper"
        }
    ],
    "https://github.com/lumalabs/ComfyUI-LumaAI-API": [
        [
            "CharacterReference",
            "ConcatReferences",
            "ImgBBUpload",
            "LumaAIClient",
            "LumaExtendGeneration",
            "LumaImage2Video",
            "LumaImageGeneration",
            "LumaInterpolateGenerations",
            "LumaModifyImage",
            "LumaPreviewVideo",
            "LumaText2Video",
            "Reference"
        ],
        {
            "title_aux": "ComfyUI-LumaAI-API"
        }
    ],
    "https://github.com/m-sokes/ComfyUI-Sokes-Nodes": [
        [
            "Custom Date Format | sokes \ud83e\uddac",
            "Latent Switch x9 | sokes \ud83e\uddac"
        ],
        {
            "title_aux": "ComfyUI Sokes Nodes"
        }
    ],
    "https://github.com/maepopi/Diffusers-in-ComfyUI": [
        [
            "BLoRALoader",
            "GenerateImg2Image",
            "GenerateInpaintImage",
            "GenerateTxt2Image",
            "Img2ImgStableDiffusionPipeline",
            "InpaintingStableDiffusionPipeline",
            "LoRALoader",
            "MakeCanny",
            "Text2ImgStableDiffusionPipeline"
        ],
        {
            "title_aux": "Diffusers-in-ComfyUI"
        }
    ],
    "https://github.com/magic-quill/ComfyUI_MagicQuill": [
        [
            "MagicQuill"
        ],
        {
            "author": "Zichen LIU (https://zliucz.github.io/) and Yue YU (https://bruceyyu.github.io/)",
            "description": "Official ComfyUI Implementations for Paper - MagicQuill: An Intelligent Interactive Image Editing System",
            "nickname": "MagicQuill nodes",
            "title": "MagicQuill",
            "title_aux": "ComfyUI_MagicQuill"
        }
    ],
    "https://github.com/mape/ComfyUI-mape-Helpers": [
        [
            "mape Variable"
        ],
        {
            "author": "mape",
            "description": "Various QoL improvements like prompt tweaking, variable assignment, image preview, fuzzy search, error reporting, organizing and node navigation.",
            "nickname": "\ud83d\udfe1 mape's helpers",
            "title": "mape's helpers",
            "title_aux": "mape's helpers"
        }
    ],
    "https://github.com/maracman/ComfyUI-SubjectStyle-CSV": [
        [
            "CSVPromptProcessor"
        ],
        {
            "title_aux": "ComfyUI-SubjectStyle-CSV"
        }
    ],
    "https://github.com/marcoc2/ComfyUI-AnotherUtils": [
        [
            "CustomCrop",
            "LoadImagesOriginal",
            "NearestUpscale",
            "PixelArtNormalizer",
            "SmartResize"
        ],
        {
            "title_aux": "Image Processing Suite for ComfyUI"
        }
    ],
    "https://github.com/marduk191/ComfyUI-Fluxpromptenhancer": [
        [
            "FluxPromptEnhance"
        ],
        {
            "title_aux": "Flux Prompt Enhance Node for ComfyUI"
        }
    ],
    "https://github.com/marduk191/comfyui-marnodes": [
        [
            "ImageToDevice",
            "marduk191_5_text_string",
            "marduk191_5way_text_switch",
            "marduk191_s_random_latent",
            "marduk191_workflow_settings"
        ],
        {
            "author": "\u02f6marduk191",
            "description": "marduk191s nodes.",
            "nickname": "marduk191 workflow settings",
            "title": "marduk191 workflow settings",
            "title_aux": "marduk191 workflow settings"
        }
    ],
    "https://github.com/marhensa/sdxl-recommended-res-calc": [
        [
            "RecommendedResCalc"
        ],
        {
            "title_aux": "Recommended Resolution Calculator"
        }
    ],
    "https://github.com/markuryy/ComfyUI-Flux-Prompt-Saver": [
        [
            "FluxPromptSaver",
            "FluxTextSampler",
            "ModelName"
        ],
        {
            "title_aux": "ComfyUI Flux Prompt Saver"
        }
    ],
    "https://github.com/martijnat/comfyui-previewlatent": [
        [
            "PreviewLatent",
            "PreviewLatentAdvanced",
            "PreviewLatentXL"
        ],
        {
            "title_aux": "comfyui-previewlatent"
        }
    ],
    "https://github.com/massao000/ComfyUI_aspect_ratios": [
        [
            "Aspect Ratios Node"
        ],
        {
            "title_aux": "ComfyUI_aspect_ratios"
        }
    ],
    "https://github.com/matan1905/ComfyUI-Serving-Toolkit": [
        [
            "AlwaysExecute",
            "CommandPickerServing",
            "DiscordServing",
            "ServingInputImage",
            "ServingInputImageAsLatent",
            "ServingInputNumber",
            "ServingInputText",
            "ServingInputTextImage",
            "ServingMultiImageOutput",
            "ServingOutput",
            "ServingTextOutput",
            "TelegramServing",
            "WebSocketServing"
        ],
        {
            "title_aux": "ComfyUI Serving toolkit"
        }
    ],
    "https://github.com/mattjohnpowell/comfyui-lmstudio-image-to-text-node": [
        [
            "LM Studio Image To Text",
            "LM Studio Text Generation"
        ],
        {
            "author": "Matt John Powell",
            "description": "This extension provides two custom nodes for ComfyUI that integrate LM Studio's capabilities:",
            "nickname": "LM Studio Nodes",
            "title": "LM Studio Nodes for ComfyUI",
            "title_aux": "LM Studio Image to Text Node for ComfyUI"
        }
    ],
    "https://github.com/mav-rik/facerestore_cf": [
        [
            "CropFace",
            "FaceRestoreCFWithModel",
            "FaceRestoreModelLoader"
        ],
        {
            "title_aux": "Facerestore CF (Code Former)"
        }
    ],
    "https://github.com/mbrostami/ComfyUI-HF": [
        [
            "GPT2Node"
        ],
        {
            "title_aux": "ComfyUI-HF"
        }
    ],
    "https://github.com/mbrostami/ComfyUI-TITrain": [
        [
            "TextualInversionTraining",
            "TextualInversionTrainingSDXL"
        ],
        {
            "title_aux": "ComfyUI-TITrain"
        }
    ],
    "https://github.com/mcmonkeyprojects/sd-dynamic-thresholding": [
        [
            "DynamicThresholdingFull",
            "DynamicThresholdingSimple"
        ],
        {
            "title_aux": "Dynamic Thresholding"
        }
    ],
    "https://github.com/meap158/ComfyUI-Background-Replacement": [
        [
            "BackgroundReplacement",
            "ImageComposite"
        ],
        {
            "title_aux": "ComfyUI-Background-Replacement"
        }
    ],
    "https://github.com/meap158/ComfyUI-GPU-temperature-protection": [
        [
            "GPUTemperatureProtection"
        ],
        {
            "title_aux": "GPU temperature protection"
        }
    ],
    "https://github.com/meap158/ComfyUI-Prompt-Expansion": [
        [
            "PromptExpansion"
        ],
        {
            "title_aux": "ComfyUI-Prompt-Expansion"
        }
    ],
    "https://github.com/mech-tools/comfyui-checkpoint-automatic-config": [
        [
            "CheckpointAutomaticConfig",
            "ConfigPipe"
        ],
        {
            "title_aux": "ComfyUI Checkpoint Automatic Config"
        }
    ],
    "https://github.com/melMass/comfy_mtb": [
        [
            "Animation Builder (mtb)",
            "Any To String (mtb)",
            "Batch Float (mtb)",
            "Batch Float Assemble (mtb)",
            "Batch Float Fill (mtb)",
            "Batch Make (mtb)",
            "Batch Merge (mtb)",
            "Batch Shake (mtb)",
            "Batch Shape (mtb)",
            "Batch Transform (mtb)",
            "Bbox (mtb)",
            "Bbox From Mask (mtb)",
            "Blur (mtb)",
            "Color Correct (mtb)",
            "Colored Image (mtb)",
            "Concat Images (mtb)",
            "Crop (mtb)",
            "Debug (mtb)",
            "Deep Bump (mtb)",
            "Export With Ffmpeg (mtb)",
            "Face Swap (mtb)",
            "Film Interpolation (mtb)",
            "Fit Number (mtb)",
            "Float To Number (mtb)",
            "Get Batch From History (mtb)",
            "Image Compare (mtb)",
            "Image Premultiply (mtb)",
            "Image Remove Background Rembg (mtb)",
            "Image Resize Factor (mtb)",
            "Image Tile Offset (mtb)",
            "Int To Bool (mtb)",
            "Int To Number (mtb)",
            "Interpolate Clip Sequential (mtb)",
            "Latent Lerp (mtb)",
            "Load Face Analysis Model (mtb)",
            "Load Face Enhance Model (mtb)",
            "Load Face Swap Model (mtb)",
            "Load Film Model (mtb)",
            "Load Image From Url (mtb)",
            "Load Image Sequence (mtb)",
            "Mask To Image (mtb)",
            "Math Expression (mtb)",
            "Model Patch Seamless (mtb)",
            "Pick From Batch (mtb)",
            "Qr Code (mtb)",
            "Restore Face (mtb)",
            "Save Gif (mtb)",
            "Save Image Grid (mtb)",
            "Save Image Sequence (mtb)",
            "Save Tensors (mtb)",
            "Sharpen (mtb)",
            "Smart Step (mtb)",
            "Stack Images (mtb)",
            "String Replace (mtb)",
            "Styles Loader (mtb)",
            "Text To Image (mtb)",
            "Transform Image (mtb)",
            "Uncrop (mtb)",
            "Unsplash Image (mtb)",
            "Vae Decode (mtb)"
        ],
        {
            "nodename_pattern": "\\(mtb\\)$",
            "title_aux": "MTB Nodes"
        }
    ],
    "https://github.com/mephisto83/petty-paint-comfyui-node": [
        [
            "ConvertWhiteToAlpha",
            "PPGenerateRandomFloat",
            "PPGenerateRandomNumber",
            "PPKSamplerAdvanced",
            "PPSelectRandomValue",
            "PettyImageImageColorToMask",
            "PettyPaintAppend",
            "PettyPaintApplyLoRAStack",
            "PettyPaintArguments",
            "PettyPaintBlurs",
            "PettyPaintCheckpointLoaderSimple",
            "PettyPaintComponent",
            "PettyPaintConditioningSetMaskAndCombine",
            "PettyPaintControlNetToMasking",
            "PettyPaintConvert",
            "PettyPaintCountFiles",
            "PettyPaintEnsureDirectory",
            "PettyPaintExec",
            "PettyPaintFakeConvert",
            "PettyPaintFileExists",
            "PettyPaintImageColorsToMasks",
            "PettyPaintImageCompositeMasked",
            "PettyPaintImageDims",
            "PettyPaintImageMaskCropper",
            "PettyPaintImagePlacement",
            "PettyPaintImageSave",
            "PettyPaintImageStore",
            "PettyPaintImageToMask",
            "PettyPaintImagesToMasks",
            "PettyPaintJsonMap",
            "PettyPaintJsonRead",
            "PettyPaintJsonReadArray",
            "PettyPaintKSampler",
            "PettyPaintKSamplerAdvanced",
            "PettyPaintLoRAStack",
            "PettyPaintLoadImage",
            "PettyPaintLoadImageMasks",
            "PettyPaintLoadImages",
            "PettyPaintMap",
            "PettyPaintMasksToImages",
            "PettyPaintNot",
            "PettyPaintPassThroughNode",
            "PettyPaintProcessor",
            "PettyPaintRemoveAddText",
            "PettyPaintSDTurboScheduler",
            "PettyPaintStoryImage",
            "PettyPaintText",
            "PettyPaintTexts_to_Conditioning",
            "PettyPaintToJson",
            "PettyPaintVAEDecode",
            "SkippableVAEEncode"
        ],
        {
            "title_aux": "petty-paint-comfyui-node"
        }
    ],
    "https://github.com/meshmesh-io/ComfyUI-MeshMesh": [
        [
            "ColorPicker",
            "MasksToColoredMasks"
        ],
        {
            "title_aux": "ComfyUI-MeshMesh"
        }
    ],
    "https://github.com/meshmesh-io/mm-comfyui-loopback": [
        [
            "Loop",
            "LoopEnd",
            "LoopEnd_SEGIMAGE",
            "LoopStart",
            "LoopStart_SEGIMAGE"
        ],
        {
            "title_aux": "mm-comfyui-loopback"
        }
    ],
    "https://github.com/meshmesh-io/mm-comfyui-megamask": [
        [
            "ColorListMaskToImage",
            "FlattenAndCombineMaskImages"
        ],
        {
            "title_aux": "mm-comfyui-megamask"
        }
    ],
    "https://github.com/metal3d/ComfyUI_Human_Parts": [
        [
            "HumanParts"
        ],
        {
            "title_aux": "Human Parts Detector"
        }
    ],
    "https://github.com/metncelik/comfyui_met_suite": [
        [
            "BBOXPadding",
            "BBOXResize",
            "ImageResizeKeepRatio",
            "PrimitiveBBOX",
            "RaiseError"
        ],
        {
            "title_aux": "comfyui_met_suite"
        }
    ],
    "https://github.com/mfg637/ComfyUI-ScheduledGuider-Ext": [
        [
            "Add zSNR Sigma max",
            "ConcatSigmas",
            "CosineScheduler",
            "GaussianScheduler",
            "InvertSigmas",
            "LogNormal Scheduler",
            "OffsetSigmas",
            "PerpNegScheduledCFGGuider",
            "ScheduledCFGGuider"
        ],
        {
            "title_aux": "ComfyUI-ScheduledGuider-Ext"
        }
    ],
    "https://github.com/mgfxer/ComfyUI-FrameFX": [
        [
            "DynamicAnimatedWeightsHelper",
            "EdgeFXSourceImages",
            "FlorencePromptTravelHelper",
            "LivePromptInterpolation",
            "MaskSequenceHelper",
            "PromptStackManager",
            "PromptTravelHelper"
        ],
        {
            "author": "mgfxer",
            "description": "This extension provides various frame and mask sequence manipulation tools for animation workflows.",
            "nickname": "FrameFX \ud83d\udcab",
            "title": "FrameFX",
            "title_aux": "ComfyUI-FrameFX"
        }
    ],
    "https://github.com/miaoshouai/ComfyUI-Miaoshouai-Tagger": [
        [
            "Miaoshouai_Caption_Analyzer",
            "Miaoshouai_Flux_CLIPTextEncode",
            "Miaoshouai_SaveTags",
            "Miaoshouai_Tagger"
        ],
        {
            "title_aux": "ComfyUI-Miaoshouai-Tagger"
        }
    ],
    "https://github.com/microbote/ComfyUI-StyledCLIPTextEncode": [
        [
            "StyledCLIPTextEncode"
        ],
        {
            "title_aux": "StyledCLIPTextEncode"
        }
    ],
    "https://github.com/mihaiiancu/ComfyUI_Inpaint": [
        [
            "InpaintMediapipe"
        ],
        {
            "title_aux": "mihaiiancu/Inpaint"
        }
    ],
    "https://github.com/mikebilly/Transparent-background-comfyUI": [
        [
            "Transparentbackground RemBg"
        ],
        {
            "title_aux": "Transparent-background-comfyUI"
        }
    ],
    "https://github.com/mikkel/ComfyUI-text-overlay": [
        [
            "Image Text Overlay"
        ],
        {
            "title_aux": "ComfyUI - Text Overlay Plugin"
        }
    ],
    "https://github.com/mikkel/comfyui-mask-boundingbox": [
        [
            "Mask Bounding Box"
        ],
        {
            "title_aux": "ComfyUI - Mask Bounding Box"
        }
    ],
    "https://github.com/mingsky-ai/ComfyUI-MingNodes": [
        [
            "AddWaterMarkNode",
            "AdjustBrightnessContrastSaturationNode",
            "BaiduTranslateNode",
            "ColorBalanceNode",
            "ConvertGrayChannelNode",
            "HSLColorNode",
            "HighlightShadowBrightnessNode",
            "ImitationHueNode",
            "LightShapeNode",
            "RemoveWatermarkNode"
        ],
        {
            "title_aux": "ComfyUI-MingNodes"
        }
    ],
    "https://github.com/mira-6/comfyui-sasolver": [
        [
            "SamplerSASolver",
            "SamplerSASolverExperimental"
        ],
        {
            "title_aux": "comfyui-sasolver"
        }
    ],
    "https://github.com/mirabarukaso/ComfyUI_Mira": [
        [
            "BooleanListInterpreter1",
            "BooleanListInterpreter4",
            "BooleanListInterpreter8",
            "CanvasCreatorAdvanced",
            "CanvasCreatorBasic",
            "CanvasCreatorSimple",
            "CreateMaskWithCanvas",
            "CreateNestedPNGMask",
            "CreateSimpleMask",
            "CreateTillingPNGMask",
            "CreateWatermarkRemovalMask",
            "EightBooleanTrigger",
            "EightFloats",
            "EvenOrOdd",
            "EvenOrOddList",
            "FloatListInterpreter1",
            "FloatListInterpreter4",
            "FloatListInterpreter8",
            "FloatMultiplication",
            "FourBooleanTrigger",
            "FourFloats",
            "FunctionSelectAuto",
            "FunctionSwap",
            "ImageBrightness",
            "ImageColorTransferMira",
            "ImageContrast",
            "ImageGamma",
            "ImageGrayscale",
            "ImageHUE",
            "ImageRGBChannel",
            "ImageSaturation",
            "ImageSharpness",
            "ImageToneCurve",
            "IntMultiplication",
            "IntSubtraction",
            "IntToFloatMultiplication",
            "LoRALoaderWithNameStacker",
            "LogicNot",
            "NoneToZero",
            "NumeralToString",
            "OneFloat",
            "PngColorMasksToMaskList",
            "PngColorMasksToRGB",
            "PngColorMasksToString",
            "PngColorMasksToStringList",
            "PngRectanglesToMask",
            "PngRectanglesToMaskList",
            "RandomNestedLayouts",
            "RandomTillingLayouts",
            "SN74HC1G86",
            "SN74HC86",
            "SN74LVC1G125",
            "SeedGeneratorMira",
            "SingleBooleanTrigger",
            "SixBooleanTrigger",
            "StepsAndCfg",
            "TextBox",
            "TextCombinerSix",
            "TextCombinerTwo",
            "TextLoopCombiner",
            "TextSwitcherThreeWays",
            "TextSwitcherTwoWays",
            "TextWildcardSeprator",
            "TextWithBooleanSwitchAndCommonTextInput",
            "TwoBooleanTrigger",
            "TwoFloats",
            "UpscaleImageByModelThenResize"
        ],
        {
            "title_aux": "ComfyUI_Mira"
        }
    ],
    "https://github.com/misterjoessef/MLTask_ComfyUI": [
        [
            "FacebookPosterData",
            "InstagramPosterData",
            "LinkedinPosterData",
            "MLTaskUtilsTextImageGenerator",
            "PinterestPosterData",
            "SocialManMediaToPoster",
            "SocialManPostData",
            "SocialManPoster",
            "TiktokPosterData",
            "TwitterPosterData",
            "YoutubePosterData"
        ],
        {
            "title_aux": "MLTask_ComfyUI"
        }
    ],
    "https://github.com/mithamunda/ComfyUI-SD3.5-Latent-Size-Picker": [
        [
            "SD3_5EmptyLatent"
        ],
        {
            "title_aux": "SD3.5 Empty Latent Size Picker"
        }
    ],
    "https://github.com/mithamunda/ComfyUI-TogetherVision": [
        [
            "Together Image \ud83c\udfa8",
            "Together Vision \ud83d\udd0d",
            "TogetherVisionNode"
        ],
        {
            "title_aux": "Together Vision Node"
        }
    ],
    "https://github.com/mithamunda/ComfyUI-ollama_killer": [
        [
            "OllamaKiller"
        ],
        {
            "title_aux": "OllamaKiller Node for ComfyUI"
        }
    ],
    "https://github.com/mittimi/ComfyUI_mittimiLoadPreset2": [
        [
            "CombineParamDataMittimi",
            "LoadSetParamMittimi",
            "SaveImageParamMittimi",
            "SaveParamToPresetMittimi"
        ],
        {
            "author": "mittimi",
            "description": "This node can easily switch between models and prompts by saving presets.",
            "nickname": "mittimiLoadPreset2",
            "title": "mittimiLoadPreset2",
            "title_aux": "ComfyUI_mittimiLoadPreset2"
        }
    ],
    "https://github.com/mittimi/ComfyUI_mittimiRecalculateSize": [
        [
            "RecalculateSizeMittimi01"
        ],
        {
            "author": "mittimi",
            "description": "Switch between vertical and horizontal values with a single button.",
            "nickname": "mittimiWidthHeight",
            "title": "mittimiWidthHeight",
            "title_aux": "ComfyUI_mittimiRecalculateSize"
        }
    ],
    "https://github.com/mittimi/ComfyUI_mittimiWidthHeight": [
        [
            "WidthHeightMittimi01"
        ],
        {
            "author": "mittimi",
            "description": "Switch between vertical and horizontal values with a single button.",
            "nickname": "mittimiWidthHeight",
            "title": "mittimiWidthHeight",
            "title_aux": "ComfyUI_mittimiWidthHeight"
        }
    ],
    "https://github.com/modelscope/comfyscope": [
        [
            "DashScopeFLUXAPI"
        ],
        {
            "title_aux": "Dashscope FLUX API for ComfyUI"
        }
    ],
    "https://github.com/modusCell/ComfyUI-dimension-node-modusCell": [
        [
            "DimensionProviderFree modusCell",
            "DimensionProviderRatio modusCell",
            "String Concat modusCell"
        ],
        {
            "title_aux": "Preset Dimensions"
        }
    ],
    "https://github.com/morino-kumasan/comfyui-toml-prompt": [
        [
            "IntSelector",
            "LatentSelector",
            "MultipartCLIPTextEncode",
            "MultipleLoraTagLoader",
            "PromptLoader",
            "StringConcat",
            "StringSelector",
            "StringSub",
            "StringViewer",
            "SummaryReader",
            "TomlPromptDecode"
        ],
        {
            "title_aux": "comfyui-toml-prompt"
        }
    ],
    "https://github.com/moustafa-nasr/ComfyUI-SimpleLogger": [
        [
            "Log Image"
        ],
        {
            "title_aux": "ComfyUI-SimpleLogger"
        }
    ],
    "https://github.com/moyi7712/ComfyUI_Seamless_Patten": [
        [
            "SeamlessApply",
            "SeamlessKSampler",
            "SeamlessKSamplerAdvanced",
            "SeamlessVae"
        ],
        {
            "title_aux": "ComfyUI_Seamless_Patten"
        }
    ],
    "https://github.com/mrchipset/ComfyUI-SaveImageS3": [
        [
            "SaveImageS3"
        ],
        {
            "author": "Mr.Chip",
            "description": "This extension offers a custom node to save image to S3-compatible oss.",
            "nickname": "SaveImageS3",
            "title": "SaveImageS3",
            "title_aux": "ComfyUI-SaveImageS3"
        }
    ],
    "https://github.com/mrhan1993/ComfyUI-Fooocus": [
        [
            "AlignYourStepsScheduler",
            "BasicScheduler",
            "CLIPLoader",
            "CLIPMergeSimple",
            "CLIPSave",
            "CLIPSetLastLayer",
            "CLIPTextEncode",
            "CLIPTextEncodeSDXL",
            "CLIPTextEncodeSDXLRefiner",
            "CLIPVisionEncode",
            "CLIPVisionLoader",
            "Canny",
            "CheckpointLoader",
            "CheckpointLoaderSimple",
            "CheckpointSave",
            "ClearVram",
            "ConditioningAverage",
            "ConditioningCombine",
            "ConditioningConcat",
            "ConditioningSetArea",
            "ConditioningSetAreaPercentage",
            "ConditioningSetMask",
            "ConditioningSetTimestepRange",
            "ConditioningZeroOut",
            "ControlNetApply",
            "ControlNetApplyAdvanced",
            "ControlNetLoader",
            "CropMask",
            "DiffControlNetLoader",
            "DiffusersLoader",
            "DualCLIPLoader",
            "EmptyImage",
            "EmptyLatentImage",
            "EnhanceControl",
            "EnhanceControls",
            "ExponentialScheduler",
            "FeatherMask",
            "FlipSigmas",
            "FooocusSampler",
            "FooocusSettings",
            "FreeU",
            "FreeU_V2",
            "GLIGENLoader",
            "GLIGENTextBoxApply",
            "GrowMask",
            "HyperTile",
            "HypernetworkLoader",
            "ImageBatch",
            "ImageBlend",
            "ImageBlur",
            "ImageColorToMask",
            "ImageCompositeMasked",
            "ImageCrop",
            "ImageInvert",
            "ImageOnlyCheckpointLoader",
            "ImageOnlyCheckpointSave",
            "ImagePadForOutpaint",
            "ImagePrompts",
            "ImageQuantize",
            "ImageScale",
            "ImageScaleBy",
            "ImageScaleToTotalPixels",
            "ImageSharpen",
            "ImageToMask",
            "ImageUpscaleWithModel",
            "InpaintModelConditioning",
            "InpaintOutpaint",
            "InvertMask",
            "JoinImageWithAlpha",
            "KSampler",
            "KSamplerAdvanced",
            "KSamplerSelect",
            "KarrasScheduler",
            "LatentAdd",
            "LatentBatch",
            "LatentBatchSeedBehavior",
            "LatentBlend",
            "LatentComposite",
            "LatentCompositeMasked",
            "LatentCrop",
            "LatentFlip",
            "LatentFromBatch",
            "LatentInterpolate",
            "LatentMultiply",
            "LatentRotate",
            "LatentSubtract",
            "LatentUpscale",
            "LatentUpscaleBy",
            "LoadImage",
            "LoadImageMask",
            "LoadLatent",
            "LoraLoader",
            "LoraLoaderModelOnly",
            "LoraStacks",
            "MaskComposite",
            "MaskToImage",
            "ModelMergeAdd",
            "ModelMergeBlocks",
            "ModelMergeSimple",
            "ModelMergeSubtract",
            "ModelSamplingContinuousEDM",
            "ModelSamplingDiscrete",
            "PatchModelAddDownscale",
            "PerpNeg",
            "PhotoMakerEncode",
            "PhotoMakerLoader",
            "PolyexponentialScheduler",
            "PorterDuffImageComposite",
            "PreviewImage",
            "RebatchImages",
            "RebatchLatents",
            "RepeatImageBatch",
            "RepeatLatentBatch",
            "RescaleCFG",
            "SDTurboScheduler",
            "SD_4XUpscale_Conditioning",
            "SVD_img2vid_Conditioning",
            "SamplerCustom",
            "SamplerDPMPP_2M_SDE",
            "SamplerDPMPP_SDE",
            "SamplerTCD",
            "SaveAnimatedPNG",
            "SaveAnimatedWEBP",
            "SaveImage",
            "SaveLatent",
            "SelfAttentionGuidance",
            "SetLatentNoiseMask",
            "SolidMask",
            "SplitImageWithAlpha",
            "SplitSigmas",
            "StableZero123_Conditioning",
            "StableZero123_Conditioning_Batched",
            "StyleModelApply",
            "StyleModelLoader",
            "TomePatchModel",
            "UNETLoader",
            "UpscaleModelLoader",
            "UpscaleVary",
            "VAEDecode",
            "VAEDecodeTiled",
            "VAEEncode",
            "VAEEncodeForInpaint",
            "VAEEncodeTiled",
            "VAELoader",
            "VAESave",
            "VPScheduler",
            "VideoLinearCFGGuidance",
            "unCLIPCheckpointLoader",
            "unCLIPConditioning"
        ],
        {
            "author": "Konie",
            "title_aux": "ComfyUI-Fooocus"
        }
    ],
    "https://github.com/muhammederem/blip-comfyui": [
        [
            "Blip Processor Node",
            "List to Text Node"
        ],
        {
            "title_aux": "BLIP Vision-Language Model Integration"
        }
    ],
    "https://github.com/mullakhmetov/comfyui_dynamic_util_nodes": [
        [
            "ConcatStrings",
            "FormatString",
            "GetFiles",
            "LoadImageByPath",
            "StringOutput"
        ],
        {
            "title_aux": "comfyui_dynamic_util_nodes"
        }
    ],
    "https://github.com/muxueChen/ComfyUI_NTCosyVoice": [
        [
            "NTCosyVoiceCrossLingualSampler",
            "NTCosyVoiceInstruct2Sampler",
            "NTCosyVoiceZeroShotSampler"
        ],
        {
            "title_aux": "CosyVoice2 for ComfyUI"
        }
    ],
    "https://github.com/muzi12888/ComfyUI-PoseKeypoint-Mask": [
        [
            "Image Brightness",
            "Openpose Keypoint Mask"
        ],
        {
            "title_aux": "PoseKeypoint Mask"
        }
    ],
    "https://github.com/my-opencode/ComfyUI_IndustrialMagick": [
        [
            "IndustrialMagick",
            "IndustrialMagickImageIngest"
        ],
        {
            "title_aux": "ComfyUI_IndustrialMagick"
        }
    ],
    "https://github.com/my-opencode/ComfyUI_KSamplerTimer": [
        [
            "KSamplerTimer"
        ],
        {
            "author": "Ludovic Anterieur",
            "description": "This extension provides a wrapper of the native KSampler which outputs generation time.",
            "nickname": "\u23f1",
            "title": "KSampler (timer)",
            "title_aux": "ComfyUI_KSamplerTimer"
        }
    ],
    "https://github.com/myshell-ai/ComfyUI-ShellAgent-Plugin": [
        [
            "ShellAgentPluginInputAudio",
            "ShellAgentPluginInputBoolean",
            "ShellAgentPluginInputFloat",
            "ShellAgentPluginInputImage",
            "ShellAgentPluginInputInteger",
            "ShellAgentPluginInputText",
            "ShellAgentPluginInputVideo",
            "ShellAgentPluginOutputBoolean",
            "ShellAgentPluginOutputFloat",
            "ShellAgentPluginOutputInteger",
            "ShellAgentPluginOutputText",
            "ShellAgentPluginSaveAudio",
            "ShellAgentPluginSaveAudios",
            "ShellAgentPluginSaveImage",
            "ShellAgentPluginSaveImages",
            "ShellAgentPluginSaveVideoVHS"
        ],
        {
            "author": "MyShell",
            "description": "",
            "title": "comfyui-shellagent-plugin",
            "title_aux": "ComfyUI-ShellAgent-Plugin"
        }
    ],
    "https://github.com/nagolinc/ComfyUI_FastVAEDecorder_SDXL": [
        [
            "FastLatentToImage"
        ],
        {
            "title_aux": "ComfyUI_FastVAEDecorder_SDXL"
        }
    ],
    "https://github.com/nagolinc/comfyui_openai_node": [
        [
            "OpenAINode"
        ],
        {
            "title_aux": "comfyui_openai_node"
        }
    ],
    "https://github.com/natto-maki/ComfyUI-NegiTools": [
        [
            "NegiTools_CompositeImages",
            "NegiTools_DepthEstimationByMarigold",
            "NegiTools_DetectFaceRotationForInpainting",
            "NegiTools_ImageProperties",
            "NegiTools_LatentProperties",
            "NegiTools_NoiseImageGenerator",
            "NegiTools_OpenAiDalle3",
            "NegiTools_OpenAiGpt",
            "NegiTools_OpenAiGpt4v",
            "NegiTools_OpenAiTranslate",
            "NegiTools_OpenPoseToPointList",
            "NegiTools_PointListToMask",
            "NegiTools_RandomImageLoader",
            "NegiTools_SaveImageToDirectory",
            "NegiTools_SeedGenerator",
            "NegiTools_StereoImageGenerator",
            "NegiTools_StringFunction"
        ],
        {
            "title_aux": "ComfyUI-NegiTools"
        }
    ],
    "https://github.com/nchenevey1/comfyui-gimp-nodes": [
        [
            "NC_LoadImageGIMP",
            "NC_LoadMaskGIMP",
            "NC_SendImageDimsWebSocketGIMP",
            "NC_SendImageWebSocketGIMP"
        ],
        {
            "title_aux": "comfyui-gimp-nodes"
        }
    ],
    "https://github.com/neph1/comfyui-smooth-step-lora-loader": [
        [
            "Smooth_Step_Lora_Loader"
        ],
        {
            "title_aux": "comfyui-smooth-step-lora-loader"
        }
    ],
    "https://github.com/neverbiasu/ComfyUI-Dashscope": [
        [
            "DashscopeLLMLoader",
            "DashscopeModelCaller",
            "DashscopeVLMLoader"
        ],
        {
            "title_aux": "ComfyUI-Dashscope"
        }
    ],
    "https://github.com/neverbiasu/ComfyUI-Image-Captioner": [
        [
            "ImageCaptioner"
        ],
        {
            "title_aux": "ComfyUI-Image-Captioner"
        }
    ],
    "https://github.com/neverbiasu/ComfyUI-SAM2": [
        [
            "GroundingDinoModelLoader (segment anything2)",
            "GroundingDinoSAM2Segment (segment anything2)",
            "InvertMask (segment anything)",
            "IsMaskEmpty",
            "SAM2ModelLoader (segment anything2)"
        ],
        {
            "title_aux": "ComfyUI SAM2(Segment Anything 2)"
        }
    ],
    "https://github.com/neverbiasu/ComfyUI-StyleShot": [
        [
            "StyleShotApply"
        ],
        {
            "title_aux": "ComfyUI-StyleShot"
        }
    ],
    "https://github.com/nicehero/comfyui-SegGPT": [
        [
            "SegGPT"
        ],
        {
            "title_aux": "comfyui-SegGPT"
        }
    ],
    "https://github.com/nickve28/ComfyUI-Nich-Utils": [
        [
            "Image from Dir Selector (Nich)",
            "Select Text with Regular Expression (Nich)"
        ],
        {
            "title_aux": "ComfyUI Nich Utils"
        }
    ],
    "https://github.com/nicofdga/DZ-FaceDetailer": [
        [
            "DZ_Face_Detailer"
        ],
        {
            "title_aux": "DZ-FaceDetailer"
        }
    ],
    "https://github.com/niknah/ComfyUI-F5-TTS": [
        [
            "F5TTSAudio",
            "F5TTSAudioInputs"
        ],
        {
            "title_aux": "ComfyUI-F5-TTS"
        }
    ],
    "https://github.com/nilor-corp/nilor-nodes": [
        [
            "Nilor Count Images In Directory",
            "Nilor Int To List Of Bools",
            "Nilor Interpolated Float List",
            "Nilor Inverse Map Float List",
            "Nilor List of Ints",
            "Nilor One Minus Float List",
            "Nilor Output Filename String",
            "Nilor Remap Float List",
            "Nilor Repeat & Trim Image Batch",
            "Nilor Repeat, Shuffle, & Trim Image Batch",
            "Nilor Save EXR Arbitrary",
            "Nilor Save Image To HF Dataset",
            "Nilor Save Video To HF Dataset",
            "Nilor Select Index From List",
            "Nilor Shuffle Image Batch",
            "Nilor n Fractions of Int"
        ],
        {
            "title_aux": "Nilor Nodes by Nilor Corp"
        }
    ],
    "https://github.com/ningxiaoxiao/comfyui-NDI": [
        [
            "NDI_LoadImage",
            "NDI_SendImage"
        ],
        {
            "title_aux": "comfyui-NDI"
        }
    ],
    "https://github.com/nirbhay-faaya/ImgProcessing_ComfyUI": [
        [
            "ImageConcat",
            "ImageCropMultEight",
            "ImageCut",
            "LightingPreprocessor"
        ],
        {
            "title_aux": "ImgProcessing_ComfyUI"
        }
    ],
    "https://github.com/nirex0/ComfyUI_pytorch_openpose": [
        [
            "pytorch_openpose"
        ],
        {
            "title_aux": "ComfyUI_pytorch_openpose"
        }
    ],
    "https://github.com/nkchocoai/ComfyUI-Dart": [
        [
            "DanbooruTagsTransformerBanTagsFromRegex",
            "DanbooruTagsTransformerComposePrompt",
            "DanbooruTagsTransformerComposePromptV2",
            "DanbooruTagsTransformerDecode",
            "DanbooruTagsTransformerDecodeBySplitedParts",
            "DanbooruTagsTransformerGenerate",
            "DanbooruTagsTransformerGenerateAdvanced",
            "DanbooruTagsTransformerGenerationConfig",
            "DanbooruTagsTransformerGetAspectRatio",
            "DanbooruTagsTransformerLoader",
            "DanbooruTagsTransformerRearrangedByAnimagine",
            "DanbooruTagsTransformerRemoveTagToken"
        ],
        {
            "title_aux": "ComfyUI-Dart"
        }
    ],
    "https://github.com/nkchocoai/ComfyUI-PromptUtilities": [
        [
            "PromptUtilitiesConstString",
            "PromptUtilitiesConstStringMultiLine",
            "PromptUtilitiesFormatString",
            "PromptUtilitiesJoinStringList",
            "PromptUtilitiesLoadPreset",
            "PromptUtilitiesLoadPresetAdvanced",
            "PromptUtilitiesPromptWeight",
            "PromptUtilitiesRandomPreset",
            "PromptUtilitiesRandomPresetAdvanced",
            "PromptUtilitiesReplaceOrInsertTag",
            "PromptUtilitiesRoundPromptWeight",
            "PromptUtilitiesSampleTags",
            "PromptUtilitiesSampleTagsWithWeight"
        ],
        {
            "title_aux": "ComfyUI-PromptUtilities"
        }
    ],
    "https://github.com/nkchocoai/ComfyUI-SaveImageWithMetaData": [
        [
            "CreateExtraMetaData",
            "SaveImageWithMetaData"
        ],
        {
            "title_aux": "ComfyUI-SaveImageWithMetaData"
        }
    ],
    "https://github.com/nkchocoai/ComfyUI-SizeFromPresets": [
        [
            "EmptyLatentImageFromPresetsSD15",
            "EmptyLatentImageFromPresetsSDXL",
            "GetSimilarResolution",
            "GetSimilarResolutionEmptyLatent",
            "RandomEmptyLatentImageFromPresetsSD15",
            "RandomEmptyLatentImageFromPresetsSDXL",
            "RandomSizeFromPresetsSD15",
            "RandomSizeFromPresetsSDXL",
            "SizeFromPresetsSD15",
            "SizeFromPresetsSDXL"
        ],
        {
            "title_aux": "ComfyUI-SizeFromPresets"
        }
    ],
    "https://github.com/nkchocoai/ComfyUI-TextOnSegs": [
        [
            "CalcMaxFontSize",
            "ExtractDominantColor",
            "GetComplementaryColor",
            "SegsToRegion",
            "TextOnSegsFloodFill"
        ],
        {
            "title_aux": "ComfyUI-TextOnSegs"
        }
    ],
    "https://github.com/nmlen/comfyui-mosaic-blur": [
        [
            "ImageMosaic"
        ],
        {
            "title_aux": "comfyui-mosaic-blur"
        }
    ],
    "https://github.com/noarche/sd-webui-color-enhance": [
        [
            "MMakerColorBlend",
            "MMakerColorEnhance"
        ],
        {
            "title_aux": "noarche/Color Enhance"
        }
    ],
    "https://github.com/noembryo/ComfyUI-noEmbryo": [
        [
            "PromptTermList1",
            "PromptTermList2",
            "PromptTermList3",
            "PromptTermList4",
            "PromptTermList5",
            "PromptTermList6"
        ],
        {
            "author": "noEmbryo",
            "description": "Some useful nodes for ComfyUI",
            "nickname": "noEmbryo",
            "title": "noEmbryo nodes",
            "title_aux": "noEmbryo nodes"
        }
    ],
    "https://github.com/nosiu/comfyui-instantId-faceswap": [
        [
            "AngleFromFace",
            "ComposeRotated",
            "ControlNetInstantIdApply",
            "FaceEmbed",
            "FaceEmbedCombine",
            "InstantIdAdapterApply",
            "InstantIdAndControlnetApply",
            "KpsMaker",
            "LoadInsightface",
            "LoadInstantIdAdapter",
            "PreprocessImage",
            "PreprocessImageAdvanced",
            "RotateImage"
        ],
        {
            "title_aux": "ComfyUI InstantID Faceswapper"
        }
    ],
    "https://github.com/noxinias/ComfyUI_NoxinNodes": [
        [
            "NoxinChime",
            "NoxinPromptLoad",
            "NoxinPromptSave",
            "NoxinScaledResolution",
            "NoxinSimpleMath",
            "NoxinSplitPrompt"
        ],
        {
            "title_aux": "ComfyUI_NoxinNodes"
        }
    ],
    "https://github.com/nsdtcloud3d/ComfyUI-3D-Convert": [
        [
            "ConvertTo3DFormat",
            "Load3DConvertAPIKEY",
            "Load3DFile"
        ],
        {
            "title_aux": "ComfyUI-3D-Convert"
        }
    ],
    "https://github.com/ntc-ai/ComfyUI-DARE-LoRA-Merge": [
        [
            "Apply LoRA",
            "DARE Merge LoRA Stack",
            "Save LoRA"
        ],
        {
            "title_aux": "ComfyUI - Apply LoRA Stacker with DARE"
        }
    ],
    "https://github.com/nuanarchy/ComfyUI-NuA-BIRD": [
        [
            "Bird_Deblurring_NuA",
            "Bird_Denoising_NuA",
            "Bird_Inpainting_NuA",
            "Bird_Loader_NuA",
            "Bird_Non_Uniform_Deblurring_NuA",
            "Bird_Super_Resolution_NuA"
        ],
        {
            "title_aux": "ComfyUI-NuA-BIRD"
        }
    ],
    "https://github.com/nuanarchy/ComfyUI-NuA-FlashFace": [
        [
            "FlashFace_Loader_NuA",
            "FlashFace_Sampler_NuA"
        ],
        {
            "title_aux": "ComfyUI-NuA-FlashFace"
        }
    ],
    "https://github.com/nullquant/ComfyUI-BrushNet": [
        [
            "BlendInpaint",
            "BrushNet",
            "BrushNetLoader",
            "CutForInpaint",
            "PowerPaint",
            "PowerPaintCLIPLoader",
            "RAUNet",
            "Terminal"
        ],
        {
            "author": "nullquant",
            "description": "These are custom nodes for ComfyUI native implementation of BrushNet, PowerPaint and RAUNet models",
            "nickname": "BrushName nodes",
            "title": "BrushNet",
            "title_aux": "BrushNet"
        }
    ],
    "https://github.com/numz/ComfyUI-FlowChain": [
        [
            "WorkflowLipSync"
        ],
        {
            "title_aux": "ComfyUI-FlowChain"
        }
    ],
    "https://github.com/nux1111/ComfyUI_NetDist_Plus": [
        [
            "CombineImageBatch",
            "ConditioningFromBase64(Nux)",
            "ConditioningToBase64(Nux)",
            "ExtractBase64FromImage(Nux)",
            "ExtractBase64FromImageUpload(Nux)",
            "FetchRemote",
            "FetchRemoteWithExtras(Nux)",
            "LatentToBase64(Nux)",
            "LoadCurrentWorkflowJSON",
            "LoadDiskWorkflowJSON",
            "LoadImageUrl",
            "LoadLatentFromBase64(Nux)",
            "LoadLatentNumpy",
            "LoadLatentUrl",
            "LoadWorkflowJSON",
            "RemoteApplyValues(Nux)",
            "RemoteApplyValuesMulti(Nux)",
            "RemoteChainEnd",
            "RemoteChainStart",
            "RemoteChainStart(Nux)",
            "RemoteQueueSimple",
            "RemoteQueueSimple(Nux)",
            "RemoteQueueWorker",
            "SaveDiskWorkflowJSON",
            "SaveImageUrl",
            "SaveImageWithBase64(Nux)",
            "SaveLatentNumpy"
        ],
        {
            "title_aux": "ComfyUI_NetDist_Plus"
        }
    ],
    "https://github.com/okgo4/ComfyUI-Mosaic-Mask": [
        [
            "MosaicMask"
        ],
        {
            "title_aux": "ComfyUI-Mosaic-Mask"
        }
    ],
    "https://github.com/olduvai-jp/ComfyUI-HfLoader": [
        [
            "Lora Loader From HF"
        ],
        {
            "title_aux": "ComfyUI-HfLoader"
        }
    ],
    "https://github.com/oleksandr612/ComfyUI-Counter": [
        [
            "Simple Counter"
        ],
        {
            "title_aux": "ComfyUI-Counter"
        }
    ],
    "https://github.com/omar92/ComfyUI-QualityOfLifeSuit_Omar92": [
        [
            "CLIPStringEncode _O",
            "Chat completion _O",
            "ChatGPT Simple _O",
            "ChatGPT _O",
            "ChatGPT compact _O",
            "Chat_Completion _O",
            "Chat_Message _O",
            "Chat_Message_fromString _O",
            "Concat Text _O",
            "ConcatRandomNSP_O",
            "Debug String _O",
            "Debug Text _O",
            "Debug Text route _O",
            "Edit_image _O",
            "Equation1param _O",
            "Equation2params _O",
            "GetImage_(Width&Height) _O",
            "GetLatent_(Width&Height) _O",
            "ImageScaleFactor _O",
            "ImageScaleFactorSimple _O",
            "LatentUpscaleFactor _O",
            "LatentUpscaleFactorSimple _O",
            "LatentUpscaleMultiply",
            "Note _O",
            "QOL Split String",
            "RandomNSP _O",
            "Replace Text _O",
            "String _O",
            "Text _O",
            "Text2Image _O",
            "Trim Text _O",
            "VAEDecodeParallel _O",
            "combine_chat_messages _O",
            "compine_chat_messages _O",
            "concat Strings _O",
            "create image _O",
            "create_image _O",
            "debug Completeion _O",
            "debug messages_O",
            "float _O",
            "floatToInt _O",
            "floatToText _O",
            "int _O",
            "intToFloat _O",
            "load_openAI _O",
            "replace String _O",
            "replace String advanced _O",
            "saveTextToFile _O",
            "seed _O",
            "selectLatentFromBatch _O",
            "string2Image _O",
            "trim String _O",
            "variation_image _O"
        ],
        {
            "title_aux": "Quality of life Suit:V2"
        }
    ],
    "https://github.com/opvelll/ComfyUI_TextListProduct": [
        [
            "ProductedString",
            "PromptPairConcat",
            "TextListProduct",
            "TextListProductWithSingleA",
            "TextListProductWithSingleB",
            "TextListProductWithSingleBoth"
        ],
        {
            "title_aux": "Comfy UI Text List Product"
        }
    ],
    "https://github.com/osi1880vr/prompt_quill_comfyui": [
        [
            "PromptQuillGenerate",
            "PromptQuillGenerateConditioning",
            "PromptQuillSail",
            "PromptQuillSailConditioning"
        ],
        {
            "title_aux": "ComfyUI_Prompt-Quill"
        }
    ],
    "https://github.com/ostris/ostris_nodes_comfyui": [
        [
            "LLM Pipe Loader - Ostris",
            "LLM Prompt Upsampling - Ostris",
            "One Seed - Ostris",
            "Text Box - Ostris"
        ],
        {
            "nodename_pattern": "- Ostris$",
            "title_aux": "Ostris Nodes ComfyUI"
        }
    ],
    "https://github.com/ownimage/ComfyUI-ownimage": [
        [
            "Caching Image Loader"
        ],
        {
            "title_aux": "ComfyUI-ownimage"
        }
    ],
    "https://github.com/oyvindg/ComfyUI-TrollSuite": [
        [
            "BinaryImageMask",
            "ImagePadding",
            "LoadLastImage",
            "RandomMask",
            "TransparentImage"
        ],
        {
            "title_aux": "ComfyUI-TrollSuite"
        }
    ],
    "https://github.com/oztrkoguz/ComfyUI_StoryCreator": [
        [
            "Kosmos2SamplerSimple2",
            "KosmosLoader2",
            "StoryLoader",
            "StorySamplerSimple",
            "Write2"
        ],
        {
            "title_aux": "ComfyUI StoryCreater"
        }
    ],
    "https://github.com/palant/image-resize-comfyui": [
        [
            "ImageResize"
        ],
        {
            "title_aux": "Image Resize for ComfyUI"
        }
    ],
    "https://github.com/pamparamm/ComfyUI-ppm": [
        [
            "AttentionCouplePPM",
            "CFGLimiterGuider",
            "CFGPPSamplerSelect",
            "CLIPMicroConditioning",
            "CLIPNegPip",
            "CLIPTextEncodeBREAK",
            "CLIPTokenCounter",
            "ConditioningZeroOutCombine",
            "ConvertTimestepToSigma",
            "DynSamplerSelect",
            "DynamicThresholdingSimplePost",
            "EmptyLatentImageAR",
            "FreeU2PPM",
            "Guidance Limiter",
            "LatentOperationTonemapLuminance",
            "LatentToMaskBB",
            "LatentToWidthHeight",
            "PPMSamplerSelect",
            "RescaleCFGPost"
        ],
        {
            "title_aux": "ComfyUI-ppm"
        }
    ],
    "https://github.com/pamparamm/ComfyUI-vectorscope-cc": [
        [
            "DiffusionCG",
            "NormalizeLatent",
            "VectorscopeCC"
        ],
        {
            "title_aux": "ComfyUI Vectorscope CC"
        }
    ],
    "https://github.com/pamparamm/sd-perturbed-attention": [
        [
            "PerturbedAttention",
            "SlidingWindowGuidanceAdvanced",
            "SmoothedEnergyGuidanceAdvanced",
            "TRTAttachPag",
            "TRTPerturbedAttention"
        ],
        {
            "title_aux": "sd-perturbed-attention"
        }
    ],
    "https://github.com/pandaer119/ComfyUI_pandai": [
        [
            "pandai_dsk_node"
        ],
        {
            "title_aux": "ComfyUI_pandai"
        }
    ],
    "https://github.com/pants007/comfy-pants": [
        [
            "CLIPTextEncodeAIO",
            "Image Make Square"
        ],
        {
            "title_aux": "pants"
        }
    ],
    "https://github.com/patriciogonzalezvivo/comfyui_glslnodes": [
        [
            "float",
            "glslBuffers",
            "glslEditor",
            "glslEditorPro",
            "glslUniforms",
            "glslViewer",
            "int",
            "vec2",
            "vec2 (pos)",
            "vec3",
            "vec3 (pos)",
            "vec4",
            "vec4 (color)"
        ],
        {
            "author": "Patricio Gonzalez Vivo",
            "description": "A set of nodes to work with GLSL shaders",
            "nickname": "GLSL Nodes",
            "title": "GLSL Nodes",
            "title_aux": "GLSL Nodes"
        }
    ],
    "https://github.com/paulo-coronado/comfy_clip_blip_node": [
        [
            "CLIPTextEncodeBLIP",
            "CLIPTextEncodeBLIP-2",
            "Example"
        ],
        {
            "title_aux": "comfy_clip_blip_node"
        }
    ],
    "https://github.com/pbpbpb2705/ComfyUI-LyraVSIH": [
        [
            "MultiObjectMask"
        ],
        {
            "title_aux": "ComfyUI-LyraVSIH"
        }
    ],
    "https://github.com/pharmapsychotic/comfy-cliption": [
        [
            "CLIPtionBeamSearch",
            "CLIPtionGenerate",
            "CLIPtionLoader"
        ],
        {
            "title_aux": "comfy-cliption"
        }
    ],
    "https://github.com/phazei/ConfyUI-node-prompt-stash-saver": [
        [
            "PromptStashManager",
            "PromptStashSaver"
        ],
        {
            "title_aux": "Prompt Stash Saver Node for ComfyUI"
        }
    ],
    "https://github.com/philiprodriguez/ComfyUI-HunyuanImageLatentToVideoLatent": [
        [
            "HunyuanImageLatentToVideoLatent"
        ],
        {
            "title_aux": "ComfyUI-HunyuanImageLatentToVideoLatent"
        }
    ],
    "https://github.com/philz1337x/ComfyUI-ClarityAI": [
        [
            "Clarity AI Upscaler"
        ],
        {
            "title_aux": "\u2728 Clarity AI - Creative Image Upscaler and Enhancer for ComfyUI"
        }
    ],
    "https://github.com/phuvinh010701/ComfyUI-Nudenet": [
        [
            "ApplyNudenet",
            "FilterdLabel",
            "NudenetModelLoader"
        ],
        {
            "title_aux": "ComfyUI-Nudenet"
        }
    ],
    "https://github.com/phyblas/paint-by-example_comfyui": [
        [
            "PaintbyExampleAdvanced",
            "PaintbyExampleGen",
            "PaintbyExampleSimple",
            "PaintbyIchimatsu",
            "PaintbySingleColor"
        ],
        {
            "title_aux": "paint-by-example @ ComfyUI"
        }
    ],
    "https://github.com/picturesonpictures/comfy_PoP": [
        [
            "AdaptiveCannyDetector_PoP",
            "AnyAspectRatio",
            "ConditioningMultiplier_PoP",
            "ConditioningNormalizer_PoP",
            "DallE3_PoP",
            "EfficientAttention",
            "LoadImageResizer_PoP",
            "LoraStackLoader10_PoP",
            "LoraStackLoader_PoP",
            "VAEDecoderPoP",
            "VAEEncoderPoP"
        ],
        {
            "title_aux": "comfy_PoP"
        }
    ],
    "https://github.com/pikenrover/ComfyUI_PRNodes": [
        [
            "CheckpointLoaderSimpleExtended",
            "EmptyLatentImageScaleBy",
            "ImageScaleTo",
            "LoadRandomImage",
            "LoraLoaderExtended",
            "RandomPrompt",
            "RandomPromptMixed",
            "Save Image w/Metadata"
        ],
        {
            "title_aux": "ComfyUI_PRNodes"
        }
    ],
    "https://github.com/pkpkTech/ComfyUI-SaveAVIF": [
        [
            "SaveAvif"
        ],
        {
            "title_aux": "ComfyUI-SaveAVIF"
        }
    ],
    "https://github.com/pkpkTech/ComfyUI-TemporaryLoader": [
        [
            "LoadTempCheckpoint",
            "LoadTempLoRA",
            "LoadTempMultiLoRA"
        ],
        {
            "title_aux": "ComfyUI-TemporaryLoader"
        }
    ],
    "https://github.com/playbook3d/playbook3d-comfyui-nodes": [
        [
            "Beauty Pass Sequence",
            "Depth Pass Sequence",
            "Mask Pass Sequence",
            "Outline Pass Sequence",
            "Playbook Aspect Ratio Select",
            "Playbook Beauty",
            "Playbook Beauty Sequence",
            "Playbook Boolean",
            "Playbook Depth",
            "Playbook Depth Sequence",
            "Playbook Float",
            "Playbook Image",
            "Playbook LoRA Select",
            "Playbook LoRA Selection",
            "Playbook Mask",
            "Playbook Mask Sequence",
            "Playbook Number",
            "Playbook Outline",
            "Playbook Outline Sequence",
            "Playbook Render Result",
            "Playbook Text",
            "Playbook Video"
        ],
        {
            "title_aux": "Playbook Nodes"
        }
    ],
    "https://github.com/plugcrypt/CRT-Nodes": [
        [
            "Boolean Transform",
            "Lora Loader Str",
            "Remove Trailing Comma",
            "Toggle Lora Unet Blocks L1",
            "Toggle Lora Unet Blocks L2"
        ],
        {
            "author": "CRT",
            "description": "Single Blocks Arguments for LoRA Training",
            "title": "CRT-Nodes",
            "title_aux": "CRT-Nodes"
        }
    ],
    "https://github.com/pollockjj/ComfyUI-MultiGPU": [
        [
            "DeviceSelectorMultiGPU"
        ],
        {
            "title_aux": "ComfyUI-MultiGPU"
        }
    ],
    "https://github.com/portu-sim/comfyui_bmab": [
        [
            "BMAB Alpha Composit",
            "BMAB Basic",
            "BMAB Black And White",
            "BMAB Blend",
            "BMAB Clip Text Encoder SDXL",
            "BMAB Conditioning To Bind",
            "BMAB Context",
            "BMAB ControlNet",
            "BMAB ControlNet IPAdapter",
            "BMAB ControlNet Openpose",
            "BMAB Crop",
            "BMAB Detail Anything",
            "BMAB Detect And Mask",
            "BMAB Detect And Paste",
            "BMAB Detection Crop",
            "BMAB Detector",
            "BMAB Edge",
            "BMAB Extractor",
            "BMAB Face Detailer",
            "BMAB Flux ControlNet",
            "BMAB Flux Integrator",
            "BMAB Google Gemini Prompt",
            "BMAB Import Integrator",
            "BMAB Inpaint",
            "BMAB Integrator",
            "BMAB KSampler",
            "BMAB KSamplerHiresFix",
            "BMAB KSamplerHiresFixWithUpscaler",
            "BMAB KSamplerKohyaDeepShrink",
            "BMAB Lama Inpaint",
            "BMAB LoRA Loader",
            "BMAB Load Image",
            "BMAB Load Output Image",
            "BMAB Masks To Images",
            "BMAB Model To Bind",
            "BMAB Noise Generator",
            "BMAB Openpose Hand Detailer",
            "BMAB Outpaint By Ratio",
            "BMAB Person Detailer",
            "BMAB Preview Text",
            "BMAB Prompt",
            "BMAB Reframe",
            "BMAB Remote Access And Save",
            "BMAB Remove Background",
            "BMAB Resize By Person",
            "BMAB Resize By Ratio",
            "BMAB Resize and Fill",
            "BMAB SD-WebUI API BMAB Extension",
            "BMAB SD-WebUI API ControlNet",
            "BMAB SD-WebUI API I2I",
            "BMAB SD-WebUI API Server",
            "BMAB SD-WebUI API T2I",
            "BMAB SD-WebUI API T2I Hires.Fix",
            "BMAB Save Image",
            "BMAB SeedGenerator",
            "BMAB Segment Anything",
            "BMAB Simple Hand Detailer",
            "BMAB Square",
            "BMAB Subframe Hand Detailer",
            "BMAB Text",
            "BMAB ToBind",
            "BMAB Upscale With Model",
            "BMAB Upscaler",
            "BMAB Watermark",
            "BMAB Zoom Out"
        ],
        {
            "title_aux": "comfyui_bmab"
        }
    ],
    "https://github.com/prodogape/ComfyUI-EasyOCR": [
        [
            "Apply EasyOCR"
        ],
        {
            "title_aux": "ComfyUI-EasyOCR"
        }
    ],
    "https://github.com/prodogape/ComfyUI-Minio": [
        [
            "Load Image From Minio",
            "Save Image To Minio",
            "Set Minio Config"
        ],
        {
            "title_aux": "Comfyui-Minio"
        }
    ],
    "https://github.com/prodogape/ComfyUI-OmDet": [
        [
            "Apply OmDet"
        ],
        {
            "title_aux": "ComfyUI-OmDet"
        }
    ],
    "https://github.com/prodogape/Comfyui-Yolov8-JSON": [
        [
            "Apply Yolov8 Model",
            "Apply Yolov8 Model Seg",
            "Draw Labelme Json",
            "Load Yolov8 Model",
            "Load Yolov8 Model From Path",
            "Save Labelme Json"
        ],
        {
            "title_aux": "Comfyui-Yolov8-JSON"
        }
    ],
    "https://github.com/pschroedl/ComfyUI-SAM2-Realtime": [
        [
            "DownloadAndLoadSAM2RealtimeModel",
            "Sam2RealtimeSegmentation"
        ],
        {
            "title_aux": "ComfyUI-SAM2-Realtime"
        }
    ],
    "https://github.com/ptmaster/ComfyUI-Load-Diffusion-Model-to-Muti-GPUs/raw/refs/heads/main/Load%20Diffusion%20Model%20into%20Muti%20GPUs.py": [
        [
            "OverrideLoadedDiffusionDevice"
        ],
        {
            "title_aux": "Embedding Merge for ComfyUI"
        }
    ],
    "https://github.com/purpen/ComfyUI-AIRedoon": [
        [
            "AIRedoonApplyLoRAStack",
            "AIRedoonCheckLoraFile",
            "AIRedoonCheckModelFile",
            "AIRedoonConcatText",
            "AIRedoonImageCaptioning",
            "AIRedoonImageRGBA2RGB",
            "AIRedoonLoRAStack",
            "AIRedoonPreviewText",
            "AIRedoonQwenModelLoader",
            "AIRedoonSaveText",
            "AIRedoonTranslator"
        ],
        {
            "title_aux": "AIRedoon"
        }
    ],
    "https://github.com/purpen/ComfyUI-ImageTagger": [
        [
            "AIRedoonImageCaptioning"
        ],
        {
            "title_aux": "ComfyUI-ImageTagger"
        }
    ],
    "https://github.com/pythongosssss/ComfyUI-Custom-Scripts": [
        [
            "CheckpointLoader|pysssss",
            "ConstrainImageforVideo|pysssss",
            "ConstrainImage|pysssss",
            "LoadText|pysssss",
            "LoraLoader|pysssss",
            "MathExpression|pysssss",
            "MultiPrimitive|pysssss",
            "PlaySound|pysssss",
            "Repeater|pysssss",
            "ReroutePrimitive|pysssss",
            "SaveText|pysssss",
            "ShowText|pysssss",
            "StringFunction|pysssss",
            "SystemNotification|pysssss"
        ],
        {
            "title_aux": "pythongosssss/ComfyUI-Custom-Scripts"
        }
    ],
    "https://github.com/pythongosssss/ComfyUI-WD14-Tagger": [
        [
            "WD14Tagger|pysssss"
        ],
        {
            "title_aux": "ComfyUI WD 1.4 Tagger"
        }
    ],
    "https://github.com/pzc163/Comfyui_MiniCPMv2_6-prompt-generator": [
        [
            "Prompt_Generator",
            "Save_Prompts"
        ],
        {
            "title_aux": "Comfyui_MiniCPMv2_6-prompt-generator"
        }
    ],
    "https://github.com/qwixiwp/queuetools": [
        [
            "load images (queue tools)"
        ],
        {
            "title_aux": "queuetools"
        }
    ],
    "https://github.com/r3dial/redial-discomphy": [
        [
            "DiscordMessage"
        ],
        {
            "title_aux": "Redial Discomphy - Discord Integration for ComfyUI"
        }
    ],
    "https://github.com/r3dsd/comfyui-template-loader": [
        [
            "TemplateLoader"
        ],
        {
            "title_aux": "Comfyui-Template-Loader"
        }
    ],
    "https://github.com/ramesh-x90/ComfyUI_pyannote": [
        [
            "Speaker Diarization",
            "Whisper Segments to Speaker"
        ],
        {
            "title_aux": "ComfyUI_pyannote"
        }
    ],
    "https://github.com/ramyma/A8R8_ComfyUI_nodes": [
        [
            "AttentionCouple",
            "AttentionCoupleRegion",
            "AttentionCoupleRegions",
            "Base64ImageInput",
            "Base64ImageOutput"
        ],
        {
            "title_aux": "A8R8 ComfyUI Nodes"
        }
    ],
    "https://github.com/randjtw/advance-aesthetic-score": [
        [
            "Adv_Scoring"
        ],
        {
            "title_aux": "advance-aesthetic-score"
        }
    ],
    "https://github.com/randomnoner11/ComfyUI-MistralAI-API": [
        [
            "InvokeMistralEndpoint",
            "LoadFewShotPrompt"
        ],
        {
            "title_aux": "ComfyUI-MistralAI-API"
        }
    ],
    "https://github.com/raspie10032/ComfyUI_RS_NAI_Local_Prompt_converter": [
        [
            "ComfyToNovelAIPrompt",
            "NAIPromptExtractor",
            "NovelAIToComfyPrompt"
        ],
        {
            "title_aux": "ComfyUI NAI Prompt Converter"
        }
    ],
    "https://github.com/ratulrafsan/Comfyui-SAL-VTON": [
        [
            "SALVTON_Apply",
            "SV_random"
        ],
        {
            "title_aux": "Comfyui-SAL-VTON"
        }
    ],
    "https://github.com/raysers/Mflux-ComfyUI": [
        [
            "MfluxControlNetLoader",
            "MfluxCustomModels",
            "MfluxImg2Img",
            "MfluxLorasLoader",
            "MfluxModelsDownloader",
            "MfluxModelsLoader",
            "QuickMfluxNode"
        ],
        {
            "title_aux": "Mflux-ComfyUI"
        }
    ],
    "https://github.com/rcfcu2000/zhihuige-nodes-comfyui": [
        [
            "Combine ZHGMasks",
            "Cover ZHGMasks",
            "From ZHG pip",
            "GroundingDinoModelLoader (zhihuige)",
            "GroundingDinoPIPESegment (zhihuige)",
            "GroundingDinoSAMSegment (zhihuige)",
            "InvertMask (zhihuige)",
            "SAMModelLoader (zhihuige)",
            "To ZHG pip",
            "ZHG FaceIndex",
            "ZHG GetMaskArea",
            "ZHG Image Levels",
            "ZHG SaveImage",
            "ZHG SmoothEdge",
            "ZHG UltimateSDUpscale"
        ],
        {
            "title_aux": "zhihuige-nodes-comfyui"
        }
    ],
    "https://github.com/rcsaquino/comfyui-custom-nodes": [
        [
            "BackgroundRemover | rcsaquino",
            "VAELoader | rcsaquino",
            "VAEProcessor | rcsaquino"
        ],
        {
            "title_aux": "rcsaquino/comfyui-custom-nodes"
        }
    ],
    "https://github.com/rdancer/ComfyUI_Florence2SAM2": [
        [
            "RdancerFlorence2SAM2GenerateMask"
        ],
        {
            "title_aux": "ComfyUI_Florence2SAM2"
        }
    ],
    "https://github.com/receyuki/comfyui-prompt-reader-node": [
        [
            "SDAnyConverter",
            "SDBatchLoader",
            "SDLoraLoader",
            "SDLoraSelector",
            "SDParameterExtractor",
            "SDParameterGenerator",
            "SDPromptMerger",
            "SDPromptReader",
            "SDPromptSaver",
            "SDTypeConverter"
        ],
        {
            "author": "receyuki",
            "description": "The ultimate solution for managing image metadata and multi-tool compatibility. ComfyUI node version of the SD Prompt Reader",
            "nickname": "SD Prompt Reader",
            "title": "SD Prompt Reader",
            "title_aux": "SD Prompt Reader"
        }
    ],
    "https://github.com/recraft-ai/ComfyUI-RecraftAI": [
        [
            "RecraftBackgroundRemover",
            "RecraftClarityUpscaler",
            "RecraftClient",
            "RecraftGenerativeUpscaler",
            "RecraftImageGenerator"
        ],
        {
            "title_aux": "ComfyUI-RecraftAI"
        }
    ],
    "https://github.com/redhottensors/ComfyUI-Prediction": [
        [
            "AvoidErasePrediction",
            "CFGPrediction",
            "CharacteristicGuidancePrediction",
            "CombinePredictions",
            "ConditionedPrediction",
            "EarlyMiddleLatePrediction",
            "InterpolatePredictions",
            "LogSigmas",
            "PerpNegPrediction",
            "SamplerCustomPrediction",
            "ScalePrediction",
            "ScaledGuidancePrediction",
            "SelectSigmas",
            "SplitAtSigma",
            "SwitchPredictions"
        ],
        {
            "author": "RedHotTensors",
            "description": "Fully customizable Classifer Free Guidance for ComfyUI",
            "nickname": "ComfyUI-Prediction",
            "title": "ComfyUI-Prediction",
            "title_aux": "ComfyUI-Prediction"
        }
    ],
    "https://github.com/regiellis/ComfyUI-EasyNoobai": [
        [
            "EasyNoobai",
            "NoobaiArtists",
            "NoobaiCharacters",
            "NoobaiE621Artists",
            "NoobaiE621Characters"
        ],
        {
            "title_aux": "ComfyUI-EasyNoobai"
        }
    ],
    "https://github.com/regiellis/ComfyUI-EasyPony": [
        [
            "EasyPony"
        ],
        {
            "title_aux": "ComfyUI-EasyPony"
        }
    ],
    "https://github.com/revirevy/Comfyui_saveimage_imgbb": [
        [
            "ImgBBUploader",
            "LLM_prompt_generator"
        ],
        {
            "author": "N.RHEVI",
            "description": "This custom node allow save image to imgbb.",
            "nickname": "save image to imgbb",
            "title": "save image to imgbb",
            "title_aux": "Comfyui_saveimage_imgbb"
        }
    ],
    "https://github.com/rgthree/rgthree-comfy": [
        [],
        {
            "author": "rgthree",
            "description": "A bunch of nodes I created that I also find useful.",
            "nickname": "rgthree",
            "nodename_pattern": " \\(rgthree\\)$",
            "title": "Comfy Nodes",
            "title_aux": "rgthree's ComfyUI Nodes"
        }
    ],
    "https://github.com/rhdunn/comfyui-audio-processing": [
        [
            "ComfyAudio.ApplyFilterBank",
            "ComfyAudio.GriffinLim",
            "ComfyAudio.InverseSpectrogram",
            "ComfyAudio.LinearFilterBank",
            "ComfyAudio.LoadAudio",
            "ComfyAudio.MelScaleFilterBank",
            "ComfyAudio.PlotFilterBank",
            "ComfyAudio.PlotSpectrogram",
            "ComfyAudio.PlotWaveform",
            "ComfyAudio.Spectrogram"
        ],
        {
            "title_aux": "comfyui-audio-processing"
        }
    ],
    "https://github.com/rhdunn/comfyui-bus-plugin": [
        [
            "ComfyBus.CLIPConditioningBusNode",
            "ComfyBus.CLIPEncodedPromptBusNode",
            "ComfyBus.CheckpointBusNode",
            "ComfyBus.ImageBusNode",
            "ComfyBus.ImageParameterBusNode",
            "ComfyBus.ImageScaleToSideParameterBusNode",
            "ComfyBus.ImageSizeBusNode",
            "ComfyBus.LatentImageBusNode",
            "ComfyBus.LatentImageParameterBusNode",
            "ComfyBus.PromptBusNode",
            "ComfyBus.PromptSDXLBusNode"
        ],
        {
            "title_aux": "comfyui-bus-plugin"
        }
    ],
    "https://github.com/richinsley/Comfy-LFO": [
        [
            "LFO_Pulse",
            "LFO_Sawtooth",
            "LFO_Sine",
            "LFO_Square",
            "LFO_Triangle"
        ],
        {
            "title_aux": "Comfy-LFO"
        }
    ],
    "https://github.com/ricklove/comfyui-ricklove": [
        [
            "RL_BBox",
            "RL_CacheImageSequence",
            "RL_CacheMaskSequence",
            "RL_CivitaiTopImagePrompts",
            "RL_Crop_Resize",
            "RL_Crop_Resize_Batch",
            "RL_Finetune_Analyze",
            "RL_Finetune_Analyze_Batch",
            "RL_Finetune_Variable",
            "RL_ForceDependencyOrder",
            "RL_ForceDependencyOrder_ImageString",
            "RL_ForceDependencyOrder_Images",
            "RL_ForceDependencyOrder_Latents",
            "RL_ForceDependencyOrder_String",
            "RL_ForceDependencyOrder_Strings",
            "RL_IfFileExists",
            "RL_Image_Shadow",
            "RL_Image_Threshold_Channels",
            "RL_Internet_Search",
            "RL_LoadImageSequence",
            "RL_Load_Flow",
            "RL_LoraTextExtractTags",
            "RL_Optical_Flow_Dip",
            "RL_RebootComfyIfLeaky",
            "RL_SaveImageSequence",
            "RL_Save_Flow",
            "RL_SequenceContext",
            "RL_Sequence_ToFilePathList",
            "RL_StopIfBlack",
            "RL_Uncrop",
            "RL_Warp_Image",
            "RL_Zoe_Depth_Map_Preprocessor",
            "RL_Zoe_Depth_Map_Preprocessor_Raw_Infer",
            "RL_Zoe_Depth_Map_Preprocessor_Raw_Process"
        ],
        {
            "title_aux": "comfyui-ricklove"
        }
    ],
    "https://github.com/risunobushi/ComfyUI-Similarity-Score": [
        [
            "ImageSimilarityScores"
        ],
        {
            "title_aux": "ComfyUI-Similarity-Score"
        }
    ],
    "https://github.com/risunobushi/comfyUI_FrequencySeparation_RGB-HSV": [
        [
            "FrequencyCombination",
            "FrequencyCombinationHSV",
            "FrequencySeparation",
            "FrequencySeparationHSV"
        ],
        {
            "title_aux": "comfyUI_FrequencySeparation_RGB-HSV"
        }
    ],
    "https://github.com/riverolls/ComfyUI-FJDH": [
        [
            "AngleCalculator",
            "BBoxAreaFilter",
            "BBoxToPoint",
            "BooleanToCombo",
            "BrightnessToMask",
            "CenterPointCalculator",
            "ChestMaskGenerator",
            "CircularMaskGenerator",
            "CoordinatesToPoint",
            "DistanceCalculator",
            "DistanceMaskGenerator",
            "ForeheadMaskGenerator",
            "GridPointGenerator",
            "ImageAligner",
            "ImageComparer",
            "ImageWarper",
            "ItemSelector",
            "KeypointSelector",
            "LargestMaskSelector",
            "LineMaskGenerator",
            "MaskChamfer",
            "MaskFilter",
            "MaskShift",
            "MaskThreshold",
            "MaskToBBox",
            "MaskToPoint",
            "MaxInscribedRectangleMaskGenerator",
            "PointExtractor",
            "PointMerger",
            "PointMover",
            "PointPreview",
            "PointReversor",
            "PointThresholdFilter",
            "PointToBBox",
            "PointToCoordinates",
            "PolygonMaskGenerator"
        ],
        {
            "title_aux": "ComfyUI-FJDH"
        }
    ],
    "https://github.com/robertvoy/ComfyUI-Flux-Continuum": [
        [
            "BatchSlider",
            "BooleanToEnabled",
            "ConfigurableDrawText",
            "ControlNetSlider",
            "DenoiseSlider",
            "DrawTextConfig",
            "FluxContinuumModelRouter",
            "GPUSlider",
            "GuidanceSlider",
            "IPAdapterSlider",
            "ImageBatchBoolean",
            "ImpactControlBridgeFix",
            "LatentPass",
            "MaxShiftSlider",
            "OutputGetString",
            "PipePass",
            "ResolutionPicker",
            "SEGSPass",
            "SamplerParameterPacker",
            "SamplerParameterUnpacker",
            "SelectFromBatch",
            "SimpleTextTruncate",
            "SplitVec3",
            "StepSlider",
            "TextVersions"
        ],
        {
            "title_aux": "ComfyUI Flux Continuum: Modular Interface"
        }
    ],
    "https://github.com/robtl2/ComfyUI-ComfyBridge": [
        [
            "CB_ImageReceiver",
            "CB_ImageSender"
        ],
        {
            "title_aux": "ComfyUI-ComfyBridge"
        }
    ],
    "https://github.com/rohitsainier/ComfyUI-InstagramDownloader": [
        [
            "InstagramDownloader",
            "MediaOrganizer"
        ],
        {
            "title_aux": "ComfyUI-InstagramDownloader"
        }
    ],
    "https://github.com/romeobuilderotti/ComfyUI-PNG-Metadata": [
        [
            "SetMetadataAll",
            "SetMetadataString"
        ],
        {
            "title_aux": "ComfyUI PNG Metadata"
        }
    ],
    "https://github.com/ronaldzgithub/ComfyUI_Appstore": [
        [
            "ComfyUIAppstoreHost",
            "ComfyUIAppstoreParam",
            "sdAppstore_saveImage"
        ],
        {
            "title_aux": "ComfyUI_Appstore"
        }
    ],
    "https://github.com/ronniebasak/ComfyUI-Tara-LLM-Integration": [
        [
            "TaraAdvancedComposition",
            "TaraApiKeyLoader",
            "TaraApiKeySaver",
            "TaraDaisyChainNode",
            "TaraLLMConfig",
            "TaraPresetLLMConfig",
            "TaraPrompter",
            "TaraPrompterAdvanced"
        ],
        {
            "title_aux": "ComfyUI-Tara-LLM-Integration"
        }
    ],
    "https://github.com/ronsantash/Comfyui-flexi-lora-loader": [
        [
            "ComfyUIFlexiLoRALoader"
        ],
        {
            "title_aux": "ComfyUIFlexiLoRALoader"
        }
    ],
    "https://github.com/royceschultz/ComfyUI-Notifications": [
        [
            "Notif-PlaySound",
            "Notif-SystemNotification",
            "Notif-UnifiedNotification",
            "Notif-Webhook"
        ],
        {
            "title_aux": "ComfyUI-Notifications"
        }
    ],
    "https://github.com/royceschultz/ComfyUI-TranscriptionTools": [
        [
            "TT-AudioSink",
            "TT-ConvertVhsAudioToAudio",
            "TT-LoadAudio",
            "TT-LoadBatch",
            "TT-LoadVideoAudio",
            "TT-LoadWhisperModel",
            "TT-WhisperTranscription",
            "TT-WhisperTranscriptionBatch"
        ],
        {
            "title_aux": "ComfyUI-TranscriptionTools"
        }
    ],
    "https://github.com/rubi-du/ComfyUI-BiRefNet-Super": [
        [
            "BiRefNet_Lite",
            "BiRefNet_Super",
            "BiRefNet_onnx"
        ],
        {
            "title_aux": "ComfyUI-BiRefNet-lite"
        }
    ],
    "https://github.com/rubi-du/ComfyUI-Flux-Inpainting": [
        [
            "Flux Inpainting",
            "FluxGuffInpainting",
            "FluxInpainting",
            "FluxSimpleInpainting",
            "FluxTransformerInpainting",
            "FluxVAELoader"
        ],
        {
            "title_aux": "ComfyUI-Flux-Inpainting"
        }
    ],
    "https://github.com/rubi-du/ComfyUI-ICC-nodes": [
        [
            "LoadImageICC",
            "PreviewImageICC",
            "SaveImageICC"
        ],
        {
            "title_aux": "ComfyUI-ICC-nodes"
        }
    ],
    "https://github.com/rui40000/RUI-Nodes": [
        [
            "ABCondition",
            "CharacterCount"
        ],
        {
            "title_aux": "RUI-Nodes"
        }
    ],
    "https://github.com/ruiqutech/ComfyUI-RuiquNodes": [
        [
            "EvaluateListMultiple1",
            "EvaluateListMultiple3",
            "EvaluateListMultiple6",
            "EvaluateListMultiple9",
            "EvaluateMultiple1",
            "EvaluateMultiple3",
            "EvaluateMultiple6",
            "EvaluateMultiple9",
            "ImageDilate",
            "ImageErode",
            "ListPath",
            "MaskDilate",
            "MaskErode",
            "PreviewMask",
            "RangeSplit",
            "SaveMask",
            "StringAsAny",
            "StringConcat1",
            "StringConcat3",
            "StringConcat6",
            "StringConcat9",
            "StringPathStem",
            "TermsToList",
            "VAEDecodeSave"
        ],
        {
            "title_aux": "RuiquNodes for ComfyUI"
        }
    ],
    "https://github.com/runtime44/comfyui_r44_nodes": [
        [
            "Runtime44ColorMatch",
            "Runtime44DynamicKSampler",
            "Runtime44FilmGrain",
            "Runtime44ImageEnhance",
            "Runtime44ImageOverlay",
            "Runtime44ImageResizer",
            "Runtime44ImageToNoise",
            "Runtime44IterativeUpscaleFactor",
            "Runtime44MaskSampler",
            "Runtime44TiledMaskSampler",
            "Runtime44Upscaler"
        ],
        {
            "title_aux": "Runtime44 ComfyUI Nodes"
        }
    ],
    "https://github.com/ruucm/ruucm-comfy": [
        [
            "BatchAverageImage",
            "LoadExternalLoraModelOnly"
        ],
        {
            "nodename_pattern": " \\(ruucm\\)$",
            "title_aux": "Ruucm's ComfyUI Nodes"
        }
    ],
    "https://github.com/ryanontheinside/ComfyUI_Doom": [
        [
            "Doom"
        ],
        {
            "title_aux": "Doom"
        }
    ],
    "https://github.com/ryanontheinside/ComfyUI_EfficientTAM": [
        [
            "EfficientTAMLoader",
            "EfficientTAMPredictor"
        ],
        {
            "title_aux": "ComfyUI-EfficientTAM"
        }
    ],
    "https://github.com/ryanontheinside/ComfyUI_RealTimeNodes": [
        [
            "DTypeConverter",
            "DeltaControl",
            "FPSMonitor",
            "FastWebcamCapture",
            "FloatControl",
            "FloatSequence",
            "IntControl",
            "IntSequence",
            "IntegerMotionController",
            "IntervalControl",
            "MotionController",
            "QuickShapeMask",
            "ROINode",
            "StringControl",
            "StringSequence",
            "TAESDVaeDecode",
            "TAESDVaeEncode"
        ],
        {
            "title_aux": "Nodes for use with real-time applications of ComfyUI"
        }
    ],
    "https://github.com/ryanontheinside/ComfyUI_RyanOnTheInside": [
        [
            "AreaFeatureNode",
            "AudioChannelMerge",
            "AudioChannelSplit",
            "AudioCombine",
            "AudioConcatenate",
            "AudioDither",
            "AudioFade",
            "AudioFeatureExtractor",
            "AudioFeatureExtractorFirst",
            "AudioFeatureVisualizer",
            "AudioFilter",
            "AudioGain",
            "AudioInfo",
            "AudioPad",
            "AudioPitchShift",
            "AudioResample",
            "AudioSeparator",
            "AudioSeparatorSimple",
            "AudioSubtract",
            "AudioTimeStretch",
            "AudioVolumeNormalization",
            "BrightnessFeatureNode",
            "ColorFeatureNode",
            "DepthBlender",
            "DepthFeatureNode",
            "DepthInjection",
            "DepthMapProtrusion",
            "DepthRippleEffect",
            "DepthShapeModifier",
            "DepthShapeModifierPrecise",
            "Doom",
            "DownloadCREPEModel",
            "DownloadOpenUnmixModel",
            "DyeImage",
            "EffectVisualizer",
            "EmbeddingGuidedLatentInterpolate",
            "EmitterEmissionRateModulation",
            "EmitterMovement",
            "EmptyImageAndMaskFromAudio",
            "EmptyImageFromAudio",
            "EmptyMaskFromAudio",
            "FeatureAccumulate",
            "FeatureCombine",
            "FeatureContiguousInterpolate",
            "FeatureFade",
            "FeatureMath",
            "FeatureMixer",
            "FeatureOscillator",
            "FeatureRebase",
            "FeatureRenormalize",
            "FeatureScaler",
            "FeatureSmoothing",
            "FeatureToFloat",
            "FeatureToSplineData",
            "FeatureToWeightsStrategy",
            "FeatureTruncateOrExtend",
            "FlexAudioPitchShift",
            "FlexAudioTimeStretch",
            "FlexAudioVisualizerCircular",
            "FlexAudioVisualizerLine",
            "FlexImageBloom",
            "FlexImageChromaticAberration",
            "FlexImageColorGrade",
            "FlexImageContrast",
            "FlexImageDepthWarp",
            "FlexImageEdgeDetect",
            "FlexImageGlitch",
            "FlexImageHorizontalToVertical",
            "FlexImageHueShift",
            "FlexImageKaleidoscope",
            "FlexImageParallax",
            "FlexImagePixelate",
            "FlexImagePosterize",
            "FlexImageTiltShift",
            "FlexImageTransform",
            "FlexImageVignette",
            "FlexImageWarp",
            "FlexLatentBlend",
            "FlexLatentInterpolate",
            "FlexLatentNoise",
            "FlexMaskBinary",
            "FlexMaskDepthChamber",
            "FlexMaskEmanatingRings",
            "FlexMaskInterpolate",
            "FlexMaskMath",
            "FlexMaskMorph",
            "FlexMaskOpacity",
            "FlexMaskRandomShapes",
            "FlexMaskTransform",
            "FlexMaskVoronoiScheduled",
            "FlexMaskWarp",
            "FlexMaskWavePropagation",
            "FlexVideoDirection",
            "FlexVideoFrameBlend",
            "FlexVideoSeek",
            "FlexVideoSpeed",
            "FrequencyFilterCustom",
            "FrequencyFilterPreset",
            "FrequencyRange",
            "GravityWell",
            "ImageCASBatch",
            "ImageChunk",
            "ImageDifference",
            "ImageInterval",
            "ImageIntervalSelectPercentage",
            "ImageScaleToTarget",
            "ImageShuffle",
            "LatentFrequencyBlender",
            "LocationFromMask",
            "LocationFromPoint",
            "LocationTransform",
            "MIDILoadAndExtract",
            "ManualFeatureFromPipe",
            "ManualFeatureNode",
            "ManualFeaturePipe",
            "MaskCompositePlus",
            "MaskMath",
            "MaskMorph",
            "MaskRings",
            "MaskTransform",
            "MaskWarp",
            "MotionFeatureNode",
            "MovingShape",
            "OpticalFlowDirectionMask",
            "OpticalFlowMaskModulation",
            "OpticalFlowParticleSystem",
            "ParticleColorModulation",
            "ParticleEmissionMask",
            "ParticleEmitter",
            "ParticleSizeModulation",
            "ParticleSpeedModulation",
            "PitchFeatureExtractor",
            "PitchRange",
            "PitchRangeByNoteNode",
            "PitchRangePreset",
            "PitchVisualizer",
            "PoseInterpolator",
            "PreviewFeature",
            "ProximityFeatureNode",
            "ProximityVisualizer",
            "RhythmFeatureExtractor",
            "SplineFeatureModulator",
            "SplineRhythmModulator",
            "SpringJointSetting",
            "StaticBody",
            "SwapDevice",
            "TextMaskNode",
            "TimeFeatureNode",
            "VideoChunk",
            "Vortex",
            "WhisperToPromptTravel",
            "_mfc"
        ],
        {
            "title_aux": "RyanOnTheInside"
        }
    ],
    "https://github.com/saftle/uber_comfy_nodes": [
        [
            "ControlNet Selector",
            "ControlNetOptionalLoader",
            "DiffusersSelector",
            "MultiInputVariableRewrite",
            "SaveImageJPGNoMeta"
        ],
        {
            "title_aux": "Suplex Misc ComfyUI Nodes"
        }
    ],
    "https://github.com/sakura1bgx/ComfyUI_FlipStreamViewer": [
        [
            "FlipStreamLoader",
            "FlipStreamOption",
            "FlipStreamPrompt",
            "FlipStreamSource",
            "FlipStreamSwitchVFI",
            "FlipStreamUpdate",
            "FlipStreamViewer"
        ],
        {
            "title_aux": "ComfyUI_FlipStreamViewer"
        }
    ],
    "https://github.com/sanbuphy/ComfyUI-AudioLDM": [
        [
            "AudioLDM",
            "PreviewAudioLDM",
            "SaveAudioLDM"
        ],
        {
            "title_aux": "ComfyUI-AudioLDM"
        }
    ],
    "https://github.com/sdfxai/SDFXBridgeForComfyUI": [
        [
            "SDFXClipTextEncode"
        ],
        {
            "title_aux": "SDFXBridgeForComfyUI - ComfyUI Custom Node for SDFX Integration"
        }
    ],
    "https://github.com/seanlynch/comfyui-optical-flow": [
        [
            "Apply optical flow",
            "Compute optical flow",
            "Visualize optical flow"
        ],
        {
            "title_aux": "ComfyUI Optical Flow"
        }
    ],
    "https://github.com/seanlynch/srl-nodes": [
        [
            "SRL Conditional Interrrupt",
            "SRL Eval",
            "SRL Filter Image List",
            "SRL Format String"
        ],
        {
            "title_aux": "SRL's nodes"
        }
    ],
    "https://github.com/sebord/ComfyUI-LMCQ": [
        [
            "LmcqAuthLoraDecryption",
            "LmcqAuthLoraEncryption",
            "LmcqAuthModelDecryption",
            "LmcqAuthModelEncryption",
            "LmcqAuthWorkflowDecryption",
            "LmcqAuthWorkflowEncryption",
            "LmcqGetMachineCode",
            "LmcqImageSaver",
            "LmcqImageSaverTransit",
            "LmcqImageSaverWeb",
            "LmcqInputValidator",
            "LmcqLoadFluxNF4Checkpoint",
            "LmcqRuntimeLoraDecryption",
            "LmcqRuntimeLoraEncryption",
            "LmcqRuntimeModelDecryption",
            "LmcqRuntimeModelEncryption",
            "LmcqRuntimeWorkflowDecryption",
            "LmcqRuntimeWorkflowEncryption"
        ],
        {
            "title_aux": "ComfyUI-LMCQ"
        }
    ],
    "https://github.com/sergekatzmann/ComfyUI_Nimbus-Pack": [
        [
            "AdjustAndRoundDimensions",
            "AspectRatioMobileDevices",
            "ImageResizeAndCropNode",
            "ImageSquareAdapterNode",
            "PopularScreenResolutions"
        ],
        {
            "title_aux": "ComfyUI_Nimbus-Pack"
        }
    ],
    "https://github.com/sh570655308/ComfyUI-GigapixelAI": [
        [
            "GigapixelAI",
            "GigapixelModelSettings",
            "GigapixelUpscaleSettings"
        ],
        {
            "title_aux": "ComfyUI-GigapixelAI"
        }
    ],
    "https://github.com/sh570655308/ComfyUI-TopazVideoAI": [
        [
            "TopazUpscaleParams",
            "TopazVideoAI"
        ],
        {
            "title_aux": "ComfyUI-TopazVideoAI"
        }
    ],
    "https://github.com/shadowcz007/comfyui-Image-reward": [
        [
            "ImageBatchToList_",
            "ImageRewardScore_"
        ],
        {
            "title_aux": "comfyui-Image-reward"
        }
    ],
    "https://github.com/shadowcz007/comfyui-consistency-decoder": [
        [
            "VAEDecodeConsistencyDecoder",
            "VAELoaderConsistencyDecoder"
        ],
        {
            "title_aux": "Consistency Decoder"
        }
    ],
    "https://github.com/shadowcz007/comfyui-edit-mask": [
        [
            "EditMask"
        ],
        {
            "title_aux": "comfyui-edit-mask"
        }
    ],
    "https://github.com/shadowcz007/comfyui-liveportrait": [
        [
            "ExpressionEditor_",
            "ExpressionVideo2VideoNode",
            "ExpressionVideoNode",
            "FaceCropInfo",
            "LivePortraitNode",
            "LivePortraitVideoNode",
            "Retargeting"
        ],
        {
            "title_aux": "comfyui-liveportrait"
        }
    ],
    "https://github.com/shadowcz007/comfyui-mixlab-nodes": [
        [
            "3DImage",
            "AnalyzeAudio",
            "AppInfo",
            "ApplyVisualStylePrompting_",
            "AreaToMask",
            "AudioPlay",
            "CenterImage",
            "CkptNames_",
            "Color",
            "ComparingTwoFrames_",
            "CompositeImages_",
            "CreateJsonNode",
            "DepthViewer",
            "DynamicDelayProcessor",
            "EmbeddingPrompt",
            "EnhanceImage",
            "FaceToMask",
            "FeatheredMask",
            "FloatSlider",
            "FloatingVideo",
            "Font",
            "GLIGENTextBoxApply_Advanced",
            "GetImageSize_",
            "GradientImage",
            "GridDisplayAndSave",
            "GridInput",
            "GridOutput",
            "ImageBatchToList_",
            "ImageColorTransfer",
            "ImageCropByAlpha",
            "ImageListToBatch_",
            "ImagesPrompt_",
            "IncrementingListNode_",
            "IntNumber",
            "JoinWithDelimiter",
            "KeyInput",
            "LimitNumber",
            "ListSplit_",
            "LoadImagesFromPath",
            "LoadImagesFromURL",
            "LoadImagesToBatch",
            "LoraNames_",
            "LoraPrompt",
            "MaskListMerge_",
            "MaskListReplace_",
            "MergeLayers",
            "MirroredImage",
            "MultiplicationNode",
            "NewLayer",
            "NoiseImage",
            "OutlineMask",
            "P5Input",
            "PreviewMask_",
            "PromptImage",
            "PromptSimplification",
            "PromptSlide",
            "RandomPrompt",
            "ResizeImageMixlab",
            "SamplerNames_",
            "SaveImageAndMetadata_",
            "SaveImageToLocal",
            "ScreenShare",
            "Seed_",
            "ShowLayer",
            "SmoothMask",
            "SpeechRecognition",
            "SpeechSynthesis",
            "SplitImage",
            "SplitLongMask",
            "StyleAlignedBatchAlign_",
            "StyleAlignedReferenceSampler_",
            "StyleAlignedSampleReferenceLatents_",
            "SvgImage",
            "SwitchByIndex",
            "TESTNODE_",
            "TESTNODE_TOKEN",
            "TextImage",
            "TextInput_",
            "TextToNumber",
            "TransparentImage",
            "VAEDecodeConsistencyDecoder",
            "VAELoaderConsistencyDecoder"
        ],
        {
            "title_aux": "comfyui-mixlab-nodes"
        }
    ],
    "https://github.com/shadowcz007/comfyui-sound-lab": [
        [
            "AudioPlay",
            "Musicgen_",
            "StableAudio_"
        ],
        {
            "title_aux": "comfyui-sound-lab"
        }
    ],
    "https://github.com/shadowcz007/comfyui-try-on": [
        [
            "CatVTONNode",
            "FashionClothMask",
            "FashionClothMask2"
        ],
        {
            "author": "chflame",
            "description": "CatVTON warpper for ComfyUI",
            "nickname": "CatVTON_Wrapper",
            "title": "CatVTON_Wrapper",
            "title_aux": "comfyui-try-on"
        }
    ],
    "https://github.com/shadowcz007/comfyui-ultralytics-yolo": [
        [
            "DetectByLabel"
        ],
        {
            "title_aux": "comfyui-ultralytics-yolo"
        }
    ],
    "https://github.com/shahkoorosh/ComfyUI-KGnodes": [
        [
            "CustomResolutionLatentNode",
            "StyleSelector"
        ],
        {
            "author": "ShahKoorosh",
            "description": "This Custom node offers various experimental nodes to make it easier to use ComfyUI.",
            "nickname": "KGnodes",
            "title": "ComfyUI-KGnodes",
            "title_aux": "ComfyUI-KGnodes"
        }
    ],
    "https://github.com/shahkoorosh/ComfyUI-PersianText": [
        [
            "PersianText"
        ],
        {
            "author": "ShahKoorosh",
            "description": "A powerful ComfyUI node for rendering text with advanced styling options, including full support for Persian/Farsi and Arabic scripts.",
            "nickname": "PersianText",
            "title": "ComfyUI-PersianText",
            "title_aux": "ComfyUI-PersianText"
        }
    ],
    "https://github.com/shi3z/ComfyUI_Memeplex_DALLE": [
        [
            "DallERender",
            "GPT",
            "MemeplexCustomSDXLRender",
            "MemeplexRender",
            "TextInput",
            "TextSend"
        ],
        {
            "title_aux": "ComfyUI_Memeplex_DALLE"
        }
    ],
    "https://github.com/shiimizu/ComfyUI-PhotoMaker-Plus": [
        [
            "PhotoMakerEncodePlus",
            "PhotoMakerInsightFaceLoader",
            "PhotoMakerLoaderPlus",
            "PhotoMakerLoraLoaderPlus",
            "PhotoMakerStyles",
            "PrepImagesForClipVisionFromPath"
        ],
        {
            "title_aux": "ComfyUI PhotoMaker Plus"
        }
    ],
    "https://github.com/shiimizu/ComfyUI-TiledDiffusion": [
        [
            "NoiseInversion",
            "SpotDiffusionParams_TiledDiffusion",
            "TiledDiffusion",
            "VAEDecodeTiled_TiledDiffusion",
            "VAEEncodeTiled_TiledDiffusion"
        ],
        {
            "title_aux": "Tiled Diffusion & VAE for ComfyUI"
        }
    ],
    "https://github.com/shiimizu/ComfyUI-semantic-aware-guidance": [
        [
            "SemanticAwareGuidance"
        ],
        {
            "title_aux": "Semantic-aware Guidance (S-CFG)"
        }
    ],
    "https://github.com/shiimizu/ComfyUI_smZNodes": [
        [
            "smZ CLIPTextEncode",
            "smZ Settings"
        ],
        {
            "title_aux": "smZNodes"
        }
    ],
    "https://github.com/shingo1228/ComfyUI-SDXL-EmptyLatentImage": [
        [
            "SDXL Empty Latent Image"
        ],
        {
            "title_aux": "ComfyUI-SDXL-EmptyLatentImage"
        }
    ],
    "https://github.com/shingo1228/ComfyUI-send-eagle-slim": [
        [
            "Send Eagle with text",
            "Send Webp Image to Eagle"
        ],
        {
            "title_aux": "ComfyUI-send-Eagle(slim)"
        }
    ],
    "https://github.com/shinich39/comfyui-parse-image": [
        [
            "LoadBooleanFromImage",
            "LoadComboFromImage",
            "LoadFloatFromImage",
            "LoadIntFromImage",
            "LoadStringFromImage"
        ],
        {
            "author": "shinich39",
            "description": "Extract metadata from image.",
            "nickname": "parse-image",
            "title": "parse-image",
            "title_aux": "comfyui-parse-image"
        }
    ],
    "https://github.com/shinich39/comfyui-put-image": [
        [
            "PutImage"
        ],
        {
            "author": "shinich39",
            "description": "Load image from directory.",
            "nickname": "put-image",
            "title": "put-image",
            "title_aux": "comfyui-put-image"
        }
    ],
    "https://github.com/shobhitic/ComfyUI-PlusMinusTextClip": [
        [
            "PlusMinusTextClip"
        ],
        {
            "title_aux": "PlusMinusTextClip - Single node for Positive and Negative Prompts"
        }
    ],
    "https://github.com/shockz0rz/comfy-easy-grids": [
        [
            "FloatToText",
            "GridFloatList",
            "GridFloats",
            "GridIntList",
            "GridInts",
            "GridLoras",
            "GridStringList",
            "GridStrings",
            "ImageGridCommander",
            "IntToText",
            "SaveImageGrid",
            "TextConcatenator"
        ],
        {
            "title_aux": "comfy-easy-grids"
        }
    ],
    "https://github.com/siliconflow/BizyAir": [
        [
            "BizyAirBAE_NormalMapPreprocessor",
            "BizyAirBinaryPreprocessor",
            "BizyAirCannyEdgePreprocessor",
            "BizyAirColorPreprocessor",
            "BizyAirDWPreprocessor",
            "BizyAirDepthAnythingV2Preprocessor",
            "BizyAirFakeScribblePreprocessor",
            "BizyAirGenerateLightningImage",
            "BizyAirHEDPreprocessor",
            "BizyAirJoyCaption",
            "BizyAirJoyCaption2",
            "BizyAirLeReS_DepthMapPreprocessor",
            "BizyAirLineArtPreprocessor",
            "BizyAirM_LSDPreprocessor",
            "BizyAirMetric3D_DepthMapPreprocessor",
            "BizyAirMetric3D_NormalMapPreprocessor",
            "BizyAirMiDaS_DepthMapPreprocessor",
            "BizyAirMiDaS_NormalMapPreprocessor",
            "BizyAirOneFormer_ADE20K_SemSegPreprocessor",
            "BizyAirOneFormer_COCO_SemSegPreprocessor",
            "BizyAirOpenposePreprocessor",
            "BizyAirPiDiNetPreprocessor",
            "BizyAirRemoveBackground",
            "BizyAirSAMPreprocessor",
            "BizyAirScribblePreprocessor",
            "BizyAirSegmentAnythingPointBox",
            "BizyAirSegmentAnythingText",
            "BizyAirSiliconCloudLLMAPI",
            "BizyAirSiliconCloudVLMAPI",
            "BizyAirTilePreprocessor",
            "BizyAirToggleServerEndpoint",
            "BizyAirUniFormer_SemSegPreprocessor",
            "BizyAirZoe_DepthMapPreprocessor",
            "BizyAir_MinusZoneChatGLM3TextEncode",
            "LayerMask: SegmentAnythingUltra V2",
            "StableDiffusionXLControlNetUnionPipeline"
        ],
        {
            "title_aux": "\u2601\ufe0fBizyAir Nodes"
        }
    ],
    "https://github.com/silveroxides/ComfyUI_bnb_nf4_fp4_Loaders": [
        [
            "CheckpointLoaderNF4",
            "UNETLoaderNF4"
        ],
        {
            "title_aux": "Model and Checkpoint Loaders for NF4 and FP4"
        }
    ],
    "https://github.com/sipherxyz/comfyui-art-venture": [
        [
            "AV_AwsBedrockClaudeApi",
            "AV_AwsBedrockMistralApi",
            "AV_CheckpointMerge",
            "AV_CheckpointModelsToParametersPipe",
            "AV_CheckpointSave",
            "AV_ClaudeApi",
            "AV_ControlNetEfficientLoader",
            "AV_ControlNetEfficientLoaderAdvanced",
            "AV_ControlNetEfficientStacker",
            "AV_ControlNetEfficientStackerSimple",
            "AV_ControlNetLoader",
            "AV_ControlNetPreprocessor",
            "AV_LLMApiConfig",
            "AV_LLMChat",
            "AV_LLMCompletion",
            "AV_LLMMessage",
            "AV_LoraListLoader",
            "AV_LoraListStacker",
            "AV_LoraLoader",
            "AV_OpenAIApi",
            "AV_ParametersPipeToCheckpointModels",
            "AV_ParametersPipeToPrompts",
            "AV_PromptsToParametersPipe",
            "AV_SAMLoader",
            "AV_VAELoader",
            "AspectRatioSelector",
            "BLIPCaption",
            "BLIPLoader",
            "BooleanPrimitive",
            "CheckpointNameSelector",
            "ColorBlend",
            "ColorCorrect",
            "DeepDanbooruCaption",
            "DependenciesEdit",
            "DownloadAndLoadBlip",
            "DownloadISNetModel",
            "Fooocus_KSampler",
            "Fooocus_KSamplerAdvanced",
            "GetBoolFromJson",
            "GetFloatFromJson",
            "GetIntFromJson",
            "GetObjectFromJson",
            "GetSAMEmbedding",
            "GetTextFromJson",
            "ISNetLoader",
            "ISNetSegment",
            "ImageAlphaComposite",
            "ImageApplyChannel",
            "ImageExtractChannel",
            "ImageGaussianBlur",
            "ImageMuxer",
            "ImageRepeat",
            "ImageScaleDown",
            "ImageScaleDownBy",
            "ImageScaleDownToSize",
            "ImageScaleToMegapixels",
            "LaMaInpaint",
            "LoadImageAsMaskFromUrl",
            "LoadImageFromUrl",
            "LoadJsonFromText",
            "LoadJsonFromUrl",
            "MergeModels",
            "NumberScaler",
            "OverlayInpaintedImage",
            "OverlayInpaintedLatent",
            "PrepareImageAndMaskForInpaint",
            "QRCodeGenerator",
            "RandomFloat",
            "RandomInt",
            "SAMEmbeddingToImage",
            "SDXLAspectRatioSelector",
            "SDXLPromptStyler",
            "SeedSelector",
            "StringToInt",
            "StringToNumber",
            "TextRandomMultiline",
            "TextSwitchCase"
        ],
        {
            "title_aux": "comfyui-art-venture"
        }
    ],
    "https://github.com/sipie800/ComfyUI-PuLID-Flux-Enhanced": [
        [
            "ApplyPulidFlux",
            "PulidFluxEvaClipLoader",
            "PulidFluxInsightFaceLoader",
            "PulidFluxModelLoader"
        ],
        {
            "title_aux": "ComfyUI-PuLID-Flux-Enhanced"
        }
    ],
    "https://github.com/skfoo/ComfyUI-Coziness": [
        [
            "LoraTextExtractor-b1f83aa2",
            "MultiLoraLoader-70bf3d77"
        ],
        {
            "title_aux": "ComfyUI-Coziness"
        }
    ],
    "https://github.com/slyt/comfyui-ollama-nodes": [
        [
            "BooleanToString",
            "DownloadHuggingfaceModel",
            "FloatToString",
            "GenerateOllama",
            "IntToString",
            "ListModels",
            "ListToString",
            "PullModel"
        ],
        {
            "title_aux": "comfyui-ollama-nodes"
        }
    ],
    "https://github.com/smagnetize/kb-comfyui-nodes": [
        [
            "SingleImageDataUrlLoader"
        ],
        {
            "title_aux": "kb-comfyui-nodes"
        }
    ],
    "https://github.com/smlbiobot/ComfyUI-Flux-Replicate-API": [
        [
            "SML_FluxProUltra_Replicate_Standalone",
            "SML_FluxPro_Replicate_Standalone"
        ],
        {
            "title_aux": "ComfyUI-Flux-Replicate-API"
        }
    ],
    "https://github.com/smthemex/ComfyUI_AnyDoor": [
        [
            "AnyDoor_LoadModel",
            "AnyDoor_img2img"
        ],
        {
            "title_aux": "ComfyUI_AnyDoor"
        }
    ],
    "https://github.com/smthemex/ComfyUI_CSGO_Wrapper": [
        [
            "Blip_Loader",
            "CSGO_Loader",
            "CSGO_Sampler"
        ],
        {
            "title_aux": "ComfyUI_CSGO_Wrapper"
        }
    ],
    "https://github.com/smthemex/ComfyUI_ChatGLM_API": [
        [
            "Glm_4_9b_Chat",
            "Glm_4v_9b",
            "Glm_Lcoal_Or_Repo",
            "ZhipuaiApi_Character",
            "ZhipuaiApi_Txt",
            "ZhipuaiApi_img"
        ],
        {
            "title_aux": "ComfyUI_ChatGLM_API"
        }
    ],
    "https://github.com/smthemex/ComfyUI_CustomNet": [
        [
            "CustomNet_LoadModel",
            "CustomNet_Sampler"
        ],
        {
            "title_aux": "ComfyUI_CustomNet"
        }
    ],
    "https://github.com/smthemex/ComfyUI_DeepFakeDefenders": [
        [
            "DeepFakeDefender_Loader",
            "DeepFakeDefender_Sampler"
        ],
        {
            "title_aux": "ComfyUI_DeepFakeDefenders"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Demucs": [
        [
            "Demucs_Loader",
            "Demucs_Sampler"
        ],
        {
            "title_aux": "ComfyUI_Demucs"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Diffree": [
        [
            "Diffree_Model_Loader",
            "Diffree_Sampler"
        ],
        {
            "title_aux": "ComfyUI_Diffree"
        }
    ],
    "https://github.com/smthemex/ComfyUI_EchoMimic": [
        [
            "Echo_LoadModel",
            "Echo_Sampler"
        ],
        {
            "title_aux": "ComfyUI_EchoMimic"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Face_Anon_Simple": [
        [
            "Face_Anon_Simple_Align",
            "Face_Anon_Simple_LoadModel",
            "Face_Anon_Simple_Sampler"
        ],
        {
            "title_aux": "ComfyUI_Face_Anon_Simple"
        }
    ],
    "https://github.com/smthemex/ComfyUI_FoleyCrafter": [
        [
            "FoleyCrafter_LoadModel",
            "FoleyCrafter_Sampler"
        ],
        {
            "title_aux": "ComfyUI_FoleyCrafter"
        }
    ],
    "https://github.com/smthemex/ComfyUI_FollowYourEmoji": [
        [
            "Emoji_Make_Temple",
            "FollowYouEmoji_LoadModel",
            "FollowYouEmoji_Sampler"
        ],
        {
            "title_aux": "ComfyUI_FollowYourEmoji"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Hallo2": [
        [
            "HalloLoader",
            "HalloPreImgAndAudio",
            "HallosSampler",
            "HallosUpscaleloader",
            "HallosVideoUpscale"
        ],
        {
            "title_aux": "ComfyUI_Hallo2"
        }
    ],
    "https://github.com/smthemex/ComfyUI_HiDiffusion_Pro": [
        [
            "HI_Diffusers_Model_Loader",
            "Hi_Sampler"
        ],
        {
            "title_aux": "ComfyUI_HiDiffusion_Pro"
        }
    ],
    "https://github.com/smthemex/ComfyUI_ID_Animator": [
        [
            "ID_Animator",
            "ID_Repo_Choice"
        ],
        {
            "title_aux": "ComfyUI_ID_Animator"
        }
    ],
    "https://github.com/smthemex/ComfyUI_InstantIR_Wrapper": [
        [
            "InstantIR_Loader",
            "InstantIR_Sampler"
        ],
        {
            "author": "zhaoyafei",
            "title_aux": "ComfyUI_InstantIR_Wrapper"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Llama3_8B": [
        [
            "ChatQA_1p5_8b",
            "Local_Or_Repo_Choice",
            "Meta_Llama3_8B",
            "MiniCPM_Llama3_V25"
        ],
        {
            "title_aux": "ComfyUI_Llama3_8B"
        }
    ],
    "https://github.com/smthemex/ComfyUI_MS_Diffusion": [
        [
            "MS_Object_img_Batch",
            "MSdiffusion_Model_Loader",
            "MSdiffusion_Sampler"
        ],
        {
            "title_aux": "ComfyUI_MS_Diffusion"
        }
    ],
    "https://github.com/smthemex/ComfyUI_MooER": [
        [
            "MooER_LoadModel",
            "MooER_Sampler"
        ],
        {
            "title_aux": "ComfyUI_MooER"
        }
    ],
    "https://github.com/smthemex/ComfyUI_OmniParser": [
        [
            "OmniParser_Loader",
            "OmniParser_Sampler"
        ],
        {
            "title_aux": "ComfyUI_OmniParser"
        }
    ],
    "https://github.com/smthemex/ComfyUI_PBR_Maker": [
        [
            "Load_MatForger",
            "MatForger_Sampler"
        ],
        {
            "title_aux": "ComfyUI_PBR_Maker"
        }
    ],
    "https://github.com/smthemex/ComfyUI_ParlerTTS": [
        [
            "ParlerTTS_LoadModel",
            "ParlerTTS_Sampler"
        ],
        {
            "title_aux": "ComfyUI_ParlerTTS"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Pic2Story": [
        [
            "Pic2Story_Loader",
            "Pic2Story_Sampler"
        ],
        {
            "title_aux": "ComfyUI_Pic2Story"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Pipeline_Tool": [
        [
            "Pipeline_Tool"
        ],
        {
            "title_aux": "ComfyUI_Pipeline_Tool"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Pops": [
        [
            "Pops_Decoder",
            "Pops_Repo_Loader",
            "Pops_Sampler"
        ],
        {
            "title_aux": "ComfyUI_Pops"
        }
    ],
    "https://github.com/smthemex/ComfyUI_SVFR": [
        [
            "SVFR_LoadModel",
            "SVFR_Sampler",
            "SVFR_img2mask"
        ],
        {
            "title_aux": "ComfyUI_SVFR"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Sapiens": [
        [
            "SapiensLoader",
            "SapiensSampler"
        ],
        {
            "title_aux": "ComfyUI_Sapiens"
        }
    ],
    "https://github.com/smthemex/ComfyUI_StableAudio_Open": [
        [
            "StableAudio_ModelLoader",
            "StableAudio_Sampler"
        ],
        {
            "title_aux": "ComfyUI_StableAudio_Open"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Stable_Makeup": [
        [
            "StableMakeup_LoadModel",
            "StableMakeup_Sampler"
        ],
        {
            "author": "Sajjad Ayobbi",
            "title_aux": "ComfyUI_Stable_Makeup"
        }
    ],
    "https://github.com/smthemex/ComfyUI_StoryDiffusion": [
        [
            "Comic_Type",
            "EasyFunction_Lite",
            "Pre_Translate_prompt",
            "Storydiffusion_Model_Loader",
            "Storydiffusion_Sampler"
        ],
        {
            "title_aux": "ComfyUI_StoryDiffusion"
        }
    ],
    "https://github.com/smthemex/ComfyUI_Streamv2v_Plus": [
        [
            "Stream_Lora_Loader",
            "Stream_Model_Loader",
            "Stream_Sampler"
        ],
        {
            "title_aux": "ComfyUI_Streamv2v_Plus"
        }
    ],
    "https://github.com/smthemex/ComfyUI_TRELLIS": [
        [
            "Trellis_LoadModel",
            "Trellis_Sampler",
            "Trellis_multiimage_loader"
        ],
        {
            "title_aux": "ComfyUI_TRELLIS"
        }
    ],
    "https://github.com/sn0w12/ComfyUI-Sn0w-Scripts": [
        [
            "Character Selector",
            "Copy/Paste Textbox",
            "Filter Tags",
            "Generate All Characters",
            "Get Font Size",
            "Load Lora Folder",
            "Load Lora Sn0w",
            "Lora Selector",
            "Lora Tester",
            "Prompt Combine",
            "Prompt Selector",
            "Sn0w KSampler",
            "Sn0w Lora Stacker",
            "Upscale Image With Model By"
        ],
        {
            "title_aux": "ComfyUI-Sn0w-Scripts"
        }
    ],
    "https://github.com/sneccc/comfyui-snek-nodes": [
        [
            "Aesthetics",
            "Aesthetics V2",
            "Load AI Toolkit Latent Flux",
            "Send_to_Eagle"
        ],
        {
            "title_aux": "comfyui-snek-nodes"
        }
    ],
    "https://github.com/solution9th/Comfyui_mobilesam": [
        [
            "MobileSamDetector",
            "MobileSamModelLoader",
            "MobileSamPredictor"
        ],
        {
            "title_aux": "Comfyui_mobilesam"
        }
    ],
    "https://github.com/souki202/ComfyUI-LoadImage-Advanced": [
        [
            "ColorAdjustment",
            "LoadImageUpscale",
            "LoadImageUpscaleBy"
        ],
        {
            "title_aux": "ComfyUI-LoadImage-Advanced"
        }
    ],
    "https://github.com/sourceful-official/LoadLoraModelOnlyWithUrl": [
        [
            "LoadLoraModelOnlyWithUrl"
        ],
        {
            "title_aux": "LoadLoraModelOnlyWithUrl"
        }
    ],
    "https://github.com/sousakujikken/ComfyUI-PixydustQuantizer": [
        [
            "CRTLikeEffectNode",
            "Quantizer",
            "XYBlurNode"
        ],
        {
            "title_aux": "ComfyUI-PixydustQuantizer"
        }
    ],
    "https://github.com/space-nuko/ComfyUI-Disco-Diffusion": [
        [
            "DiscoDiffusion_DiscoDiffusion",
            "DiscoDiffusion_DiscoDiffusionExtraSettings",
            "DiscoDiffusion_GuidedDiffusionLoader",
            "DiscoDiffusion_OpenAICLIPLoader"
        ],
        {
            "title_aux": "Disco Diffusion"
        }
    ],
    "https://github.com/space-nuko/ComfyUI-OpenPose-Editor": [
        [
            "Nui.OpenPoseEditor"
        ],
        {
            "title_aux": "OpenPose Editor"
        }
    ],
    "https://github.com/space-nuko/nui-suite": [
        [
            "Nui.DynamicPromptsTextGen",
            "Nui.FeelingLuckyTextGen",
            "Nui.OutputString"
        ],
        {
            "title_aux": "nui suite"
        }
    ],
    "https://github.com/spacepxl/ComfyUI-Depth-Pro": [
        [
            "DepthPro",
            "FocalFromList",
            "FocalMMtoPX",
            "FocalPXtoMM",
            "LoadDepthPro",
            "MetricDepthToInverse",
            "MetricDepthToRelative"
        ],
        {
            "title_aux": "ComfyUI-Depth-Pro"
        }
    ],
    "https://github.com/spacepxl/ComfyUI-Florence-2": [
        [
            "Florence2",
            "Florence2Postprocess",
            "Florence2PostprocessAll",
            "LoadFlorence2Model"
        ],
        {
            "title_aux": "ComfyUI-Florence-2"
        }
    ],
    "https://github.com/spacepxl/ComfyUI-HQ-Image-Save": [
        [
            "LoadEXR",
            "LoadEXRFrames",
            "LoadLatentEXR",
            "SaveEXR",
            "SaveEXRFrames",
            "SaveLatentEXR",
            "SaveTiff"
        ],
        {
            "title_aux": "ComfyUI-HQ-Image-Save"
        }
    ],
    "https://github.com/spacepxl/ComfyUI-Image-Filters": [
        [
            "AdainFilterLatent",
            "AdainImage",
            "AdainLatent",
            "AlphaClean",
            "AlphaMatte",
            "BatchAlign",
            "BatchAverageImage",
            "BatchAverageUnJittered",
            "BatchNormalizeImage",
            "BatchNormalizeLatent",
            "BetterFilmGrain",
            "BilateralFilterImage",
            "BlurImageFast",
            "BlurMaskFast",
            "ClampImage",
            "ClampOutliers",
            "ColorMatchImage",
            "ConditioningSubtract",
            "ConvertNormals",
            "CustomNoise",
            "DepthToNormals",
            "DifferenceChecker",
            "DilateErodeMask",
            "EnhanceDetail",
            "ExposureAdjust",
            "ExtractNFrames",
            "FrequencyCombine",
            "FrequencySeparate",
            "GameOfLife",
            "GuidedFilterAlpha",
            "GuidedFilterImage",
            "ImageConstant",
            "ImageConstantHSV",
            "InpaintConditionApply",
            "InpaintConditionEncode",
            "InstructPixToPixConditioningAdvanced",
            "JitterImage",
            "Keyer",
            "LatentNormalizeShuffle",
            "LatentStats",
            "MedianFilterImage",
            "MergeFramesByIndex",
            "ModelTest",
            "NormalMapSimple",
            "OffsetLatentImage",
            "PrintSigmas",
            "RelightSimple",
            "RemapRange",
            "RestoreDetail",
            "SharpenFilterLatent",
            "ShuffleChannels",
            "Tonemap",
            "UnJitterImage",
            "UnTonemap",
            "VisualizeLatents"
        ],
        {
            "title_aux": "ComfyUI-Image-Filters"
        }
    ],
    "https://github.com/spacepxl/ComfyUI-RAVE": [
        [
            "ConditioningDebug",
            "ImageGridCompose",
            "ImageGridDecompose",
            "KSamplerRAVE",
            "LatentGridCompose",
            "LatentGridDecompose"
        ],
        {
            "title_aux": "ComfyUI-RAVE"
        }
    ],
    "https://github.com/spacepxl/ComfyUI-StyleGan": [
        [
            "BatchAverageStyleGANLatents",
            "BlendStyleGANLatents",
            "GenerateStyleGANLatent",
            "LoadStyleGAN",
            "StyleGANInversion",
            "StyleGANLatentFromBatch",
            "StyleGANSampler"
        ],
        {
            "title_aux": "ComfyUI-StyleGan"
        }
    ],
    "https://github.com/spinagon/ComfyUI-seam-carving": [
        [
            "SeamCarving"
        ],
        {
            "title_aux": "ComfyUI-seam-carving"
        }
    ],
    "https://github.com/spinagon/ComfyUI-seamless-tiling": [
        [
            "CircularVAEDecode",
            "MakeCircularVAE",
            "OffsetImage",
            "SeamlessTile"
        ],
        {
            "title_aux": "Seamless tiling Node for ComfyUI"
        }
    ],
    "https://github.com/spro/comfyui-mirror": [
        [
            "LatentMirror"
        ],
        {
            "title_aux": "Latent Mirror node for ComfyUI"
        }
    ],
    "https://github.com/ssitu/ComfyUI_UltimateSDUpscale": [
        [
            "UltimateSDUpscale",
            "UltimateSDUpscaleCustomSample",
            "UltimateSDUpscaleNoUpscale"
        ],
        {
            "title_aux": "UltimateSDUpscale"
        }
    ],
    "https://github.com/ssitu/ComfyUI_fabric": [
        [
            "FABRICPatchModel",
            "FABRICPatchModelAdv",
            "KSamplerAdvFABRICAdv",
            "KSamplerFABRIC",
            "KSamplerFABRICAdv"
        ],
        {
            "title_aux": "ComfyUI fabric"
        }
    ],
    "https://github.com/ssitu/ComfyUI_restart_sampling": [
        [
            "KRestartSampler",
            "KRestartSamplerAdv",
            "KRestartSamplerCustom",
            "KRestartSamplerSimple",
            "RestartSampler",
            "RestartScheduler"
        ],
        {
            "title_aux": "Restart Sampling"
        }
    ],
    "https://github.com/ssitu/ComfyUI_roop": [
        [
            "RoopImproved",
            "roop"
        ],
        {
            "title_aux": "ComfyUI roop"
        }
    ],
    "https://github.com/stavsap/comfyui-ollama": [
        [
            "OllamaConnectivityV2",
            "OllamaGenerate",
            "OllamaGenerateAdvance",
            "OllamaGenerateV2",
            "OllamaLoadContext",
            "OllamaOptionsV2",
            "OllamaSaveContext",
            "OllamaVision"
        ],
        {
            "title_aux": "ComfyUI Ollama"
        }
    ],
    "https://github.com/stormcenter/ComfyUI-AutoSplitGridImage": [
        [
            "EvenImageResizer",
            "GridImageSplitter"
        ],
        {
            "title_aux": "ComfyUI-AutoSplitGridImage"
        }
    ],
    "https://github.com/stormcenter/ComfyUI-LivePhotoCreator": [
        [
            "ImageCompareTransition",
            "LivePhotoCreator",
            "LivePhotoPreview"
        ],
        {
            "title_aux": "ComfyUI LivePhoto Creator"
        }
    ],
    "https://github.com/stormcenter/ComfyUI-SVGFullfill": [
        [
            "SVGEditor",
            "SVGUploader"
        ],
        {
            "title_aux": "ComfyUI-SVGFullfill"
        }
    ],
    "https://github.com/storyicon/comfyui_musev_evolved": [
        [
            "AnimationZoom (comfyui_musev_evolved)",
            "ImageSelector (comfyui_musev_evolved)",
            "MuseVImg2Vid V1 (comfyui_musev_evolved)",
            "MuseVPredictor V1 (comfyui_musev_evolved)"
        ],
        {
            "author": "infguo",
            "title_aux": "ComfyUI MuseV Evolved"
        }
    ],
    "https://github.com/storyicon/comfyui_segment_anything": [
        [
            "GroundingDinoModelLoader (segment anything)",
            "GroundingDinoSAMSegment (segment anything)",
            "InvertMask (segment anything)",
            "IsMaskEmpty",
            "SAMModelLoader (segment anything)"
        ],
        {
            "title_aux": "segment anything"
        }
    ],
    "https://github.com/strimmlarn/ComfyUI-Strimmlarns-Aesthetic-Score": [
        [
            "AesthetlcScoreSorter",
            "CalculateAestheticScore",
            "LoadAesteticModel",
            "ScoreToNumber"
        ],
        {
            "title_aux": "ComfyUI_Strimmlarns_aesthetic_score"
        }
    ],
    "https://github.com/styler00dollar/ComfyUI-deepcache": [
        [
            "DeepCache"
        ],
        {
            "title_aux": "ComfyUI-deepcache"
        }
    ],
    "https://github.com/styler00dollar/ComfyUI-sudo-latent-upscale": [
        [
            "SudoLatentUpscale"
        ],
        {
            "title_aux": "ComfyUI-sudo-latent-upscale"
        }
    ],
    "https://github.com/sugarkwork/comfyui_cohere": [
        [
            "SimpleCohereNode"
        ],
        {
            "title_aux": "comfyui_cohere"
        }
    ],
    "https://github.com/sugarkwork/comfyui_tag_fillter": [
        [
            "TagComparator",
            "TagFilter",
            "TagIf",
            "TagMerger",
            "TagRemover",
            "TagReplace",
            "TagSelector",
            "TagSwitcher"
        ],
        {
            "title_aux": "comfyui_tag_filter"
        }
    ],
    "https://github.com/superyoman/comfyui_lumaAPI": [
        [
            "LUMA_API_YoC",
            "LUMA_API_result_YoC"
        ],
        {
            "title_aux": "comfyui_lumaAPI"
        }
    ],
    "https://github.com/sweetndata/ComfyUI-Image-Harmonizer": [
        [
            "harmonizer"
        ],
        {
            "title_aux": "ComfyUI-Image-Harmonizer"
        }
    ],
    "https://github.com/sweetndata/ComfyUI-googletrans": [
        [
            "googletrans"
        ],
        {
            "title_aux": "ComfyUI-googletrans"
        }
    ],
    "https://github.com/sweetndata/ComfyUI_Sticker_Compositer": [
        [
            "Sticker_Compositer"
        ],
        {
            "title_aux": "ComfyUI_Sticker_Compositer"
        }
    ],
    "https://github.com/syaofox/ComfyUI_fnodes": [
        [
            "AddImageBorder-",
            "AlignImageByFace-",
            "ColorAdjustment-",
            "ColorBlockEffect-",
            "ColorTint-",
            "ComputeImageScaleRatio-",
            "CreateBlurredEdgeMask-",
            "Depth2Mask-",
            "DisplayAny-",
            "ExtractBoundingBox-",
            "FaceCutout-",
            "FaceMorph-",
            "FacePaste-",
            "FilePathAnalyzer-",
            "FillMaskedImageArea-",
            "FlatteningEffect-",
            "GeneratePreciseFaceMask-",
            "GetImageSize-",
            "IPAdapterMSLayerWeights-",
            "IPAdapterMSTiled-",
            "ImageRotate-",
            "ImageScaleBySpecifiedSide-",
            "ImageScalerForSDModels-",
            "LoadImagesFromFolder-",
            "MaskChange-",
            "MaskScale-",
            "MaskScaleBy-",
            "OccluderLoader-",
            "OutlineMask-",
            "PrimitiveText-",
            "ReadImage-",
            "RegexExtractor-",
            "ScheduleSampler-",
            "ScheduleSamplerCustomAYS-",
            "ScheduleSamplerCustomTurbo-",
            "Seed-",
            "SelectFace-",
            "TrimImageBorders-"
        ],
        {
            "title_aux": "ComfyUI_fnodes"
        }
    ],
    "https://github.com/syllebra/bilbox-comfyui": [
        [
            "BilboXLut",
            "BilboXPhotoPrompt",
            "BilboXVignette"
        ],
        {
            "title_aux": "BilboX's ComfyUI Custom Nodes"
        }
    ],
    "https://github.com/sylym/comfy_vid2vid": [
        [
            "CheckpointLoaderSimpleSequence",
            "DdimInversionSequence",
            "KSamplerSequence",
            "LoadImageMaskSequence",
            "LoadImageSequence",
            "LoraLoaderSequence",
            "SetLatentNoiseSequence",
            "TrainUnetSequence",
            "VAEEncodeForInpaintSequence"
        ],
        {
            "title_aux": "Vid2vid"
        }
    ],
    "https://github.com/szhublox/ambw_comfyui": [
        [
            "Auto Merge Block Weighted",
            "CLIPMergeSimple",
            "CheckpointSave",
            "ModelMergeBlocks",
            "ModelMergeSimple"
        ],
        {
            "title_aux": "Auto-MBW"
        }
    ],
    "https://github.com/taabata/LCM_Inpaint_Outpaint_Comfy": [
        [
            "ComfyNodesToSaveCanvas",
            "FloatNumber",
            "FreeU_LCM",
            "ImageDims",
            "ImageOutputToComfyNodes",
            "ImageResize",
            "ImageShuffle",
            "ImageSwitch",
            "LCMGenerate",
            "LCMGenerate_ReferenceOnly",
            "LCMGenerate_SDTurbo",
            "LCMGenerate_img2img",
            "LCMGenerate_img2img_IPAdapter",
            "LCMGenerate_img2img_controlnet",
            "LCMGenerate_inpaintv2",
            "LCMGenerate_inpaintv3",
            "LCMLoader",
            "LCMLoader_RefInpaint",
            "LCMLoader_ReferenceOnly",
            "LCMLoader_SDTurbo",
            "LCMLoader_controlnet",
            "LCMLoader_controlnet_inpaint",
            "LCMLoader_img2img",
            "LCMLoraLoader_inpaint",
            "LCMLoraLoader_ipadapter",
            "LCMLora_inpaint",
            "LCMLora_inpaintV2",
            "LCMLora_ipadapter",
            "LCMT2IAdapter",
            "LCM_IPAdapter",
            "LCM_IPAdapter_inpaint",
            "LCM_outpaint_prep",
            "LoadImageNode_LCM",
            "Loader_SegmindVega",
            "OutpaintCanvasTool",
            "SaveImage_Canvas",
            "SaveImage_LCM",
            "SaveImage_Puzzle",
            "SaveImage_PuzzleV2",
            "SegmindVega",
            "SettingsSwitch",
            "stitch"
        ],
        {
            "title_aux": "LCM_Inpaint-Outpaint_Comfy"
        }
    ],
    "https://github.com/taabata/SANA_LOWVRAM": [
        [
            "SANADiffuse",
            "SANATextEncode"
        ],
        {
            "title_aux": "SANA_LOWVRAM"
        }
    ],
    "https://github.com/taches-ai/comfyui-scene-composer": [
        [
            "Action",
            "Character",
            "Clothes",
            "Composition",
            "Environment",
            "Scene"
        ],
        {
            "title_aux": "ComfyUI Scene Composer"
        }
    ],
    "https://github.com/takemetosiberia/ComfyUI-SAMURAI--SAM2-": [
        [
            "SAMURAIBoxInputNode",
            "SAMURAIPointsInputNode",
            "SAMURAIRefineNode"
        ],
        {
            "title_aux": "SAMURAI Nodes for ComfyUI"
        }
    ],
    "https://github.com/talesofai/comfyui-browser": [
        [
            "DifyTextGenerator //Browser",
            "LoadImageByUrl //Browser",
            "SelectInputs //Browser",
            "UploadToRemote //Browser",
            "XyzPlot //Browser"
        ],
        {
            "title_aux": "ComfyUI Browser"
        }
    ],
    "https://github.com/tanglaoya321/ComfyUI-StoryMaker": [
        [
            "StoryMakerSinglePortraitNode",
            "StoryMakerSwapClothNode",
            "StoryMakerTwoPortraitNode"
        ],
        {
            "title_aux": "ComfyUI-StoryMaker"
        }
    ],
    "https://github.com/teward/ComfyUI-Helper-Nodes": [
        [
            "HelperNodes_CfgScale",
            "HelperNodes_CheckpointSelector",
            "HelperNodes_MultilineStringLiteral",
            "HelperNodes_Prompt",
            "HelperNodes_SDXLCommonResolutions",
            "HelperNodes_SamplerSelector",
            "HelperNodes_SaveImage",
            "HelperNodes_SchedulerSelector",
            "HelperNodes_SeedSelector",
            "HelperNodes_Steps",
            "HelperNodes_StringLiteral",
            "HelperNodes_VAESelector",
            "HelperNodes_WidthHeight"
        ],
        {
            "title_aux": "ComfyUI-Helper-Nodes"
        }
    ],
    "https://github.com/theUpsider/ComfyUI-Logic": [
        [
            "Bool-\ud83d\udd2c",
            "Compare-\ud83d\udd2c",
            "DebugPrint-\ud83d\udd2c",
            "Float-\ud83d\udd2c",
            "If ANY execute A else B-\ud83d\udd2c",
            "If ANY return A else B-\ud83d\udd2c",
            "Int-\ud83d\udd2c",
            "String-\ud83d\udd2c"
        ],
        {
            "title_aux": "ComfyUI-Logic"
        }
    ],
    "https://github.com/theUpsider/ComfyUI-Styles_CSV_Loader": [
        [
            "Load Styles CSV"
        ],
        {
            "title_aux": "Styles CSV Loader Extension for ComfyUI"
        }
    ],
    "https://github.com/thecooltechguy/ComfyUI-MagicAnimate": [
        [
            "MagicAnimate",
            "MagicAnimateModelLoader"
        ],
        {
            "title_aux": "ComfyUI-MagicAnimate"
        }
    ],
    "https://github.com/thecooltechguy/ComfyUI-Stable-Video-Diffusion": [
        [
            "SVDDecoder",
            "SVDModelLoader",
            "SVDSampler",
            "SVDSimpleImg2Vid"
        ],
        {
            "title_aux": "ComfyUI Stable Video Diffusion"
        }
    ],
    "https://github.com/thoddnn/ComfyUI-MLX": [
        [
            "MLXClipTextEncoder",
            "MLXDecoder",
            "MLXLoadFlux",
            "MLXSampler"
        ],
        {
            "title_aux": "ComfyUI MLX Nodes"
        }
    ],
    "https://github.com/tianguanggliu/Utools": [
        [
            "UTools"
        ],
        {
            "title_aux": "comfyui-utools"
        }
    ],
    "https://github.com/tiankuan93/ComfyUI-V-Express": [
        [
            "Load_Audio_Path",
            "Load_Audio_Path_From_Video",
            "Load_Image_Path",
            "Load_Kps_Path",
            "Load_Kps_Path_From_Video",
            "Load_Video_Path",
            "VEINTConstant",
            "VEPreview_Video",
            "VEStringConstant",
            "V_Express_Loader",
            "V_Express_Sampler"
        ],
        {
            "title_aux": "V-Express: Conditional Dropout for Progressive Training of Portrait Video Generation"
        }
    ],
    "https://github.com/tianlang0704/ComfyUI-StableProjectorzBridge": [
        [
            "ProjectorzControlnetInput",
            "ProjectorzControlnetParameter",
            "ProjectorzInitInput",
            "ProjectorzOutput",
            "ProjectorzParameter",
            "ProjectorzStringToFloat",
            "ProjectorzStringToInt"
        ],
        {
            "title_aux": "Stable Projectorz Bridge"
        }
    ],
    "https://github.com/tkreuziger/comfyui-claude": [
        [
            "Combine Texts",
            "Describe Image",
            "Transform Text"
        ],
        {
            "title_aux": "ComfyUI and Claude"
        }
    ],
    "https://github.com/tmagara/ComfyUI-Prediction-Boost": [
        [
            "PredictionBoost"
        ],
        {
            "title_aux": "ComfyUI-Prediction-Boost"
        }
    ],
    "https://github.com/tocubed/ComfyUI-AudioReactor": [
        [
            "AudioFrameTransformBeats",
            "AudioFrameTransformShadertoy",
            "AudioLoadPath",
            "Shadertoy"
        ],
        {
            "title_aux": "ComfyUI-AudioReactor"
        }
    ],
    "https://github.com/tocubed/ComfyUI-EvTexture": [
        [
            "EVTEventsToImage",
            "EVTLoadEvTextureModel",
            "EVTTextureUpscaleVideo",
            "EVTVideoToEvents"
        ],
        {
            "title_aux": "ComfyUI-EvTexture"
        }
    ],
    "https://github.com/tomudo/ComfyUI-ascii-art": [
        [
            "ImageToAscii"
        ],
        {
            "author": "dfl",
            "description": "CLIP text encoder that does BREAK prompting like A1111",
            "nickname": "CLIP with BREAK",
            "title": "CLIP with BREAK syntax",
            "title_aux": "ComfyUI-ascii-art"
        }
    ],
    "https://github.com/tooldigital/ComfyUI-Yolo-Cropper": [
        [
            "ToolYoloCropper"
        ],
        {
            "title_aux": "Easy automatic (square) image cropper using Yolo"
        }
    ],
    "https://github.com/toxicwind/ComfyUI-TTools": [
        [
            "TTools Extract JSON",
            "TTools SD3 Resolution Solver"
        ],
        {
            "title_aux": "TTools for ComfyUI"
        }
    ],
    "https://github.com/toyxyz/ComfyUI_rgbx_Wrapper": [
        [
            "rgb2x"
        ],
        {
            "title_aux": "ComfyUI_rgbx_Wrapper"
        }
    ],
    "https://github.com/toyxyz/ComfyUI_toyxyz_test_nodes": [
        [
            "CaptureWebcam",
            "Depth to normal",
            "Direct Screen Capture",
            "Export glb",
            "ImageResize_Padding",
            "LatentDelay",
            "Load Random Text From File",
            "LoadWebcamImage",
            "Remove noise",
            "SaveImagetoPath"
        ],
        {
            "title_aux": "ComfyUI_toyxyz_test_nodes"
        }
    ],
    "https://github.com/traugdor/ComfyUI-quadMoons-nodes": [
        [
            "quadmoonBatchFromLatent",
            "quadmoonCLIPTextEncode",
            "quadmoonChangeBackground",
            "quadmoonConvertBoolToString",
            "quadmoonConvertFloatToString",
            "quadmoonConvertIntToString",
            "quadmoonConvertNormalizeHW",
            "quadmoonConvertNumberToString",
            "quadmoonINTConditionalOperation",
            "quadmoonKSampler",
            "quadmoonKSamplerAdvanced",
            "quadmoonKSamplerBatched",
            "quadmoonLatentImage",
            "quadmoonLoadConfigs",
            "quadmoonModelLoader",
            "quadmoonRotationalSampler",
            "quadmoonSaveNeg",
            "quadmoonSavePrompt",
            "quadmoonSmartNeg",
            "quadmoonSmartPrompt",
            "quadmoonThebutton"
        ],
        {
            "author": "quadmoon (https://github.com/traugdor)",
            "description": "These are just some nodes I wanted and couldn't find where anyone else had made them yet.",
            "nickname": "quadmoon's Nodes",
            "title": "quadmoon's ComfyUI nodes",
            "title_aux": "quadmoon's ComfyUI nodes"
        }
    ],
    "https://github.com/tritant/ComfyUI_CreaPrompt": [
        [
            "CreaPrompt",
            "CreaPrompt List",
            "CreaPrompt_1",
            "CreaPrompt_2",
            "CreaPrompt_3",
            "CreaPrompt_4"
        ],
        {
            "title_aux": "ComfyUI-CreaPrompt"
        }
    ],
    "https://github.com/trojblue/trNodes": [
        [
            "trColorCorrection",
            "trLayering",
            "trRouter",
            "trRouterLonger"
        ],
        {
            "title_aux": "trNodes"
        }
    ],
    "https://github.com/troyxmccall/ComfyUI-ScaleToTargetMegapixels": [
        [
            "ScaleToTargetMegapixels"
        ],
        {
            "title_aux": "ComfyUI-ScaleToTargetMegapixels"
        }
    ],
    "https://github.com/trumanwong/ComfyUI-NSFW-Detection": [
        [
            "NSFWDetection"
        ],
        {
            "title_aux": "ComfyUI-NSFW-Detection"
        }
    ],
    "https://github.com/tsogzark/ComfyUI-load-image-from-url": [
        [
            "LoadImageFromUrlOrPath"
        ],
        {
            "title_aux": "ComfyUI-load-image-from-url"
        }
    ],
    "https://github.com/ttulttul/ComfyUI-Iterative-Mixer": [
        [
            "Batch Unsampler",
            "Iterative Mixing KSampler",
            "Iterative Mixing KSampler Advanced",
            "IterativeMixingSampler",
            "IterativeMixingScheduler",
            "IterativeMixingSchedulerAdvanced",
            "Latent Batch Comparison Plot",
            "Latent Batch Statistics Plot",
            "MixingMaskGenerator"
        ],
        {
            "title_aux": "ComfyUI Iterative Mixing Nodes"
        }
    ],
    "https://github.com/ttulttul/ComfyUI-Tensor-Operations": [
        [
            "Fast Image to Noise",
            "Image Match Normalize",
            "Latent Match Normalize"
        ],
        {
            "title_aux": "ComfyUI-Tensor-Operations"
        }
    ],
    "https://github.com/tungdop2/Comfyui_face_restorer": [
        [
            "FaceRestorer",
            "FaceRestorerLoader"
        ],
        {
            "title_aux": "Face Restorer for ComfyUI"
        }
    ],
    "https://github.com/tungdop2/Comfyui_joy-caption-alpha-two": [
        [
            "JoyCaptioner"
        ],
        {
            "title_aux": "Joy Caption Alpha Two for ComfyUI"
        }
    ],
    "https://github.com/turkyden/ComfyUI-SmartCrop": [
        [
            "ImageSmartCrop"
        ],
        {
            "title_aux": "ComfyUI-SmartCrop"
        }
    ],
    "https://github.com/tusharbhutt/Endless-Nodes": [
        [
            "ESS Aesthetic Scoring",
            "ESS Combo Parameterizer",
            "ESS Combo Parameterizer & Prompts",
            "ESS Eight Input Text Switch",
            "ESS Float to Integer",
            "ESS Float to Number",
            "ESS Float to String",
            "ESS Float to X",
            "ESS Image Reward",
            "ESS Image Saver with JSON",
            "ESS Integer to Float",
            "ESS Integer to Number",
            "ESS Integer to String",
            "ESS Integer to X",
            "ESS Number to Float",
            "ESS Number to Integer",
            "ESS Number to String",
            "ESS Number to X",
            "ESS Parameterizer",
            "ESS Parameterizer & Prompts",
            "ESS Six Float Output",
            "ESS Six Input Text Switch",
            "ESS Six Integer IO Switch",
            "ESS Six Integer IO Widget",
            "ESS String to Float",
            "ESS String to Integer",
            "ESS String to Num",
            "ESS String to X",
            "\u267e\ufe0f\ud83c\udf0a\u2728 Image Saver with JSON"
        ],
        {
            "author": "BiffMunky",
            "description": "A small set of nodes I created for various numerical and text inputs.  Features image saver with ability to have JSON saved to separate folder, parameter collection nodes, two aesthetic scoring models, switches for text and numbers, and conversion of string to numeric and vice versa.",
            "nickname": "\u267e\ufe0f\ud83c\udf0a\u2728",
            "title": "Endless \ufe0f\ud83c\udf0a\u2728 Nodes",
            "title_aux": "Endless \ufe0f\ud83c\udf0a\u2728 Nodes"
        }
    ],
    "https://github.com/twri/sdxl_prompt_styler": [
        [
            "SDXLPromptStyler",
            "SDXLPromptStylerAdvanced"
        ],
        {
            "title_aux": "SDXL Prompt Styler"
        }
    ],
    "https://github.com/ty0x2333/ComfyUI-Dev-Utils": [
        [
            "TY_ExecutionTime",
            "TY_UploadAnything",
            "TY_UrlDownload"
        ],
        {
            "title_aux": "ComfyUI-Dev-Utils"
        }
    ],
    "https://github.com/uarefans/ComfyUI-Fans": [
        [
            "Fans Prompt Styler Negative",
            "Fans Prompt Styler Positive",
            "Fans Styler",
            "Fans Text Concatenate"
        ],
        {
            "title_aux": "ComfyUI-Fans"
        }
    ],
    "https://github.com/uetuluk/comfyui-webcam-node": [
        [
            "webcam_capture_node"
        ],
        {
            "title_aux": "comfyui-webcam-node"
        }
    ],
    "https://github.com/umiyuki/comfyui-pad-to-eight": [
        [
            "Pad To Eight"
        ],
        {
            "title_aux": "ComfyUI Pad To Eight"
        }
    ],
    "https://github.com/un-seen/comfyui-tensorops": [
        [
            "BackgroundSelect",
            "ChannelSelector",
            "DownloadAndLoadFlorence2Model",
            "DownloadAndLoadSAM2Model",
            "FaceSwap",
            "FalDifferentialDiffusion",
            "FalDiffusion",
            "FetchFromRedis",
            "FetchJsonFromSurreal",
            "Florence2Run",
            "Florence2toCoordinates",
            "ForegroundMask",
            "GetLayerMask",
            "MaskImage",
            "Sam2AutoSegmentation",
            "Sam2Segmentation",
            "Sam2VideoSegmentation",
            "Sam2VideoSegmentationAddPoints",
            "SaveImageToS3",
            "SaveJsonToSurreal",
            "SaveTextToSurreal",
            "SaveToRedis",
            "SendImageOnWebSocket",
            "SendJsonOnWebSocket",
            "SeparateMask"
        ],
        {
            "title_aux": "comfyui-tensorop"
        }
    ],
    "https://github.com/un-seen/comfyui_segment_anything_plus": [
        [
            "GroundingDinoModelLoader (segment anything plus)",
            "GroundingDinoSAMSegment (segment anything plus)",
            "InvertMask (segment anything plus)",
            "IsMaskEmpty  (segment anything plus)",
            "SAMModelLoader (segment anything plus)"
        ],
        {
            "title_aux": "ComfyUI Segment Anything"
        }
    ],
    "https://github.com/unwdef/unwdef-nodes-comfyui": [
        [
            "RandomTextFromMultiline",
            "RandomizeLoras",
            "RandomizeLorasStack",
            "TextMultilineWithVariables"
        ],
        {
            "title_aux": "unwdef-nodes"
        }
    ],
    "https://github.com/valofey/Openrouter-Node": [
        [
            "OpenrouterNode"
        ],
        {
            "title_aux": "OpenRouter Node"
        }
    ],
    "https://github.com/vanche1212/ComfyUI-ZMG-Nodes": [
        [
            "VC_Load_Video_Path_Unified_Output",
            "VC_Load_Video_Upload_Unified_Output",
            "VC_Video_Combine_Unified_Output",
            "Waveform2Audio",
            "\ud83d\ude0bAPI Request Node",
            "\ud83d\ude0bJSON Parser Node",
            "\ud83d\ude0bOld Photo Colorization Node",
            "\ud83d\ude0bOllama Request Node",
            "\ud83d\ude0bSave Image Unified Output"
        ],
        {
            "title_aux": "ZMG PLUGIN"
        }
    ],
    "https://github.com/vanillacode314/SimpleWildcardsComfyUI": [
        [
            "SimpleConcat",
            "SimpleWildcard"
        ],
        {
            "author": "VanillaCode314",
            "description": "A simple wildcard node for ComfyUI. Can also be used a style prompt node.",
            "nickname": "Simple Wildcard",
            "title": "Simple Wildcard",
            "title_aux": "Simple Wildcard"
        }
    ],
    "https://github.com/var1ableX/ComfyUI_Accessories": [
        [
            "GetMaskDimensions",
            "GetRandomDimensions",
            "isMaskEmpty"
        ],
        {
            "title_aux": "ComfyUI_Accessories"
        }
    ],
    "https://github.com/vault-developer/comfyui-image-blender": [
        [
            "ImageBlender"
        ],
        {
            "title_aux": "ImageBlender"
        }
    ],
    "https://github.com/veighnsche/comfyui_gr85": [
        [
            "GR85_CTGPhrases",
            "GR85_CTGPhrasesSimple",
            "GR85_ContainsWord",
            "GR85_FilterAndCombineMasks",
            "GR85_Florence2RunCTPG",
            "GR85_Florence2toCoordinatesGR85",
            "GR85_FluxAttentionSeeker2",
            "GR85_FluxAttentionSeeker3",
            "GR85_FluxAttentionSeekerGenerator",
            "GR85_FluxModelMergeParameters",
            "GR85_ImageDimensionResizer",
            "GR85_ImageSizer",
            "GR85_ImageSizerAll",
            "GR85_IntToString",
            "GR85_IntegerSequenceModifier",
            "GR85_IslandMaskGenerator",
            "GR85_MaskBatchToSEGS",
            "GR85_MaskConnectMST",
            "GR85_MaskSplitter",
            "GR85_NextSeed",
            "GR85_PasteByMaskGr85",
            "GR85_RandomFloat",
            "GR85_RandomInt",
            "GR85_RandomRatio",
            "GR85_RandomizedMaskTransform",
            "GR85_Sam2Segmentation",
            "GR85_SaveImageFile",
            "GR85_SaveTextFile",
            "GR85_SeedBasedOutputSelector",
            "GR85_ShowText",
            "GR85_SimpleWildcardPicker",
            "GR85_StrSafe",
            "GR85_TagInjector",
            "GR85_TagInjectorDuo",
            "GR85_TagInjectorLarge",
            "GR85_TagInjectorSingle",
            "GR85_VerticalWildcardPicker"
        ],
        {
            "title_aux": "comfyui_gr85"
        }
    ],
    "https://github.com/victorchall/comfyui_webcamcapture": [
        [
            "WebcamCapture"
        ],
        {
            "title_aux": "Comfyui Webcam capture node"
        }
    ],
    "https://github.com/vienteck/ComfyUI-Chat-GPT-Integration": [
        [
            "ChatGptPrompt"
        ],
        {
            "title_aux": "ComfyUI-Chat-GPT-Integration"
        }
    ],
    "https://github.com/violet-chen/comfyui-psd2png": [
        [
            "Psd2Png"
        ],
        {
            "title_aux": "comfyui-psd2png"
        }
    ],
    "https://github.com/viperyl/ComfyUI-RGT": [
        [
            "RGT_Upscale"
        ],
        {
            "title_aux": "ComfyUI-RGT"
        }
    ],
    "https://github.com/vivax3794/ComfyUI-Sub-Nodes": [
        [
            "VIV_Default",
            "VIV_Subgraph",
            "VIV_Subgraph_Inputs",
            "VIV_Subgraph_Outputs"
        ],
        {
            "title_aux": "ComfyUI-Sub-Nodes"
        }
    ],
    "https://github.com/vivax3794/ComfyUI-Vivax-Nodes": [
        [
            "Any String",
            "Chunk Up",
            "Get Chunk",
            "Inspect",
            "Join Chunks",
            "Model From URL"
        ],
        {
            "title_aux": "ComfyUI-Vivax-Nodes"
        }
    ],
    "https://github.com/vkff5833/ComfyUI-PromptConverter": [
        [
            "PromptConverter"
        ],
        {
            "title_aux": "ComfyUI-PromptConverter"
        }
    ],
    "https://github.com/vsevolod-oparin/comfyui-kandinsky22": [
        [
            "comfy-kandinsky22-decoder-loader",
            "comfy-kandinsky22-hint-combiner",
            "comfy-kandinsky22-image-encoder",
            "comfy-kandinsky22-img-latents",
            "comfy-kandinsky22-latents",
            "comfy-kandinsky22-movq-decoder",
            "comfy-kandinsky22-positive-text-encoder",
            "comfy-kandinsky22-prior-averaging-2",
            "comfy-kandinsky22-prior-averaging-3",
            "comfy-kandinsky22-prior-averaging-4",
            "comfy-kandinsky22-prior-loader",
            "comfy-kandinsky22-text-encoder",
            "comfy-kandinsky22-unet-decoder"
        ],
        {
            "title_aux": "Kandinsky 2.2 ComfyUI Plugin"
        }
    ],
    "https://github.com/vuongminh1907/ComfyUI_ZenID": [
        [
            "ApplyZenID",
            "InstantIDFaceAnalysis",
            "InstantIDModelLoader",
            "ZenIDCombineFace"
        ],
        {
            "title_aux": "ComfyUI_ZenID"
        }
    ],
    "https://github.com/wTechArtist/ComfyUI-CustomNodes": [
        [
            "GPT4 WWL",
            "IPAdapter FaceID With Bool",
            "IPAdapter Mad Scientist Weight_Type",
            "Image Blending Mode Mask",
            "Load Image With Bool",
            "Load Lora With Shared"
        ],
        {
            "title_aux": "ComfyUI-CustomNodes"
        }
    ],
    "https://github.com/wTechArtist/ComfyUI-StableDelight-weiweiliang": [
        [
            "StableDelight-weiweiliang"
        ],
        {
            "title_aux": "ComfyUI-StableDelight-weiweiliang"
        }
    ],
    "https://github.com/wallish77/wlsh_nodes": [
        [
            "Alternating KSampler (WLSH)",
            "Build Filename String (WLSH)",
            "CLIP +/- w/Text Unified (WLSH)",
            "CLIP Positive-Negative (WLSH)",
            "CLIP Positive-Negative XL (WLSH)",
            "CLIP Positive-Negative XL w/Text (WLSH)",
            "CLIP Positive-Negative w/Text (WLSH)",
            "Checkpoint Loader w/Name (WLSH)",
            "Empty Latent by Pixels (WLSH)",
            "Empty Latent by Ratio (WLSH)",
            "Empty Latent by Size (WLSH)",
            "Generate Border Mask (WLSH)",
            "Grayscale Image (WLSH)",
            "Image Load with Metadata (WLSH)",
            "Image Save with Prompt (WLSH)",
            "Image Save with Prompt File (WLSH)",
            "Image Save with Prompt/Info (WLSH)",
            "Image Save with Prompt/Info File (WLSH)",
            "Image Scale By Factor (WLSH)",
            "Image Scale by Shortside (WLSH)",
            "KSamplerAdvanced (WLSH)",
            "Multiply Integer (WLSH)",
            "Outpaint to Image (WLSH)",
            "Prompt Weight (WLSH)",
            "Quick Resolution Multiply (WLSH)",
            "Resolutions by Ratio (WLSH)",
            "SDXL Quick Empty Latent (WLSH)",
            "SDXL Quick Image Scale (WLSH)",
            "SDXL Resolutions (WLSH)",
            "SDXL Steps (WLSH)",
            "Save Positive Prompt(WLSH)",
            "Save Prompt (WLSH)",
            "Save Prompt/Info (WLSH)",
            "Seed and Int (WLSH)",
            "Seed to Number (WLSH)",
            "Simple Pattern Replace (WLSH)",
            "Simple String Combine (WLSH)",
            "Time String (WLSH)",
            "Upscale by Factor with Model (WLSH)",
            "VAE Encode for Inpaint w/Padding (WLSH)"
        ],
        {
            "title_aux": "wlsh_nodes"
        }
    ],
    "https://github.com/web3nomad/ComfyUI_Invisible_Watermark": [
        [
            "InvisibleWatermarkEncode"
        ],
        {
            "title_aux": "ComfyUI Invisible Watermark"
        }
    ],
    "https://github.com/webfiltered/DebugNode-ComfyUI": [
        [
            "WTFDebugNode"
        ],
        {
            "title_aux": "WTF? - a debug node for ComfyUI"
        }
    ],
    "https://github.com/weilin9999/WeiLin-ComfyUI-prompt-all-in-one": [
        [
            "WeiLinComfyUIPromptAllInOneGreat",
            "WeiLinComfyUIPromptAllInOneNeg",
            "WeiLinComfyUIPromptToLoras",
            "WeiLinComfyUIPromptToLorasOnly",
            "WeiLinPromptToString"
        ],
        {
            "title_aux": "WeiLin-ComfyUI-prompt-all-in-one"
        }
    ],
    "https://github.com/weilin9999/WeiLin-Comfyui-Tools": [
        [
            "WeiLinPromptUI"
        ],
        {
            "title_aux": "WeiLin-Comfyui-Tools"
        }
    ],
    "https://github.com/welltop-cn/ComfyUI-TeaCache": [
        [
            "TeaCacheForImgGen",
            "TeaCacheForVidGen"
        ],
        {
            "title_aux": "ComfyUI-TeaCache"
        }
    ],
    "https://github.com/wentao-uw/ComfyUI-template-matching": [
        [
            "IsMaskEmptyNode (template matching)",
            "TemplateMatching (template matching)"
        ],
        {
            "title_aux": "ComfyUI template matching"
        }
    ],
    "https://github.com/westNeighbor/ComfyUI-ultimate-openpose-editor": [
        [
            "OpenposeEditorNode"
        ],
        {
            "title_aux": "ComfyUI-ultimate-openpose-estimator"
        }
    ],
    "https://github.com/westNeighbor/ComfyUI-ultimate-openpose-estimator": [
        [
            "OpenposeEstimatorNode"
        ],
        {
            "title_aux": "ComfyUI-ultimate-openpose-estimator"
        }
    ],
    "https://github.com/westNeighbor/ComfyUI-ultimate-openpose-render": [
        [
            "OpenposeRenderNode"
        ],
        {
            "title_aux": "ComfyUI-ultimate-openpose-render"
        }
    ],
    "https://github.com/whatbirdisthat/cyberdolphin": [
        [
            "\ud83d\udc2c Gradio ChatInterface",
            "\ud83d\udc2c OpenAI Advanced",
            "\ud83d\udc2c OpenAI Compatible",
            "\ud83d\udc2c OpenAI DALL\u00b7E",
            "\ud83d\udc2c OpenAI Simple"
        ],
        {
            "title_aux": "cyberdolphin"
        }
    ],
    "https://github.com/whmc76/ComfyUI-Openpose-Editor-Plus": [
        [
            "CDL.OpenPoseEditorPlus"
        ],
        {
            "title_aux": "ComfyUI-Openpose-Editor-Plus"
        }
    ],
    "https://github.com/willchil/ComfyUI-Environment-Visualizer": [
        [
            "EnvironmentVisualizer",
            "InterpolateEdges",
            "MapEquirectangular"
        ],
        {
            "title_aux": "ComfyUI-Environment-Visualizer"
        }
    ],
    "https://github.com/windfancy/zsq_prompt": [
        [
            "BatchPromptJson",
            "BatchPromptSelector",
            "ConnectionString",
            "DoubleCLIPEncode",
            "FloatMathOperation",
            "ImageAddText",
            "ImageEmpty",
            "IndexString",
            "IntMathOperation",
            "JoinImageBatch",
            "LLMImage",
            "LLMText",
            "OptionString",
            "PortraitStyler",
            "SaveJpgImage",
            "StringInput",
            "ZSQPixelLatent",
            "ZSQRatioLatent",
            "ZSQShowINT",
            "ZSQShowText",
            "checkpoint_sampler",
            "controlnetStack",
            "controlnetStack_2",
            "imageConcat",
            "imageCount",
            "imageCrop",
            "imageDetailTransfer",
            "imageFilter",
            "imageFlip",
            "imageGaussianBlur",
            "imageHug",
            "imageRGB",
            "imageRatio",
            "imageResize",
            "imageRotate",
            "imageSaveSimple",
            "imageScaleDown",
            "imageScaleDownBy",
            "imageSharpen",
            "imageSize",
            "imageTilesFromBatch",
            "imagesSplitImage",
            "loraStack",
            "loraStack_2",
            "stylesSelector",
            "zsqcheckpoint",
            "zsqcontrolnet",
            "zsqsampler"
        ],
        {
            "title_aux": "zsq_prompt"
        }
    ],
    "https://github.com/wjl0313/ComfyUI_KimNodes": [
        [
            "Add_ImageMetadata",
            "Crop_Paste",
            "Distribute_Icons",
            "ExtractDifferenceLora",
            "IconDistributeByGrid",
            "ImageResize",
            "Image_Classification",
            "KimFilter",
            "KimHDR",
            "LoadImage_Metadata",
            "Manual_MetadataInput",
            "Prompt_Text",
            "Save_Image",
            "Text_Match",
            "Whitening_Node",
            "YOLOWorld_Match",
            "YOLO_Crop"
        ],
        {
            "title_aux": "ComfyUI_KimNodes"
        }
    ],
    "https://github.com/wmatson/easy-comfy-nodes": [
        [
            "EZAssocDictNode",
            "EZAssocImgNode",
            "EZAssocStrNode",
            "EZEmptyDictNode",
            "EZHttpPostNode",
            "EZLoadImgBatchFromUrlsNode",
            "EZLoadImgFromUrlNode",
            "EZRemoveImgBackground",
            "EZS3Uploader"
        ],
        {
            "title_aux": "easy-comfy-nodes"
        }
    ],
    "https://github.com/wmpmiles/comfyui-some-image-processing-stuff": [
        [
            "Blur Mask",
            "Color Grading",
            "Latent Zero Mask",
            "Mask-Crop Inpaint | Post",
            "Mask-Crop Inpaint | Pre",
            "Mask-Crop | Post",
            "Mask-Crop | Pre",
            "Resample Image",
            "Resample Latent",
            "Resample Mask",
            "Resampler | Area",
            "Resampler | Jinc-Lanczos",
            "Resampler | Lanczos",
            "Resampler | Mitchell-Netravali",
            "Resampler | Nearest-Neighbor",
            "Resampler | Triangle",
            "Scaler | Area",
            "Scaler | Fixed",
            "Scaler | Megapixels",
            "Scaler | Pixel Deltas",
            "Scaler | Side",
            "Scaler | Sides Unlinked"
        ],
        {
            "title_aux": "comfyui-some-image-processing-stuff"
        }
    ],
    "https://github.com/wolfden/ComfyUi_PromptStylers": [
        [
            "SDXLPromptStylerAll",
            "SDXLPromptStylerHorror",
            "SDXLPromptStylerMisc",
            "SDXLPromptStylerbyArtist",
            "SDXLPromptStylerbyCamera",
            "SDXLPromptStylerbyComposition",
            "SDXLPromptStylerbyCyberpunkSurrealism",
            "SDXLPromptStylerbyDepth",
            "SDXLPromptStylerbyEnvironment",
            "SDXLPromptStylerbyFantasySetting",
            "SDXLPromptStylerbyFilter",
            "SDXLPromptStylerbyFocus",
            "SDXLPromptStylerbyImpressionism",
            "SDXLPromptStylerbyLighting",
            "SDXLPromptStylerbyMileHigh",
            "SDXLPromptStylerbyMood",
            "SDXLPromptStylerbyMythicalCreature",
            "SDXLPromptStylerbyOriginal",
            "SDXLPromptStylerbyQuantumRealism",
            "SDXLPromptStylerbySteamPunkRealism",
            "SDXLPromptStylerbySubject",
            "SDXLPromptStylerbySurrealism",
            "SDXLPromptStylerbyTheme",
            "SDXLPromptStylerbyTimeofDay",
            "SDXLPromptStylerbyWyvern",
            "SDXLPromptbyCelticArt",
            "SDXLPromptbyContemporaryNordicArt",
            "SDXLPromptbyFashionArt",
            "SDXLPromptbyGothicRevival",
            "SDXLPromptbyIrishFolkArt",
            "SDXLPromptbyRomanticNationalismArt",
            "SDXLPromptbySportsArt",
            "SDXLPromptbyStreetArt",
            "SDXLPromptbyVikingArt",
            "SDXLPromptbyWildlifeArt"
        ],
        {
            "title_aux": "SDXL Prompt Styler (customized version by wolfden)"
        }
    ],
    "https://github.com/wolfden/ComfyUi_String_Function_Tree": [
        [
            "StringFunction"
        ],
        {
            "title_aux": "ComfyUi_String_Function_Tree"
        }
    ],
    "https://github.com/wootwootwootwoot/ComfyUI-RK-Sampler": [
        [
            "RungeKuttaSampler"
        ],
        {
            "author": "wootwootwootwoot",
            "description": "Batched Runge-Kutta Samplers for ComfyUI",
            "nickname": "ComfyUI-RK-Sampler",
            "title": "ComfyUI-RK-Sampler",
            "title_aux": "ComfyUI-RK-Sampler"
        }
    ],
    "https://github.com/wqjuser/ComfyUI-Chat-Image": [
        [
            "LLMImageDescription"
        ],
        {
            "title_aux": "ComfyUI-Chat-Image"
        }
    ],
    "https://github.com/wu12023/ComfyUI-Image-Evaluation": [
        [
            "Clip_Score-\ud83d\udd2c",
            "Dino_Score-\ud83d\udd2c"
        ],
        {
            "title_aux": "ComfyUI-Image-Evaluation"
        }
    ],
    "https://github.com/wujm424606/ComfyUi-Ollama-YN": [
        [
            "MyOllamaDeleteModel",
            "MyOllamaGenerate",
            "MyOllamaGenerateAdvance",
            "MyOllamaLoadContext",
            "MyOllamaSaveContext",
            "MyOllamaSpecialGenerateAdvance",
            "MyOllamaVision"
        ],
        {
            "title_aux": "ComfyUi-Ollama-YN"
        }
    ],
    "https://github.com/wutipong/ComfyUI-TextUtils": [
        [
            "Text Utils - Join N-Elements of String List",
            "Text Utils - Join String List",
            "Text Utils - Join Strings",
            "Text Utils - Split String to List"
        ],
        {
            "title_aux": "ComfyUI-TextUtils"
        }
    ],
    "https://github.com/wwwins/ComfyUI-Simple-Aspect-Ratio": [
        [
            "SimpleAspectRatio"
        ],
        {
            "title_aux": "ComfyUI-Simple-Aspect-Ratio"
        }
    ],
    "https://github.com/xXAdonesXx/NodeGPT": [
        [
            "AppendAgent",
            "Assistant",
            "Chat",
            "ChatGPT",
            "CombineInput",
            "Conditioning",
            "CostumeAgent_1",
            "CostumeAgent_2",
            "CostumeMaster_1",
            "Critic",
            "DisplayString",
            "DisplayTextAsImage",
            "EVAL",
            "Engineer",
            "Executor",
            "GroupChat",
            "Image_generation_Conditioning",
            "LM_Studio",
            "LoadAPIconfig",
            "LoadTXT",
            "MemGPT",
            "Memory_Excel",
            "Model_1",
            "Ollama",
            "Output2String",
            "Planner",
            "Scientist",
            "TextCombine",
            "TextGeneration",
            "TextGenerator",
            "TextInput",
            "TextOutput",
            "UserProxy",
            "llama-cpp",
            "llava",
            "oobaboogaOpenAI"
        ],
        {
            "title_aux": "NodeGPT"
        }
    ],
    "https://github.com/xfgexo/EXO-Custom-ComfyUI-Nodes": [
        [
            "ComfyUI_EXO_Clip_Text_Encode",
            "ComfyUI_EXO_DisplayText",
            "ComfyUI_EXO_FluxSampler",
            "ComfyUI_EXO_FluxSamplerMini",
            "ComfyUI_EXO_ImageRescale",
            "ComfyUI_EXO_LatentImageSize",
            "ComfyUI_EXO_LatentImageSizeX",
            "ComfyUI_EXO_Notes",
            "ComfyUI_EXO_NumericValue",
            "ComfyUI_EXO_PromptBuilderDeluxe",
            "ComfyUI_EXO_SaveText",
            "ComfyUI_EXO_TranslateText"
        ],
        {
            "title_aux": "EXO Custom ComfyUI Nodes"
        }
    ],
    "https://github.com/xiaoxiaodesha/hd_node": [
        [
            "Combine HDMasks",
            "Cover HDMasks",
            "HD FaceIndex",
            "HD GetMaskArea",
            "HD Image Levels",
            "HD SmoothEdge",
            "HD UltimateSDUpscale"
        ],
        {
            "title_aux": "hd-nodes-comfyui"
        }
    ],
    "https://github.com/xlinx/ComfyUI-decadetw-auto-messaging-realtime": [
        [
            "Auto-MSG-ALL",
            "Auto-MSG-Discord-Bot",
            "Auto-MSG-Line-Notify",
            "Auto-MSG-Telegram-Bot"
        ],
        {
            "title_aux": "ComfyUI-decadetw-auto-messaging-realtime"
        }
    ],
    "https://github.com/xlinx/ComfyUI-decadetw-auto-prompt-llm": [
        [
            "Auto-LLM-Text",
            "Auto-LLM-Text-Vision",
            "Auto-LLM-Vision"
        ],
        {
            "title_aux": "ComfyUI-decadetw-auto-prompt-llm"
        }
    ],
    "https://github.com/xlinx/ComfyUI-decadetw-spout-syphon-im-vj": [
        [
            "Im-SD-VJ-SPOUT",
            "Im-SD-VJ-SYPHON"
        ],
        {
            "title_aux": "ComfyUI-decadetw-spout-syphon-im-vj"
        }
    ],
    "https://github.com/xliry/ComfyUI_SendDiscord": [
        [
            "SendDiscord"
        ],
        {
            "title_aux": "ComfyUI_SendDiscord"
        }
    ],
    "https://github.com/xobiomesh/ComfyUI_xObiomesh": [
        [
            "OllamaModelSelect",
            "OllamaTextGen",
            "ShowText_xO",
            "xO_ComfyUIPortRunner",
            "xO_GetImageFilename",
            "xO_LoadRecentFile",
            "xO_TestScriptRunner",
            "xO_WorkflowRunner"
        ],
        {
            "title_aux": "ComfyUI Neural Nodes"
        }
    ],
    "https://github.com/xs315431/Comfyui_Get_promptId": [
        [
            "GetPromptId",
            "SuccessCallback"
        ],
        {
            "title_aux": "Comfyui_Get_promptId"
        }
    ],
    "https://github.com/xuhongming251/ComfyUI-GPEN": [
        [
            "FaceEnhancement"
        ],
        {
            "title_aux": "ComfyUI-GPEN"
        }
    ],
    "https://github.com/xuhongming251/ComfyUI-MuseTalkUtils": [
        [
            "MuseTalkPostprocess",
            "MuseTalkPreprocess",
            "MuseTalkTrain",
            "MuseTalkTrainPreprocess",
            "MuseTalkUncropMask"
        ],
        {
            "title_aux": "ComfyUI-MuseTalkUtils"
        }
    ],
    "https://github.com/xuhongming251/ComfyUI_Camera": [
        [
            "Load Image From Local Camera",
            "Save Image To Local Camera"
        ],
        {
            "title_aux": "ComfyUI_Camera"
        }
    ],
    "https://github.com/yanlang0123/ComfyUI_Lam": [
        [
            "AspectRatio",
            "AutioPath",
            "DoWhileEnd",
            "DoWhileStart",
            "EasyPromptSelecto",
            "FaceFusion",
            "ForEnd",
            "ForInnerEnd",
            "ForInnerStart",
            "ForStart",
            "GLM3Prompt",
            "IdentifyingQR",
            "IfInnerExecute",
            "Image2Video",
            "ImageAddMask",
            "ImageBlank",
            "ImageClone",
            "ImageCropFaces",
            "ImageLama",
            "ImageToMasks",
            "LAM.OpenPoseEditorPlus",
            "LamCommonNames",
            "LamCommonPrint",
            "LamCommonPrintNoOutput",
            "LamGetPngInfo",
            "LamLoadPathImage",
            "LamLoadVideo",
            "LamSaveOnly",
            "LamSwitcherCase",
            "LoadDirImgPaths",
            "LoadReplaceImage",
            "LongTextToList",
            "MultiControlNetApply",
            "MultiGLIGENTextBoxApply",
            "MultiIPAdapterRegional",
            "MultiIntFormula",
            "MultiParamFormula",
            "MultiTextConcatenate",
            "MultiTextEncode",
            "MultiTextEncodeAdvanced",
            "MultiTextSelelct",
            "MultiTextSetArea",
            "MultiTextSetGligen",
            "MultiTextSetMask",
            "OutDoWhileEnd",
            "OutDoWhileStart",
            "PreviewImageLam",
            "PromptTranslator",
            "QRCode",
            "SaveImageLam",
            "SectionEnd",
            "SectionStart",
            "StyleSelecto",
            "Text2AutioEdgeTts",
            "TextListSelelct",
            "VideoAddAudio",
            "VideoFaceFusion",
            "VideoPath",
            "WaitImagSelector",
            "ZhPromptTranslator"
        ],
        {
            "title_aux": "ComfyUI_Lam"
        }
    ],
    "https://github.com/ycchanau/ComfyUI_Preview_Magnifier": [
        [
            "YC.ImageComparerMagnifier",
            "YC.PreviewImageMagnifier",
            "YC.XYPreviewImageMagnifier"
        ],
        {
            "title_aux": "ComfyUI Preview Magnifier"
        }
    ],
    "https://github.com/ycyy/ComfyUI-YCYY-LoraInfo": [
        [
            "LoraInfo"
        ],
        {
            "title_aux": "ComfyUI-YCYY-LoraInfo"
        }
    ],
    "https://github.com/yffyhk/comfyui_auto_danbooru": [
        [
            "GetDanbooru",
            "TagEncode"
        ],
        {
            "title_aux": "comfyui_auto_danbooru"
        }
    ],
    "https://github.com/yhayano-ponotech/ComfyUI-Fal-API-Flux": [
        [
            "FalAPIFluxControlNetConfigNode",
            "FalAPIFluxControlNetUnionConfigNode",
            "FalAPIFluxDevCannyWithLoraNode",
            "FalAPIFluxDevImageToImageNode",
            "FalAPIFluxDevNode",
            "FalAPIFluxDevWithLoraAndControlNetImageToImageNode",
            "FalAPIFluxDevWithLoraAndControlNetInpaintNode",
            "FalAPIFluxDevWithLoraAndControlNetNode",
            "FalAPIFluxDevWithLoraImageToImageNode",
            "FalAPIFluxDevWithLoraInpaintNode",
            "FalAPIFluxDevWithLoraNode",
            "FalAPIFluxLoraConfigNode",
            "FalAPIFluxProCannyNode",
            "FalAPIFluxProDepthNode",
            "FalAPIFluxProFillNode",
            "FalAPIFluxProNode",
            "FalAPIFluxProReduxNode",
            "FalAPIFluxProV11Node"
        ],
        {
            "title_aux": "ComfyUI-Fal-API-Flux"
        }
    ],
    "https://github.com/yichengup/Comfyui-Ycanvas": [
        [
            "CanvasNode"
        ],
        {
            "title_aux": "Comfyui-Ycanvas"
        }
    ],
    "https://github.com/yichengup/Comfyui_Flux_Style_Adjust": [
        [
            "StyleModelAdvancedApply"
        ],
        {
            "title_aux": "Comfyui_Flux_Style_Adjust (Redux)"
        }
    ],
    "https://github.com/yichengup/Comfyui_Redux_Advanced": [
        [
            "StyleAdvancedApply"
        ],
        {
            "title_aux": "Comfyui_Redux_Advanced"
        }
    ],
    "https://github.com/yiwangsimple/ComfyUI_DW_Chat": [
        [
            "DeepSeekChatNode",
            "DeepSeekTranslator",
            "ErrorLogNode",
            "ExecutionTime",
            "FileBasedChatNode",
            "FluxPromptEngineeringNode",
            "Gemini1_5Text",
            "Gemini1_5Vision",
            "GeminiFluxPrompt",
            "Gemma2PromptNode",
            "GemmaDialogueNode",
            "GithubLinkNode",
            "GroqChatNode",
            "MoonshotMultiChatNode",
            "MoonshotSingleChatNode",
            "OllamaImageToText",
            "OllamaPromptExtractor",
            "OllamaTextToText",
            "PaliGemma3bCaptioner",
            "PromptEngineeringNode",
            "PromptExtractorNode",
            "Qwen2VLCaption",
            "Qwen2VLLocalCaption",
            "SD3LongCaptionerV2",
            "SDPromptAgent",
            "dwimage2"
        ],
        {
            "title_aux": "ComfyUI_DW_Chat"
        }
    ],
    "https://github.com/yiwangsimple/florence_dw": [
        [
            "Florence2",
            "Florence2Postprocess",
            "Florence2PostprocessAll",
            "LoadFlorence2Model"
        ],
        {
            "title_aux": "florence_dw"
        }
    ],
    "https://github.com/yolain/ComfyUI-Easy-Use": [
        [
            "dynamicThresholdingFull",
            "easy LLLiteLoader",
            "easy XYInputs: CFG Scale",
            "easy XYInputs: Checkpoint",
            "easy XYInputs: ControlNet",
            "easy XYInputs: Denoise",
            "easy XYInputs: FluxGuidance",
            "easy XYInputs: Lora",
            "easy XYInputs: ModelMergeBlocks",
            "easy XYInputs: NegativeCond",
            "easy XYInputs: NegativeCondList",
            "easy XYInputs: PositiveCond",
            "easy XYInputs: PositiveCondList",
            "easy XYInputs: PromptSR",
            "easy XYInputs: Sampler/Scheduler",
            "easy XYInputs: Seeds++ Batch",
            "easy XYInputs: Steps",
            "easy XYPlot",
            "easy XYPlotAdvanced",
            "easy a1111Loader",
            "easy ab",
            "easy anythingIndexSwitch",
            "easy anythingInversedSwitch",
            "easy applyBrushNet",
            "easy applyFooocusInpaint",
            "easy applyInpaint",
            "easy applyPowerPaint",
            "easy batchAnything",
            "easy blocker",
            "easy boolean",
            "easy cascadeKSampler",
            "easy cascadeLoader",
            "easy ckptNames",
            "easy cleanGpuUsed",
            "easy clearCacheAll",
            "easy clearCacheKey",
            "easy comfyLoader",
            "easy compare",
            "easy conditioningIndexSwitch",
            "easy controlnetLoader",
            "easy controlnetLoader++",
            "easy controlnetLoaderADV",
            "easy controlnetNames",
            "easy controlnetStack",
            "easy controlnetStackApply",
            "easy convertAnything",
            "easy detailerFix",
            "easy dynamiCrafterLoader",
            "easy float",
            "easy fluxLoader",
            "easy fluxPromptGenAPI",
            "easy forLoopEnd",
            "easy forLoopStart",
            "easy fullCascadeKSampler",
            "easy fullLoader",
            "easy fullkSampler",
            "easy globalSeed",
            "easy hiresFix",
            "easy humanSegmentation",
            "easy hunyuanDiTLoader",
            "easy icLightApply",
            "easy if",
            "easy ifElse",
            "easy imageBatchToImageList",
            "easy imageChooser",
            "easy imageColorMatch",
            "easy imageConcat",
            "easy imageCount",
            "easy imageCropFromMask",
            "easy imageDetailTransfer",
            "easy imageIndexSwitch",
            "easy imageInsetCrop",
            "easy imageInterrogator",
            "easy imageListToImageBatch",
            "easy imagePixelPerfect",
            "easy imageRatio",
            "easy imageRemBg",
            "easy imageSave",
            "easy imageScaleDown",
            "easy imageScaleDownBy",
            "easy imageScaleDownToSize",
            "easy imageScaleToNormPixels",
            "easy imageSize",
            "easy imageSizeByLongerSide",
            "easy imageSizeBySide",
            "easy imageSplitGrid",
            "easy imageSplitList",
            "easy imageSplitTiles",
            "easy imageSwitch",
            "easy imageTilesFromBatch",
            "easy imageToBase64",
            "easy imageToMask",
            "easy imageUncropFromBBOX",
            "easy imagesSplitImage",
            "easy indexAnything",
            "easy injectNoiseToLatent",
            "easy instantIDApply",
            "easy instantIDApplyADV",
            "easy int",
            "easy ipadapterApply",
            "easy ipadapterApplyADV",
            "easy ipadapterApplyEmbeds",
            "easy ipadapterApplyEncoder",
            "easy ipadapterApplyFaceIDKolors",
            "easy ipadapterApplyFromParams",
            "easy ipadapterApplyRegional",
            "easy ipadapterStyleComposition",
            "easy isFileExist",
            "easy isMaskEmpty",
            "easy isNone",
            "easy isSDXL",
            "easy joinImageBatch",
            "easy kSampler",
            "easy kSamplerCustom",
            "easy kSamplerDownscaleUnet",
            "easy kSamplerInpainting",
            "easy kSamplerLayerDiffusion",
            "easy kSamplerSDTurbo",
            "easy kSamplerTiled",
            "easy kolorsLoader",
            "easy latentCompositeMaskedWithCond",
            "easy latentNoisy",
            "easy lengthAnything",
            "easy loadImageBase64",
            "easy loadImagesForLoop",
            "easy loraStack",
            "easy loraStackApply",
            "easy makeImageForICLora",
            "easy mathFloat",
            "easy mathInt",
            "easy mathString",
            "easy mochiLoader",
            "easy negative",
            "easy ominiControlApply",
            "easy outputToList",
            "easy pipeBatchIndex",
            "easy pipeEdit",
            "easy pipeEditPrompt",
            "easy pipeIn",
            "easy pipeOut",
            "easy pipeToBasicPipe",
            "easy pixArtLoader",
            "easy pixels",
            "easy portraitMaster",
            "easy poseEditor",
            "easy positive",
            "easy preDetailerFix",
            "easy preMaskDetailerFix",
            "easy preSampling",
            "easy preSamplingAdvanced",
            "easy preSamplingCascade",
            "easy preSamplingCustom",
            "easy preSamplingDynamicCFG",
            "easy preSamplingLayerDiffusion",
            "easy preSamplingLayerDiffusionADDTL",
            "easy preSamplingNoiseIn",
            "easy preSamplingSdTurbo",
            "easy prompt",
            "easy promptConcat",
            "easy promptLine",
            "easy promptList",
            "easy promptReplace",
            "easy pulIDApply",
            "easy pulIDApplyADV",
            "easy rangeFloat",
            "easy rangeInt",
            "easy removeLocalImage",
            "easy samLoaderPipe",
            "easy saveImageLazy",
            "easy saveText",
            "easy saveTextLazy",
            "easy seed",
            "easy showAnything",
            "easy showAnythingLazy",
            "easy showLoaderSettingsNames",
            "easy showSpentTime",
            "easy showTensorShape",
            "easy sleep",
            "easy sliderControl",
            "easy stableDiffusion3API",
            "easy string",
            "easy styleAlignedBatchAlign",
            "easy stylesSelector",
            "easy sv3dLoader",
            "easy svdLoader",
            "easy textIndexSwitch",
            "easy textSwitch",
            "easy ultralyticsDetectorPipe",
            "easy unSampler",
            "easy whileLoopEnd",
            "easy whileLoopStart",
            "easy wildcards",
            "easy xyAny",
            "easy zero123Loader"
        ],
        {
            "title_aux": "ComfyUI Easy Use"
        }
    ],
    "https://github.com/yolanother/ComfyUI-Save16bitPng": [
        [
            "SaveImageARGB16PNG"
        ],
        {
            "title_aux": "Save Uncompressed 16 Bit PNG"
        }
    ],
    "https://github.com/yolanother/DTAIComfyImageSubmit": [
        [
            "DTSimpleSubmitImage",
            "DTSubmitImage"
        ],
        {
            "title_aux": "Comfy AI DoubTech.ai Image Sumission Node"
        }
    ],
    "https://github.com/yolanother/DTAIComfyLoaders": [
        [
            "DTCLIPLoader",
            "DTCLIPVisionLoader",
            "DTCheckpointLoader",
            "DTCheckpointLoaderSimple",
            "DTControlNetLoader",
            "DTDiffControlNetLoader",
            "DTDiffusersLoader",
            "DTGLIGENLoader",
            "DTLoadImage",
            "DTLoadImageMask",
            "DTLoadLatent",
            "DTLoraLoader",
            "DTLorasLoader",
            "DTStyleModelLoader",
            "DTUpscaleModelLoader",
            "DTVAELoader",
            "DTunCLIPCheckpointLoader"
        ],
        {
            "title_aux": "Comfy UI Online Loaders"
        }
    ],
    "https://github.com/yolanother/DTAIComfyPromptAgent": [
        [
            "DTPromptAgent",
            "DTPromptAgentString"
        ],
        {
            "title_aux": "Comfy UI Prompt Agent"
        }
    ],
    "https://github.com/yolanother/DTAIComfyQRCodes": [
        [
            "QRCode"
        ],
        {
            "title_aux": "Comfy UI QR Codes"
        }
    ],
    "https://github.com/yolanother/DTAIComfyVariables": [
        [
            "DTCLIPTextEncode",
            "DTSingleLineStringVariable",
            "DTSingleLineStringVariableNoClip",
            "FloatVariable",
            "IntVariable",
            "StringFormat",
            "StringFormatSingleLine",
            "StringVariable"
        ],
        {
            "title_aux": "Variables for Comfy UI"
        }
    ],
    "https://github.com/yolanother/DTAIImageToTextNode": [
        [
            "DTAIImageToTextNode",
            "DTAIImageUrlToTextNode"
        ],
        {
            "title_aux": "Image to Text Node"
        }
    ],
    "https://github.com/yondonfu/ComfyUI-Background-Edit": [
        [
            "BackgroundColor",
            "Composite",
            "GaussianBlur"
        ],
        {
            "title_aux": "ComfyUI-Background-Edit"
        }
    ],
    "https://github.com/yondonfu/ComfyUI-Torch-Compile": [
        [
            "TorchCompileLoadControlNet",
            "TorchCompileLoadVAE"
        ],
        {
            "title_aux": "ComfyUI-Torch-Compile"
        }
    ],
    "https://github.com/yorkane/ComfyUI-KYNode": [
        [
            "AdvancedLyingSigmaSampler",
            "KY_AnyByIndex",
            "KY_AnyToList",
            "KY_FilePathAnalyzer-",
            "KY_JoinToString",
            "KY_LoadImagesFromFolder",
            "KY_MathExpression",
            "KY_OpenAICaptionImage",
            "KY_OpenAIChat",
            "KY_ReadImage",
            "KY_RegexExtractor",
            "KY_RegexReplace",
            "KY_SaveImageToPath"
        ],
        {
            "title_aux": "ComfyUI-KYNode"
        }
    ],
    "https://github.com/youyegit/tdxh_node_comfyui": [
        [
            "TdxhBoolNumber",
            "TdxhClipVison",
            "TdxhControlNetApply",
            "TdxhControlNetProcessor",
            "TdxhFloatInput",
            "TdxhImageToSize",
            "TdxhImageToSizeAdvanced",
            "TdxhImg2ImgLatent",
            "TdxhIntInput",
            "TdxhLoraLoader",
            "TdxhOnOrOff",
            "TdxhReference",
            "TdxhStringInput",
            "TdxhStringInputTranslator",
            "TdxhToggleGuest",
            "TdxhToggleMaster"
        ],
        {
            "title_aux": "tdxh_node_comfyui"
        }
    ],
    "https://github.com/yuan199696/add_text_2_img": [
        [
            "AddText"
        ],
        {
            "title_aux": "add_text_2_img"
        }
    ],
    "https://github.com/yuan199696/chinese_clip_encode": [
        [
            "ChineseCLIPEncode"
        ],
        {
            "title_aux": "chinese_clip_encode"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Depth-Anything-Tensorrt": [
        [
            "DepthAnythingTensorrt"
        ],
        {
            "title_aux": "ComfyUI Depth Anything TensorRT"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Dwpose-Tensorrt": [
        [
            "DwposeTensorrt"
        ],
        {
            "title_aux": "ComfyUI Dwpose TensorRT"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Facerestore-Tensorrt": [
        [
            "FaceRestoreTensorrt"
        ],
        {
            "title_aux": "ComfyUI Facerestore TensorRT"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-PiperTTS": [
        [
            "PiperTTS"
        ],
        {
            "title_aux": "ComfyUI PiperTTS"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Pronodes": [
        [
            "ImagesSeekerNode",
            "ImagesShufflerNode",
            "LoadImageFromOutputDirectoryNode",
            "LoadYoutubeVideoNode",
            "PreviewVHSAudioNode",
            "SaveAndOverwriteImageNode",
            "VHSFilenamesToPathNode"
        ],
        {
            "title_aux": "ComfyUI-Pronodes"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Rife-Tensorrt": [
        [
            "RifeTensorrt"
        ],
        {
            "title_aux": "ComfyUI Rife TensorRT"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Upscaler-Tensorrt": [
        [
            "UpscalerTensorrt"
        ],
        {
            "title_aux": "ComfyUI Upscaler TensorRT"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Vsgan": [
        [
            "DepthAnythingTrtNode",
            "TTSCapcutNode",
            "UpscaleVideoTrtNode"
        ],
        {
            "title_aux": "ComfyUI-Vsgan"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-Whisper": [
        [
            "Add Subtitles To Background",
            "Add Subtitles To Frames",
            "Apply Whisper",
            "Resize Cropped Subtitles"
        ],
        {
            "title_aux": "ComfyUI Whisper"
        }
    ],
    "https://github.com/yuvraj108c/ComfyUI-YoloNasPose-Tensorrt": [
        [
            "YoloNasPoseTensorrt"
        ],
        {
            "title_aux": "ComfyUI YoloNasPose Tensorrt"
        }
    ],
    "https://github.com/yvann-ba/ComfyUI_Yvann-Nodes": [
        [
            "Audio Analysis",
            "Audio IPAdapter Transitions",
            "Audio Peaks Detection",
            "Audio Prompt Schedule",
            "Audio Remixer",
            "Edit Audio Weights",
            "Float to Int",
            "Floats To Weights Strategy",
            "Floats Visualizer",
            "Invert Floats",
            "Load Audio Separation Model",
            "Mask To Float",
            "Repeat Image To Count"
        ],
        {
            "title_aux": "ComfyUI_Yvann-Nodes"
        }
    ],
    "https://github.com/za-wa-n-go/ComfyUI_Zwng_Nodes": [
        [
            "ZwngLoadImagePathOrURL",
            "ZwngPreviewImageAndMask",
            "ZwngSimpleGoogleTranslater",
            "ZwngSimplePhotoshopConnector"
        ],
        {
            "title_aux": "ComfyUI_Zwng_Nodes"
        }
    ],
    "https://github.com/zcfrank1st/Comfyui-Toolbox": [
        [
            "PreviewJson",
            "PreviewVideo",
            "SaveJson",
            "TestJsonPreview"
        ],
        {
            "title_aux": "Comfyui-Toolbox"
        }
    ],
    "https://github.com/zcfrank1st/Comfyui-Yolov8": [
        [
            "Yolov8Detection",
            "Yolov8Segmentation"
        ],
        {
            "title_aux": "ComfyUI Yolov8"
        }
    ],
    "https://github.com/zcfrank1st/comfyui_visual_anagrams": [
        [
            "VisualAnagramsAnimate",
            "VisualAnagramsSample"
        ],
        {
            "title_aux": "comfyui_visual_anagram"
        }
    ],
    "https://github.com/zer0TF/cute-comfy": [
        [
            "Cute.Placeholder"
        ],
        {
            "title_aux": "Cute Comfy"
        }
    ],
    "https://github.com/zer0thgear/zer0-comfy-utils": [
        [
            "List Combine Node (zer0)",
            "Multiline String Node (zer0)",
            "Prompt Minimizer And Splitter Node (zer0)",
            "Tavern Card Creation Node (zer0)",
            "Tavern Card Info Node (zer0)"
        ],
        {
            "author": "zer0gear",
            "description": "Dubiously useful nodes that I've made for my own use.",
            "nickname": "zer0gear Comfy Utils",
            "title": "zer0gear's Comfy Utilities",
            "title_aux": "zer0 Comfy Utilities"
        }
    ],
    "https://github.com/zeroxoxo/ComfyUI-Fast-Style-Transfer": [
        [
            "FastStyleTransfer",
            "NeuralStyleTransfer",
            "TrainFastStyleTransfer"
        ],
        {
            "title_aux": "ComfyUI-Fast-Style-Transfer"
        }
    ],
    "https://github.com/zfkun/ComfyUI_zfkun": [
        [
            "ZFLoadImagePath",
            "ZFPreviewText",
            "ZFPreviewTextMultiline",
            "ZFShareScreen",
            "ZFTextTranslation"
        ],
        {
            "title_aux": "ComfyUI_zfkun"
        }
    ],
    "https://github.com/zhangp365/ComfyUI-utils-nodes": [
        [
            "BooleanControlOutput",
            "CheckpointLoaderSimpleWithSwitch",
            "ColorCorrectOfUtils",
            "ConcatTextOfUtils",
            "DeepfaceAnalyzeFaceAttributes",
            "DetectorForNSFW",
            "GenderControlOutput",
            "ImageAutoSelector",
            "ImageBatchOneOrMore",
            "ImageCompositeMaskedOneByOne",
            "ImageCompositeMaskedWithSwitch",
            "ImageCompositeWatermark",
            "ImageConcanateOfUtils",
            "ImageResizeTo8x",
            "IntAndIntAddOffsetLiteral",
            "IntMultipleAddLiteral",
            "LoadImageMaskWithSwitch",
            "LoadImageMaskWithoutListDir",
            "LoadImageWithSwitch",
            "LoadImageWithoutListDir",
            "MaskAutoSelector",
            "MaskCoverFourCorners",
            "MaskFastGrow",
            "MaskFromFaceModel",
            "MaskofCenter",
            "MatchImageRatioToPreset",
            "ModifyTextGender",
            "SplitMask",
            "TextInputAutoSelector",
            "TextPreview",
            "UpscaleImageWithModelIfNeed"
        ],
        {
            "title_aux": "zhangp365/ComfyUI-utils-nodes"
        }
    ],
    "https://github.com/zhangp365/ComfyUI_photomakerV2_native": [
        [
            "PhotoMakerEncodeV2",
            "PhotoMakerLoaderV2"
        ],
        {
            "title_aux": "ComfyUI_photomakerV2_native"
        }
    ],
    "https://github.com/zhilemann/ComfyUI-moondream2": [
        [
            "moondream2_Caption",
            "moondream2_DownLoad",
            "moondream2_Encode",
            "moondream2_Query"
        ],
        {
            "title_aux": "ComfyUI-moondream2"
        }
    ],
    "https://github.com/zhiselfly/ComfyUI-Alimama-ControlNet-compatible": [
        [
            "SD3AlimamaInpaintControlNetApplyAdvanced",
            "SD3AlimamaInpaintControlNetLoader"
        ],
        {
            "title_aux": "ComfyUI-Alimama-ControlNet-compatible"
        }
    ],
    "https://github.com/zhongpei/ComfyUI-InstructIR": [
        [
            "InstructIRProcess",
            "LoadInstructIRModel"
        ],
        {
            "title_aux": "ComfyUI for InstructIR"
        }
    ],
    "https://github.com/zhuanqianfish/ComfyUI-EasyNode": [
        [
            "EasyCaptureNode",
            "EasyVideoOutputNode",
            "SendImageWebSocket"
        ],
        {
            "title_aux": "EasyCaptureNode for ComfyUI"
        }
    ],
    "https://github.com/zhulu111/ComfyUI_Bxb": [
        [
            "bxbSwitch",
            "sdBxb",
            "sdBxb_saveImage",
            "sdBxb_textInput"
        ],
        {
            "title_aux": "ComfyUI_Bxb"
        }
    ],
    "https://github.com/zmwv823/ComfyUI_Anytext": [
        [
            "UL_AnyTextEncoder",
            "UL_AnyTextFormatter",
            "UL_AnyTextLoaderTest",
            "UL_AnyText_Composer",
            "UL_AnyText_FontImg",
            "UL_AnyText_Inputs",
            "UL_AnyText_Loader",
            "UL_AnyText_Sampler",
            "UL_DiffusersCheckpointLoader",
            "UL_DiffusersControlNetApplyAdvanced",
            "UL_DiffusersControlNetLoader",
            "UL_Image_Generation_Diffusers_Sampler",
            "UL_Image_Generation_Glyph_ByT5",
            "UL_Image_Generation_Glyph_ByT5_Checkponits_Loader",
            "UL_Image_Generation_Glyph_ByT5_Font",
            "UL_Image_Generation_JoyType_Font_Img",
            "UL_Image_Generation_JoyType_Render_List",
            "UL_Image_Process_Common_Cv2_Canny"
        ],
        {
            "title_aux": "ComfyUI_Anytext"
        }
    ],
    "https://github.com/zohac/ComfyUI_ZC_DrawShape": [
        [
            "ZcDrawShape"
        ],
        {
            "author": "Zohac",
            "description": "nodes for artists, designers and animators.",
            "nickname": "Zc DrawShape",
            "title": "Zc DrawShape",
            "title_aux": "ComfyUI_ZC_DrawShape"
        }
    ],
    "https://github.com/zombieyang/sd-ppp": [
        [
            "CLIP Text Encode PS Regional",
            "Get Image From Photoshop Layer",
            "Send Images To Photoshop"
        ],
        {
            "title_aux": "SD-PPP"
        }
    ],
    "https://github.com/zubenelakrab/ComfyUI-ASV-Nodes": [
        [
            "ASVPromptGenerator"
        ],
        {
            "title_aux": "ComfyUI-ASV-Nodes Node"
        }
    ],
    "https://raw.githubusercontent.com/1shadow1/hayo_comfyui_nodes/main/LZCNodes.py": [
        [
            "LoadPILImages",
            "MergeImages",
            "make_transparentmask",
            "tensor_trans_pil",
            "words_generatee"
        ],
        {
            "title_aux": "Hayo comfyui nodes"
        }
    ],
    "https://raw.githubusercontent.com/CaptainGrock/ComfyUIInvisibleWatermark/main/Invisible%20Watermark.py": [
        [
            "Apply Invisible Watermark",
            "Extract Watermark"
        ],
        {
            "title_aux": "ComfyUIInvisibleWatermark"
        }
    ],
    "https://raw.githubusercontent.com/Limbicnation/ComfyUIDepthEstimation/main/depth_estimation_node.py": [
        [
            "DepthEstimationNode"
        ],
        {
            "title_aux": "ComfyUIDepthEstimation"
        }
    ],
    "https://raw.githubusercontent.com/NeuralNotW0rk/ComfyUI-Waveform-Extensions/main/EXT_AudioManipulation.py": [
        [
            "BatchJoinAudio",
            "CutAudio",
            "DuplicateAudio",
            "JoinAudio",
            "ResampleAudio",
            "ReverseAudio",
            "StretchAudio"
        ],
        {
            "title_aux": "Waveform Extensions"
        }
    ],
    "https://raw.githubusercontent.com/Onierous/QRNG_Node_ComfyUI/main/qrng_node.py": [
        [
            "QRNG_Node_CSV"
        ],
        {
            "title_aux": "QRNG_Node_ComfyUI"
        }
    ],
    "https://raw.githubusercontent.com/SadaleNet/CLIPTextEncodeA1111-ComfyUI/master/custom_nodes/clip_text_encoder_a1111.py": [
        [
            "CLIPTextEncodeA1111",
            "RerouteTextForCLIPTextEncodeA1111"
        ],
        {
            "title_aux": "ComfyUI A1111-like Prompt Custom Node Solution"
        }
    ],
    "https://raw.githubusercontent.com/Ser-Hilary/SDXL_sizing/main/conditioning_sizing_for_SDXL.py": [
        [
            "get_aspect_from_image",
            "get_aspect_from_ints",
            "sizing_node",
            "sizing_node_basic",
            "sizing_node_unparsed"
        ],
        {
            "title_aux": "SDXL_sizing"
        }
    ],
    "https://raw.githubusercontent.com/Smuzzies/comfyui_chatbox_overlay/main/chatbox_overlay.py": [
        [
            "Chatbox Overlay"
        ],
        {
            "title_aux": "Chatbox Overlay node for ComfyUI"
        }
    ],
    "https://raw.githubusercontent.com/barckley75/comfyUI_DaVinciResolve/main/custom_nodes/node_text_to_speech.py": [
        [
            "TextToSpeech"
        ],
        {
            "title_aux": "comfyUI_DaVinciResolve"
        }
    ],
    "https://raw.githubusercontent.com/bkunbargi/BrevImage/main/BrevLoadImage.py": [
        [
            "BrevImage"
        ],
        {
            "title_aux": "BrevImage"
        }
    ],
    "https://raw.githubusercontent.com/catscandrive/comfyui-imagesubfolders/main/loadImageWithSubfolders.py": [
        [
            "LoadImagewithSubfolders"
        ],
        {
            "title_aux": "Image loader with subfolders"
        }
    ],
    "https://raw.githubusercontent.com/dawangraoming/ComfyUI_ksampler_gpu/main/ksampler_gpu.py": [
        [
            "KSamplerAdvancedGPU",
            "KSamplerGPU"
        ],
        {
            "title_aux": "KSampler GPU"
        }
    ],
    "https://raw.githubusercontent.com/fitCorder/fcSuite/main/fcSuite.py": [
        [
            "fcFloat",
            "fcFloatMatic",
            "fcHex",
            "fcInteger"
        ],
        {
            "title_aux": "fcSuite"
        }
    ],
    "https://raw.githubusercontent.com/folkghost/comfyui_search_csv/main/search_csv_node.py": [
        [
            "Search CSV"
        ],
        {
            "title_aux": "CSV Search Node"
        }
    ],
    "https://raw.githubusercontent.com/lordgasmic/comfyui_wildcards/master/wildcards.py": [
        [
            "CLIPTextEncodeWithWildcards"
        ],
        {
            "title_aux": "Wildcards"
        }
    ],
    "https://raw.githubusercontent.com/lrzjason/ComfyUIJasonNode/main/SDXLMixSampler.py": [
        [
            "SDXLMixSampler"
        ],
        {
            "title_aux": "ComfyUIJasonNode"
        }
    ],
    "https://raw.githubusercontent.com/m957ymj75urz/ComfyUI-Custom-Nodes/main/clip-text-encode-split/clip_text_encode_split.py": [
        [
            "RawText",
            "RawTextCombine",
            "RawTextEncode",
            "RawTextReplace"
        ],
        {
            "title_aux": "m957ymj75urz/ComfyUI-Custom-Nodes"
        }
    ],
    "https://raw.githubusercontent.com/nicolai256/comfyUI_Nodes_nicolai256/main/yugioh-presets.py": [
        [
            "yugioh_Presets"
        ],
        {
            "title_aux": "comfyUI_Nodes_nicolai256"
        }
    ],
    "https://raw.githubusercontent.com/ntdviet/comfyui-ext/main/custom_nodes/gcLatentTunnel/gcLatentTunnel.py": [
        [
            "gcLatentTunnel"
        ],
        {
            "title_aux": "ntdviet/comfyui-ext"
        }
    ],
    "https://raw.githubusercontent.com/s1dlx/comfy_meh/main/meh.py": [
        [
            "MergingExecutionHelper"
        ],
        {
            "title_aux": "comfy_meh"
        }
    ],
    "https://raw.githubusercontent.com/seghier/ComfyUI_LibreTranslate/main/translate_node.py": [
        [
            "LibreTranslateLocally",
            "LibreTranslateOnline"
        ],
        {
            "title_aux": "ComfyUI_LibreTranslate"
        }
    ],
    "https://raw.githubusercontent.com/taabata/Comfy_Syrian_Falcon_Nodes/main/SyrianFalconNodes.py": [
        [
            "CompositeImage",
            "KSamplerAlternate",
            "KSamplerPromptEdit",
            "KSamplerPromptEditAndAlternate",
            "LoopBack",
            "QRGenerate",
            "WordAsImage"
        ],
        {
            "title_aux": "Syrian Falcon Nodes"
        }
    ],
    "https://raw.githubusercontent.com/throttlekitty/SDXLCustomAspectRatio/main/SDXLAspectRatio.py": [
        [
            "SDXLAspectRatio"
        ],
        {
            "preemptions": [
                "SAMLoader"
            ],
            "title_aux": "SDXLCustomAspectRatio"
        }
    ],
    "https://raw.githubusercontent.com/time-river/ComfyUI-CLIPSeg/main/custom_nodes/clipseg.py": [
        [
            "CLIPSeg",
            "CombineSegMasks"
        ],
        {
            "title_aux": "CLIPSeg"
        }
    ],
    "https://raw.githubusercontent.com/tudal/Hakkun-ComfyUI-nodes/main/hakkun_nodes.py": [
        [
            "Any Converter",
            "Calculate Upscale",
            "Image Resize To Height",
            "Image Resize To Width",
            "Image size to string",
            "Load Random Image",
            "Load Text",
            "Multi Text Merge",
            "Prompt Parser",
            "Random Line",
            "Random Line 4"
        ],
        {
            "title_aux": "Hakkun-ComfyUI-nodes"
        }
    ],
    "https://raw.githubusercontent.com/ultimatech-cn/FaceSimilarity/main/faceSimilarity.py": [
        [
            "Face-analyze",
            "Face-similarity"
        ],
        {
            "title_aux": "FaceSimilarity"
        }
    ],
    "https://raw.githubusercontent.com/vxinhao/color2rgb/main/color2rgb.py": [
        [
            "color2RGB"
        ],
        {
            "title_aux": "color2rgb"
        }
    ],
    "https://raw.githubusercontent.com/wsippel/comfyui_ws/main/sdxl_utility.py": [
        [
            "SDXLResolutionPresets"
        ],
        {
            "title_aux": "SDXLResolutionPresets"
        }
    ]
}