var __defProp = Object.defineProperty;
var __name = (target, value2) => __defProp(target, "name", { value: value2, configurable: true });
import { bA as BaseStyle, bB as script$1d, bC as ZIndex, bD as addClass, bE as focus, bF as blockBodyScroll, bG as unblockBodyScroll, bH as FocusTrap, l as script$1e, bI as script$1f, bJ as script$1g, bK as resolveComponent, r as resolveDirective, o as openBlock, y as createBlock, z as withCtx, f as createElementBlock, as as mergeProps, k as createVNode, bL as Transition, i as withDirectives, A as renderSlot, F as Fragment, m as createBaseVNode, ai as normalizeClass, E as toDisplayString, B as createCommentVNode, C as resolveDynamicComponent, d as defineComponent, bs as mergeModels, bm as useModel, v as vShow, j as unref, bM as script$1h, c as computed, bN as PrimeIcons, bc as t, a4 as script$1i, aZ as inject, bO as findSingle, bP as getAttribute, bQ as script$1j, bR as script$1k, bS as Ripple, bT as UniqueComponentId, bU as script$1l, D as renderList, bV as BaseDirective, bW as removeClass, bX as createElement, bY as hasClass, bZ as script$1m, b_ as script$1n, b$ as addStyle, c0 as ConnectedOverlayScrollHandler, c1 as isTouchDevice, c2 as relativePosition, c3 as getOuterWidth, c4 as absolutePosition, c5 as find, c6 as getIndex, c7 as getFocusableElements, c8 as OverlayEventBus, c9 as setAttribute, ca as localeComparator, bg as script$1o, cb as script$1p, n as normalizeStyle, a7 as createTextVNode, bf as withKeys, cc as resolveFieldData, cd as isNotEmpty, ce as equals, cf as script$1q, cg as isString, ch as isPrintableCharacter, ci as isEmpty, cj as findLastIndex, ck as script$1r, cl as script$1s, cm as uuid, a8 as script$1t, cn as sort, co as createSlots, cp as EventBus, H as markRaw, cq as resolve, cr as Tooltip, bi as script$1v, ab as script$1w, cs as script$1x, ct as script$1y, cu as script$1z, bz as script$1A, bj as script$1B, cv as normalizeProps, cw as isAttributeEquals, cx as guardReactiveProps, cy as setCSSProperty, cz as $dt, cA as script$1D, cB as script$1F, cC as getUserAgent, bn as script$1G, cD as script$1H, cE as getFirstFocusableElement, cF as getLastFocusableElement, cG as FilterService, br as script$1J, cH as script$1K, bp as script$1L, bo as script$1M, cI as script$1N, cJ as findIndexInList, cK as scrollInView, cL as script$1O, cM as script$1P, cN as script$1Q, cO as findLast, cP as getWindowScrollTop, cQ as getWidth, cR as getOffset, cS as vModelText, cT as script$1U, ar as withModifiers, cU as getVNodeProp, cV as getNextElementSibling, cW as getPreviousElementSibling, cX as isClickable, cY as _default, cZ as clearSelection, c_ as isRTL, b5 as electronAPI, I as defineStore, U as ref, c$ as useTimeout, O as watch, d0 as script$1Y, _ as _export_sfc, aR as useToast, d1 as useConfirm, bh as script$1Z, d2 as script$1_, p as onMounted, d3 as onUnmounted, av as script$1$, af as isRef, bl as BaseTerminal } from "./index-DqqhYDnY.js";
import { j as script$1C, k as script$1E, g as script$20 } from "./index-DKIv7atk.js";
import { s as script$1u, a as script$1R, b as script$1S, c as script$1T, d as script$1V, e as script$1W, f as script$1X } from "./index-BapOFhAR.js";
import { s as script$1I } from "./index-DXE47DZl.js";
import "./index-BNlqgrYT.js";
import { _ as _sfc_main$7 } from "./BaseViewTemplate-Cz111_1A.js";
var theme$D = /* @__PURE__ */ __name(function theme(_ref) {
  var dt = _ref.dt;
  return "\n.p-drawer {\n    display: flex;\n    flex-direction: column;\n    transform: translate3d(0px, 0px, 0px);\n    position: relative;\n    transition: transform 0.3s;\n    background: ".concat(dt("drawer.background"), ";\n    color: ").concat(dt("drawer.color"), ";\n    border: 1px solid ").concat(dt("drawer.border.color"), ";\n    box-shadow: ").concat(dt("drawer.shadow"), ";\n}\n\n.p-drawer-content {\n    overflow-y: auto;\n    flex-grow: 1;\n    padding: ").concat(dt("drawer.content.padding"), ";\n}\n\n.p-drawer-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-shrink: 0;\n    padding: ").concat(dt("drawer.header.padding"), ";\n}\n\n.p-drawer-footer {\n    padding: ").concat(dt("drawer.footer.padding"), ";\n}\n\n.p-drawer-title {\n    font-weight: ").concat(dt("drawer.title.font.weight"), ";\n    font-size: ").concat(dt("drawer.title.font.size"), ";\n}\n\n.p-drawer-full .p-drawer {\n    transition: none;\n    transform: none;\n    width: 100vw !important;\n    height: 100vh !important;\n    max-height: 100%;\n    top: 0px !important;\n    left: 0px !important;\n    border-width: 1px;\n}\n\n.p-drawer-left .p-drawer-enter-from,\n.p-drawer-left .p-drawer-leave-to {\n    transform: translateX(-100%);\n}\n\n.p-drawer-right .p-drawer-enter-from,\n.p-drawer-right .p-drawer-leave-to {\n    transform: translateX(100%);\n}\n\n.p-drawer-top .p-drawer-enter-from,\n.p-drawer-top .p-drawer-leave-to {\n    transform: translateY(-100%);\n}\n\n.p-drawer-bottom .p-drawer-enter-from,\n.p-drawer-bottom .p-drawer-leave-to {\n    transform: translateY(100%);\n}\n\n.p-drawer-full .p-drawer-enter-from,\n.p-drawer-full .p-drawer-leave-to {\n    opacity: 0;\n}\n\n.p-drawer-full .p-drawer-enter-active,\n.p-drawer-full .p-drawer-leave-active {\n    transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n}\n\n.p-drawer-left .p-drawer {\n    width: 20rem;\n    height: 100%;\n    border-inline-end-width: 1px;\n}\n\n.p-drawer-right .p-drawer {\n    width: 20rem;\n    height: 100%;\n    border-inline-start-width: 1px;\n}\n\n.p-drawer-top .p-drawer {\n    height: 10rem;\n    width: 100%;\n    border-block-end-width: 1px;\n}\n\n.p-drawer-bottom .p-drawer {\n    height: 10rem;\n    width: 100%;\n    border-block-start-width: 1px;\n}\n\n.p-drawer-left .p-drawer-content,\n.p-drawer-right .p-drawer-content,\n.p-drawer-top .p-drawer-content,\n.p-drawer-bottom .p-drawer-content {\n    width: 100%;\n    height: 100%;\n}\n\n.p-drawer-open {\n    display: flex;\n}\n\n.p-drawer-mask:dir(rtl) {\n    flex-direction: row-reverse;\n}\n");
}, "theme");
var inlineStyles$9 = {
  mask: /* @__PURE__ */ __name(function mask(_ref2) {
    var position = _ref2.position, modal = _ref2.modal;
    return {
      position: "fixed",
      height: "100%",
      width: "100%",
      left: 0,
      top: 0,
      display: "flex",
      justifyContent: position === "left" ? "flex-start" : position === "right" ? "flex-end" : "center",
      alignItems: position === "top" ? "flex-start" : position === "bottom" ? "flex-end" : "center",
      pointerEvents: modal ? "auto" : "none"
    };
  }, "mask"),
  root: {
    pointerEvents: "auto"
  }
};
var classes$M = {
  mask: /* @__PURE__ */ __name(function mask2(_ref3) {
    var instance = _ref3.instance, props = _ref3.props;
    var positions = ["left", "right", "top", "bottom"];
    var pos = positions.find(function(item8) {
      return item8 === props.position;
    });
    return ["p-drawer-mask", {
      "p-overlay-mask p-overlay-mask-enter": props.modal,
      "p-drawer-open": instance.containerVisible,
      "p-drawer-full": instance.fullScreen
    }, pos ? "p-drawer-".concat(pos) : ""];
  }, "mask"),
  root: /* @__PURE__ */ __name(function root(_ref4) {
    var instance = _ref4.instance;
    return ["p-drawer p-component", {
      "p-drawer-full": instance.fullScreen
    }];
  }, "root"),
  header: "p-drawer-header",
  title: "p-drawer-title",
  pcCloseButton: "p-drawer-close-button",
  content: "p-drawer-content",
  footer: "p-drawer-footer"
};
var DrawerStyle = BaseStyle.extend({
  name: "drawer",
  theme: theme$D,
  classes: classes$M,
  inlineStyles: inlineStyles$9
});
var script$1$O = {
  name: "BaseDrawer",
  "extends": script$1d,
  props: {
    visible: {
      type: Boolean,
      "default": false
    },
    position: {
      type: String,
      "default": "left"
    },
    header: {
      type: null,
      "default": null
    },
    baseZIndex: {
      type: Number,
      "default": 0
    },
    autoZIndex: {
      type: Boolean,
      "default": true
    },
    dismissable: {
      type: Boolean,
      "default": true
    },
    showCloseIcon: {
      type: Boolean,
      "default": true
    },
    closeButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default2() {
        return {
          severity: "secondary",
          text: true,
          rounded: true
        };
      }, "_default")
    },
    closeIcon: {
      type: String,
      "default": void 0
    },
    modal: {
      type: Boolean,
      "default": true
    },
    blockScroll: {
      type: Boolean,
      "default": false
    }
  },
  style: DrawerStyle,
  provide: /* @__PURE__ */ __name(function provide() {
    return {
      $pcDrawer: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1c = {
  name: "Drawer",
  "extends": script$1$O,
  inheritAttrs: false,
  emits: ["update:visible", "show", "after-show", "hide", "after-hide"],
  data: /* @__PURE__ */ __name(function data() {
    return {
      containerVisible: this.visible
    };
  }, "data"),
  container: null,
  mask: null,
  content: null,
  headerContainer: null,
  footerContainer: null,
  closeButton: null,
  outsideClickListener: null,
  documentKeydownListener: null,
  watch: {
    dismissable: /* @__PURE__ */ __name(function dismissable(newValue) {
      if (newValue) {
        this.enableDocumentSettings();
      } else {
        this.disableDocumentSettings();
      }
    }, "dismissable")
  },
  updated: /* @__PURE__ */ __name(function updated() {
    if (this.visible) {
      this.containerVisible = this.visible;
    }
  }, "updated"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount() {
    this.disableDocumentSettings();
    if (this.mask && this.autoZIndex) {
      ZIndex.clear(this.mask);
    }
    this.container = null;
    this.mask = null;
  }, "beforeUnmount"),
  methods: {
    hide: /* @__PURE__ */ __name(function hide() {
      this.$emit("update:visible", false);
    }, "hide"),
    onEnter: /* @__PURE__ */ __name(function onEnter() {
      this.$emit("show");
      this.focus();
      this.bindDocumentKeyDownListener();
      if (this.autoZIndex) {
        ZIndex.set("modal", this.mask, this.baseZIndex || this.$primevue.config.zIndex.modal);
      }
    }, "onEnter"),
    onAfterEnter: /* @__PURE__ */ __name(function onAfterEnter() {
      this.enableDocumentSettings();
      this.$emit("after-show");
    }, "onAfterEnter"),
    onBeforeLeave: /* @__PURE__ */ __name(function onBeforeLeave() {
      if (this.modal) {
        !this.isUnstyled && addClass(this.mask, "p-overlay-mask-leave");
      }
    }, "onBeforeLeave"),
    onLeave: /* @__PURE__ */ __name(function onLeave() {
      this.$emit("hide");
    }, "onLeave"),
    onAfterLeave: /* @__PURE__ */ __name(function onAfterLeave() {
      if (this.autoZIndex) {
        ZIndex.clear(this.mask);
      }
      this.unbindDocumentKeyDownListener();
      this.containerVisible = false;
      this.disableDocumentSettings();
      this.$emit("after-hide");
    }, "onAfterLeave"),
    onMaskClick: /* @__PURE__ */ __name(function onMaskClick(event2) {
      if (this.dismissable && this.modal && this.mask === event2.target) {
        this.hide();
      }
    }, "onMaskClick"),
    focus: /* @__PURE__ */ __name(function focus$1() {
      var findFocusableElement = /* @__PURE__ */ __name(function findFocusableElement2(container) {
        return container && container.querySelector("[autofocus]");
      }, "findFocusableElement");
      var focusTarget = this.$slots.header && findFocusableElement(this.headerContainer);
      if (!focusTarget) {
        focusTarget = this.$slots["default"] && findFocusableElement(this.container);
        if (!focusTarget) {
          focusTarget = this.$slots.footer && findFocusableElement(this.footerContainer);
          if (!focusTarget) {
            focusTarget = this.closeButton;
          }
        }
      }
      focusTarget && focus(focusTarget);
    }, "focus$1"),
    enableDocumentSettings: /* @__PURE__ */ __name(function enableDocumentSettings() {
      if (this.dismissable && !this.modal) {
        this.bindOutsideClickListener();
      }
      if (this.blockScroll) {
        blockBodyScroll();
      }
    }, "enableDocumentSettings"),
    disableDocumentSettings: /* @__PURE__ */ __name(function disableDocumentSettings() {
      this.unbindOutsideClickListener();
      if (this.blockScroll) {
        unblockBodyScroll();
      }
    }, "disableDocumentSettings"),
    onKeydown: /* @__PURE__ */ __name(function onKeydown(event2) {
      if (event2.code === "Escape") {
        this.hide();
      }
    }, "onKeydown"),
    containerRef: /* @__PURE__ */ __name(function containerRef(el) {
      this.container = el;
    }, "containerRef"),
    maskRef: /* @__PURE__ */ __name(function maskRef(el) {
      this.mask = el;
    }, "maskRef"),
    contentRef: /* @__PURE__ */ __name(function contentRef(el) {
      this.content = el;
    }, "contentRef"),
    headerContainerRef: /* @__PURE__ */ __name(function headerContainerRef(el) {
      this.headerContainer = el;
    }, "headerContainerRef"),
    footerContainerRef: /* @__PURE__ */ __name(function footerContainerRef(el) {
      this.footerContainer = el;
    }, "footerContainerRef"),
    closeButtonRef: /* @__PURE__ */ __name(function closeButtonRef(el) {
      this.closeButton = el ? el.$el : void 0;
    }, "closeButtonRef"),
    bindDocumentKeyDownListener: /* @__PURE__ */ __name(function bindDocumentKeyDownListener() {
      if (!this.documentKeydownListener) {
        this.documentKeydownListener = this.onKeydown;
        document.addEventListener("keydown", this.documentKeydownListener);
      }
    }, "bindDocumentKeyDownListener"),
    unbindDocumentKeyDownListener: /* @__PURE__ */ __name(function unbindDocumentKeyDownListener() {
      if (this.documentKeydownListener) {
        document.removeEventListener("keydown", this.documentKeydownListener);
        this.documentKeydownListener = null;
      }
    }, "unbindDocumentKeyDownListener"),
    bindOutsideClickListener: /* @__PURE__ */ __name(function bindOutsideClickListener() {
      var _this = this;
      if (!this.outsideClickListener) {
        this.outsideClickListener = function(event2) {
          if (_this.isOutsideClicked(event2)) {
            _this.hide();
          }
        };
        document.addEventListener("click", this.outsideClickListener);
      }
    }, "bindOutsideClickListener"),
    unbindOutsideClickListener: /* @__PURE__ */ __name(function unbindOutsideClickListener() {
      if (this.outsideClickListener) {
        document.removeEventListener("click", this.outsideClickListener);
        this.outsideClickListener = null;
      }
    }, "unbindOutsideClickListener"),
    isOutsideClicked: /* @__PURE__ */ __name(function isOutsideClicked(event2) {
      return this.container && !this.container.contains(event2.target);
    }, "isOutsideClicked")
  },
  computed: {
    fullScreen: /* @__PURE__ */ __name(function fullScreen() {
      return this.position === "full";
    }, "fullScreen"),
    closeAriaLabel: /* @__PURE__ */ __name(function closeAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.close : void 0;
    }, "closeAriaLabel")
  },
  directives: {
    focustrap: FocusTrap
  },
  components: {
    Button: script$1e,
    Portal: script$1f,
    TimesIcon: script$1g
  }
};
var _hoisted_1$v = ["aria-modal"];
function render$13(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Button = resolveComponent("Button");
  var _component_Portal = resolveComponent("Portal");
  var _directive_focustrap = resolveDirective("focustrap");
  return openBlock(), createBlock(_component_Portal, null, {
    "default": withCtx(function() {
      return [$data.containerVisible ? (openBlock(), createElementBlock("div", mergeProps({
        key: 0,
        ref: $options.maskRef,
        onMousedown: _cache[0] || (_cache[0] = function() {
          return $options.onMaskClick && $options.onMaskClick.apply($options, arguments);
        }),
        "class": _ctx.cx("mask"),
        style: _ctx.sx("mask", true, {
          position: _ctx.position,
          modal: _ctx.modal
        })
      }, _ctx.ptm("mask")), [createVNode(Transition, mergeProps({
        name: "p-drawer",
        onEnter: $options.onEnter,
        onAfterEnter: $options.onAfterEnter,
        onBeforeLeave: $options.onBeforeLeave,
        onLeave: $options.onLeave,
        onAfterLeave: $options.onAfterLeave,
        appear: ""
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [_ctx.visible ? withDirectives((openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.containerRef,
            "class": _ctx.cx("root"),
            style: _ctx.sx("root"),
            role: "complementary",
            "aria-modal": _ctx.modal
          }, _ctx.ptmi("root")), [_ctx.$slots.container ? renderSlot(_ctx.$slots, "container", {
            key: 0,
            closeCallback: $options.hide
          }) : (openBlock(), createElementBlock(Fragment, {
            key: 1
          }, [createBaseVNode("div", mergeProps({
            ref: $options.headerContainerRef,
            "class": _ctx.cx("header")
          }, _ctx.ptm("header")), [renderSlot(_ctx.$slots, "header", {
            "class": normalizeClass(_ctx.cx("title"))
          }, function() {
            return [_ctx.header ? (openBlock(), createElementBlock("div", mergeProps({
              key: 0,
              "class": _ctx.cx("title")
            }, _ctx.ptm("title")), toDisplayString(_ctx.header), 17)) : createCommentVNode("", true)];
          }), _ctx.showCloseIcon ? (openBlock(), createBlock(_component_Button, mergeProps({
            key: 0,
            ref: $options.closeButtonRef,
            type: "button",
            "class": _ctx.cx("pcCloseButton"),
            "aria-label": $options.closeAriaLabel,
            unstyled: _ctx.unstyled,
            onClick: $options.hide
          }, _ctx.closeButtonProps, {
            pt: _ctx.ptm("pcCloseButton"),
            "data-pc-group-section": "iconcontainer"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "closeicon", {}, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.closeIcon ? "span" : "TimesIcon"), mergeProps({
                  "class": [_ctx.closeIcon, slotProps["class"]]
                }, _ctx.ptm("pcCloseButton")["icon"]), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "unstyled", "onClick", "pt"])) : createCommentVNode("", true)], 16), createBaseVNode("div", mergeProps({
            ref: $options.contentRef,
            "class": _ctx.cx("content")
          }, _ctx.ptm("content")), [renderSlot(_ctx.$slots, "default")], 16), _ctx.$slots.footer ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.footerContainerRef,
            "class": _ctx.cx("footer")
          }, _ctx.ptm("footer")), [renderSlot(_ctx.$slots, "footer")], 16)) : createCommentVNode("", true)], 64))], 16, _hoisted_1$v)), [[_directive_focustrap]]) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onEnter", "onAfterEnter", "onBeforeLeave", "onLeave", "onAfterLeave"])], 16)) : createCommentVNode("", true)];
    }),
    _: 3
  });
}
__name(render$13, "render$13");
script$1c.render = render$13;
const _sfc_main$6 = /* @__PURE__ */ defineComponent({
  __name: "RefreshButton",
  props: /* @__PURE__ */ mergeModels({
    outlined: { type: Boolean, default: true },
    disabled: { type: Boolean },
    severity: { default: "secondary" }
  }, {
    "modelValue": { type: Boolean, ...{ required: true } },
    "modelModifiers": {}
  }),
  emits: /* @__PURE__ */ mergeModels(["refresh"], ["update:modelValue"]),
  setup(__props) {
    const props = __props;
    const active3 = useModel(__props, "modelValue");
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(script$1e), {
        class: "relative p-button-icon-only",
        outlined: props.outlined,
        severity: props.severity,
        disabled: active3.value || props.disabled,
        onClick: _cache[0] || (_cache[0] = (event2) => _ctx.$emit("refresh", event2))
      }, {
        default: withCtx(() => [
          createBaseVNode("span", {
            class: normalizeClass(["p-button-icon pi pi-refresh transition-all", { "opacity-0": active3.value }]),
            "data-pc-section": "icon"
          }, null, 2),
          _cache[1] || (_cache[1] = createBaseVNode("span", {
            class: "p-button-label",
            "data-pc-section": "label"
          }, " ", -1)),
          withDirectives(createVNode(unref(script$1h), { class: "absolute w-1/2 h-1/2" }, null, 512), [
            [vShow, active3.value]
          ])
        ]),
        _: 1
      }, 8, ["outlined", "severity", "disabled"]);
    };
  }
});
const _sfc_main$5 = /* @__PURE__ */ defineComponent({
  __name: "StatusTag",
  props: {
    error: { type: Boolean },
    refreshing: { type: Boolean }
  },
  setup(__props) {
    const props = __props;
    const icon2 = computed(() => {
      if (props.refreshing) return PrimeIcons.QUESTION;
      if (props.error) return PrimeIcons.TIMES;
      return PrimeIcons.CHECK;
    });
    const severity = computed(() => {
      if (props.refreshing) return "info";
      if (props.error) return "danger";
      return "success";
    });
    const value2 = computed(() => {
      if (props.refreshing) return t("maintenance.refreshing");
      if (props.error) return t("g.error");
      return t("maintenance.OK");
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(script$1i), {
        icon: icon2.value,
        severity: severity.value,
        value: value2.value
      }, null, 8, ["icon", "severity", "value"]);
    };
  }
});
var PrimeVueDialogSymbol = Symbol();
function useDialog() {
  var PrimeVueDialog = inject(PrimeVueDialogSymbol);
  if (!PrimeVueDialog) {
    throw new Error("No PrimeVue Dialog provided!");
  }
  return PrimeVueDialog;
}
__name(useDialog, "useDialog");
var classes$L = {
  root: "p-accordioncontent",
  content: "p-accordioncontent-content"
};
var AccordionContentStyle = BaseStyle.extend({
  name: "accordioncontent",
  classes: classes$L
});
var script$1$N = {
  name: "BaseAccordionContent",
  "extends": script$1d,
  props: {
    as: {
      type: [String, Object],
      "default": "DIV"
    },
    asChild: {
      type: Boolean,
      "default": false
    }
  },
  style: AccordionContentStyle,
  provide: /* @__PURE__ */ __name(function provide2() {
    return {
      $pcAccordionContent: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1b = {
  name: "AccordionContent",
  "extends": script$1$N,
  inheritAttrs: false,
  inject: ["$pcAccordion", "$pcAccordionPanel"],
  computed: {
    id: /* @__PURE__ */ __name(function id() {
      return "".concat(this.$pcAccordion.id, "_accordioncontent_").concat(this.$pcAccordionPanel.value);
    }, "id"),
    ariaLabelledby: /* @__PURE__ */ __name(function ariaLabelledby() {
      return "".concat(this.$pcAccordion.id, "_accordionheader_").concat(this.$pcAccordionPanel.value);
    }, "ariaLabelledby"),
    attrs: /* @__PURE__ */ __name(function attrs() {
      return mergeProps(this.a11yAttrs, this.ptmi("root", this.ptParams));
    }, "attrs"),
    a11yAttrs: /* @__PURE__ */ __name(function a11yAttrs() {
      return {
        id: this.id,
        role: "region",
        "aria-labelledby": this.ariaLabelledby,
        "data-pc-name": "accordioncontent",
        "data-p-active": this.$pcAccordionPanel.active
      };
    }, "a11yAttrs"),
    ptParams: /* @__PURE__ */ __name(function ptParams() {
      return {
        context: {
          active: this.$pcAccordionPanel.active
        }
      };
    }, "ptParams")
  }
};
function render$12(_ctx, _cache, $props, $setup, $data, $options) {
  return !_ctx.asChild ? (openBlock(), createBlock(Transition, mergeProps({
    key: 0,
    name: "p-toggleable-content"
  }, _ctx.ptm("transition", $options.ptParams)), {
    "default": withCtx(function() {
      return [($options.$pcAccordion.lazy ? $options.$pcAccordionPanel.active : true) ? withDirectives((openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({
        key: 0,
        "class": _ctx.cx("root")
      }, $options.attrs), {
        "default": withCtx(function() {
          return [createBaseVNode("div", mergeProps({
            "class": _ctx.cx("content")
          }, _ctx.ptm("content", $options.ptParams)), [renderSlot(_ctx.$slots, "default")], 16)];
        }),
        _: 3
      }, 16, ["class"])), [[vShow, $options.$pcAccordion.lazy ? true : $options.$pcAccordionPanel.active]]) : createCommentVNode("", true)];
    }),
    _: 3
  }, 16)) : renderSlot(_ctx.$slots, "default", {
    key: 1,
    "class": normalizeClass(_ctx.cx("root")),
    active: $options.$pcAccordionPanel.active,
    a11yAttrs: $options.a11yAttrs
  });
}
__name(render$12, "render$12");
script$1b.render = render$12;
var classes$K = {
  root: "p-accordionheader",
  toggleicon: "p-accordionheader-toggle-icon"
};
var AccordionHeaderStyle = BaseStyle.extend({
  name: "accordionheader",
  classes: classes$K
});
var script$1$M = {
  name: "BaseAccordionHeader",
  "extends": script$1d,
  props: {
    as: {
      type: [String, Object],
      "default": "BUTTON"
    },
    asChild: {
      type: Boolean,
      "default": false
    }
  },
  style: AccordionHeaderStyle,
  provide: /* @__PURE__ */ __name(function provide3() {
    return {
      $pcAccordionHeader: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1a = {
  name: "AccordionHeader",
  "extends": script$1$M,
  inheritAttrs: false,
  inject: ["$pcAccordion", "$pcAccordionPanel"],
  methods: {
    onFocus: /* @__PURE__ */ __name(function onFocus() {
      this.$pcAccordion.selectOnFocus && this.changeActiveValue();
    }, "onFocus"),
    onClick: /* @__PURE__ */ __name(function onClick() {
      this.changeActiveValue();
    }, "onClick"),
    onKeydown: /* @__PURE__ */ __name(function onKeydown2(event2) {
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
        case "Space":
          this.onEnterKey(event2);
          break;
      }
    }, "onKeydown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey(event2) {
      var nextPanel = this.findNextPanel(this.findPanel(event2.currentTarget));
      nextPanel ? this.changeFocusedPanel(event2, nextPanel) : this.onHomeKey(event2);
      event2.preventDefault();
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey(event2) {
      var prevPanel = this.findPrevPanel(this.findPanel(event2.currentTarget));
      prevPanel ? this.changeFocusedPanel(event2, prevPanel) : this.onEndKey(event2);
      event2.preventDefault();
    }, "onArrowUpKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey(event2) {
      var firstPanel = this.findFirstPanel();
      this.changeFocusedPanel(event2, firstPanel);
      event2.preventDefault();
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey(event2) {
      var lastPanel = this.findLastPanel();
      this.changeFocusedPanel(event2, lastPanel);
      event2.preventDefault();
    }, "onEndKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey(event2) {
      this.changeActiveValue();
      event2.preventDefault();
    }, "onEnterKey"),
    findPanel: /* @__PURE__ */ __name(function findPanel(headerElement) {
      return headerElement === null || headerElement === void 0 ? void 0 : headerElement.closest('[data-pc-name="accordionpanel"]');
    }, "findPanel"),
    findHeader: /* @__PURE__ */ __name(function findHeader(panelElement) {
      return findSingle(panelElement, '[data-pc-name="accordionheader"]');
    }, "findHeader"),
    findNextPanel: /* @__PURE__ */ __name(function findNextPanel(panelElement) {
      var selfCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var element = selfCheck ? panelElement : panelElement.nextElementSibling;
      return element ? getAttribute(element, "data-p-disabled") ? this.findNextPanel(element) : this.findHeader(element) : null;
    }, "findNextPanel"),
    findPrevPanel: /* @__PURE__ */ __name(function findPrevPanel(panelElement) {
      var selfCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var element = selfCheck ? panelElement : panelElement.previousElementSibling;
      return element ? getAttribute(element, "data-p-disabled") ? this.findPrevPanel(element) : this.findHeader(element) : null;
    }, "findPrevPanel"),
    findFirstPanel: /* @__PURE__ */ __name(function findFirstPanel() {
      return this.findNextPanel(this.$pcAccordion.$el.firstElementChild, true);
    }, "findFirstPanel"),
    findLastPanel: /* @__PURE__ */ __name(function findLastPanel() {
      return this.findPrevPanel(this.$pcAccordion.$el.lastElementChild, true);
    }, "findLastPanel"),
    changeActiveValue: /* @__PURE__ */ __name(function changeActiveValue() {
      this.$pcAccordion.updateValue(this.$pcAccordionPanel.value);
    }, "changeActiveValue"),
    changeFocusedPanel: /* @__PURE__ */ __name(function changeFocusedPanel(event2, element) {
      focus(this.findHeader(element));
    }, "changeFocusedPanel")
  },
  computed: {
    id: /* @__PURE__ */ __name(function id2() {
      return "".concat(this.$pcAccordion.id, "_accordionheader_").concat(this.$pcAccordionPanel.value);
    }, "id"),
    ariaControls: /* @__PURE__ */ __name(function ariaControls() {
      return "".concat(this.$pcAccordion.id, "_accordioncontent_").concat(this.$pcAccordionPanel.value);
    }, "ariaControls"),
    attrs: /* @__PURE__ */ __name(function attrs2() {
      return mergeProps(this.asAttrs, this.a11yAttrs, this.ptmi("root", this.ptParams));
    }, "attrs"),
    asAttrs: /* @__PURE__ */ __name(function asAttrs() {
      return this.as === "BUTTON" ? {
        type: "button",
        disabled: this.$pcAccordionPanel.disabled
      } : void 0;
    }, "asAttrs"),
    a11yAttrs: /* @__PURE__ */ __name(function a11yAttrs2() {
      return {
        id: this.id,
        tabindex: this.$pcAccordion.tabindex,
        "aria-expanded": this.$pcAccordionPanel.active,
        "aria-controls": this.ariaControls,
        "data-pc-name": "accordionheader",
        "data-p-disabled": this.$pcAccordionPanel.disabled,
        "data-p-active": this.$pcAccordionPanel.active,
        onFocus: this.onFocus,
        onKeydown: this.onKeydown
      };
    }, "a11yAttrs"),
    ptParams: /* @__PURE__ */ __name(function ptParams2() {
      return {
        context: {
          active: this.$pcAccordionPanel.active
        }
      };
    }, "ptParams")
  },
  components: {
    ChevronUpIcon: script$1j,
    ChevronDownIcon: script$1k
  },
  directives: {
    ripple: Ripple
  }
};
function render$11(_ctx, _cache, $props, $setup, $data, $options) {
  var _directive_ripple = resolveDirective("ripple");
  return !_ctx.asChild ? withDirectives((openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({
    key: 0,
    "class": _ctx.cx("root"),
    onClick: $options.onClick
  }, $options.attrs), {
    "default": withCtx(function() {
      return [renderSlot(_ctx.$slots, "default", {
        active: $options.$pcAccordionPanel.active
      }), renderSlot(_ctx.$slots, "toggleicon", {
        active: $options.$pcAccordionPanel.active,
        "class": normalizeClass(_ctx.cx("toggleicon"))
      }, function() {
        return [$options.$pcAccordionPanel.active ? (openBlock(), createBlock(resolveDynamicComponent($options.$pcAccordion.$slots.collapseicon ? $options.$pcAccordion.$slots.collapseicon : $options.$pcAccordion.collapseIcon ? "span" : "ChevronDownIcon"), mergeProps({
          key: 0,
          "class": [$options.$pcAccordion.collapseIcon, _ctx.cx("toggleicon")],
          "aria-hidden": "true"
        }, _ctx.ptm("toggleicon", $options.ptParams)), null, 16, ["class"])) : (openBlock(), createBlock(resolveDynamicComponent($options.$pcAccordion.$slots.expandicon ? $options.$pcAccordion.$slots.expandicon : $options.$pcAccordion.expandIcon ? "span" : "ChevronUpIcon"), mergeProps({
          key: 1,
          "class": [$options.$pcAccordion.expandIcon, _ctx.cx("toggleicon")],
          "aria-hidden": "true"
        }, _ctx.ptm("toggleicon", $options.ptParams)), null, 16, ["class"]))];
      })];
    }),
    _: 3
  }, 16, ["class", "onClick"])), [[_directive_ripple]]) : renderSlot(_ctx.$slots, "default", {
    key: 1,
    "class": normalizeClass(_ctx.cx("root")),
    active: $options.$pcAccordionPanel.active,
    a11yAttrs: $options.a11yAttrs,
    onClick: $options.onClick
  });
}
__name(render$11, "render$11");
script$1a.render = render$11;
var classes$J = {
  root: /* @__PURE__ */ __name(function root2(_ref) {
    var instance = _ref.instance, props = _ref.props;
    return ["p-accordionpanel", {
      "p-accordionpanel-active": instance.active,
      "p-disabled": props.disabled
    }];
  }, "root")
};
var AccordionPanelStyle = BaseStyle.extend({
  name: "accordionpanel",
  classes: classes$J
});
var script$1$L = {
  name: "BaseAccordionPanel",
  "extends": script$1d,
  props: {
    value: {
      type: [String, Number],
      "default": void 0
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    as: {
      type: [String, Object],
      "default": "DIV"
    },
    asChild: {
      type: Boolean,
      "default": false
    }
  },
  style: AccordionPanelStyle,
  provide: /* @__PURE__ */ __name(function provide4() {
    return {
      $pcAccordionPanel: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$19 = {
  name: "AccordionPanel",
  "extends": script$1$L,
  inheritAttrs: false,
  inject: ["$pcAccordion"],
  computed: {
    active: /* @__PURE__ */ __name(function active() {
      return this.$pcAccordion.isItemActive(this.value);
    }, "active"),
    attrs: /* @__PURE__ */ __name(function attrs3() {
      return mergeProps(this.a11yAttrs, this.ptmi("root", this.ptParams));
    }, "attrs"),
    a11yAttrs: /* @__PURE__ */ __name(function a11yAttrs3() {
      return {
        "data-pc-name": "accordionpanel",
        "data-p-disabled": this.disabled,
        "data-p-active": this.active
      };
    }, "a11yAttrs"),
    ptParams: /* @__PURE__ */ __name(function ptParams3() {
      return {
        context: {
          active: this.active
        }
      };
    }, "ptParams")
  }
};
function render$10(_ctx, _cache, $props, $setup, $data, $options) {
  return !_ctx.asChild ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.as), mergeProps({
    key: 0,
    "class": _ctx.cx("root")
  }, $options.attrs), {
    "default": withCtx(function() {
      return [renderSlot(_ctx.$slots, "default")];
    }),
    _: 3
  }, 16, ["class"])) : renderSlot(_ctx.$slots, "default", {
    key: 1,
    "class": normalizeClass(_ctx.cx("root")),
    active: $options.active,
    a11yAttrs: $options.a11yAttrs
  });
}
__name(render$10, "render$10");
script$19.render = render$10;
var theme$C = /* @__PURE__ */ __name(function theme2(_ref) {
  var dt = _ref.dt;
  return "\n.p-accordionpanel {\n    display: flex;\n    flex-direction: column;\n    border-style: solid;\n    border-width: ".concat(dt("accordion.panel.border.width"), ";\n    border-color: ").concat(dt("accordion.panel.border.color"), ";\n}\n\n.p-accordionheader {\n    all: unset;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: ").concat(dt("accordion.header.padding"), ";\n    color: ").concat(dt("accordion.header.color"), ";\n    background: ").concat(dt("accordion.header.background"), ";\n    border-style: solid;\n    border-width: ").concat(dt("accordion.header.border.width"), ";\n    border-color: ").concat(dt("accordion.header.border.color"), ";\n    font-weight: ").concat(dt("accordion.header.font.weight"), ";\n    border-radius: ").concat(dt("accordion.header.border.radius"), ";\n    transition: background ").concat(dt("accordion.transition.duration"), "; color ").concat(dt("accordion.transition.duration"), "color ").concat(dt("accordion.transition.duration"), ", outline-color ").concat(dt("accordion.transition.duration"), ", box-shadow ").concat(dt("accordion.transition.duration"), ";\n    outline-color: transparent;\n}\n\n.p-accordionpanel:first-child > .p-accordionheader {\n    border-width: ").concat(dt("accordion.header.first.border.width"), ";\n    border-start-start-radius: ").concat(dt("accordion.header.first.top.border.radius"), ";\n    border-start-end-radius: ").concat(dt("accordion.header.first.top.border.radius"), ";\n}\n\n.p-accordionpanel:last-child > .p-accordionheader {\n    border-end-start-radius: ").concat(dt("accordion.header.last.bottom.border.radius"), ";\n    border-end-end-radius: ").concat(dt("accordion.header.last.bottom.border.radius"), ";\n}\n\n.p-accordionpanel:last-child.p-accordionpanel-active > .p-accordionheader {\n    border-end-start-radius: ").concat(dt("accordion.header.last.active.bottom.border.radius"), ";\n    border-end-end-radius: ").concat(dt("accordion.header.last.active.bottom.border.radius"), ";\n}\n\n.p-accordionheader-toggle-icon {\n    color: ").concat(dt("accordion.header.toggle.icon.color"), ";\n}\n\n.p-accordionpanel:not(.p-disabled) .p-accordionheader:focus-visible {\n    box-shadow: ").concat(dt("accordion.header.focus.ring.shadow"), ";\n    outline: ").concat(dt("accordion.header.focus.ring.width"), " ").concat(dt("accordion.header.focus.ring.style"), " ").concat(dt("accordion.header.focus.ring.color"), ";\n    outline-offset: ").concat(dt("accordion.header.focus.ring.offset"), ";\n}\n\n.p-accordionpanel:not(.p-accordionpanel-active):not(.p-disabled) > .p-accordionheader:hover {\n    background: ").concat(dt("accordion.header.hover.background"), ";\n    color: ").concat(dt("accordion.header.hover.color"), ";\n}\n\n.p-accordionpanel:not(.p-accordionpanel-active):not(.p-disabled) .p-accordionheader:hover .p-accordionheader-toggle-icon {\n    color: ").concat(dt("accordion.header.toggle.icon.hover.color"), ";\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader {\n    background: ").concat(dt("accordion.header.active.background"), ";\n    color: ").concat(dt("accordion.header.active.color"), ";\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader .p-accordionheader-toggle-icon {\n    color: ").concat(dt("accordion.header.toggle.icon.active.color"), ";\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader:hover {\n    background: ").concat(dt("accordion.header.active.hover.background"), ";\n    color: ").concat(dt("accordion.header.active.hover.color"), ";\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader:hover .p-accordionheader-toggle-icon {\n    color: ").concat(dt("accordion.header.toggle.icon.active.hover.color"), ";\n}\n\n.p-accordioncontent-content {\n    border-style: solid;\n    border-width: ").concat(dt("accordion.content.border.width"), ";\n    border-color: ").concat(dt("accordion.content.border.color"), ";\n    background-color: ").concat(dt("accordion.content.background"), ";\n    color: ").concat(dt("accordion.content.color"), ";\n    padding: ").concat(dt("accordion.content.padding"), ";\n}\n");
}, "theme");
var classes$I = {
  root: "p-accordion p-component"
};
var AccordionStyle = BaseStyle.extend({
  name: "accordion",
  theme: theme$C,
  classes: classes$I
});
var script$1$K = {
  name: "BaseAccordion",
  "extends": script$1d,
  props: {
    value: {
      type: [String, Number, Array],
      "default": void 0
    },
    multiple: {
      type: Boolean,
      "default": false
    },
    lazy: {
      type: Boolean,
      "default": false
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    selectOnFocus: {
      type: Boolean,
      "default": false
    },
    expandIcon: {
      type: String,
      "default": void 0
    },
    collapseIcon: {
      type: String,
      "default": void 0
    },
    // @deprecated since v4.
    activeIndex: {
      type: [Number, Array],
      "default": null
    }
  },
  style: AccordionStyle,
  provide: /* @__PURE__ */ __name(function provide5() {
    return {
      $pcAccordion: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$18 = {
  name: "Accordion",
  "extends": script$1$K,
  inheritAttrs: false,
  emits: ["update:value", "update:activeIndex", "tab-open", "tab-close", "tab-click"],
  data: /* @__PURE__ */ __name(function data2() {
    return {
      id: this.$attrs.id,
      d_value: this.value
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    value: /* @__PURE__ */ __name(function value(newValue) {
      this.d_value = newValue;
    }, "value"),
    activeIndex: {
      immediate: true,
      handler: /* @__PURE__ */ __name(function handler(newValue) {
        if (this.hasAccordionTab) {
          this.d_value = this.multiple ? newValue === null || newValue === void 0 ? void 0 : newValue.map(String) : newValue === null || newValue === void 0 ? void 0 : newValue.toString();
        }
      }, "handler")
    }
  },
  mounted: /* @__PURE__ */ __name(function mounted() {
    this.id = this.id || UniqueComponentId();
  }, "mounted"),
  methods: {
    isItemActive: /* @__PURE__ */ __name(function isItemActive(value2) {
      var _this$d_value;
      return this.multiple ? (_this$d_value = this.d_value) === null || _this$d_value === void 0 ? void 0 : _this$d_value.includes(value2) : this.d_value === value2;
    }, "isItemActive"),
    updateValue: /* @__PURE__ */ __name(function updateValue(newValue) {
      var _this$d_value2;
      var active3 = this.isItemActive(newValue);
      if (this.multiple) {
        if (active3) {
          this.d_value = this.d_value.filter(function(v) {
            return v !== newValue;
          });
        } else {
          if (this.d_value) this.d_value.push(newValue);
          else this.d_value = [newValue];
        }
      } else {
        this.d_value = active3 ? null : newValue;
      }
      this.$emit("update:value", this.d_value);
      this.$emit("update:activeIndex", this.multiple ? (_this$d_value2 = this.d_value) === null || _this$d_value2 === void 0 ? void 0 : _this$d_value2.map(Number) : Number(this.d_value));
      this.$emit(active3 ? "tab-close" : "tab-open", {
        originalEvent: void 0,
        index: Number(newValue)
      });
    }, "updateValue"),
    // @deprecated since v4. Use new structure instead.
    isAccordionTab: /* @__PURE__ */ __name(function isAccordionTab(child) {
      return child.type.name === "AccordionTab";
    }, "isAccordionTab"),
    getTabProp: /* @__PURE__ */ __name(function getTabProp(tab, name4) {
      return tab.props ? tab.props[name4] : void 0;
    }, "getTabProp"),
    getKey: /* @__PURE__ */ __name(function getKey(tab, index) {
      return this.getTabProp(tab, "header") || index;
    }, "getKey"),
    getHeaderPT: /* @__PURE__ */ __name(function getHeaderPT(tab, index) {
      var _this = this;
      return {
        root: mergeProps({
          onClick: /* @__PURE__ */ __name(function onClick11(event2) {
            return _this.onTabClick(event2, index);
          }, "onClick")
        }, this.getTabProp(tab, "headerProps"), this.getTabPT(tab, "header", index)),
        toggleicon: mergeProps(this.getTabProp(tab, "headeractionprops"), this.getTabPT(tab, "headeraction", index))
      };
    }, "getHeaderPT"),
    getContentPT: /* @__PURE__ */ __name(function getContentPT(tab, index) {
      return {
        root: mergeProps(this.getTabProp(tab, "contentProps"), this.getTabPT(tab, "toggleablecontent", index)),
        transition: this.getTabPT(tab, "transition", index),
        content: this.getTabPT(tab, "content", index)
      };
    }, "getContentPT"),
    getTabPT: /* @__PURE__ */ __name(function getTabPT(tab, key, index) {
      var count = this.tabs.length;
      var tabMetaData = {
        props: tab.props || {},
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index,
          count,
          first: index === 0,
          last: index === count - 1,
          active: this.isItemActive("".concat(index))
        }
      };
      return mergeProps(this.ptm("accordiontab.".concat(key), tabMetaData), this.ptmo(this.getTabProp(tab, "pt"), key, tabMetaData));
    }, "getTabPT"),
    onTabClick: /* @__PURE__ */ __name(function onTabClick(event2, index) {
      this.$emit("tab-click", {
        originalEvent: event2,
        index
      });
    }, "onTabClick")
  },
  computed: {
    // @deprecated since v4.
    tabs: /* @__PURE__ */ __name(function tabs() {
      var _this2 = this;
      return this.$slots["default"]().reduce(function(tabs2, child) {
        if (_this2.isAccordionTab(child)) {
          tabs2.push(child);
        } else if (child.children && child.children instanceof Array) {
          child.children.forEach(function(nestedChild) {
            if (_this2.isAccordionTab(nestedChild)) {
              tabs2.push(nestedChild);
            }
          });
        }
        return tabs2;
      }, []);
    }, "tabs"),
    hasAccordionTab: /* @__PURE__ */ __name(function hasAccordionTab() {
      return this.tabs.length;
    }, "hasAccordionTab")
  },
  components: {
    AccordionPanel: script$19,
    AccordionHeader: script$1a,
    AccordionContent: script$1b,
    ChevronUpIcon: script$1j,
    ChevronRightIcon: script$1l
  }
};
function render$$(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_AccordionHeader = resolveComponent("AccordionHeader");
  var _component_AccordionContent = resolveComponent("AccordionContent");
  var _component_AccordionPanel = resolveComponent("AccordionPanel");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [$options.hasAccordionTab ? (openBlock(true), createElementBlock(Fragment, {
    key: 0
  }, renderList($options.tabs, function(tab, i) {
    return openBlock(), createBlock(_component_AccordionPanel, {
      key: $options.getKey(tab, i),
      value: "".concat(i),
      pt: {
        root: $options.getTabPT(tab, "root", i)
      },
      disabled: $options.getTabProp(tab, "disabled")
    }, {
      "default": withCtx(function() {
        return [createVNode(_component_AccordionHeader, {
          "class": normalizeClass($options.getTabProp(tab, "headerClass")),
          pt: $options.getHeaderPT(tab, i)
        }, {
          toggleicon: withCtx(function(slotProps) {
            return [slotProps.active ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.collapseicon ? _ctx.$slots.collapseicon : _ctx.collapseIcon ? "span" : "ChevronDownIcon"), mergeProps({
              key: 0,
              "class": [_ctx.collapseIcon, slotProps["class"]],
              "aria-hidden": "true",
              ref_for: true
            }, $options.getTabPT(tab, "headericon", i)), null, 16, ["class"])) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.expandicon ? _ctx.$slots.expandicon : _ctx.expandIcon ? "span" : "ChevronUpIcon"), mergeProps({
              key: 1,
              "class": [_ctx.expandIcon, slotProps["class"]],
              "aria-hidden": "true",
              ref_for: true
            }, $options.getTabPT(tab, "headericon", i)), null, 16, ["class"]))];
          }),
          "default": withCtx(function() {
            return [tab.children && tab.children.headericon ? (openBlock(), createBlock(resolveDynamicComponent(tab.children.headericon), {
              key: 0,
              isTabActive: $options.isItemActive("".concat(i)),
              active: $options.isItemActive("".concat(i)),
              index: i
            }, null, 8, ["isTabActive", "active", "index"])) : createCommentVNode("", true), tab.props && tab.props.header ? (openBlock(), createElementBlock("span", mergeProps({
              key: 1,
              ref_for: true
            }, $options.getTabPT(tab, "headertitle", i)), toDisplayString(tab.props.header), 17)) : createCommentVNode("", true), tab.children && tab.children.header ? (openBlock(), createBlock(resolveDynamicComponent(tab.children.header), {
              key: 2
            })) : createCommentVNode("", true)];
          }),
          _: 2
        }, 1032, ["class", "pt"]), createVNode(_component_AccordionContent, {
          pt: $options.getContentPT(tab, i)
        }, {
          "default": withCtx(function() {
            return [(openBlock(), createBlock(resolveDynamicComponent(tab)))];
          }),
          _: 2
        }, 1032, ["pt"])];
      }),
      _: 2
    }, 1032, ["value", "pt", "disabled"]);
  }), 128)) : renderSlot(_ctx.$slots, "default", {
    key: 1
  })], 16);
}
__name(render$$, "render$$");
script$18.render = render$$;
var AccordionTabStyle = BaseStyle.extend({
  name: "accordiontab"
});
var script$1$J = {
  name: "BaseAccordionTab",
  "extends": script$1d,
  props: {
    header: null,
    headerStyle: null,
    headerClass: null,
    headerProps: null,
    headerActionProps: null,
    contentStyle: null,
    contentClass: null,
    contentProps: null,
    disabled: Boolean
  },
  style: AccordionTabStyle,
  provide: /* @__PURE__ */ __name(function provide6() {
    return {
      $pcAccordionTab: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$17 = {
  name: "AccordionTab",
  "extends": script$1$J,
  inheritAttrs: false,
  mounted: /* @__PURE__ */ __name(function mounted2() {
    console.warn("Deprecated since v4. Use the new structure of Accordion instead.");
  }, "mounted")
};
function render$_(_ctx, _cache, $props, $setup, $data, $options) {
  return renderSlot(_ctx.$slots, "default");
}
__name(render$_, "render$_");
script$17.render = render$_;
var AnimateOnScrollStyle = BaseStyle.extend({
  name: "animateonscroll-directive"
});
var BaseAnimateOnScroll = BaseDirective.extend({
  style: AnimateOnScrollStyle
});
function _typeof$n(o) {
  "@babel/helpers - typeof";
  return _typeof$n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$n(o);
}
__name(_typeof$n, "_typeof$n");
function ownKeys$k(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$k, "ownKeys$k");
function _objectSpread$k(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$k(Object(t2), true).forEach(function(r2) {
      _defineProperty$l(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$k(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$k, "_objectSpread$k");
function _defineProperty$l(e, r, t2) {
  return (r = _toPropertyKey$l(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$l, "_defineProperty$l");
function _toPropertyKey$l(t2) {
  var i = _toPrimitive$l(t2, "string");
  return "symbol" == _typeof$n(i) ? i : i + "";
}
__name(_toPropertyKey$l, "_toPropertyKey$l");
function _toPrimitive$l(t2, r) {
  if ("object" != _typeof$n(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$n(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$l, "_toPrimitive$l");
function _slicedToArray$1(r, e) {
  return _arrayWithHoles$1(r) || _iterableToArrayLimit$1(r, e) || _unsupportedIterableToArray$f(r, e) || _nonIterableRest$1();
}
__name(_slicedToArray$1, "_slicedToArray$1");
function _nonIterableRest$1() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableRest$1, "_nonIterableRest$1");
function _unsupportedIterableToArray$f(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$f(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$f(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$f, "_unsupportedIterableToArray$f");
function _arrayLikeToArray$f(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$f, "_arrayLikeToArray$f");
function _iterableToArrayLimit$1(r, l) {
  var t2 = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t2) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t2 = t2.call(r)).next, 0 === l) ;
      else for (; !(f = (e = i.call(t2)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t2["return"] && (u = t2["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
__name(_iterableToArrayLimit$1, "_iterableToArrayLimit$1");
function _arrayWithHoles$1(r) {
  if (Array.isArray(r)) return r;
}
__name(_arrayWithHoles$1, "_arrayWithHoles$1");
var AnimateOnScroll = BaseAnimateOnScroll.extend("animateonscroll", {
  created: /* @__PURE__ */ __name(function created() {
    this.$value = this.$value || {};
    this.$el.style.opacity = this.$value.enterClass ? "0" : "";
  }, "created"),
  mounted: /* @__PURE__ */ __name(function mounted3() {
    this.$el.setAttribute("data-pd-animateonscroll", true);
    this.bindIntersectionObserver();
  }, "mounted"),
  unmounted: /* @__PURE__ */ __name(function unmounted() {
    this.unbindAnimationEvents();
    this.unbindIntersectionObserver();
  }, "unmounted"),
  observer: void 0,
  resetObserver: void 0,
  isObserverActive: false,
  animationState: void 0,
  animationEndListener: void 0,
  methods: {
    bindAnimationEvents: /* @__PURE__ */ __name(function bindAnimationEvents() {
      var _this = this;
      if (!this.animationEndListener) {
        this.animationEndListener = function() {
          removeClass(_this.$el, [_this.$value.enterClass, _this.$value.leaveClass]);
          !_this.$modifiers.once && _this.resetObserver.observe(_this.$el);
          _this.unbindAnimationEvents();
        };
        this.$el.addEventListener("animationend", this.animationEndListener);
      }
    }, "bindAnimationEvents"),
    bindIntersectionObserver: /* @__PURE__ */ __name(function bindIntersectionObserver() {
      var _this2 = this;
      var _this$$value = this.$value, root35 = _this$$value.root, rootMargin = _this$$value.rootMargin, _this$$value$threshol = _this$$value.threshold, threshold = _this$$value$threshol === void 0 ? 0.5 : _this$$value$threshol;
      var options4 = {
        root: root35,
        rootMargin,
        threshold
      };
      this.observer = new IntersectionObserver(function(_ref) {
        var _ref2 = _slicedToArray$1(_ref, 1), entry = _ref2[0];
        if (_this2.isObserverActive) {
          if (entry.boundingClientRect.top > 0) {
            entry.isIntersecting ? _this2.enter() : _this2.leave();
          }
        } else if (entry.isIntersecting) {
          _this2.enter();
        }
        _this2.isObserverActive = true;
      }, options4);
      setTimeout(function() {
        return _this2.observer.observe(_this2.$el);
      }, 0);
      this.resetObserver = new IntersectionObserver(function(_ref3) {
        var _ref4 = _slicedToArray$1(_ref3, 1), entry = _ref4[0];
        if (entry.boundingClientRect.top > 0 && !entry.isIntersecting) {
          _this2.$el.style.opacity = _this2.$value.enterClass ? "0" : "";
          removeClass(_this2.$el, [_this2.$value.enterClass, _this2.$value.leaveClass]);
          _this2.resetObserver.unobserve(_this2.$el);
        }
        _this2.animationState = void 0;
      }, _objectSpread$k(_objectSpread$k({}, options4), {}, {
        threshold: 0
      }));
    }, "bindIntersectionObserver"),
    enter: /* @__PURE__ */ __name(function enter() {
      if (this.animationState !== "enter" && this.$value.enterClass) {
        this.$el.style.opacity = "";
        removeClass(this.$el, this.$value.leaveClass);
        addClass(this.$el, this.$value.enterClass);
        this.$modifiers.once && this.unbindIntersectionObserver(this.$el);
        this.bindAnimationEvents();
        this.animationState = "enter";
      }
    }, "enter"),
    leave: /* @__PURE__ */ __name(function leave() {
      if (this.animationState !== "leave" && this.$value.leaveClass) {
        this.$el.style.opacity = this.$value.enterClass ? "0" : "";
        removeClass(this.$el, this.$value.enterClass);
        addClass(this.$el, this.$value.leaveClass);
        this.bindAnimationEvents();
        this.animationState = "leave";
      }
    }, "leave"),
    unbindAnimationEvents: /* @__PURE__ */ __name(function unbindAnimationEvents() {
      if (this.animationEndListener) {
        this.$el.removeEventListener("animationend", this.animationEndListener);
        this.animationEndListener = void 0;
      }
    }, "unbindAnimationEvents"),
    unbindIntersectionObserver: /* @__PURE__ */ __name(function unbindIntersectionObserver() {
      var _this$observer, _this$resetObserver;
      (_this$observer = this.observer) === null || _this$observer === void 0 || _this$observer.unobserve(this.$el);
      (_this$resetObserver = this.resetObserver) === null || _this$resetObserver === void 0 || _this$resetObserver.unobserve(this.$el);
      this.isObserverActive = false;
    }, "unbindIntersectionObserver")
  }
});
var theme$B = /* @__PURE__ */ __name(function theme3(_ref) {
  var dt = _ref.dt;
  return "\n.p-avatar {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: ".concat(dt("avatar.width"), ";\n    height: ").concat(dt("avatar.height"), ";\n    font-size: ").concat(dt("avatar.font.size"), ";\n    background: ").concat(dt("avatar.background"), ";\n    color: ").concat(dt("avatar.color"), ";\n    border-radius: ").concat(dt("avatar.border.radius"), ";\n}\n\n.p-avatar-image {\n    background: transparent;\n}\n\n.p-avatar-circle {\n    border-radius: 50%;\n}\n\n.p-avatar-circle img {\n    border-radius: 50%;\n}\n\n.p-avatar-icon {\n    font-size: ").concat(dt("avatar.icon.size"), ";\n    width: ").concat(dt("avatar.icon.size"), ";\n    height: ").concat(dt("avatar.icon.size"), ";\n}\n\n.p-avatar img {\n    width: 100%;\n    height: 100%;\n}\n\n.p-avatar-lg {\n    width: ").concat(dt("avatar.lg.width"), ";\n    height: ").concat(dt("avatar.lg.width"), ";\n    font-size: ").concat(dt("avatar.lg.font.size"), ";\n}\n\n.p-avatar-lg .p-avatar-icon {\n    font-size: ").concat(dt("avatar.lg.icon.size"), ";\n    width: ").concat(dt("avatar.lg.icon.size"), ";\n    height: ").concat(dt("avatar.lg.icon.size"), ";\n}\n\n.p-avatar-xl {\n    width: ").concat(dt("avatar.xl.width"), ";\n    height: ").concat(dt("avatar.xl.width"), ";\n    font-size: ").concat(dt("avatar.xl.font.size"), ";\n}\n\n.p-avatar-xl .p-avatar-icon {\n    font-size: ").concat(dt("avatar.xl.icon.size"), ";\n    width: ").concat(dt("avatar.xl.icon.size"), ";\n    height: ").concat(dt("avatar.xl.icon.size"), ";\n}\n\n.p-avatar-group {\n    display: flex;\n    align-items: center;\n}\n\n.p-avatar-group .p-avatar + .p-avatar {\n    margin-inline-start: ").concat(dt("avatar.group.offset"), ";\n}\n\n.p-avatar-group .p-avatar {\n    border: 2px solid ").concat(dt("avatar.group.border.color"), ";\n}\n\n.p-avatar-group .p-avatar-lg + .p-avatar-lg {\n    margin-inline-start: ").concat(dt("avatar.lg.group.offset"), ";\n}\n\n.p-avatar-group .p-avatar-xl + .p-avatar-xl {\n    margin-inline-start: ").concat(dt("avatar.xl.group.offset"), ";\n}\n");
}, "theme");
var classes$H = {
  root: /* @__PURE__ */ __name(function root3(_ref2) {
    var props = _ref2.props;
    return ["p-avatar p-component", {
      "p-avatar-image": props.image != null,
      "p-avatar-circle": props.shape === "circle",
      "p-avatar-lg": props.size === "large",
      "p-avatar-xl": props.size === "xlarge"
    }];
  }, "root"),
  label: "p-avatar-label",
  icon: "p-avatar-icon"
};
var AvatarStyle = BaseStyle.extend({
  name: "avatar",
  theme: theme$B,
  classes: classes$H
});
var script$1$I = {
  name: "BaseAvatar",
  "extends": script$1d,
  props: {
    label: {
      type: String,
      "default": null
    },
    icon: {
      type: String,
      "default": null
    },
    image: {
      type: String,
      "default": null
    },
    size: {
      type: String,
      "default": "normal"
    },
    shape: {
      type: String,
      "default": "square"
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: AvatarStyle,
  provide: /* @__PURE__ */ __name(function provide7() {
    return {
      $pcAvatar: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$16 = {
  name: "Avatar",
  "extends": script$1$I,
  inheritAttrs: false,
  emits: ["error"],
  methods: {
    onError: /* @__PURE__ */ __name(function onError(event2) {
      this.$emit("error", event2);
    }, "onError")
  }
};
var _hoisted_1$u = ["aria-labelledby", "aria-label"];
var _hoisted_2$m = ["src", "alt"];
function render$Z(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default", {}, function() {
    return [_ctx.label ? (openBlock(), createElementBlock("span", mergeProps({
      key: 0,
      "class": _ctx.cx("label")
    }, _ctx.ptm("label")), toDisplayString(_ctx.label), 17)) : _ctx.$slots.icon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.icon), {
      key: 1,
      "class": normalizeClass(_ctx.cx("icon"))
    }, null, 8, ["class"])) : _ctx.icon ? (openBlock(), createElementBlock("span", mergeProps({
      key: 2,
      "class": [_ctx.cx("icon"), _ctx.icon]
    }, _ctx.ptm("icon")), null, 16)) : _ctx.image ? (openBlock(), createElementBlock("img", mergeProps({
      key: 3,
      src: _ctx.image,
      alt: _ctx.ariaLabel,
      onError: _cache[0] || (_cache[0] = function() {
        return $options.onError && $options.onError.apply($options, arguments);
      })
    }, _ctx.ptm("image")), null, 16, _hoisted_2$m)) : createCommentVNode("", true)];
  })], 16, _hoisted_1$u);
}
__name(render$Z, "render$Z");
script$16.render = render$Z;
var classes$G = {
  root: "p-avatar-group p-component"
};
var AvatarGroupStyle = BaseStyle.extend({
  name: "avatargroup",
  classes: classes$G
});
var script$1$H = {
  name: "BaseAvatarGroup",
  "extends": script$1d,
  style: AvatarGroupStyle,
  provide: /* @__PURE__ */ __name(function provide8() {
    return {
      $pcAvatarGroup: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$15 = {
  name: "AvatarGroup",
  "extends": script$1$H,
  inheritAttrs: false
};
function render$Y(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
__name(render$Y, "render$Y");
script$15.render = render$Y;
var classes$F = {
  root: "p-badge p-component"
};
var BadgeDirectiveStyle = BaseStyle.extend({
  name: "badge-directive",
  classes: classes$F
});
var BaseBadgeDirective = BaseDirective.extend({
  style: BadgeDirectiveStyle
});
function _typeof$m(o) {
  "@babel/helpers - typeof";
  return _typeof$m = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$m(o);
}
__name(_typeof$m, "_typeof$m");
function ownKeys$j(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$j, "ownKeys$j");
function _objectSpread$j(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$j(Object(t2), true).forEach(function(r2) {
      _defineProperty$k(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$j(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$j, "_objectSpread$j");
function _defineProperty$k(e, r, t2) {
  return (r = _toPropertyKey$k(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$k, "_defineProperty$k");
function _toPropertyKey$k(t2) {
  var i = _toPrimitive$k(t2, "string");
  return "symbol" == _typeof$m(i) ? i : i + "";
}
__name(_toPropertyKey$k, "_toPropertyKey$k");
function _toPrimitive$k(t2, r) {
  if ("object" != _typeof$m(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$m(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$k, "_toPrimitive$k");
var BadgeDirective = BaseBadgeDirective.extend("badge", {
  mounted: /* @__PURE__ */ __name(function mounted4(el, binding) {
    console.warn("Deprecated since v4. Use OverlayBadge component instead.");
    var id4 = UniqueComponentId() + "_badge";
    var badge = createElement("span", _defineProperty$k(_defineProperty$k({
      id: id4,
      "class": !this.isUnstyled() && this.cx("root")
    }, this.$attrSelector, ""), "p-bind", this.ptm("root", {
      context: _objectSpread$j(_objectSpread$j({}, binding.modifiers), {}, {
        nogutter: String(binding.value).length === 1,
        dot: binding.value == null
      })
    })));
    el.$_pbadgeId = badge.getAttribute("id");
    for (var modifier in binding.modifiers) {
      !this.isUnstyled() && addClass(badge, "p-badge-" + modifier);
    }
    if (binding.value != null) {
      if (_typeof$m(binding.value) === "object") el.$_badgeValue = binding.value.value;
      else el.$_badgeValue = binding.value;
      badge.appendChild(document.createTextNode(el.$_badgeValue));
      if (String(el.$_badgeValue).length === 1 && !this.isUnstyled()) {
        !this.isUnstyled() && addClass(badge, "p-badge-circle");
      }
    } else {
      !this.isUnstyled() && addClass(badge, "p-badge-dot");
    }
    el.setAttribute("data-pd-badge", true);
    !this.isUnstyled() && addClass(el, "p-overlay-badge");
    el.setAttribute("data-p-overlay-badge", "true");
    el.appendChild(badge);
    this.$el = badge;
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated2(el, binding) {
    !this.isUnstyled() && addClass(el, "p-overlay-badge");
    el.setAttribute("data-p-overlay-badge", "true");
    if (binding.oldValue !== binding.value) {
      var badge = document.getElementById(el.$_pbadgeId);
      if (_typeof$m(binding.value) === "object") el.$_badgeValue = binding.value.value;
      else el.$_badgeValue = binding.value;
      if (!this.isUnstyled()) {
        if (el.$_badgeValue) {
          if (hasClass(badge, "p-badge-dot")) removeClass(badge, "p-badge-dot");
          if (el.$_badgeValue.length === 1) addClass(badge, "p-badge-circle");
          else removeClass(badge, "p-badge-circle");
        } else if (!el.$_badgeValue && !hasClass(badge, "p-badge-dot")) {
          addClass(badge, "p-badge-dot");
        }
      }
      badge.innerHTML = "";
      badge.appendChild(document.createTextNode(el.$_badgeValue));
    }
  }, "updated")
});
var theme$A = /* @__PURE__ */ __name(function theme4(_ref) {
  var dt = _ref.dt;
  return "\n.p-breadcrumb {\n    background: ".concat(dt("breadcrumb.background"), ";\n    padding: ").concat(dt("breadcrumb.padding"), ";\n    overflow-x: auto;\n}\n\n.p-breadcrumb-list {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    display: flex;\n    align-items: center;\n    flex-wrap: nowrap;\n    gap: ").concat(dt("breadcrumb.gap"), ";\n}\n\n.p-breadcrumb-separator {\n    display: flex;\n    align-items: center;\n    color: ").concat(dt("breadcrumb.separator.color"), ";\n}\n\n.p-breadcrumb-separator-icon:dir(rtl) {\n    transform: rotate(180deg);\n}\n\n.p-breadcrumb::-webkit-scrollbar {\n    display: none;\n}\n\n.p-breadcrumb-item-link {\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    gap: ").concat(dt("breadcrumb.item.gap"), ";\n    transition: background ").concat(dt("breadcrumb.transition.duration"), ", color ").concat(dt("breadcrumb.transition.duration"), ", outline-color ").concat(dt("breadcrumb.transition.duration"), ", box-shadow ").concat(dt("breadcrumb.transition.duration"), ";\n    border-radius: ").concat(dt("breadcrumb.item.border.radius"), ";\n    outline-color: transparent;\n    color: ").concat(dt("breadcrumb.item.color"), ";\n}\n\n.p-breadcrumb-item-link:focus-visible {\n    box-shadow: ").concat(dt("breadcrumb.item.focus.ring.shadow"), ";\n    outline: ").concat(dt("breadcrumb.item.focus.ring.width"), " ").concat(dt("breadcrumb.item.focus.ring.style"), " ").concat(dt("breadcrumb.item.focus.ring.color"), ";\n    outline-offset: ").concat(dt("breadcrumb.item.focus.ring.offset"), ";\n}\n\n.p-breadcrumb-item-link:hover .p-breadcrumb-item-label {\n    color: ").concat(dt("breadcrumb.item.hover.color"), ";\n}\n\n.p-breadcrumb-item-label {\n    transition: inherit;\n}\n\n.p-breadcrumb-item-icon {\n    color: ").concat(dt("breadcrumb.item.icon.color"), ";\n    transition: inherit;\n}\n\n.p-breadcrumb-item-link:hover .p-breadcrumb-item-icon {\n    color: ").concat(dt("breadcrumb.item.icon.hover.color"), ";\n}\n");
}, "theme");
var classes$E = {
  root: "p-breadcrumb p-component",
  list: "p-breadcrumb-list",
  homeItem: "p-breadcrumb-home-item",
  separator: "p-breadcrumb-separator",
  separatorIcon: "p-breadcrumb-separator-icon",
  item: /* @__PURE__ */ __name(function item(_ref2) {
    var instance = _ref2.instance;
    return ["p-breadcrumb-item", {
      "p-disabled": instance.disabled()
    }];
  }, "item"),
  itemLink: "p-breadcrumb-item-link",
  itemIcon: "p-breadcrumb-item-icon",
  itemLabel: "p-breadcrumb-item-label"
};
var BreadcrumbStyle = BaseStyle.extend({
  name: "breadcrumb",
  theme: theme$A,
  classes: classes$E
});
var script$2$9 = {
  name: "BaseBreadcrumb",
  "extends": script$1d,
  props: {
    model: {
      type: Array,
      "default": null
    },
    home: {
      type: null,
      "default": null
    }
  },
  style: BreadcrumbStyle,
  provide: /* @__PURE__ */ __name(function provide9() {
    return {
      $pcBreadcrumb: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1$G = {
  name: "BreadcrumbItem",
  hostName: "Breadcrumb",
  "extends": script$1d,
  props: {
    item: null,
    templates: null,
    index: null
  },
  methods: {
    onClick: /* @__PURE__ */ __name(function onClick2(event2) {
      if (this.item.command) {
        this.item.command({
          originalEvent: event2,
          item: this.item
        });
      }
    }, "onClick"),
    visible: /* @__PURE__ */ __name(function visible() {
      return typeof this.item.visible === "function" ? this.item.visible() : this.item.visible !== false;
    }, "visible"),
    disabled: /* @__PURE__ */ __name(function disabled() {
      return typeof this.item.disabled === "function" ? this.item.disabled() : this.item.disabled;
    }, "disabled"),
    label: /* @__PURE__ */ __name(function label() {
      return typeof this.item.label === "function" ? this.item.label() : this.item.label;
    }, "label"),
    isCurrentUrl: /* @__PURE__ */ __name(function isCurrentUrl() {
      var _this$item = this.item, to = _this$item.to, url = _this$item.url;
      var lastPath = typeof window !== "undefined" ? window.location.pathname : "";
      return to === lastPath || url === lastPath ? "page" : void 0;
    }, "isCurrentUrl")
  },
  computed: {
    ptmOptions: /* @__PURE__ */ __name(function ptmOptions() {
      return {
        context: {
          item: this.item,
          index: this.index
        }
      };
    }, "ptmOptions"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps() {
      var _this = this;
      return {
        action: mergeProps({
          "class": this.cx("itemLink"),
          "aria-current": this.isCurrentUrl(),
          onClick: /* @__PURE__ */ __name(function onClick11($event) {
            return _this.onClick($event);
          }, "onClick")
        }, this.ptm("itemLink", this.ptmOptions)),
        icon: mergeProps({
          "class": [this.cx("icon"), this.item.icon]
        }, this.ptm("icon", this.ptmOptions)),
        label: mergeProps({
          "class": this.cx("label")
        }, this.ptm("label", this.ptmOptions))
      };
    }, "getMenuItemProps")
  }
};
var _hoisted_1$t = ["href", "target", "aria-current"];
function render$1$9(_ctx, _cache, $props, $setup, $data, $options) {
  return $options.visible() ? (openBlock(), createElementBlock("li", mergeProps({
    key: 0,
    "class": [_ctx.cx("item"), $props.item["class"]]
  }, _ctx.ptm("item", $options.ptmOptions)), [!$props.templates.item ? (openBlock(), createElementBlock("a", mergeProps({
    key: 0,
    href: $props.item.url || "#",
    "class": _ctx.cx("itemLink"),
    target: $props.item.target,
    "aria-current": $options.isCurrentUrl(),
    onClick: _cache[0] || (_cache[0] = function() {
      return $options.onClick && $options.onClick.apply($options, arguments);
    })
  }, _ctx.ptm("itemLink", $options.ptmOptions)), [$props.templates && $props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {
    key: 0,
    item: $props.item,
    "class": normalizeClass(_ctx.cx("itemIcon", $options.ptmOptions))
  }, null, 8, ["item", "class"])) : $props.item.icon ? (openBlock(), createElementBlock("span", mergeProps({
    key: 1,
    "class": [_ctx.cx("itemIcon"), $props.item.icon]
  }, _ctx.ptm("itemIcon", $options.ptmOptions)), null, 16)) : createCommentVNode("", true), $props.item.label ? (openBlock(), createElementBlock("span", mergeProps({
    key: 2,
    "class": _ctx.cx("itemLabel")
  }, _ctx.ptm("itemLabel", $options.ptmOptions)), toDisplayString($options.label()), 17)) : createCommentVNode("", true)], 16, _hoisted_1$t)) : (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {
    key: 1,
    item: $props.item,
    label: $options.label(),
    props: $options.getMenuItemProps
  }, null, 8, ["item", "label", "props"]))], 16)) : createCommentVNode("", true);
}
__name(render$1$9, "render$1$9");
script$1$G.render = render$1$9;
var script$14 = {
  name: "Breadcrumb",
  "extends": script$2$9,
  inheritAttrs: false,
  components: {
    BreadcrumbItem: script$1$G,
    ChevronRightIcon: script$1l
  }
};
function render$X(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_BreadcrumbItem = resolveComponent("BreadcrumbItem");
  var _component_ChevronRightIcon = resolveComponent("ChevronRightIcon");
  return openBlock(), createElementBlock("nav", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createBaseVNode("ol", mergeProps({
    "class": _ctx.cx("list")
  }, _ctx.ptm("list")), [_ctx.home ? (openBlock(), createBlock(_component_BreadcrumbItem, mergeProps({
    key: 0,
    item: _ctx.home,
    "class": _ctx.cx("homeItem"),
    templates: _ctx.$slots,
    pt: _ctx.pt,
    unstyled: _ctx.unstyled
  }, _ctx.ptm("homeItem")), null, 16, ["item", "class", "templates", "pt", "unstyled"])) : createCommentVNode("", true), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function(item8, i) {
    return openBlock(), createElementBlock(Fragment, {
      key: item8.label + "_" + i
    }, [_ctx.home || i !== 0 ? (openBlock(), createElementBlock("li", mergeProps({
      key: 0,
      "class": _ctx.cx("separator"),
      ref_for: true
    }, _ctx.ptm("separator")), [renderSlot(_ctx.$slots, "separator", {}, function() {
      return [createVNode(_component_ChevronRightIcon, mergeProps({
        "aria-hidden": "true",
        "class": _ctx.cx("separatorIcon"),
        ref_for: true
      }, _ctx.ptm("separatorIcon")), null, 16, ["class"])];
    })], 16)) : createCommentVNode("", true), createVNode(_component_BreadcrumbItem, {
      item: item8,
      index: i,
      templates: _ctx.$slots,
      pt: _ctx.pt,
      unstyled: _ctx.unstyled
    }, null, 8, ["item", "index", "templates", "pt", "unstyled"])], 64);
  }), 128))], 16)], 16);
}
__name(render$X, "render$X");
script$14.render = render$X;
var script$13 = {
  name: "CalendarIcon",
  "extends": script$1m
};
function render$W(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    d: "M10.7838 1.51351H9.83783V0.567568C9.83783 0.417039 9.77804 0.272676 9.6716 0.166237C9.56516 0.0597971 9.42079 0 9.27027 0C9.11974 0 8.97538 0.0597971 8.86894 0.166237C8.7625 0.272676 8.7027 0.417039 8.7027 0.567568V1.51351H5.29729V0.567568C5.29729 0.417039 5.2375 0.272676 5.13106 0.166237C5.02462 0.0597971 4.88025 0 4.72973 0C4.5792 0 4.43484 0.0597971 4.3284 0.166237C4.22196 0.272676 4.16216 0.417039 4.16216 0.567568V1.51351H3.21621C2.66428 1.51351 2.13494 1.73277 1.74467 2.12305C1.35439 2.51333 1.13513 3.04266 1.13513 3.59459V11.9189C1.13513 12.4709 1.35439 13.0002 1.74467 13.3905C2.13494 13.7807 2.66428 14 3.21621 14H10.7838C11.3357 14 11.865 13.7807 12.2553 13.3905C12.6456 13.0002 12.8649 12.4709 12.8649 11.9189V3.59459C12.8649 3.04266 12.6456 2.51333 12.2553 2.12305C11.865 1.73277 11.3357 1.51351 10.7838 1.51351ZM3.21621 2.64865H4.16216V3.59459C4.16216 3.74512 4.22196 3.88949 4.3284 3.99593C4.43484 4.10237 4.5792 4.16216 4.72973 4.16216C4.88025 4.16216 5.02462 4.10237 5.13106 3.99593C5.2375 3.88949 5.29729 3.74512 5.29729 3.59459V2.64865H8.7027V3.59459C8.7027 3.74512 8.7625 3.88949 8.86894 3.99593C8.97538 4.10237 9.11974 4.16216 9.27027 4.16216C9.42079 4.16216 9.56516 4.10237 9.6716 3.99593C9.77804 3.88949 9.83783 3.74512 9.83783 3.59459V2.64865H10.7838C11.0347 2.64865 11.2753 2.74831 11.4527 2.92571C11.6301 3.10311 11.7297 3.34371 11.7297 3.59459V5.67568H2.27027V3.59459C2.27027 3.34371 2.36993 3.10311 2.54733 2.92571C2.72473 2.74831 2.96533 2.64865 3.21621 2.64865ZM10.7838 12.8649H3.21621C2.96533 12.8649 2.72473 12.7652 2.54733 12.5878C2.36993 12.4104 2.27027 12.1698 2.27027 11.9189V6.81081H11.7297V11.9189C11.7297 12.1698 11.6301 12.4104 11.4527 12.5878C11.2753 12.7652 11.0347 12.8649 10.7838 12.8649Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$W, "render$W");
script$13.render = render$W;
var theme$z = /* @__PURE__ */ __name(function theme5(_ref) {
  var dt = _ref.dt;
  return "\n.p-datepicker {\n    display: inline-flex;\n    max-width: 100%;\n}\n\n.p-datepicker-input {\n    flex: 1 1 auto;\n    width: 1%;\n}\n\n.p-datepicker:has(.p-datepicker-dropdown) .p-datepicker-input {\n    border-start-end-radius: 0;\n    border-end-end-radius: 0;\n}\n\n.p-datepicker-dropdown {\n    cursor: pointer;\n    display: inline-flex;\n    user-select: none;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    width: ".concat(dt("datepicker.dropdown.width"), ";\n    border-start-end-radius: ").concat(dt("datepicker.dropdown.border.radius"), ";\n    border-end-end-radius: ").concat(dt("datepicker.dropdown.border.radius"), ";\n    background: ").concat(dt("datepicker.dropdown.background"), ";\n    border: 1px solid ").concat(dt("datepicker.dropdown.border.color"), ";\n    border-inline-start: 0 none;\n    color: ").concat(dt("datepicker.dropdown.color"), ";\n    transition: background ").concat(dt("datepicker.transition.duration"), ", color ").concat(dt("datepicker.transition.duration"), ", border-color ").concat(dt("datepicker.transition.duration"), ", outline-color ").concat(dt("datepicker.transition.duration"), ";\n    outline-color: transparent;\n}\n\n.p-datepicker-dropdown:not(:disabled):hover {\n    background: ").concat(dt("datepicker.dropdown.hover.background"), ";\n    border-color: ").concat(dt("datepicker.dropdown.hover.border.color"), ";\n    color: ").concat(dt("datepicker.dropdown.hover.color"), ";\n}\n\n.p-datepicker-dropdown:not(:disabled):active {\n    background: ").concat(dt("datepicker.dropdown.active.background"), ";\n    border-color: ").concat(dt("datepicker.dropdown.active.border.color"), ";\n    color: ").concat(dt("datepicker.dropdown.active.color"), ";\n}\n\n.p-datepicker-dropdown:focus-visible {\n    box-shadow: ").concat(dt("datepicker.dropdown.focus.ring.shadow"), ";\n    outline: ").concat(dt("datepicker.dropdown.focus.ring.width"), " ").concat(dt("datepicker.dropdown.focus.ring.style"), " ").concat(dt("datepicker.dropdown.focus.ring.color"), ";\n    outline-offset: ").concat(dt("datepicker.dropdown.focus.ring.offset"), ";\n}\n\n.p-datepicker:has(.p-datepicker-input-icon-container) {\n    position: relative;\n}\n\n.p-datepicker:has(.p-datepicker-input-icon-container) .p-datepicker-input {\n    padding-inline-end: calc((").concat(dt("form.field.padding.x"), " * 2) + ").concat(dt("icon.size"), ");\n}\n\n.p-datepicker-input-icon-container {\n    cursor: pointer;\n    position: absolute;\n    top: 50%;\n    inset-inline-end: ").concat(dt("form.field.padding.x"), ";\n    margin-block-start: calc(-1 * (").concat(dt("icon.size"), " / 2));\n    color: ").concat(dt("datepicker.input.icon.color"), ";\n    line-height: 1;\n}\n\n.p-datepicker-fluid {\n    display: flex;\n}\n\n.p-datepicker-fluid .p-datepicker-input {\n    width: 1%;\n}\n\n.p-datepicker .p-datepicker-panel {\n    min-width: 100%;\n}\n\n.p-datepicker-panel {\n    width: auto;\n    padding: ").concat(dt("datepicker.panel.padding"), ";\n    background: ").concat(dt("datepicker.panel.background"), ";\n    color: ").concat(dt("datepicker.panel.color"), ";\n    border: 1px solid ").concat(dt("datepicker.panel.border.color"), ";\n    border-radius: ").concat(dt("datepicker.panel.border.radius"), ";\n    box-shadow: ").concat(dt("datepicker.panel.shadow"), ";\n}\n\n.p-datepicker-panel-inline {\n    display: inline-block;\n    overflow-x: auto;\n    box-shadow: none;\n}\n\n.p-datepicker-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: ").concat(dt("datepicker.header.padding"), ";\n    background: ").concat(dt("datepicker.header.background"), ";\n    color: ").concat(dt("datepicker.header.color"), ";\n    border-block-end: 1px solid ").concat(dt("datepicker.header.border.color"), ";\n}\n\n.p-datepicker-next-button:dir(rtl) {\n    order: -1;\n}\n\n.p-datepicker-prev-button:dir(rtl) {\n    order: 1;\n}\n\n.p-datepicker-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: ").concat(dt("datepicker.title.gap"), ";\n    font-weight: ").concat(dt("datepicker.title.font.weight"), ";\n}\n\n.p-datepicker-select-year,\n.p-datepicker-select-month {\n    border: none;\n    background: transparent;\n    margin: 0;\n    cursor: pointer;\n    font-weight: inherit;\n    transition: background ").concat(dt("datepicker.transition.duration"), ", color ").concat(dt("datepicker.transition.duration"), ", border-color ").concat(dt("datepicker.transition.duration"), ", outline-color ").concat(dt("datepicker.transition.duration"), ", box-shadow ").concat(dt("datepicker.transition.duration"), ";\n}\n\n.p-datepicker-select-month {\n    padding: ").concat(dt("datepicker.select.month.padding"), ";\n    color: ").concat(dt("datepicker.select.month.color"), ";\n    border-radius: ").concat(dt("datepicker.select.month.border.radius"), ";\n}\n\n.p-datepicker-select-year {\n    padding: ").concat(dt("datepicker.select.year.padding"), ";\n    color: ").concat(dt("datepicker.select.year.color"), ";\n    border-radius: ").concat(dt("datepicker.select.year.border.radius"), ";\n}\n\n.p-datepicker-select-month:enabled:hover {\n    background: ").concat(dt("datepicker.select.month.hover.background"), ";\n    color: ").concat(dt("datepicker.select.month.hover.color"), ";\n}\n\n.p-datepicker-select-year:enabled:hover {\n    background: ").concat(dt("datepicker.select.year.hover.background"), ";\n    color: ").concat(dt("datepicker.select.year.hover.color"), ";\n}\n\n.p-datepicker-select-month:focus-visible,\n.p-datepicker-select-year:focus-visible {\n    box-shadow: ").concat(dt("datepicker.date.focus.ring.shadow"), ";\n    outline: ").concat(dt("datepicker.date.focus.ring.width"), " ").concat(dt("datepicker.date.focus.ring.style"), " ").concat(dt("datepicker.date.focus.ring.color"), ";\n    outline-offset: ").concat(dt("datepicker.date.focus.ring.offset"), ";\n}\n\n.p-datepicker-calendar-container {\n    display: flex;\n}\n\n.p-datepicker-calendar-container .p-datepicker-calendar {\n    flex: 1 1 auto;\n    border-inline-start: 1px solid ").concat(dt("datepicker.group.border.color"), ";\n    padding-inline-end: ").concat(dt("datepicker.group.gap"), ";\n    padding-inline-start: ").concat(dt("datepicker.group.gap"), ";\n}\n\n.p-datepicker-calendar-container .p-datepicker-calendar:first-child {\n    padding-inline-start: 0;\n    border-inline-start: 0 none;\n}\n\n.p-datepicker-calendar-container .p-datepicker-calendar:last-child {\n    padding-inline-end: 0;\n}\n\n.p-datepicker-day-view {\n    width: 100%;\n    border-collapse: collapse;\n    font-size: 1rem;\n    margin: ").concat(dt("datepicker.day.view.margin"), ";\n}\n\n.p-datepicker-weekday-cell {\n    padding: ").concat(dt("datepicker.week.day.padding"), ";\n}\n\n.p-datepicker-weekday {\n    font-weight: ").concat(dt("datepicker.week.day.font.weight"), ";\n    color: ").concat(dt("datepicker.week.day.color"), ";\n}\n\n.p-datepicker-day-cell {\n    padding: ").concat(dt("datepicker.date.padding"), ";\n}\n\n.p-datepicker-day {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    margin: 0 auto;\n    overflow: hidden;\n    position: relative;\n    width: ").concat(dt("datepicker.date.width"), ";\n    height: ").concat(dt("datepicker.date.height"), ";\n    border-radius: ").concat(dt("datepicker.date.border.radius"), ";\n    transition: background ").concat(dt("datepicker.transition.duration"), ", color ").concat(dt("datepicker.transition.duration"), ", border-color ").concat(dt("datepicker.transition.duration"), ", box-shadow ").concat(dt("datepicker.transition.duration"), ", outline-color ").concat(dt("datepicker.transition.duration"), ";\n    border: 1px solid transparent;\n    outline-color: transparent;\n    color: ").concat(dt("datepicker.date.color"), ";\n}\n\n.p-datepicker-day:not(.p-datepicker-day-selected):not(.p-disabled):hover {\n    background: ").concat(dt("datepicker.date.hover.background"), ";\n    color: ").concat(dt("datepicker.date.hover.color"), ";\n}\n\n.p-datepicker-day:focus-visible {\n    box-shadow: ").concat(dt("datepicker.date.focus.ring.shadow"), ";\n    outline: ").concat(dt("datepicker.date.focus.ring.width"), " ").concat(dt("datepicker.date.focus.ring.style"), " ").concat(dt("datepicker.date.focus.ring.color"), ";\n    outline-offset: ").concat(dt("datepicker.date.focus.ring.offset"), ";\n}\n\n.p-datepicker-day-selected {\n    background: ").concat(dt("datepicker.date.selected.background"), ";\n    color: ").concat(dt("datepicker.date.selected.color"), ";\n}\n\n.p-datepicker-day-selected-range {\n    background: ").concat(dt("datepicker.date.range.selected.background"), ";\n    color: ").concat(dt("datepicker.date.range.selected.color"), ";\n}\n\n.p-datepicker-today > .p-datepicker-day {\n    background: ").concat(dt("datepicker.today.background"), ";\n    color: ").concat(dt("datepicker.today.color"), ";\n}\n\n.p-datepicker-today > .p-datepicker-day-selected {\n    background: ").concat(dt("datepicker.date.selected.background"), ";\n    color: ").concat(dt("datepicker.date.selected.color"), ";\n}\n\n.p-datepicker-today > .p-datepicker-day-selected-range {\n    background: ").concat(dt("datepicker.date.range.selected.background"), ";\n    color: ").concat(dt("datepicker.date.range.selected.color"), ";\n}\n\n.p-datepicker-weeknumber {\n    text-align: center;\n}\n\n.p-datepicker-month-view {\n    margin: ").concat(dt("datepicker.month.view.margin"), ";\n}\n\n.p-datepicker-month {\n    width: 33.3%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n    padding: ").concat(dt("datepicker.month.padding"), ";\n    transition: background ").concat(dt("datepicker.transition.duration"), ", color ").concat(dt("datepicker.transition.duration"), ", border-color ").concat(dt("datepicker.transition.duration"), ", box-shadow ").concat(dt("datepicker.transition.duration"), ", outline-color ").concat(dt("datepicker.transition.duration"), ";\n    border-radius: ").concat(dt("datepicker.month.border.radius"), ";\n    outline-color: transparent;\n    color: ").concat(dt("datepicker.date.color"), ";\n}\n\n.p-datepicker-month:not(.p-disabled):not(.p-datepicker-month-selected):hover {\n    color: ").concat(dt("datepicker.date.hover.color"), ";\n    background: ").concat(dt("datepicker.date.hover.background"), ";\n}\n\n.p-datepicker-month-selected {\n    color: ").concat(dt("datepicker.date.selected.color"), ";\n    background: ").concat(dt("datepicker.date.selected.background"), ";\n}\n\n.p-datepicker-month:not(.p-disabled):focus-visible {\n    box-shadow: ").concat(dt("datepicker.date.focus.ring.shadow"), ";\n    outline: ").concat(dt("datepicker.date.focus.ring.width"), " ").concat(dt("datepicker.date.focus.ring.style"), " ").concat(dt("datepicker.date.focus.ring.color"), ";\n    outline-offset: ").concat(dt("datepicker.date.focus.ring.offset"), ";\n}\n\n.p-datepicker-year-view {\n    margin: ").concat(dt("datepicker.year.view.margin"), ";\n}\n\n.p-datepicker-year {\n    width: 50%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    overflow: hidden;\n    position: relative;\n    padding: ").concat(dt("datepicker.year.padding"), ";\n    transition: background ").concat(dt("datepicker.transition.duration"), ", color ").concat(dt("datepicker.transition.duration"), ", border-color ").concat(dt("datepicker.transition.duration"), ", box-shadow ").concat(dt("datepicker.transition.duration"), ", outline-color ").concat(dt("datepicker.transition.duration"), ";\n    border-radius: ").concat(dt("datepicker.year.border.radius"), ";\n    outline-color: transparent;\n    color: ").concat(dt("datepicker.date.color"), ";\n}\n\n.p-datepicker-year:not(.p-disabled):not(.p-datepicker-year-selected):hover {\n    color: ").concat(dt("datepicker.date.hover.color"), ";\n    background: ").concat(dt("datepicker.date.hover.background"), ";\n}\n\n.p-datepicker-year-selected {\n    color: ").concat(dt("datepicker.date.selected.color"), ";\n    background: ").concat(dt("datepicker.date.selected.background"), ";\n}\n\n.p-datepicker-year:not(.p-disabled):focus-visible {\n    box-shadow: ").concat(dt("datepicker.date.focus.ring.shadow"), ";\n    outline: ").concat(dt("datepicker.date.focus.ring.width"), " ").concat(dt("datepicker.date.focus.ring.style"), " ").concat(dt("datepicker.date.focus.ring.color"), ";\n    outline-offset: ").concat(dt("datepicker.date.focus.ring.offset"), ";\n}\n\n.p-datepicker-buttonbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: ").concat(dt("datepicker.buttonbar.padding"), ";\n    border-block-start: 1px solid ").concat(dt("datepicker.buttonbar.border.color"), ";\n}\n\n.p-datepicker-buttonbar .p-button {\n    width: auto;\n}\n\n.p-datepicker-time-picker {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-block-start: 1px solid ").concat(dt("datepicker.time.picker.border.color"), ";\n    padding: 0;\n    gap: ").concat(dt("datepicker.time.picker.gap"), ";\n}\n\n.p-datepicker-calendar-container + .p-datepicker-time-picker {\n    padding: ").concat(dt("datepicker.time.picker.padding"), ";\n}\n\n.p-datepicker-time-picker > div {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: ").concat(dt("datepicker.time.picker.button.gap"), ";\n}\n\n.p-datepicker-time-picker span {\n    font-size: 1rem;\n}\n\n.p-datepicker-timeonly .p-datepicker-time-picker {\n    border-block-start: 0 none;\n}\n\n.p-datepicker:has(.p-inputtext-sm) .p-datepicker-dropdown {\n    width: ").concat(dt("datepicker.dropdown.sm.width"), ";\n}\n\n.p-datepicker:has(.p-inputtext-sm) .p-datepicker-dropdown .p-icon,\n.p-datepicker:has(.p-inputtext-sm) .p-datepicker-input-icon {\n    font-size: ").concat(dt("form.field.sm.font.size"), ";\n    width: ").concat(dt("form.field.sm.font.size"), ";\n    height: ").concat(dt("form.field.sm.font.size"), ";\n}\n\n.p-datepicker:has(.p-inputtext-lg) .p-datepicker-dropdown {\n    width: ").concat(dt("datepicker.dropdown.lg.width"), ";\n}\n\n.p-datepicker:has(.p-inputtext-lg) .p-datepicker-dropdown .p-icon,\n.p-datepicker:has(.p-inputtext-lg) .p-datepicker-input-icon {\n    font-size: ").concat(dt("form.field.lg.font.size"), ";\n    width: ").concat(dt("form.field.lg.font.size"), ";\n    height: ").concat(dt("form.field.lg.font.size"), ";\n}\n");
}, "theme");
var inlineStyles$8 = {
  root: /* @__PURE__ */ __name(function root4(_ref2) {
    var props = _ref2.props;
    return {
      position: props.appendTo === "self" ? "relative" : void 0
    };
  }, "root")
};
var classes$D = {
  root: /* @__PURE__ */ __name(function root5(_ref3) {
    var instance = _ref3.instance, state = _ref3.state;
    return ["p-datepicker p-component p-inputwrapper", {
      "p-invalid": instance.$invalid,
      "p-inputwrapper-filled": instance.$filled,
      "p-inputwrapper-focus": state.focused || state.overlayVisible,
      "p-focus": state.focused || state.overlayVisible,
      "p-datepicker-fluid": instance.$fluid
    }];
  }, "root"),
  pcInputText: "p-datepicker-input",
  dropdown: "p-datepicker-dropdown",
  inputIconContainer: "p-datepicker-input-icon-container",
  inputIcon: "p-datepicker-input-icon",
  panel: /* @__PURE__ */ __name(function panel(_ref4) {
    var props = _ref4.props;
    return ["p-datepicker-panel p-component", {
      "p-datepicker-panel-inline": props.inline,
      "p-disabled": props.disabled,
      "p-datepicker-timeonly": props.timeOnly
    }];
  }, "panel"),
  calendarContainer: "p-datepicker-calendar-container",
  calendar: "p-datepicker-calendar",
  header: "p-datepicker-header",
  pcPrevButton: "p-datepicker-prev-button",
  title: "p-datepicker-title",
  selectMonth: "p-datepicker-select-month",
  selectYear: "p-datepicker-select-year",
  decade: "p-datepicker-decade",
  pcNextButton: "p-datepicker-next-button",
  dayView: "p-datepicker-day-view",
  weekHeader: "p-datepicker-weekheader p-disabled",
  weekNumber: "p-datepicker-weeknumber",
  weekLabelContainer: "p-datepicker-weeklabel-container p-disabled",
  weekDayCell: "p-datepicker-weekday-cell",
  weekDay: "p-datepicker-weekday",
  dayCell: /* @__PURE__ */ __name(function dayCell(_ref5) {
    var date = _ref5.date;
    return ["p-datepicker-day-cell", {
      "p-datepicker-other-month": date.otherMonth,
      "p-datepicker-today": date.today
    }];
  }, "dayCell"),
  day: /* @__PURE__ */ __name(function day(_ref6) {
    var instance = _ref6.instance, props = _ref6.props, date = _ref6.date;
    var selectedDayClass = "";
    if (instance.isRangeSelection() && instance.isSelected(date) && date.selectable) {
      selectedDayClass = instance.isDateEquals(props.modelValue[0], date) || instance.isDateEquals(props.modelValue[1], date) ? "p-datepicker-day-selected" : "p-datepicker-day-selected-range";
    }
    return ["p-datepicker-day", {
      "p-datepicker-day-selected": !instance.isRangeSelection() && instance.isSelected(date) && date.selectable,
      "p-disabled": props.disabled || !date.selectable
    }, selectedDayClass];
  }, "day"),
  monthView: "p-datepicker-month-view",
  month: /* @__PURE__ */ __name(function month(_ref7) {
    var instance = _ref7.instance, props = _ref7.props, _month = _ref7.month, index = _ref7.index;
    return ["p-datepicker-month", {
      "p-datepicker-month-selected": instance.isMonthSelected(index),
      "p-disabled": props.disabled || !_month.selectable
    }];
  }, "month"),
  yearView: "p-datepicker-year-view",
  year: /* @__PURE__ */ __name(function year(_ref8) {
    var instance = _ref8.instance, props = _ref8.props, _year = _ref8.year;
    return ["p-datepicker-year", {
      "p-datepicker-year-selected": instance.isYearSelected(_year.value),
      "p-disabled": props.disabled || !_year.selectable
    }];
  }, "year"),
  timePicker: "p-datepicker-time-picker",
  hourPicker: "p-datepicker-hour-picker",
  pcIncrementButton: "p-datepicker-increment-button",
  pcDecrementButton: "p-datepicker-decrement-button",
  separator: "p-datepicker-separator",
  minutePicker: "p-datepicker-minute-picker",
  secondPicker: "p-datepicker-second-picker",
  ampmPicker: "p-datepicker-ampm-picker",
  buttonbar: "p-datepicker-buttonbar",
  pcTodayButton: "p-datepicker-today-button",
  pcClearButton: "p-datepicker-clear-button"
};
var DatePickerStyle = BaseStyle.extend({
  name: "datepicker",
  theme: theme$z,
  classes: classes$D,
  inlineStyles: inlineStyles$8
});
var script$1$F = {
  name: "BaseDatePicker",
  "extends": script$1n,
  props: {
    selectionMode: {
      type: String,
      "default": "single"
    },
    dateFormat: {
      type: String,
      "default": null
    },
    inline: {
      type: Boolean,
      "default": false
    },
    showOtherMonths: {
      type: Boolean,
      "default": true
    },
    selectOtherMonths: {
      type: Boolean,
      "default": false
    },
    showIcon: {
      type: Boolean,
      "default": false
    },
    iconDisplay: {
      type: String,
      "default": "button"
    },
    icon: {
      type: String,
      "default": void 0
    },
    prevIcon: {
      type: String,
      "default": void 0
    },
    nextIcon: {
      type: String,
      "default": void 0
    },
    incrementIcon: {
      type: String,
      "default": void 0
    },
    decrementIcon: {
      type: String,
      "default": void 0
    },
    numberOfMonths: {
      type: Number,
      "default": 1
    },
    responsiveOptions: Array,
    breakpoint: {
      type: String,
      "default": "769px"
    },
    view: {
      type: String,
      "default": "date"
    },
    minDate: {
      type: Date,
      value: null
    },
    maxDate: {
      type: Date,
      value: null
    },
    disabledDates: {
      type: Array,
      value: null
    },
    disabledDays: {
      type: Array,
      value: null
    },
    maxDateCount: {
      type: Number,
      value: null
    },
    showOnFocus: {
      type: Boolean,
      "default": true
    },
    autoZIndex: {
      type: Boolean,
      "default": true
    },
    baseZIndex: {
      type: Number,
      "default": 0
    },
    showButtonBar: {
      type: Boolean,
      "default": false
    },
    shortYearCutoff: {
      type: String,
      "default": "+10"
    },
    showTime: {
      type: Boolean,
      "default": false
    },
    timeOnly: {
      type: Boolean,
      "default": false
    },
    hourFormat: {
      type: String,
      "default": "24"
    },
    stepHour: {
      type: Number,
      "default": 1
    },
    stepMinute: {
      type: Number,
      "default": 1
    },
    stepSecond: {
      type: Number,
      "default": 1
    },
    showSeconds: {
      type: Boolean,
      "default": false
    },
    hideOnDateTimeSelect: {
      type: Boolean,
      "default": false
    },
    hideOnRangeSelection: {
      type: Boolean,
      "default": false
    },
    timeSeparator: {
      type: String,
      "default": ":"
    },
    showWeek: {
      type: Boolean,
      "default": false
    },
    manualInput: {
      type: Boolean,
      "default": true
    },
    appendTo: {
      type: [String, Object],
      "default": "body"
    },
    readonly: {
      type: Boolean,
      "default": false
    },
    placeholder: {
      type: String,
      "default": null
    },
    id: {
      type: String,
      "default": null
    },
    inputId: {
      type: String,
      "default": null
    },
    inputClass: {
      type: [String, Object],
      "default": null
    },
    inputStyle: {
      type: Object,
      "default": null
    },
    panelClass: {
      type: [String, Object],
      "default": null
    },
    panelStyle: {
      type: Object,
      "default": null
    },
    todayButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default3() {
        return {
          severity: "secondary",
          text: true,
          size: "small"
        };
      }, "_default")
    },
    clearButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default4() {
        return {
          severity: "secondary",
          text: true,
          size: "small"
        };
      }, "_default")
    },
    navigatorButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default5() {
        return {
          severity: "secondary",
          text: true,
          rounded: true
        };
      }, "_default")
    },
    timepickerButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default6() {
        return {
          severity: "secondary",
          text: true,
          rounded: true
        };
      }, "_default")
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: DatePickerStyle,
  provide: /* @__PURE__ */ __name(function provide10() {
    return {
      $pcDatePicker: this,
      $parentInstance: this
    };
  }, "provide")
};
function _typeof$l(o) {
  "@babel/helpers - typeof";
  return _typeof$l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$l(o);
}
__name(_typeof$l, "_typeof$l");
function _toConsumableArray$d(r) {
  return _arrayWithoutHoles$d(r) || _iterableToArray$d(r) || _unsupportedIterableToArray$e(r) || _nonIterableSpread$d();
}
__name(_toConsumableArray$d, "_toConsumableArray$d");
function _nonIterableSpread$d() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$d, "_nonIterableSpread$d");
function _iterableToArray$d(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$d, "_iterableToArray$d");
function _arrayWithoutHoles$d(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$e(r);
}
__name(_arrayWithoutHoles$d, "_arrayWithoutHoles$d");
function _createForOfIteratorHelper$4(r, e) {
  var t2 = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t2) {
    if (Array.isArray(r) || (t2 = _unsupportedIterableToArray$e(r)) || e) {
      t2 && (r = t2);
      var _n = 0, F = /* @__PURE__ */ __name(function F2() {
      }, "F");
      return { s: F, n: /* @__PURE__ */ __name(function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
        throw r2;
      }, "e"), f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: /* @__PURE__ */ __name(function s() {
    t2 = t2.call(r);
  }, "s"), n: /* @__PURE__ */ __name(function n() {
    var r2 = t2.next();
    return a = r2.done, r2;
  }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
    u = true, o = r2;
  }, "e"), f: /* @__PURE__ */ __name(function f() {
    try {
      a || null == t2["return"] || t2["return"]();
    } finally {
      if (u) throw o;
    }
  }, "f") };
}
__name(_createForOfIteratorHelper$4, "_createForOfIteratorHelper$4");
function _unsupportedIterableToArray$e(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$e(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$e(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$e, "_unsupportedIterableToArray$e");
function _arrayLikeToArray$e(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$e, "_arrayLikeToArray$e");
var script$12 = {
  name: "DatePicker",
  "extends": script$1$F,
  inheritAttrs: false,
  emits: ["show", "hide", "input", "month-change", "year-change", "date-select", "today-click", "clear-click", "focus", "blur", "keydown"],
  inject: {
    $pcFluid: {
      "default": null
    }
  },
  navigationState: null,
  timePickerChange: false,
  scrollHandler: null,
  outsideClickListener: null,
  resizeListener: null,
  matchMediaListener: null,
  overlay: null,
  input: null,
  previousButton: null,
  nextButton: null,
  timePickerTimer: null,
  preventFocus: false,
  typeUpdate: false,
  data: /* @__PURE__ */ __name(function data3() {
    return {
      d_id: this.id,
      currentMonth: null,
      currentYear: null,
      currentHour: null,
      currentMinute: null,
      currentSecond: null,
      pm: null,
      focused: false,
      overlayVisible: false,
      currentView: this.view,
      query: null,
      queryMatches: false
    };
  }, "data"),
  watch: {
    id: /* @__PURE__ */ __name(function id3(newValue) {
      this.d_id = newValue || UniqueComponentId();
    }, "id"),
    modelValue: /* @__PURE__ */ __name(function modelValue(newValue) {
      this.updateCurrentMetaData();
      if (!this.typeUpdate && !this.inline && this.input) {
        this.input.value = this.inputFieldValue;
      }
      this.typeUpdate = false;
    }, "modelValue"),
    showTime: /* @__PURE__ */ __name(function showTime() {
      this.updateCurrentMetaData();
    }, "showTime"),
    minDate: /* @__PURE__ */ __name(function minDate() {
      this.updateCurrentMetaData();
    }, "minDate"),
    maxDate: /* @__PURE__ */ __name(function maxDate() {
      this.updateCurrentMetaData();
    }, "maxDate"),
    months: /* @__PURE__ */ __name(function months() {
      if (this.overlay) {
        if (!this.focused) {
          if (this.inline) {
            this.preventFocus = true;
          }
          setTimeout(this.updateFocus, 0);
        }
      }
    }, "months"),
    numberOfMonths: /* @__PURE__ */ __name(function numberOfMonths() {
      this.destroyResponsiveStyleElement();
      this.createResponsiveStyle();
    }, "numberOfMonths"),
    responsiveOptions: /* @__PURE__ */ __name(function responsiveOptions() {
      this.destroyResponsiveStyleElement();
      this.createResponsiveStyle();
    }, "responsiveOptions"),
    currentView: /* @__PURE__ */ __name(function currentView() {
      var _this = this;
      Promise.resolve(null).then(function() {
        return _this.alignOverlay();
      });
    }, "currentView"),
    view: /* @__PURE__ */ __name(function view(newValue) {
      this.currentView = newValue;
    }, "view")
  },
  created: /* @__PURE__ */ __name(function created2() {
    this.updateCurrentMetaData();
  }, "created"),
  mounted: /* @__PURE__ */ __name(function mounted5() {
    this.d_id = this.d_id || UniqueComponentId();
    this.createResponsiveStyle();
    this.bindMatchMediaListener();
    if (this.inline) {
      if (!this.disabled) {
        this.preventFocus = true;
        this.initFocusableCell();
      }
    } else {
      this.input.value = this.inputFieldValue;
    }
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated3() {
    if (this.overlay) {
      this.preventFocus = true;
      setTimeout(this.updateFocus, 0);
    }
    if (this.input && this.selectionStart != null && this.selectionEnd != null) {
      this.input.selectionStart = this.selectionStart;
      this.input.selectionEnd = this.selectionEnd;
      this.selectionStart = null;
      this.selectionEnd = null;
    }
  }, "updated"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount2() {
    if (this.timePickerTimer) {
      clearTimeout(this.timePickerTimer);
    }
    this.destroyResponsiveStyleElement();
    this.unbindOutsideClickListener();
    this.unbindResizeListener();
    this.unbindMatchMediaListener();
    if (this.scrollHandler) {
      this.scrollHandler.destroy();
      this.scrollHandler = null;
    }
    if (this.overlay && this.autoZIndex) {
      ZIndex.clear(this.overlay);
    }
    this.overlay = null;
  }, "beforeUnmount"),
  methods: {
    isComparable: /* @__PURE__ */ __name(function isComparable() {
      return this.d_value != null && typeof this.d_value !== "string";
    }, "isComparable"),
    isSelected: /* @__PURE__ */ __name(function isSelected(dateMeta) {
      if (!this.isComparable()) {
        return false;
      }
      if (this.d_value) {
        if (this.isSingleSelection()) {
          return this.isDateEquals(this.d_value, dateMeta);
        } else if (this.isMultipleSelection()) {
          var selected3 = false;
          var _iterator = _createForOfIteratorHelper$4(this.d_value), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var date = _step.value;
              selected3 = this.isDateEquals(date, dateMeta);
              if (selected3) {
                break;
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return selected3;
        } else if (this.isRangeSelection()) {
          if (this.d_value[1]) return this.isDateEquals(this.d_value[0], dateMeta) || this.isDateEquals(this.d_value[1], dateMeta) || this.isDateBetween(this.d_value[0], this.d_value[1], dateMeta);
          else {
            return this.isDateEquals(this.d_value[0], dateMeta);
          }
        }
      }
      return false;
    }, "isSelected"),
    isMonthSelected: /* @__PURE__ */ __name(function isMonthSelected(month2) {
      var _this2 = this;
      if (!this.isComparable()) return false;
      if (this.isMultipleSelection()) {
        return this.d_value.some(function(currentValue) {
          return currentValue.getMonth() === month2 && currentValue.getFullYear() === _this2.currentYear;
        });
      } else if (this.isRangeSelection()) {
        if (!this.d_value[1]) {
          var _this$d_value$, _this$d_value$2;
          return ((_this$d_value$ = this.d_value[0]) === null || _this$d_value$ === void 0 ? void 0 : _this$d_value$.getFullYear()) === this.currentYear && ((_this$d_value$2 = this.d_value[0]) === null || _this$d_value$2 === void 0 ? void 0 : _this$d_value$2.getMonth()) === month2;
        } else {
          var currentDate = new Date(this.currentYear, month2, 1);
          var startDate = new Date(this.d_value[0].getFullYear(), this.d_value[0].getMonth(), 1);
          var endDate = new Date(this.d_value[1].getFullYear(), this.d_value[1].getMonth(), 1);
          return currentDate >= startDate && currentDate <= endDate;
        }
      } else {
        return this.d_value.getMonth() === month2 && this.d_value.getFullYear() === this.currentYear;
      }
    }, "isMonthSelected"),
    isYearSelected: /* @__PURE__ */ __name(function isYearSelected(year2) {
      if (!this.isComparable()) return false;
      if (this.isMultipleSelection()) {
        return this.d_value.some(function(currentValue) {
          return currentValue.getFullYear() === year2;
        });
      } else if (this.isRangeSelection()) {
        var start = this.d_value[0] ? this.d_value[0].getFullYear() : null;
        var end = this.d_value[1] ? this.d_value[1].getFullYear() : null;
        return start === year2 || end === year2 || start < year2 && end > year2;
      } else {
        return this.d_value.getFullYear() === year2;
      }
    }, "isYearSelected"),
    isDateEquals: /* @__PURE__ */ __name(function isDateEquals(value2, dateMeta) {
      if (value2) return value2.getDate() === dateMeta.day && value2.getMonth() === dateMeta.month && value2.getFullYear() === dateMeta.year;
      else return false;
    }, "isDateEquals"),
    isDateBetween: /* @__PURE__ */ __name(function isDateBetween(start, end, dateMeta) {
      var between = false;
      if (start && end) {
        var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);
        return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();
      }
      return between;
    }, "isDateBetween"),
    getFirstDayOfMonthIndex: /* @__PURE__ */ __name(function getFirstDayOfMonthIndex(month2, year2) {
      var day2 = /* @__PURE__ */ new Date();
      day2.setDate(1);
      day2.setMonth(month2);
      day2.setFullYear(year2);
      var dayIndex = day2.getDay() + this.sundayIndex;
      return dayIndex >= 7 ? dayIndex - 7 : dayIndex;
    }, "getFirstDayOfMonthIndex"),
    getDaysCountInMonth: /* @__PURE__ */ __name(function getDaysCountInMonth(month2, year2) {
      return 32 - this.daylightSavingAdjust(new Date(year2, month2, 32)).getDate();
    }, "getDaysCountInMonth"),
    getDaysCountInPrevMonth: /* @__PURE__ */ __name(function getDaysCountInPrevMonth(month2, year2) {
      var prev = this.getPreviousMonthAndYear(month2, year2);
      return this.getDaysCountInMonth(prev.month, prev.year);
    }, "getDaysCountInPrevMonth"),
    getPreviousMonthAndYear: /* @__PURE__ */ __name(function getPreviousMonthAndYear(month2, year2) {
      var m, y;
      if (month2 === 0) {
        m = 11;
        y = year2 - 1;
      } else {
        m = month2 - 1;
        y = year2;
      }
      return {
        month: m,
        year: y
      };
    }, "getPreviousMonthAndYear"),
    getNextMonthAndYear: /* @__PURE__ */ __name(function getNextMonthAndYear(month2, year2) {
      var m, y;
      if (month2 === 11) {
        m = 0;
        y = year2 + 1;
      } else {
        m = month2 + 1;
        y = year2;
      }
      return {
        month: m,
        year: y
      };
    }, "getNextMonthAndYear"),
    daylightSavingAdjust: /* @__PURE__ */ __name(function daylightSavingAdjust(date) {
      if (!date) {
        return null;
      }
      date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
      return date;
    }, "daylightSavingAdjust"),
    isToday: /* @__PURE__ */ __name(function isToday(today, day2, month2, year2) {
      return today.getDate() === day2 && today.getMonth() === month2 && today.getFullYear() === year2;
    }, "isToday"),
    isSelectable: /* @__PURE__ */ __name(function isSelectable(day2, month2, year2, otherMonth) {
      var validMin = true;
      var validMax = true;
      var validDate = true;
      var validDay = true;
      if (otherMonth && !this.selectOtherMonths) {
        return false;
      }
      if (this.minDate) {
        if (this.minDate.getFullYear() > year2) {
          validMin = false;
        } else if (this.minDate.getFullYear() === year2) {
          if (this.minDate.getMonth() > month2) {
            validMin = false;
          } else if (this.minDate.getMonth() === month2) {
            if (this.minDate.getDate() > day2) {
              validMin = false;
            }
          }
        }
      }
      if (this.maxDate) {
        if (this.maxDate.getFullYear() < year2) {
          validMax = false;
        } else if (this.maxDate.getFullYear() === year2) {
          if (this.maxDate.getMonth() < month2) {
            validMax = false;
          } else if (this.maxDate.getMonth() === month2) {
            if (this.maxDate.getDate() < day2) {
              validMax = false;
            }
          }
        }
      }
      if (this.disabledDates) {
        validDate = !this.isDateDisabled(day2, month2, year2);
      }
      if (this.disabledDays) {
        validDay = !this.isDayDisabled(day2, month2, year2);
      }
      return validMin && validMax && validDate && validDay;
    }, "isSelectable"),
    onOverlayEnter: /* @__PURE__ */ __name(function onOverlayEnter(el) {
      var styles = !this.inline ? {
        position: "absolute",
        top: "0",
        left: "0"
      } : void 0;
      addStyle(el, styles);
      if (this.autoZIndex) {
        ZIndex.set("overlay", el, this.baseZIndex || this.$primevue.config.zIndex.overlay);
      }
      this.alignOverlay();
      this.$emit("show");
    }, "onOverlayEnter"),
    onOverlayEnterComplete: /* @__PURE__ */ __name(function onOverlayEnterComplete() {
      this.bindOutsideClickListener();
      this.bindScrollListener();
      this.bindResizeListener();
    }, "onOverlayEnterComplete"),
    onOverlayAfterLeave: /* @__PURE__ */ __name(function onOverlayAfterLeave(el) {
      if (this.autoZIndex) {
        ZIndex.clear(el);
      }
    }, "onOverlayAfterLeave"),
    onOverlayLeave: /* @__PURE__ */ __name(function onOverlayLeave() {
      this.currentView = this.view;
      this.unbindOutsideClickListener();
      this.unbindScrollListener();
      this.unbindResizeListener();
      this.$emit("hide");
      this.overlay = null;
    }, "onOverlayLeave"),
    onPrevButtonClick: /* @__PURE__ */ __name(function onPrevButtonClick(event2) {
      this.navigationState = {
        backward: true,
        button: true
      };
      this.navBackward(event2);
    }, "onPrevButtonClick"),
    onNextButtonClick: /* @__PURE__ */ __name(function onNextButtonClick(event2) {
      this.navigationState = {
        backward: false,
        button: true
      };
      this.navForward(event2);
    }, "onNextButtonClick"),
    navBackward: /* @__PURE__ */ __name(function navBackward(event2) {
      event2.preventDefault();
      if (!this.isEnabled()) {
        return;
      }
      if (this.currentView === "month") {
        this.decrementYear();
        this.$emit("year-change", {
          month: this.currentMonth,
          year: this.currentYear
        });
      } else if (this.currentView === "year") {
        this.decrementDecade();
      } else {
        if (event2.shiftKey) {
          this.decrementYear();
        } else {
          if (this.currentMonth === 0) {
            this.currentMonth = 11;
            this.decrementYear();
          } else {
            this.currentMonth--;
          }
          this.$emit("month-change", {
            month: this.currentMonth + 1,
            year: this.currentYear
          });
        }
      }
    }, "navBackward"),
    navForward: /* @__PURE__ */ __name(function navForward(event2) {
      event2.preventDefault();
      if (!this.isEnabled()) {
        return;
      }
      if (this.currentView === "month") {
        this.incrementYear();
        this.$emit("year-change", {
          month: this.currentMonth,
          year: this.currentYear
        });
      } else if (this.currentView === "year") {
        this.incrementDecade();
      } else {
        if (event2.shiftKey) {
          this.incrementYear();
        } else {
          if (this.currentMonth === 11) {
            this.currentMonth = 0;
            this.incrementYear();
          } else {
            this.currentMonth++;
          }
          this.$emit("month-change", {
            month: this.currentMonth + 1,
            year: this.currentYear
          });
        }
      }
    }, "navForward"),
    decrementYear: /* @__PURE__ */ __name(function decrementYear() {
      this.currentYear--;
    }, "decrementYear"),
    decrementDecade: /* @__PURE__ */ __name(function decrementDecade() {
      this.currentYear = this.currentYear - 10;
    }, "decrementDecade"),
    incrementYear: /* @__PURE__ */ __name(function incrementYear() {
      this.currentYear++;
    }, "incrementYear"),
    incrementDecade: /* @__PURE__ */ __name(function incrementDecade() {
      this.currentYear = this.currentYear + 10;
    }, "incrementDecade"),
    switchToMonthView: /* @__PURE__ */ __name(function switchToMonthView(event2) {
      this.currentView = "month";
      setTimeout(this.updateFocus, 0);
      event2.preventDefault();
    }, "switchToMonthView"),
    switchToYearView: /* @__PURE__ */ __name(function switchToYearView(event2) {
      this.currentView = "year";
      setTimeout(this.updateFocus, 0);
      event2.preventDefault();
    }, "switchToYearView"),
    isEnabled: /* @__PURE__ */ __name(function isEnabled() {
      return !this.disabled && !this.readonly;
    }, "isEnabled"),
    updateCurrentTimeMeta: /* @__PURE__ */ __name(function updateCurrentTimeMeta(date) {
      var currentHour = date.getHours();
      if (this.hourFormat === "12") {
        this.pm = currentHour > 11;
        if (currentHour >= 12) currentHour = currentHour == 12 ? 12 : currentHour - 12;
      }
      this.currentHour = Math.floor(currentHour / this.stepHour) * this.stepHour;
      this.currentMinute = Math.floor(date.getMinutes() / this.stepMinute) * this.stepMinute;
      this.currentSecond = Math.floor(date.getSeconds() / this.stepSecond) * this.stepSecond;
    }, "updateCurrentTimeMeta"),
    bindOutsideClickListener: /* @__PURE__ */ __name(function bindOutsideClickListener2() {
      var _this3 = this;
      if (!this.outsideClickListener) {
        this.outsideClickListener = function(event2) {
          if (_this3.overlayVisible && _this3.isOutsideClicked(event2)) {
            _this3.overlayVisible = false;
          }
        };
        document.addEventListener("mousedown", this.outsideClickListener);
      }
    }, "bindOutsideClickListener"),
    unbindOutsideClickListener: /* @__PURE__ */ __name(function unbindOutsideClickListener2() {
      if (this.outsideClickListener) {
        document.removeEventListener("mousedown", this.outsideClickListener);
        this.outsideClickListener = null;
      }
    }, "unbindOutsideClickListener"),
    bindScrollListener: /* @__PURE__ */ __name(function bindScrollListener() {
      var _this4 = this;
      if (!this.scrollHandler) {
        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, function() {
          if (_this4.overlayVisible) {
            _this4.overlayVisible = false;
          }
        });
      }
      this.scrollHandler.bindScrollListener();
    }, "bindScrollListener"),
    unbindScrollListener: /* @__PURE__ */ __name(function unbindScrollListener() {
      if (this.scrollHandler) {
        this.scrollHandler.unbindScrollListener();
      }
    }, "unbindScrollListener"),
    bindResizeListener: /* @__PURE__ */ __name(function bindResizeListener() {
      var _this5 = this;
      if (!this.resizeListener) {
        this.resizeListener = function() {
          if (_this5.overlayVisible && !isTouchDevice()) {
            _this5.overlayVisible = false;
          }
        };
        window.addEventListener("resize", this.resizeListener);
      }
    }, "bindResizeListener"),
    unbindResizeListener: /* @__PURE__ */ __name(function unbindResizeListener() {
      if (this.resizeListener) {
        window.removeEventListener("resize", this.resizeListener);
        this.resizeListener = null;
      }
    }, "unbindResizeListener"),
    bindMatchMediaListener: /* @__PURE__ */ __name(function bindMatchMediaListener() {
      var _this6 = this;
      if (!this.matchMediaListener) {
        var query = matchMedia("(max-width: ".concat(this.breakpoint, ")"));
        this.query = query;
        this.queryMatches = query.matches;
        this.matchMediaListener = function() {
          _this6.queryMatches = query.matches;
          _this6.mobileActive = false;
        };
        this.query.addEventListener("change", this.matchMediaListener);
      }
    }, "bindMatchMediaListener"),
    unbindMatchMediaListener: /* @__PURE__ */ __name(function unbindMatchMediaListener() {
      if (this.matchMediaListener) {
        this.query.removeEventListener("change", this.matchMediaListener);
        this.matchMediaListener = null;
      }
    }, "unbindMatchMediaListener"),
    isOutsideClicked: /* @__PURE__ */ __name(function isOutsideClicked2(event2) {
      return !(this.$el.isSameNode(event2.target) || this.isNavIconClicked(event2) || this.$el.contains(event2.target) || this.overlay && this.overlay.contains(event2.target));
    }, "isOutsideClicked"),
    isNavIconClicked: /* @__PURE__ */ __name(function isNavIconClicked(event2) {
      return this.previousButton && (this.previousButton.isSameNode(event2.target) || this.previousButton.contains(event2.target)) || this.nextButton && (this.nextButton.isSameNode(event2.target) || this.nextButton.contains(event2.target));
    }, "isNavIconClicked"),
    alignOverlay: /* @__PURE__ */ __name(function alignOverlay() {
      if (this.overlay) {
        if (this.appendTo === "self" || this.inline) {
          relativePosition(this.overlay, this.$el);
        } else {
          if (this.view === "date") {
            this.overlay.style.width = getOuterWidth(this.overlay) + "px";
            this.overlay.style.minWidth = getOuterWidth(this.$el) + "px";
          } else {
            this.overlay.style.width = getOuterWidth(this.$el) + "px";
          }
          absolutePosition(this.overlay, this.$el);
        }
      }
    }, "alignOverlay"),
    onButtonClick: /* @__PURE__ */ __name(function onButtonClick() {
      if (this.isEnabled()) {
        if (!this.overlayVisible) {
          this.input.focus();
          this.overlayVisible = true;
        } else {
          this.overlayVisible = false;
        }
      }
    }, "onButtonClick"),
    isDateDisabled: /* @__PURE__ */ __name(function isDateDisabled(day2, month2, year2) {
      if (this.disabledDates) {
        var _iterator2 = _createForOfIteratorHelper$4(this.disabledDates), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var disabledDate = _step2.value;
            if (disabledDate.getFullYear() === year2 && disabledDate.getMonth() === month2 && disabledDate.getDate() === day2) {
              return true;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return false;
    }, "isDateDisabled"),
    isDayDisabled: /* @__PURE__ */ __name(function isDayDisabled(day2, month2, year2) {
      if (this.disabledDays) {
        var weekday = new Date(year2, month2, day2);
        var weekdayNumber = weekday.getDay();
        return this.disabledDays.indexOf(weekdayNumber) !== -1;
      }
      return false;
    }, "isDayDisabled"),
    onMonthDropdownChange: /* @__PURE__ */ __name(function onMonthDropdownChange(value2) {
      this.currentMonth = parseInt(value2);
      this.$emit("month-change", {
        month: this.currentMonth + 1,
        year: this.currentYear
      });
    }, "onMonthDropdownChange"),
    onYearDropdownChange: /* @__PURE__ */ __name(function onYearDropdownChange(value2) {
      this.currentYear = parseInt(value2);
      this.$emit("year-change", {
        month: this.currentMonth + 1,
        year: this.currentYear
      });
    }, "onYearDropdownChange"),
    onDateSelect: /* @__PURE__ */ __name(function onDateSelect(event2, dateMeta) {
      var _this7 = this;
      if (this.disabled || !dateMeta.selectable) {
        return;
      }
      find(this.overlay, 'table td span:not([data-p-disabled="true"])').forEach(function(cell) {
        return cell.tabIndex = -1;
      });
      if (event2) {
        event2.currentTarget.focus();
      }
      if (this.isMultipleSelection() && this.isSelected(dateMeta)) {
        var newValue = this.d_value.filter(function(date) {
          return !_this7.isDateEquals(date, dateMeta);
        });
        this.updateModel(newValue);
      } else {
        if (this.shouldSelectDate(dateMeta)) {
          if (dateMeta.otherMonth) {
            this.currentMonth = dateMeta.month;
            this.currentYear = dateMeta.year;
            this.selectDate(dateMeta);
          } else {
            this.selectDate(dateMeta);
          }
        }
      }
      if (this.isSingleSelection() && (!this.showTime || this.hideOnDateTimeSelect)) {
        if (this.input) {
          this.input.focus();
        }
        setTimeout(function() {
          _this7.overlayVisible = false;
        }, 150);
      }
    }, "onDateSelect"),
    selectDate: /* @__PURE__ */ __name(function selectDate(dateMeta) {
      var _this8 = this;
      var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);
      if (this.showTime) {
        this.hourFormat === "12" && this.currentHour !== 12 && this.pm ? date.setHours(this.currentHour + 12) : date.setHours(this.currentHour);
        date.setMinutes(this.currentMinute);
        date.setSeconds(this.currentSecond);
      }
      if (this.minDate && this.minDate > date) {
        date = this.minDate;
        this.currentHour = date.getHours();
        this.currentMinute = date.getMinutes();
        this.currentSecond = date.getSeconds();
      }
      if (this.maxDate && this.maxDate < date) {
        date = this.maxDate;
        this.currentHour = date.getHours();
        this.currentMinute = date.getMinutes();
        this.currentSecond = date.getSeconds();
      }
      var modelVal = null;
      if (this.isSingleSelection()) {
        modelVal = date;
      } else if (this.isMultipleSelection()) {
        modelVal = this.d_value ? [].concat(_toConsumableArray$d(this.d_value), [date]) : [date];
      } else if (this.isRangeSelection()) {
        if (this.d_value && this.d_value.length) {
          var startDate = this.d_value[0];
          var endDate = this.d_value[1];
          if (!endDate && date.getTime() >= startDate.getTime()) {
            endDate = date;
          } else {
            startDate = date;
            endDate = null;
          }
          modelVal = [startDate, endDate];
        } else {
          modelVal = [date, null];
        }
      }
      if (modelVal !== null) {
        this.updateModel(modelVal);
      }
      if (this.isRangeSelection() && this.hideOnRangeSelection && modelVal[1] !== null) {
        setTimeout(function() {
          _this8.overlayVisible = false;
        }, 150);
      }
      this.$emit("date-select", date);
    }, "selectDate"),
    updateModel: /* @__PURE__ */ __name(function updateModel(value2) {
      this.writeValue(value2);
    }, "updateModel"),
    shouldSelectDate: /* @__PURE__ */ __name(function shouldSelectDate() {
      if (this.isMultipleSelection()) return this.maxDateCount != null ? this.maxDateCount > (this.d_value ? this.d_value.length : 0) : true;
      else return true;
    }, "shouldSelectDate"),
    isSingleSelection: /* @__PURE__ */ __name(function isSingleSelection() {
      return this.selectionMode === "single";
    }, "isSingleSelection"),
    isRangeSelection: /* @__PURE__ */ __name(function isRangeSelection() {
      return this.selectionMode === "range";
    }, "isRangeSelection"),
    isMultipleSelection: /* @__PURE__ */ __name(function isMultipleSelection() {
      return this.selectionMode === "multiple";
    }, "isMultipleSelection"),
    formatValue: /* @__PURE__ */ __name(function formatValue(value2) {
      if (typeof value2 === "string") {
        return this.dateFormat ? this.formatDate(new Date(value2), this.dateFormat) : value2;
      }
      var formattedValue = "";
      if (value2) {
        try {
          if (this.isSingleSelection()) {
            formattedValue = this.formatDateTime(value2);
          } else if (this.isMultipleSelection()) {
            for (var i = 0; i < value2.length; i++) {
              var dateAsString = this.formatDateTime(value2[i]);
              formattedValue += dateAsString;
              if (i !== value2.length - 1) {
                formattedValue += ", ";
              }
            }
          } else if (this.isRangeSelection()) {
            if (value2 && value2.length) {
              var startDate = value2[0];
              var endDate = value2[1];
              formattedValue = this.formatDateTime(startDate);
              if (endDate) {
                formattedValue += " - " + this.formatDateTime(endDate);
              }
            }
          }
        } catch (err) {
          formattedValue = value2;
        }
      }
      return formattedValue;
    }, "formatValue"),
    formatDateTime: /* @__PURE__ */ __name(function formatDateTime(date) {
      var formattedValue = null;
      if (date) {
        if (this.timeOnly) {
          formattedValue = this.formatTime(date);
        } else {
          formattedValue = this.formatDate(date, this.datePattern);
          if (this.showTime) {
            formattedValue += " " + this.formatTime(date);
          }
        }
      }
      return formattedValue;
    }, "formatDateTime"),
    formatDate: /* @__PURE__ */ __name(function formatDate(date, format) {
      if (!date) {
        return "";
      }
      var iFormat;
      var lookAhead = /* @__PURE__ */ __name(function lookAhead2(match) {
        var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
        if (matches) {
          iFormat++;
        }
        return matches;
      }, "lookAhead"), formatNumber = /* @__PURE__ */ __name(function formatNumber2(match, value2, len) {
        var num = "" + value2;
        if (lookAhead(match)) {
          while (num.length < len) {
            num = "0" + num;
          }
        }
        return num;
      }, "formatNumber"), formatName = /* @__PURE__ */ __name(function formatName2(match, value2, shortNames, longNames) {
        return lookAhead(match) ? longNames[value2] : shortNames[value2];
      }, "formatName");
      var output = "";
      var literal = false;
      if (date) {
        for (iFormat = 0; iFormat < format.length; iFormat++) {
          if (literal) {
            if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
              literal = false;
            } else {
              output += format.charAt(iFormat);
            }
          } else {
            switch (format.charAt(iFormat)) {
              case "d":
                output += formatNumber("d", date.getDate(), 2);
                break;
              case "D":
                output += formatName("D", date.getDay(), this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames);
                break;
              case "o":
                output += formatNumber("o", Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 864e5), 3);
                break;
              case "m":
                output += formatNumber("m", date.getMonth() + 1, 2);
                break;
              case "M":
                output += formatName("M", date.getMonth(), this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames);
                break;
              case "y":
                output += lookAhead("y") ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? "0" : "") + date.getFullYear() % 100;
                break;
              case "@":
                output += date.getTime();
                break;
              case "!":
                output += date.getTime() * 1e4 + this.ticksTo1970;
                break;
              case "'":
                if (lookAhead("'")) {
                  output += "'";
                } else {
                  literal = true;
                }
                break;
              default:
                output += format.charAt(iFormat);
            }
          }
        }
      }
      return output;
    }, "formatDate"),
    formatTime: /* @__PURE__ */ __name(function formatTime(date) {
      if (!date) {
        return "";
      }
      var output = "";
      var hours = date.getHours();
      var minutes = date.getMinutes();
      var seconds = date.getSeconds();
      if (this.hourFormat === "12" && hours > 11 && hours !== 12) {
        hours -= 12;
      }
      if (this.hourFormat === "12") {
        output += hours === 0 ? 12 : hours < 10 ? "0" + hours : hours;
      } else {
        output += hours < 10 ? "0" + hours : hours;
      }
      output += ":";
      output += minutes < 10 ? "0" + minutes : minutes;
      if (this.showSeconds) {
        output += ":";
        output += seconds < 10 ? "0" + seconds : seconds;
      }
      if (this.hourFormat === "12") {
        output += date.getHours() > 11 ? " ".concat(this.$primevue.config.locale.pm) : " ".concat(this.$primevue.config.locale.am);
      }
      return output;
    }, "formatTime"),
    onTodayButtonClick: /* @__PURE__ */ __name(function onTodayButtonClick(event2) {
      var date = /* @__PURE__ */ new Date();
      var dateMeta = {
        day: date.getDate(),
        month: date.getMonth(),
        year: date.getFullYear(),
        otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,
        today: true,
        selectable: true
      };
      this.onDateSelect(null, dateMeta);
      this.$emit("today-click", date);
      event2.preventDefault();
    }, "onTodayButtonClick"),
    onClearButtonClick: /* @__PURE__ */ __name(function onClearButtonClick(event2) {
      this.updateModel(null);
      this.overlayVisible = false;
      this.$emit("clear-click", event2);
      event2.preventDefault();
    }, "onClearButtonClick"),
    onTimePickerElementMouseDown: /* @__PURE__ */ __name(function onTimePickerElementMouseDown(event2, type, direction) {
      if (this.isEnabled()) {
        this.repeat(event2, null, type, direction);
        event2.preventDefault();
      }
    }, "onTimePickerElementMouseDown"),
    onTimePickerElementMouseUp: /* @__PURE__ */ __name(function onTimePickerElementMouseUp(event2) {
      if (this.isEnabled()) {
        this.clearTimePickerTimer();
        this.updateModelTime();
        event2.preventDefault();
      }
    }, "onTimePickerElementMouseUp"),
    onTimePickerElementMouseLeave: /* @__PURE__ */ __name(function onTimePickerElementMouseLeave() {
      this.clearTimePickerTimer();
    }, "onTimePickerElementMouseLeave"),
    repeat: /* @__PURE__ */ __name(function repeat(event2, interval, type, direction) {
      var _this9 = this;
      var i = interval || 500;
      this.clearTimePickerTimer();
      this.timePickerTimer = setTimeout(function() {
        _this9.repeat(event2, 100, type, direction);
      }, i);
      switch (type) {
        case 0:
          if (direction === 1) this.incrementHour(event2);
          else this.decrementHour(event2);
          break;
        case 1:
          if (direction === 1) this.incrementMinute(event2);
          else this.decrementMinute(event2);
          break;
        case 2:
          if (direction === 1) this.incrementSecond(event2);
          else this.decrementSecond(event2);
          break;
      }
    }, "repeat"),
    convertTo24Hour: /* @__PURE__ */ __name(function convertTo24Hour(hours, pm) {
      if (this.hourFormat == "12") {
        if (hours === 12) {
          return pm ? 12 : 0;
        } else {
          return pm ? hours + 12 : hours;
        }
      }
      return hours;
    }, "convertTo24Hour"),
    validateTime: /* @__PURE__ */ __name(function validateTime(hour, minute, second, pm) {
      var value2 = this.isComparable() ? this.d_value : this.viewDate;
      var convertedHour = this.convertTo24Hour(hour, pm);
      if (this.isRangeSelection()) {
        value2 = this.d_value[1] || this.d_value[0];
      }
      if (this.isMultipleSelection()) {
        value2 = this.d_value[this.d_value.length - 1];
      }
      var valueDateString = value2 ? value2.toDateString() : null;
      if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {
        if (this.minDate.getHours() > convertedHour) {
          return false;
        }
        if (this.minDate.getHours() === convertedHour) {
          if (this.minDate.getMinutes() > minute) {
            return false;
          }
          if (this.minDate.getMinutes() === minute) {
            if (this.minDate.getSeconds() > second) {
              return false;
            }
          }
        }
      }
      if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {
        if (this.maxDate.getHours() < convertedHour) {
          return false;
        }
        if (this.maxDate.getHours() === convertedHour) {
          if (this.maxDate.getMinutes() < minute) {
            return false;
          }
          if (this.maxDate.getMinutes() === minute) {
            if (this.maxDate.getSeconds() < second) {
              return false;
            }
          }
        }
      }
      return true;
    }, "validateTime"),
    incrementHour: /* @__PURE__ */ __name(function incrementHour(event2) {
      var prevHour = this.currentHour;
      var newHour = this.currentHour + Number(this.stepHour);
      var newPM = this.pm;
      if (this.hourFormat == "24") newHour = newHour >= 24 ? newHour - 24 : newHour;
      else if (this.hourFormat == "12") {
        if (prevHour < 12 && newHour > 11) {
          newPM = !this.pm;
        }
        newHour = newHour >= 13 ? newHour - 12 : newHour;
      }
      if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {
        this.currentHour = newHour;
        this.pm = newPM;
      }
      event2.preventDefault();
    }, "incrementHour"),
    decrementHour: /* @__PURE__ */ __name(function decrementHour(event2) {
      var newHour = this.currentHour - this.stepHour;
      var newPM = this.pm;
      if (this.hourFormat == "24") newHour = newHour < 0 ? 24 + newHour : newHour;
      else if (this.hourFormat == "12") {
        if (this.currentHour === 12) {
          newPM = !this.pm;
        }
        newHour = newHour <= 0 ? 12 + newHour : newHour;
      }
      if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {
        this.currentHour = newHour;
        this.pm = newPM;
      }
      event2.preventDefault();
    }, "decrementHour"),
    incrementMinute: /* @__PURE__ */ __name(function incrementMinute(event2) {
      var newMinute = this.currentMinute + Number(this.stepMinute);
      if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {
        this.currentMinute = newMinute > 59 ? newMinute - 60 : newMinute;
      }
      event2.preventDefault();
    }, "incrementMinute"),
    decrementMinute: /* @__PURE__ */ __name(function decrementMinute(event2) {
      var newMinute = this.currentMinute - this.stepMinute;
      newMinute = newMinute < 0 ? 60 + newMinute : newMinute;
      if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {
        this.currentMinute = newMinute;
      }
      event2.preventDefault();
    }, "decrementMinute"),
    incrementSecond: /* @__PURE__ */ __name(function incrementSecond(event2) {
      var newSecond = this.currentSecond + Number(this.stepSecond);
      if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {
        this.currentSecond = newSecond > 59 ? newSecond - 60 : newSecond;
      }
      event2.preventDefault();
    }, "incrementSecond"),
    decrementSecond: /* @__PURE__ */ __name(function decrementSecond(event2) {
      var newSecond = this.currentSecond - this.stepSecond;
      newSecond = newSecond < 0 ? 60 + newSecond : newSecond;
      if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {
        this.currentSecond = newSecond;
      }
      event2.preventDefault();
    }, "decrementSecond"),
    updateModelTime: /* @__PURE__ */ __name(function updateModelTime() {
      var _this10 = this;
      this.timePickerChange = true;
      var value2 = this.isComparable() ? this.d_value : this.viewDate;
      if (this.isRangeSelection()) {
        value2 = this.d_value[1] || this.d_value[0];
      }
      if (this.isMultipleSelection()) {
        value2 = this.d_value[this.d_value.length - 1];
      }
      value2 = value2 ? new Date(value2.getTime()) : /* @__PURE__ */ new Date();
      if (this.hourFormat == "12") {
        if (this.currentHour === 12) value2.setHours(this.pm ? 12 : 0);
        else value2.setHours(this.pm ? this.currentHour + 12 : this.currentHour);
      } else {
        value2.setHours(this.currentHour);
      }
      value2.setMinutes(this.currentMinute);
      value2.setSeconds(this.currentSecond);
      if (this.isRangeSelection()) {
        if (this.d_value[1]) value2 = [this.d_value[0], value2];
        else value2 = [value2, null];
      }
      if (this.isMultipleSelection()) {
        value2 = [].concat(_toConsumableArray$d(this.d_value.slice(0, -1)), [value2]);
      }
      this.updateModel(value2);
      this.$emit("date-select", value2);
      setTimeout(function() {
        return _this10.timePickerChange = false;
      }, 0);
    }, "updateModelTime"),
    toggleAMPM: /* @__PURE__ */ __name(function toggleAMPM(event2) {
      var validHour = this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, !this.pm);
      if (!validHour && (this.maxDate || this.minDate)) return;
      this.pm = !this.pm;
      this.updateModelTime();
      event2.preventDefault();
    }, "toggleAMPM"),
    clearTimePickerTimer: /* @__PURE__ */ __name(function clearTimePickerTimer() {
      if (this.timePickerTimer) {
        clearInterval(this.timePickerTimer);
      }
    }, "clearTimePickerTimer"),
    onMonthSelect: /* @__PURE__ */ __name(function onMonthSelect(event2, _ref) {
      _ref.month;
      var index = _ref.index;
      if (this.view === "month") {
        this.onDateSelect(event2, {
          year: this.currentYear,
          month: index,
          day: 1,
          selectable: true
        });
      } else {
        this.currentMonth = index;
        this.currentView = "date";
        this.$emit("month-change", {
          month: this.currentMonth + 1,
          year: this.currentYear
        });
      }
      setTimeout(this.updateFocus, 0);
    }, "onMonthSelect"),
    onYearSelect: /* @__PURE__ */ __name(function onYearSelect(event2, year2) {
      if (this.view === "year") {
        this.onDateSelect(event2, {
          year: year2.value,
          month: 0,
          day: 1,
          selectable: true
        });
      } else {
        this.currentYear = year2.value;
        this.currentView = "month";
        this.$emit("year-change", {
          month: this.currentMonth + 1,
          year: this.currentYear
        });
      }
      setTimeout(this.updateFocus, 0);
    }, "onYearSelect"),
    updateCurrentMetaData: /* @__PURE__ */ __name(function updateCurrentMetaData() {
      var viewDate2 = this.viewDate;
      this.currentMonth = viewDate2.getMonth();
      this.currentYear = viewDate2.getFullYear();
      if (this.showTime || this.timeOnly) {
        this.updateCurrentTimeMeta(viewDate2);
      }
    }, "updateCurrentMetaData"),
    isValidSelection: /* @__PURE__ */ __name(function isValidSelection(value2) {
      var _this11 = this;
      if (value2 == null) {
        return true;
      }
      var isValid = true;
      if (this.isSingleSelection()) {
        if (!this.isSelectable(value2.getDate(), value2.getMonth(), value2.getFullYear(), false)) {
          isValid = false;
        }
      } else if (value2.every(function(v) {
        return _this11.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false);
      })) {
        if (this.isRangeSelection()) {
          isValid = value2.length > 1 && value2[1] >= value2[0];
        }
      }
      return isValid;
    }, "isValidSelection"),
    parseValue: /* @__PURE__ */ __name(function parseValue(text) {
      if (!text || text.trim().length === 0) {
        return null;
      }
      var value2;
      if (this.isSingleSelection()) {
        value2 = this.parseDateTime(text);
      } else if (this.isMultipleSelection()) {
        var tokens = text.split(",");
        value2 = [];
        var _iterator3 = _createForOfIteratorHelper$4(tokens), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var token = _step3.value;
            value2.push(this.parseDateTime(token.trim()));
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      } else if (this.isRangeSelection()) {
        var _tokens = text.split(" - ");
        value2 = [];
        for (var i = 0; i < _tokens.length; i++) {
          value2[i] = this.parseDateTime(_tokens[i].trim());
        }
      }
      return value2;
    }, "parseValue"),
    parseDateTime: /* @__PURE__ */ __name(function parseDateTime(text) {
      var date;
      var parts = text.split(" ");
      if (this.timeOnly) {
        date = /* @__PURE__ */ new Date();
        this.populateTime(date, parts[0], parts[1]);
      } else {
        var dateFormat = this.datePattern;
        if (this.showTime) {
          date = this.parseDate(parts[0], dateFormat);
          this.populateTime(date, parts[1], parts[2]);
        } else {
          date = this.parseDate(text, dateFormat);
        }
      }
      return date;
    }, "parseDateTime"),
    populateTime: /* @__PURE__ */ __name(function populateTime(value2, timeString, ampm) {
      if (this.hourFormat == "12" && !ampm) {
        throw "Invalid Time";
      }
      this.pm = ampm === this.$primevue.config.locale.pm || ampm === this.$primevue.config.locale.pm.toLowerCase();
      var time = this.parseTime(timeString);
      value2.setHours(time.hour);
      value2.setMinutes(time.minute);
      value2.setSeconds(time.second);
    }, "populateTime"),
    parseTime: /* @__PURE__ */ __name(function parseTime(value2) {
      var tokens = value2.split(":");
      var validTokenLength = this.showSeconds ? 3 : 2;
      var regex = /^[0-9][0-9]$/;
      if (tokens.length !== validTokenLength || !tokens[0].match(regex) || !tokens[1].match(regex) || this.showSeconds && !tokens[2].match(regex)) {
        throw "Invalid time";
      }
      var h = parseInt(tokens[0]);
      var m = parseInt(tokens[1]);
      var s = this.showSeconds ? parseInt(tokens[2]) : null;
      if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || this.hourFormat == "12" && h > 12 || this.showSeconds && (isNaN(s) || s > 59)) {
        throw "Invalid time";
      } else {
        if (this.hourFormat == "12" && h !== 12 && this.pm) {
          h += 12;
        } else if (this.hourFormat == "12" && h == 12 && !this.pm) {
          h = 0;
        }
        return {
          hour: h,
          minute: m,
          second: s
        };
      }
    }, "parseTime"),
    parseDate: /* @__PURE__ */ __name(function parseDate(value2, format) {
      if (format == null || value2 == null) {
        throw "Invalid arguments";
      }
      value2 = _typeof$l(value2) === "object" ? value2.toString() : value2 + "";
      if (value2 === "") {
        return null;
      }
      var iFormat, dim, extra, iValue = 0, shortYearCutoff = typeof this.shortYearCutoff !== "string" ? this.shortYearCutoff : (/* @__PURE__ */ new Date()).getFullYear() % 100 + parseInt(this.shortYearCutoff, 10), year2 = -1, month2 = -1, day2 = -1, doy = -1, literal = false, date, lookAhead = /* @__PURE__ */ __name(function lookAhead2(match) {
        var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
        if (matches) {
          iFormat++;
        }
        return matches;
      }, "lookAhead"), getNumber = /* @__PURE__ */ __name(function getNumber2(match) {
        var isDoubled = lookAhead(match), size = match === "@" ? 14 : match === "!" ? 20 : match === "y" && isDoubled ? 4 : match === "o" ? 3 : 2, minSize = match === "y" ? size : 1, digits = new RegExp("^\\d{" + minSize + "," + size + "}"), num = value2.substring(iValue).match(digits);
        if (!num) {
          throw "Missing number at position " + iValue;
        }
        iValue += num[0].length;
        return parseInt(num[0], 10);
      }, "getNumber"), getName = /* @__PURE__ */ __name(function getName2(match, shortNames, longNames) {
        var index = -1;
        var arr = lookAhead(match) ? longNames : shortNames;
        var names = [];
        for (var i = 0; i < arr.length; i++) {
          names.push([i, arr[i]]);
        }
        names.sort(function(a, b) {
          return -(a[1].length - b[1].length);
        });
        for (var _i = 0; _i < names.length; _i++) {
          var name4 = names[_i][1];
          if (value2.substr(iValue, name4.length).toLowerCase() === name4.toLowerCase()) {
            index = names[_i][0];
            iValue += name4.length;
            break;
          }
        }
        if (index !== -1) {
          return index + 1;
        } else {
          throw "Unknown name at position " + iValue;
        }
      }, "getName"), checkLiteral = /* @__PURE__ */ __name(function checkLiteral2() {
        if (value2.charAt(iValue) !== format.charAt(iFormat)) {
          throw "Unexpected literal at position " + iValue;
        }
        iValue++;
      }, "checkLiteral");
      if (this.currentView === "month") {
        day2 = 1;
      }
      if (this.currentView === "year") {
        day2 = 1;
        month2 = 1;
      }
      for (iFormat = 0; iFormat < format.length; iFormat++) {
        if (literal) {
          if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
            literal = false;
          } else {
            checkLiteral();
          }
        } else {
          switch (format.charAt(iFormat)) {
            case "d":
              day2 = getNumber("d");
              break;
            case "D":
              getName("D", this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames);
              break;
            case "o":
              doy = getNumber("o");
              break;
            case "m":
              month2 = getNumber("m");
              break;
            case "M":
              month2 = getName("M", this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames);
              break;
            case "y":
              year2 = getNumber("y");
              break;
            case "@":
              date = new Date(getNumber("@"));
              year2 = date.getFullYear();
              month2 = date.getMonth() + 1;
              day2 = date.getDate();
              break;
            case "!":
              date = new Date((getNumber("!") - this.ticksTo1970) / 1e4);
              year2 = date.getFullYear();
              month2 = date.getMonth() + 1;
              day2 = date.getDate();
              break;
            case "'":
              if (lookAhead("'")) {
                checkLiteral();
              } else {
                literal = true;
              }
              break;
            default:
              checkLiteral();
          }
        }
      }
      if (iValue < value2.length) {
        extra = value2.substr(iValue);
        if (!/^\s+/.test(extra)) {
          throw "Extra/unparsed characters found in date: " + extra;
        }
      }
      if (year2 === -1) {
        year2 = (/* @__PURE__ */ new Date()).getFullYear();
      } else if (year2 < 100) {
        year2 += (/* @__PURE__ */ new Date()).getFullYear() - (/* @__PURE__ */ new Date()).getFullYear() % 100 + (year2 <= shortYearCutoff ? 0 : -100);
      }
      if (doy > -1) {
        month2 = 1;
        day2 = doy;
        do {
          dim = this.getDaysCountInMonth(year2, month2 - 1);
          if (day2 <= dim) {
            break;
          }
          month2++;
          day2 -= dim;
        } while (true);
      }
      date = this.daylightSavingAdjust(new Date(year2, month2 - 1, day2));
      if (date.getFullYear() !== year2 || date.getMonth() + 1 !== month2 || date.getDate() !== day2) {
        throw "Invalid date";
      }
      return date;
    }, "parseDate"),
    getWeekNumber: /* @__PURE__ */ __name(function getWeekNumber(date) {
      var checkDate = new Date(date.getTime());
      checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
      var time = checkDate.getTime();
      checkDate.setMonth(0);
      checkDate.setDate(1);
      return Math.floor(Math.round((time - checkDate.getTime()) / 864e5) / 7) + 1;
    }, "getWeekNumber"),
    onDateCellKeydown: /* @__PURE__ */ __name(function onDateCellKeydown(event2, date, groupIndex) {
      var cellContent = event2.currentTarget;
      var cell = cellContent.parentElement;
      var cellIndex = getIndex(cell);
      switch (event2.code) {
        case "ArrowDown": {
          cellContent.tabIndex = "-1";
          var nextRow = cell.parentElement.nextElementSibling;
          if (nextRow) {
            var tableRowIndex = getIndex(cell.parentElement);
            var tableRows = Array.from(cell.parentElement.parentElement.children);
            var nextTableRows = tableRows.slice(tableRowIndex + 1);
            var hasNextFocusableDate = nextTableRows.find(function(el) {
              var focusCell2 = el.children[cellIndex].children[0];
              return !getAttribute(focusCell2, "data-p-disabled");
            });
            if (hasNextFocusableDate) {
              var focusCell = hasNextFocusableDate.children[cellIndex].children[0];
              focusCell.tabIndex = "0";
              focusCell.focus();
            } else {
              this.navigationState = {
                backward: false
              };
              this.navForward(event2);
            }
          } else {
            this.navigationState = {
              backward: false
            };
            this.navForward(event2);
          }
          event2.preventDefault();
          break;
        }
        case "ArrowUp": {
          cellContent.tabIndex = "-1";
          if (event2.altKey) {
            this.overlayVisible = false;
            this.focused = true;
          } else {
            var prevRow = cell.parentElement.previousElementSibling;
            if (prevRow) {
              var _tableRowIndex = getIndex(cell.parentElement);
              var _tableRows = Array.from(cell.parentElement.parentElement.children);
              var prevTableRows = _tableRows.slice(0, _tableRowIndex).reverse();
              var _hasNextFocusableDate = prevTableRows.find(function(el) {
                var focusCell2 = el.children[cellIndex].children[0];
                return !getAttribute(focusCell2, "data-p-disabled");
              });
              if (_hasNextFocusableDate) {
                var _focusCell = _hasNextFocusableDate.children[cellIndex].children[0];
                _focusCell.tabIndex = "0";
                _focusCell.focus();
              } else {
                this.navigationState = {
                  backward: true
                };
                this.navBackward(event2);
              }
            } else {
              this.navigationState = {
                backward: true
              };
              this.navBackward(event2);
            }
          }
          event2.preventDefault();
          break;
        }
        case "ArrowLeft": {
          cellContent.tabIndex = "-1";
          var prevCell = cell.previousElementSibling;
          if (prevCell) {
            var cells = Array.from(cell.parentElement.children);
            var prevCells = cells.slice(0, cellIndex).reverse();
            var _hasNextFocusableDate2 = prevCells.find(function(el) {
              var focusCell2 = el.children[0];
              return !getAttribute(focusCell2, "data-p-disabled");
            });
            if (_hasNextFocusableDate2) {
              var _focusCell2 = _hasNextFocusableDate2.children[0];
              _focusCell2.tabIndex = "0";
              _focusCell2.focus();
            } else {
              this.navigateToMonth(event2, true, groupIndex);
            }
          } else {
            this.navigateToMonth(event2, true, groupIndex);
          }
          event2.preventDefault();
          break;
        }
        case "ArrowRight": {
          cellContent.tabIndex = "-1";
          var nextCell = cell.nextElementSibling;
          if (nextCell) {
            var _cells = Array.from(cell.parentElement.children);
            var nextCells = _cells.slice(cellIndex + 1);
            var _hasNextFocusableDate3 = nextCells.find(function(el) {
              var focusCell2 = el.children[0];
              return !getAttribute(focusCell2, "data-p-disabled");
            });
            if (_hasNextFocusableDate3) {
              var _focusCell3 = _hasNextFocusableDate3.children[0];
              _focusCell3.tabIndex = "0";
              _focusCell3.focus();
            } else {
              this.navigateToMonth(event2, false, groupIndex);
            }
          } else {
            this.navigateToMonth(event2, false, groupIndex);
          }
          event2.preventDefault();
          break;
        }
        case "Enter":
        case "NumpadEnter":
        case "Space": {
          this.onDateSelect(event2, date);
          event2.preventDefault();
          break;
        }
        case "Escape": {
          this.overlayVisible = false;
          event2.preventDefault();
          break;
        }
        case "Tab": {
          if (!this.inline) {
            this.trapFocus(event2);
          }
          break;
        }
        case "Home": {
          cellContent.tabIndex = "-1";
          var currentRow = cell.parentElement;
          var _focusCell4 = currentRow.children[0].children[0];
          if (getAttribute(_focusCell4, "data-p-disabled")) {
            this.navigateToMonth(event2, true, groupIndex);
          } else {
            _focusCell4.tabIndex = "0";
            _focusCell4.focus();
          }
          event2.preventDefault();
          break;
        }
        case "End": {
          cellContent.tabIndex = "-1";
          var _currentRow = cell.parentElement;
          var _focusCell5 = _currentRow.children[_currentRow.children.length - 1].children[0];
          if (getAttribute(_focusCell5, "data-p-disabled")) {
            this.navigateToMonth(event2, false, groupIndex);
          } else {
            _focusCell5.tabIndex = "0";
            _focusCell5.focus();
          }
          event2.preventDefault();
          break;
        }
        case "PageUp": {
          cellContent.tabIndex = "-1";
          if (event2.shiftKey) {
            this.navigationState = {
              backward: true
            };
            this.navBackward(event2);
          } else this.navigateToMonth(event2, true, groupIndex);
          event2.preventDefault();
          break;
        }
        case "PageDown": {
          cellContent.tabIndex = "-1";
          if (event2.shiftKey) {
            this.navigationState = {
              backward: false
            };
            this.navForward(event2);
          } else this.navigateToMonth(event2, false, groupIndex);
          event2.preventDefault();
          break;
        }
      }
    }, "onDateCellKeydown"),
    navigateToMonth: /* @__PURE__ */ __name(function navigateToMonth(event2, prev, groupIndex) {
      if (prev) {
        if (this.numberOfMonths === 1 || groupIndex === 0) {
          this.navigationState = {
            backward: true
          };
          this.navBackward(event2);
        } else {
          var prevMonthContainer = this.overlay.children[groupIndex - 1];
          var cells = find(prevMonthContainer, 'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])');
          var focusCell = cells[cells.length - 1];
          focusCell.tabIndex = "0";
          focusCell.focus();
        }
      } else {
        if (this.numberOfMonths === 1 || groupIndex === this.numberOfMonths - 1) {
          this.navigationState = {
            backward: false
          };
          this.navForward(event2);
        } else {
          var nextMonthContainer = this.overlay.children[groupIndex + 1];
          var _focusCell6 = findSingle(nextMonthContainer, 'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])');
          _focusCell6.tabIndex = "0";
          _focusCell6.focus();
        }
      }
    }, "navigateToMonth"),
    onMonthCellKeydown: /* @__PURE__ */ __name(function onMonthCellKeydown(event2, index) {
      var cell = event2.currentTarget;
      switch (event2.code) {
        case "ArrowUp":
        case "ArrowDown": {
          cell.tabIndex = "-1";
          var cells = cell.parentElement.children;
          var cellIndex = getIndex(cell);
          var nextCell = cells[event2.code === "ArrowDown" ? cellIndex + 3 : cellIndex - 3];
          if (nextCell) {
            nextCell.tabIndex = "0";
            nextCell.focus();
          }
          event2.preventDefault();
          break;
        }
        case "ArrowLeft": {
          cell.tabIndex = "-1";
          var prevCell = cell.previousElementSibling;
          if (prevCell) {
            prevCell.tabIndex = "0";
            prevCell.focus();
          } else {
            this.navigationState = {
              backward: true
            };
            this.navBackward(event2);
          }
          event2.preventDefault();
          break;
        }
        case "ArrowRight": {
          cell.tabIndex = "-1";
          var _nextCell = cell.nextElementSibling;
          if (_nextCell) {
            _nextCell.tabIndex = "0";
            _nextCell.focus();
          } else {
            this.navigationState = {
              backward: false
            };
            this.navForward(event2);
          }
          event2.preventDefault();
          break;
        }
        case "PageUp": {
          if (event2.shiftKey) return;
          this.navigationState = {
            backward: true
          };
          this.navBackward(event2);
          break;
        }
        case "PageDown": {
          if (event2.shiftKey) return;
          this.navigationState = {
            backward: false
          };
          this.navForward(event2);
          break;
        }
        case "Enter":
        case "NumpadEnter":
        case "Space": {
          this.onMonthSelect(event2, index);
          event2.preventDefault();
          break;
        }
        case "Escape": {
          this.overlayVisible = false;
          event2.preventDefault();
          break;
        }
        case "Tab": {
          this.trapFocus(event2);
          break;
        }
      }
    }, "onMonthCellKeydown"),
    onYearCellKeydown: /* @__PURE__ */ __name(function onYearCellKeydown(event2, index) {
      var cell = event2.currentTarget;
      switch (event2.code) {
        case "ArrowUp":
        case "ArrowDown": {
          cell.tabIndex = "-1";
          var cells = cell.parentElement.children;
          var cellIndex = getIndex(cell);
          var nextCell = cells[event2.code === "ArrowDown" ? cellIndex + 2 : cellIndex - 2];
          if (nextCell) {
            nextCell.tabIndex = "0";
            nextCell.focus();
          }
          event2.preventDefault();
          break;
        }
        case "ArrowLeft": {
          cell.tabIndex = "-1";
          var prevCell = cell.previousElementSibling;
          if (prevCell) {
            prevCell.tabIndex = "0";
            prevCell.focus();
          } else {
            this.navigationState = {
              backward: true
            };
            this.navBackward(event2);
          }
          event2.preventDefault();
          break;
        }
        case "ArrowRight": {
          cell.tabIndex = "-1";
          var _nextCell2 = cell.nextElementSibling;
          if (_nextCell2) {
            _nextCell2.tabIndex = "0";
            _nextCell2.focus();
          } else {
            this.navigationState = {
              backward: false
            };
            this.navForward(event2);
          }
          event2.preventDefault();
          break;
        }
        case "PageUp": {
          if (event2.shiftKey) return;
          this.navigationState = {
            backward: true
          };
          this.navBackward(event2);
          break;
        }
        case "PageDown": {
          if (event2.shiftKey) return;
          this.navigationState = {
            backward: false
          };
          this.navForward(event2);
          break;
        }
        case "Enter":
        case "NumpadEnter":
        case "Space": {
          this.onYearSelect(event2, index);
          event2.preventDefault();
          break;
        }
        case "Escape": {
          this.overlayVisible = false;
          event2.preventDefault();
          break;
        }
        case "Tab": {
          this.trapFocus(event2);
          break;
        }
      }
    }, "onYearCellKeydown"),
    updateFocus: /* @__PURE__ */ __name(function updateFocus() {
      var cell;
      if (this.navigationState) {
        if (this.navigationState.button) {
          this.initFocusableCell();
          if (this.navigationState.backward) this.previousButton.focus();
          else this.nextButton.focus();
        } else {
          if (this.navigationState.backward) {
            var cells;
            if (this.currentView === "month") {
              cells = find(this.overlay, '[data-pc-section="monthview"] [data-pc-section="month"]:not([data-p-disabled="true"])');
            } else if (this.currentView === "year") {
              cells = find(this.overlay, '[data-pc-section="yearview"] [data-pc-section="year"]:not([data-p-disabled="true"])');
            } else {
              cells = find(this.overlay, 'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])');
            }
            if (cells && cells.length > 0) {
              cell = cells[cells.length - 1];
            }
          } else {
            if (this.currentView === "month") {
              cell = findSingle(this.overlay, '[data-pc-section="monthview"] [data-pc-section="month"]:not([data-p-disabled="true"])');
            } else if (this.currentView === "year") {
              cell = findSingle(this.overlay, '[data-pc-section="yearview"] [data-pc-section="year"]:not([data-p-disabled="true"])');
            } else {
              cell = findSingle(this.overlay, 'table td span:not([data-p-disabled="true"]):not([data-p-ink="true"])');
            }
          }
          if (cell) {
            cell.tabIndex = "0";
            cell.focus();
          }
        }
        this.navigationState = null;
      } else {
        this.initFocusableCell();
      }
    }, "updateFocus"),
    initFocusableCell: /* @__PURE__ */ __name(function initFocusableCell() {
      var cell;
      if (this.currentView === "month") {
        var cells = find(this.overlay, '[data-pc-section="monthview"] [data-pc-section="month"]');
        var selectedCell = findSingle(this.overlay, '[data-pc-section="monthview"] [data-pc-section="month"][data-p-selected="true"]');
        cells.forEach(function(cell2) {
          return cell2.tabIndex = -1;
        });
        cell = selectedCell || cells[0];
      } else if (this.currentView === "year") {
        var _cells2 = find(this.overlay, '[data-pc-section="yearview"] [data-pc-section="year"]');
        var _selectedCell = findSingle(this.overlay, '[data-pc-section="yearview"] [data-pc-section="year"][data-p-selected="true"]');
        _cells2.forEach(function(cell2) {
          return cell2.tabIndex = -1;
        });
        cell = _selectedCell || _cells2[0];
      } else {
        cell = findSingle(this.overlay, 'span[data-p-selected="true"]');
        if (!cell) {
          var todayCell = findSingle(this.overlay, 'td[data-p-today="true"] span:not([data-p-disabled="true"]):not([data-p-ink="true"])');
          if (todayCell) cell = todayCell;
          else cell = findSingle(this.overlay, '.p-datepicker-calendar td span:not([data-p-disabled="true"]):not([data-p-ink="true"])');
        }
      }
      if (cell) {
        cell.tabIndex = "0";
        this.preventFocus = false;
      }
    }, "initFocusableCell"),
    trapFocus: /* @__PURE__ */ __name(function trapFocus(event2) {
      event2.preventDefault();
      var focusableElements = getFocusableElements(this.overlay);
      if (focusableElements && focusableElements.length > 0) {
        if (!document.activeElement) {
          focusableElements[0].focus();
        } else {
          var focusedIndex = focusableElements.indexOf(document.activeElement);
          if (event2.shiftKey) {
            if (focusedIndex === -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();
            else focusableElements[focusedIndex - 1].focus();
          } else {
            if (focusedIndex === -1) {
              if (this.timeOnly) {
                focusableElements[0].focus();
              } else {
                var spanIndex = null;
                for (var i = 0; i < focusableElements.length; i++) {
                  if (focusableElements[i].tagName === "SPAN") {
                    spanIndex = i;
                    break;
                  }
                }
                focusableElements[spanIndex].focus();
              }
            } else if (focusedIndex === focusableElements.length - 1) focusableElements[0].focus();
            else focusableElements[focusedIndex + 1].focus();
          }
        }
      }
    }, "trapFocus"),
    onContainerButtonKeydown: /* @__PURE__ */ __name(function onContainerButtonKeydown(event2) {
      switch (event2.code) {
        case "Tab":
          this.trapFocus(event2);
          break;
        case "Escape":
          this.overlayVisible = false;
          event2.preventDefault();
          break;
      }
      this.$emit("keydown", event2);
    }, "onContainerButtonKeydown"),
    onInput: /* @__PURE__ */ __name(function onInput(event2) {
      try {
        this.selectionStart = this.input.selectionStart;
        this.selectionEnd = this.input.selectionEnd;
        var value2 = this.parseValue(event2.target.value);
        if (this.isValidSelection(value2)) {
          this.typeUpdate = true;
          this.updateModel(value2);
          this.updateCurrentMetaData();
        }
      } catch (err) {
      }
      this.$emit("input", event2);
    }, "onInput"),
    onInputClick: /* @__PURE__ */ __name(function onInputClick() {
      if (this.showOnFocus && this.isEnabled() && !this.overlayVisible) {
        this.overlayVisible = true;
      }
    }, "onInputClick"),
    onFocus: /* @__PURE__ */ __name(function onFocus2(event2) {
      if (this.showOnFocus && this.isEnabled()) {
        this.overlayVisible = true;
      }
      this.focused = true;
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur(event2) {
      var _this$formField$onBlu, _this$formField;
      this.$emit("blur", {
        originalEvent: event2,
        value: event2.target.value
      });
      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField);
      this.focused = false;
      event2.target.value = this.formatValue(this.d_value);
    }, "onBlur"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown(event2) {
      if (event2.code === "ArrowDown" && this.overlay) {
        this.trapFocus(event2);
      } else if (event2.code === "ArrowDown" && !this.overlay) {
        this.overlayVisible = true;
      } else if (event2.code === "Escape") {
        if (this.overlayVisible) {
          this.overlayVisible = false;
          event2.preventDefault();
        }
      } else if (event2.code === "Tab") {
        if (this.overlay) {
          getFocusableElements(this.overlay).forEach(function(el) {
            return el.tabIndex = "-1";
          });
        }
        if (this.overlayVisible) {
          this.overlayVisible = false;
        }
      } else if (event2.code === "Enter") {
        var _event$target$value;
        if (this.manualInput && event2.target.value !== null && ((_event$target$value = event2.target.value) === null || _event$target$value === void 0 ? void 0 : _event$target$value.trim()) !== "") {
          try {
            var value2 = this.parseValue(event2.target.value);
            if (this.isValidSelection(value2)) {
              this.overlayVisible = false;
            }
          } catch (err) {
          }
        }
        this.$emit("keydown", event2);
      }
    }, "onKeyDown"),
    overlayRef: /* @__PURE__ */ __name(function overlayRef(el) {
      this.overlay = el;
    }, "overlayRef"),
    inputRef: /* @__PURE__ */ __name(function inputRef(el) {
      this.input = el ? el.$el : void 0;
    }, "inputRef"),
    previousButtonRef: /* @__PURE__ */ __name(function previousButtonRef(el) {
      this.previousButton = el ? el.$el : void 0;
    }, "previousButtonRef"),
    nextButtonRef: /* @__PURE__ */ __name(function nextButtonRef(el) {
      this.nextButton = el ? el.$el : void 0;
    }, "nextButtonRef"),
    getMonthName: /* @__PURE__ */ __name(function getMonthName(index) {
      return this.$primevue.config.locale.monthNames[index];
    }, "getMonthName"),
    getYear: /* @__PURE__ */ __name(function getYear(month2) {
      return this.currentView === "month" ? this.currentYear : month2.year;
    }, "getYear"),
    onOverlayClick: /* @__PURE__ */ __name(function onOverlayClick(event2) {
      event2.stopPropagation();
      if (!this.inline) {
        OverlayEventBus.emit("overlay-click", {
          originalEvent: event2,
          target: this.$el
        });
      }
    }, "onOverlayClick"),
    onOverlayKeyDown: /* @__PURE__ */ __name(function onOverlayKeyDown(event2) {
      switch (event2.code) {
        case "Escape":
          if (!this.inline) {
            this.input.focus();
            this.overlayVisible = false;
          }
          break;
      }
    }, "onOverlayKeyDown"),
    onOverlayMouseUp: /* @__PURE__ */ __name(function onOverlayMouseUp(event2) {
      this.onOverlayClick(event2);
    }, "onOverlayMouseUp"),
    createResponsiveStyle: /* @__PURE__ */ __name(function createResponsiveStyle() {
      if (this.numberOfMonths > 1 && this.responsiveOptions && !this.isUnstyled) {
        if (!this.responsiveStyleElement) {
          var _this$$primevue;
          this.responsiveStyleElement = document.createElement("style");
          this.responsiveStyleElement.type = "text/css";
          setAttribute(this.responsiveStyleElement, "nonce", (_this$$primevue = this.$primevue) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.config) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.csp) === null || _this$$primevue === void 0 ? void 0 : _this$$primevue.nonce);
          document.body.appendChild(this.responsiveStyleElement);
        }
        var innerHTML = "";
        if (this.responsiveOptions) {
          var comparer = localeComparator();
          var responsiveOptions2 = _toConsumableArray$d(this.responsiveOptions).filter(function(o) {
            return !!(o.breakpoint && o.numMonths);
          }).sort(function(o1, o2) {
            return -1 * comparer(o1.breakpoint, o2.breakpoint);
          });
          for (var i = 0; i < responsiveOptions2.length; i++) {
            var _responsiveOptions$i = responsiveOptions2[i], breakpoint2 = _responsiveOptions$i.breakpoint, numMonths = _responsiveOptions$i.numMonths;
            var styles = "\n                            .p-datepicker-panel[".concat(this.$attrSelector, "] .p-datepicker-calendar:nth-child(").concat(numMonths, ") .p-datepicker-next-button {\n                                display: inline-flex;\n                            }\n                        ");
            for (var j = numMonths; j < this.numberOfMonths; j++) {
              styles += "\n                                .p-datepicker-panel[".concat(this.$attrSelector, "] .p-datepicker-calendar:nth-child(").concat(j + 1, ") {\n                                    display: none;\n                                }\n                            ");
            }
            innerHTML += "\n                            @media screen and (max-width: ".concat(breakpoint2, ") {\n                                ").concat(styles, "\n                            }\n                        ");
          }
        }
        this.responsiveStyleElement.innerHTML = innerHTML;
      }
    }, "createResponsiveStyle"),
    destroyResponsiveStyleElement: /* @__PURE__ */ __name(function destroyResponsiveStyleElement() {
      if (this.responsiveStyleElement) {
        this.responsiveStyleElement.remove();
        this.responsiveStyleElement = null;
      }
    }, "destroyResponsiveStyleElement")
  },
  computed: {
    viewDate: /* @__PURE__ */ __name(function viewDate() {
      var propValue = this.d_value;
      if (propValue && Array.isArray(propValue)) {
        if (this.isRangeSelection()) {
          propValue = this.inline ? propValue[0] : propValue[1] || propValue[0];
        } else if (this.isMultipleSelection()) {
          propValue = propValue[propValue.length - 1];
        }
      }
      if (propValue && typeof propValue !== "string") {
        return propValue;
      } else {
        var today = /* @__PURE__ */ new Date();
        if (this.maxDate && this.maxDate < today) {
          return this.maxDate;
        }
        if (this.minDate && this.minDate > today) {
          return this.minDate;
        }
        return today;
      }
    }, "viewDate"),
    inputFieldValue: /* @__PURE__ */ __name(function inputFieldValue() {
      return this.formatValue(this.d_value);
    }, "inputFieldValue"),
    months: /* @__PURE__ */ __name(function months2() {
      var months3 = [];
      for (var i = 0; i < this.numberOfMonths; i++) {
        var month2 = this.currentMonth + i;
        var year2 = this.currentYear;
        if (month2 > 11) {
          month2 = month2 % 11 - 1;
          year2 = year2 + 1;
        }
        var dates = [];
        var firstDay = this.getFirstDayOfMonthIndex(month2, year2);
        var daysLength = this.getDaysCountInMonth(month2, year2);
        var prevMonthDaysLength = this.getDaysCountInPrevMonth(month2, year2);
        var dayNo = 1;
        var today = /* @__PURE__ */ new Date();
        var weekNumbers = [];
        var monthRows = Math.ceil((daysLength + firstDay) / 7);
        for (var _i2 = 0; _i2 < monthRows; _i2++) {
          var week = [];
          if (_i2 == 0) {
            for (var j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {
              var prev = this.getPreviousMonthAndYear(month2, year2);
              week.push({
                day: j,
                month: prev.month,
                year: prev.year,
                otherMonth: true,
                today: this.isToday(today, j, prev.month, prev.year),
                selectable: this.isSelectable(j, prev.month, prev.year, true)
              });
            }
            var remainingDaysLength = 7 - week.length;
            for (var _j = 0; _j < remainingDaysLength; _j++) {
              week.push({
                day: dayNo,
                month: month2,
                year: year2,
                today: this.isToday(today, dayNo, month2, year2),
                selectable: this.isSelectable(dayNo, month2, year2, false)
              });
              dayNo++;
            }
          } else {
            for (var _j2 = 0; _j2 < 7; _j2++) {
              if (dayNo > daysLength) {
                var next = this.getNextMonthAndYear(month2, year2);
                week.push({
                  day: dayNo - daysLength,
                  month: next.month,
                  year: next.year,
                  otherMonth: true,
                  today: this.isToday(today, dayNo - daysLength, next.month, next.year),
                  selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true)
                });
              } else {
                week.push({
                  day: dayNo,
                  month: month2,
                  year: year2,
                  today: this.isToday(today, dayNo, month2, year2),
                  selectable: this.isSelectable(dayNo, month2, year2, false)
                });
              }
              dayNo++;
            }
          }
          if (this.showWeek) {
            weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));
          }
          dates.push(week);
        }
        months3.push({
          month: month2,
          year: year2,
          dates,
          weekNumbers
        });
      }
      return months3;
    }, "months"),
    weekDays: /* @__PURE__ */ __name(function weekDays() {
      var weekDays2 = [];
      var dayIndex = this.$primevue.config.locale.firstDayOfWeek;
      for (var i = 0; i < 7; i++) {
        weekDays2.push(this.$primevue.config.locale.dayNamesMin[dayIndex]);
        dayIndex = dayIndex == 6 ? 0 : ++dayIndex;
      }
      return weekDays2;
    }, "weekDays"),
    ticksTo1970: /* @__PURE__ */ __name(function ticksTo1970() {
      return ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 1e7;
    }, "ticksTo1970"),
    sundayIndex: /* @__PURE__ */ __name(function sundayIndex() {
      return this.$primevue.config.locale.firstDayOfWeek > 0 ? 7 - this.$primevue.config.locale.firstDayOfWeek : 0;
    }, "sundayIndex"),
    datePattern: /* @__PURE__ */ __name(function datePattern() {
      return this.dateFormat || this.$primevue.config.locale.dateFormat;
    }, "datePattern"),
    monthPickerValues: /* @__PURE__ */ __name(function monthPickerValues() {
      var _this12 = this;
      var monthPickerValues2 = [];
      var isSelectableMonth = /* @__PURE__ */ __name(function isSelectableMonth2(baseMonth) {
        if (_this12.minDate) {
          var minMonth = _this12.minDate.getMonth();
          var minYear = _this12.minDate.getFullYear();
          if (_this12.currentYear < minYear || _this12.currentYear === minYear && baseMonth < minMonth) {
            return false;
          }
        }
        if (_this12.maxDate) {
          var maxMonth = _this12.maxDate.getMonth();
          var maxYear = _this12.maxDate.getFullYear();
          if (_this12.currentYear > maxYear || _this12.currentYear === maxYear && baseMonth > maxMonth) {
            return false;
          }
        }
        return true;
      }, "isSelectableMonth");
      for (var i = 0; i <= 11; i++) {
        monthPickerValues2.push({
          value: this.$primevue.config.locale.monthNamesShort[i],
          selectable: isSelectableMonth(i)
        });
      }
      return monthPickerValues2;
    }, "monthPickerValues"),
    yearPickerValues: /* @__PURE__ */ __name(function yearPickerValues() {
      var _this13 = this;
      var yearPickerValues2 = [];
      var base = this.currentYear - this.currentYear % 10;
      var isSelectableYear = /* @__PURE__ */ __name(function isSelectableYear2(baseYear) {
        if (_this13.minDate) {
          if (_this13.minDate.getFullYear() > baseYear) return false;
        }
        if (_this13.maxDate) {
          if (_this13.maxDate.getFullYear() < baseYear) return false;
        }
        return true;
      }, "isSelectableYear");
      for (var i = 0; i < 10; i++) {
        yearPickerValues2.push({
          value: base + i,
          selectable: isSelectableYear(base + i)
        });
      }
      return yearPickerValues2;
    }, "yearPickerValues"),
    formattedCurrentHour: /* @__PURE__ */ __name(function formattedCurrentHour() {
      if (this.currentHour == 0 && this.hourFormat == "12") {
        return this.currentHour + 12;
      }
      return this.currentHour < 10 ? "0" + this.currentHour : this.currentHour;
    }, "formattedCurrentHour"),
    formattedCurrentMinute: /* @__PURE__ */ __name(function formattedCurrentMinute() {
      return this.currentMinute < 10 ? "0" + this.currentMinute : this.currentMinute;
    }, "formattedCurrentMinute"),
    formattedCurrentSecond: /* @__PURE__ */ __name(function formattedCurrentSecond() {
      return this.currentSecond < 10 ? "0" + this.currentSecond : this.currentSecond;
    }, "formattedCurrentSecond"),
    todayLabel: /* @__PURE__ */ __name(function todayLabel() {
      return this.$primevue.config.locale.today;
    }, "todayLabel"),
    clearLabel: /* @__PURE__ */ __name(function clearLabel() {
      return this.$primevue.config.locale.clear;
    }, "clearLabel"),
    weekHeaderLabel: /* @__PURE__ */ __name(function weekHeaderLabel() {
      return this.$primevue.config.locale.weekHeader;
    }, "weekHeaderLabel"),
    monthNames: /* @__PURE__ */ __name(function monthNames() {
      return this.$primevue.config.locale.monthNames;
    }, "monthNames"),
    switchViewButtonDisabled: /* @__PURE__ */ __name(function switchViewButtonDisabled() {
      return this.numberOfMonths > 1 || this.disabled;
    }, "switchViewButtonDisabled"),
    panelId: /* @__PURE__ */ __name(function panelId() {
      return this.d_id + "_panel";
    }, "panelId")
  },
  components: {
    InputText: script$1o,
    Button: script$1e,
    Portal: script$1f,
    CalendarIcon: script$13,
    ChevronLeftIcon: script$1p,
    ChevronRightIcon: script$1l,
    ChevronUpIcon: script$1j,
    ChevronDownIcon: script$1k
  },
  directives: {
    ripple: Ripple
  }
};
var _hoisted_1$s = ["id"];
var _hoisted_2$l = ["disabled", "aria-label", "aria-expanded", "aria-controls"];
var _hoisted_3$h = ["id", "role", "aria-modal", "aria-label"];
var _hoisted_4$9 = ["disabled", "aria-label"];
var _hoisted_5$4 = ["disabled", "aria-label"];
var _hoisted_6$2 = ["disabled", "aria-label"];
var _hoisted_7$2 = ["disabled", "aria-label"];
var _hoisted_8$1 = ["data-p-disabled"];
var _hoisted_9 = ["abbr"];
var _hoisted_10 = ["data-p-disabled"];
var _hoisted_11 = ["aria-label", "data-p-today", "data-p-other-month"];
var _hoisted_12 = ["onClick", "onKeydown", "aria-selected", "aria-disabled", "data-p-disabled", "data-p-selected"];
var _hoisted_13 = ["onClick", "onKeydown", "data-p-disabled", "data-p-selected"];
var _hoisted_14 = ["onClick", "onKeydown", "data-p-disabled", "data-p-selected"];
function render$V(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_InputText = resolveComponent("InputText");
  var _component_Button = resolveComponent("Button");
  var _component_Portal = resolveComponent("Portal");
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("span", mergeProps({
    ref: "container",
    id: $data.d_id,
    "class": _ctx.cx("root"),
    style: _ctx.sx("root")
  }, _ctx.ptmi("root")), [!_ctx.inline ? (openBlock(), createBlock(_component_InputText, {
    key: 0,
    ref: $options.inputRef,
    id: _ctx.inputId,
    role: "combobox",
    "class": normalizeClass([_ctx.inputClass, _ctx.cx("pcInputText")]),
    style: normalizeStyle(_ctx.inputStyle),
    defaultValue: $options.inputFieldValue,
    placeholder: _ctx.placeholder,
    name: _ctx.name,
    size: _ctx.size,
    invalid: _ctx.invalid,
    variant: _ctx.variant,
    fluid: _ctx.fluid,
    unstyled: _ctx.unstyled,
    autocomplete: "off",
    "aria-autocomplete": "none",
    "aria-haspopup": "dialog",
    "aria-expanded": $data.overlayVisible,
    "aria-controls": $options.panelId,
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel,
    inputmode: "none",
    disabled: _ctx.disabled,
    readonly: !_ctx.manualInput || _ctx.readonly,
    tabindex: 0,
    onInput: $options.onInput,
    onClick: $options.onInputClick,
    onFocus: $options.onFocus,
    onBlur: $options.onBlur,
    onKeydown: $options.onKeyDown,
    pt: _ctx.ptm("pcInputText")
  }, null, 8, ["id", "class", "style", "defaultValue", "placeholder", "name", "size", "invalid", "variant", "fluid", "unstyled", "aria-expanded", "aria-controls", "aria-labelledby", "aria-label", "disabled", "readonly", "onInput", "onClick", "onFocus", "onBlur", "onKeydown", "pt"])) : createCommentVNode("", true), _ctx.showIcon && _ctx.iconDisplay === "button" && !_ctx.inline ? renderSlot(_ctx.$slots, "dropdownbutton", {
    key: 1,
    toggleCallback: $options.onButtonClick
  }, function() {
    return [createBaseVNode("button", mergeProps({
      "class": _ctx.cx("dropdown"),
      disabled: _ctx.disabled,
      onClick: _cache[0] || (_cache[0] = function() {
        return $options.onButtonClick && $options.onButtonClick.apply($options, arguments);
      }),
      type: "button",
      "aria-label": _ctx.$primevue.config.locale.chooseDate,
      "aria-haspopup": "dialog",
      "aria-expanded": $data.overlayVisible,
      "aria-controls": $options.panelId
    }, _ctx.ptm("dropdown")), [renderSlot(_ctx.$slots, "dropdownicon", {
      "class": normalizeClass(_ctx.icon)
    }, function() {
      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? "span" : "CalendarIcon"), mergeProps({
        "class": _ctx.icon
      }, _ctx.ptm("dropdownIcon")), null, 16, ["class"]))];
    })], 16, _hoisted_2$l)];
  }) : _ctx.showIcon && _ctx.iconDisplay === "input" && !_ctx.inline ? (openBlock(), createElementBlock(Fragment, {
    key: 2
  }, [_ctx.$slots.inputicon || _ctx.showIcon ? (openBlock(), createElementBlock("span", mergeProps({
    key: 0,
    "class": _ctx.cx("inputIconContainer")
  }, _ctx.ptm("inputIconContainer")), [renderSlot(_ctx.$slots, "inputicon", {
    "class": normalizeClass(_ctx.cx("inputIcon")),
    clickCallback: $options.onButtonClick
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? "i" : "CalendarIcon"), mergeProps({
      "class": [_ctx.icon, _ctx.cx("inputIcon")],
      onClick: $options.onButtonClick
    }, _ctx.ptm("inputicon")), null, 16, ["class", "onClick"]))];
  })], 16)) : createCommentVNode("", true)], 64)) : createCommentVNode("", true), createVNode(_component_Portal, {
    appendTo: _ctx.appendTo,
    disabled: _ctx.inline
  }, {
    "default": withCtx(function() {
      return [createVNode(Transition, mergeProps({
        name: "p-connected-overlay",
        onEnter: _cache[58] || (_cache[58] = function($event) {
          return $options.onOverlayEnter($event);
        }),
        onAfterEnter: $options.onOverlayEnterComplete,
        onAfterLeave: $options.onOverlayAfterLeave,
        onLeave: $options.onOverlayLeave
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [_ctx.inline || $data.overlayVisible ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.overlayRef,
            id: $options.panelId,
            "class": [_ctx.cx("panel"), _ctx.panelClass],
            style: _ctx.panelStyle,
            role: _ctx.inline ? null : "dialog",
            "aria-modal": _ctx.inline ? null : "true",
            "aria-label": _ctx.$primevue.config.locale.chooseDate,
            onClick: _cache[55] || (_cache[55] = function() {
              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);
            }),
            onKeydown: _cache[56] || (_cache[56] = function() {
              return $options.onOverlayKeyDown && $options.onOverlayKeyDown.apply($options, arguments);
            }),
            onMouseup: _cache[57] || (_cache[57] = function() {
              return $options.onOverlayMouseUp && $options.onOverlayMouseUp.apply($options, arguments);
            })
          }, _ctx.ptm("panel")), [!_ctx.timeOnly ? (openBlock(), createElementBlock(Fragment, {
            key: 0
          }, [createBaseVNode("div", mergeProps({
            "class": _ctx.cx("calendarContainer")
          }, _ctx.ptm("calendarContainer")), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.months, function(month2, groupIndex) {
            return openBlock(), createElementBlock("div", mergeProps({
              key: month2.month + month2.year,
              "class": _ctx.cx("calendar"),
              ref_for: true
            }, _ctx.ptm("calendar")), [createBaseVNode("div", mergeProps({
              "class": _ctx.cx("header"),
              ref_for: true
            }, _ctx.ptm("header")), [renderSlot(_ctx.$slots, "header"), withDirectives(createVNode(_component_Button, mergeProps({
              ref_for: true,
              ref: $options.previousButtonRef,
              "class": _ctx.cx("pcPrevButton"),
              disabled: _ctx.disabled,
              "aria-label": $data.currentView === "year" ? _ctx.$primevue.config.locale.prevDecade : $data.currentView === "month" ? _ctx.$primevue.config.locale.prevYear : _ctx.$primevue.config.locale.prevMonth,
              unstyled: _ctx.unstyled,
              onClick: $options.onPrevButtonClick,
              onKeydown: $options.onContainerButtonKeydown
            }, _ctx.navigatorButtonProps, {
              pt: _ctx.ptm("pcPrevButton"),
              "data-pc-group-section": "navigator"
            }), {
              icon: withCtx(function(slotProps) {
                return [renderSlot(_ctx.$slots, "previcon", {}, function() {
                  return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.prevIcon ? "span" : "ChevronLeftIcon"), mergeProps({
                    "class": [_ctx.prevIcon, slotProps["class"]],
                    ref_for: true
                  }, _ctx.ptm("pcPrevButton")["icon"]), null, 16, ["class"]))];
                })];
              }),
              _: 2
            }, 1040, ["class", "disabled", "aria-label", "unstyled", "onClick", "onKeydown", "pt"]), [[vShow, groupIndex === 0]]), createBaseVNode("div", mergeProps({
              "class": _ctx.cx("title"),
              ref_for: true
            }, _ctx.ptm("title")), [_ctx.$primevue.config.locale.showMonthAfterYear ? (openBlock(), createElementBlock(Fragment, {
              key: 0
            }, [$data.currentView !== "year" ? (openBlock(), createElementBlock("button", mergeProps({
              key: 0,
              type: "button",
              onClick: _cache[1] || (_cache[1] = function() {
                return $options.switchToYearView && $options.switchToYearView.apply($options, arguments);
              }),
              onKeydown: _cache[2] || (_cache[2] = function() {
                return $options.onContainerButtonKeydown && $options.onContainerButtonKeydown.apply($options, arguments);
              }),
              "class": _ctx.cx("selectYear"),
              disabled: $options.switchViewButtonDisabled,
              "aria-label": _ctx.$primevue.config.locale.chooseYear,
              ref_for: true
            }, _ctx.ptm("selectYear"), {
              "data-pc-group-section": "view"
            }), toDisplayString($options.getYear(month2)), 17, _hoisted_4$9)) : createCommentVNode("", true), $data.currentView === "date" ? (openBlock(), createElementBlock("button", mergeProps({
              key: 1,
              type: "button",
              onClick: _cache[3] || (_cache[3] = function() {
                return $options.switchToMonthView && $options.switchToMonthView.apply($options, arguments);
              }),
              onKeydown: _cache[4] || (_cache[4] = function() {
                return $options.onContainerButtonKeydown && $options.onContainerButtonKeydown.apply($options, arguments);
              }),
              "class": _ctx.cx("selectMonth"),
              disabled: $options.switchViewButtonDisabled,
              "aria-label": _ctx.$primevue.config.locale.chooseMonth,
              ref_for: true
            }, _ctx.ptm("selectMonth"), {
              "data-pc-group-section": "view"
            }), toDisplayString($options.getMonthName(month2.month)), 17, _hoisted_5$4)) : createCommentVNode("", true)], 64)) : (openBlock(), createElementBlock(Fragment, {
              key: 1
            }, [$data.currentView === "date" ? (openBlock(), createElementBlock("button", mergeProps({
              key: 0,
              type: "button",
              onClick: _cache[5] || (_cache[5] = function() {
                return $options.switchToMonthView && $options.switchToMonthView.apply($options, arguments);
              }),
              onKeydown: _cache[6] || (_cache[6] = function() {
                return $options.onContainerButtonKeydown && $options.onContainerButtonKeydown.apply($options, arguments);
              }),
              "class": _ctx.cx("selectMonth"),
              disabled: $options.switchViewButtonDisabled,
              "aria-label": _ctx.$primevue.config.locale.chooseMonth,
              ref_for: true
            }, _ctx.ptm("selectMonth"), {
              "data-pc-group-section": "view"
            }), toDisplayString($options.getMonthName(month2.month)), 17, _hoisted_6$2)) : createCommentVNode("", true), $data.currentView !== "year" ? (openBlock(), createElementBlock("button", mergeProps({
              key: 1,
              type: "button",
              onClick: _cache[7] || (_cache[7] = function() {
                return $options.switchToYearView && $options.switchToYearView.apply($options, arguments);
              }),
              onKeydown: _cache[8] || (_cache[8] = function() {
                return $options.onContainerButtonKeydown && $options.onContainerButtonKeydown.apply($options, arguments);
              }),
              "class": _ctx.cx("selectYear"),
              disabled: $options.switchViewButtonDisabled,
              "aria-label": _ctx.$primevue.config.locale.chooseYear,
              ref_for: true
            }, _ctx.ptm("selectYear"), {
              "data-pc-group-section": "view"
            }), toDisplayString($options.getYear(month2)), 17, _hoisted_7$2)) : createCommentVNode("", true)], 64)), $data.currentView === "year" ? (openBlock(), createElementBlock("span", mergeProps({
              key: 2,
              "class": _ctx.cx("decade"),
              ref_for: true
            }, _ctx.ptm("decade")), [renderSlot(_ctx.$slots, "decade", {
              years: $options.yearPickerValues
            }, function() {
              return [createTextVNode(toDisplayString($options.yearPickerValues[0].value) + " - " + toDisplayString($options.yearPickerValues[$options.yearPickerValues.length - 1].value), 1)];
            })], 16)) : createCommentVNode("", true)], 16), withDirectives(createVNode(_component_Button, mergeProps({
              ref_for: true,
              ref: $options.nextButtonRef,
              "class": _ctx.cx("pcNextButton"),
              disabled: _ctx.disabled,
              "aria-label": $data.currentView === "year" ? _ctx.$primevue.config.locale.nextDecade : $data.currentView === "month" ? _ctx.$primevue.config.locale.nextYear : _ctx.$primevue.config.locale.nextMonth,
              unstyled: _ctx.unstyled,
              onClick: $options.onNextButtonClick,
              onKeydown: $options.onContainerButtonKeydown
            }, _ctx.navigatorButtonProps, {
              pt: _ctx.ptm("pcNextButton"),
              "data-pc-group-section": "navigator"
            }), {
              icon: withCtx(function(slotProps) {
                return [renderSlot(_ctx.$slots, "nexticon", {}, function() {
                  return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.nextIcon ? "span" : "ChevronRightIcon"), mergeProps({
                    "class": [_ctx.nextIcon, slotProps["class"]],
                    ref_for: true
                  }, _ctx.ptm("pcNextButton")["icon"]), null, 16, ["class"]))];
                })];
              }),
              _: 2
            }, 1040, ["class", "disabled", "aria-label", "unstyled", "onClick", "onKeydown", "pt"]), [[vShow, _ctx.numberOfMonths === 1 ? true : groupIndex === _ctx.numberOfMonths - 1]])], 16), $data.currentView === "date" ? (openBlock(), createElementBlock("table", mergeProps({
              key: 0,
              "class": _ctx.cx("dayView"),
              role: "grid",
              ref_for: true
            }, _ctx.ptm("dayView")), [createBaseVNode("thead", mergeProps({
              ref_for: true
            }, _ctx.ptm("tableHeader")), [createBaseVNode("tr", mergeProps({
              ref_for: true
            }, _ctx.ptm("tableHeaderRow")), [_ctx.showWeek ? (openBlock(), createElementBlock("th", mergeProps({
              key: 0,
              scope: "col",
              "class": _ctx.cx("weekHeader"),
              ref_for: true
            }, _ctx.ptm("weekHeader", {
              context: {
                disabled: _ctx.showWeek
              }
            }), {
              "data-p-disabled": _ctx.showWeek,
              "data-pc-group-section": "tableheadercell"
            }), [renderSlot(_ctx.$slots, "weekheaderlabel", {}, function() {
              return [createBaseVNode("span", mergeProps({
                ref_for: true
              }, _ctx.ptm("weekHeaderLabel", {
                context: {
                  disabled: _ctx.showWeek
                }
              }), {
                "data-pc-group-section": "tableheadercelllabel"
              }), toDisplayString($options.weekHeaderLabel), 17)];
            })], 16, _hoisted_8$1)) : createCommentVNode("", true), (openBlock(true), createElementBlock(Fragment, null, renderList($options.weekDays, function(weekDay) {
              return openBlock(), createElementBlock("th", mergeProps({
                key: weekDay,
                scope: "col",
                abbr: weekDay,
                ref_for: true
              }, _ctx.ptm("tableHeaderCell"), {
                "data-pc-group-section": "tableheadercell",
                "class": _ctx.cx("weekDayCell")
              }), [createBaseVNode("span", mergeProps({
                "class": _ctx.cx("weekDay"),
                ref_for: true
              }, _ctx.ptm("weekDay"), {
                "data-pc-group-section": "tableheadercelllabel"
              }), toDisplayString(weekDay), 17)], 16, _hoisted_9);
            }), 128))], 16)], 16), createBaseVNode("tbody", mergeProps({
              ref_for: true
            }, _ctx.ptm("tableBody")), [(openBlock(true), createElementBlock(Fragment, null, renderList(month2.dates, function(week, i) {
              return openBlock(), createElementBlock("tr", mergeProps({
                key: week[0].day + "" + week[0].month,
                ref_for: true
              }, _ctx.ptm("tableBodyRow")), [_ctx.showWeek ? (openBlock(), createElementBlock("td", mergeProps({
                key: 0,
                "class": _ctx.cx("weekNumber"),
                ref_for: true
              }, _ctx.ptm("weekNumber"), {
                "data-pc-group-section": "tablebodycell"
              }), [createBaseVNode("span", mergeProps({
                "class": _ctx.cx("weekLabelContainer"),
                ref_for: true
              }, _ctx.ptm("weekLabelContainer", {
                context: {
                  disabled: _ctx.showWeek
                }
              }), {
                "data-p-disabled": _ctx.showWeek,
                "data-pc-group-section": "tablebodycelllabel"
              }), [renderSlot(_ctx.$slots, "weeklabel", {
                weekNumber: month2.weekNumbers[i]
              }, function() {
                return [month2.weekNumbers[i] < 10 ? (openBlock(), createElementBlock("span", mergeProps({
                  key: 0,
                  style: {
                    "visibility": "hidden"
                  },
                  ref_for: true
                }, _ctx.ptm("weekLabel")), "0", 16)) : createCommentVNode("", true), createTextVNode(" " + toDisplayString(month2.weekNumbers[i]), 1)];
              })], 16, _hoisted_10)], 16)) : createCommentVNode("", true), (openBlock(true), createElementBlock(Fragment, null, renderList(week, function(date) {
                return openBlock(), createElementBlock("td", mergeProps({
                  key: date.day + "" + date.month,
                  "aria-label": date.day,
                  "class": _ctx.cx("dayCell", {
                    date
                  }),
                  ref_for: true
                }, _ctx.ptm("dayCell", {
                  context: {
                    date,
                    today: date.today,
                    otherMonth: date.otherMonth,
                    selected: $options.isSelected(date),
                    disabled: !date.selectable
                  }
                }), {
                  "data-p-today": date.today,
                  "data-p-other-month": date.otherMonth,
                  "data-pc-group-section": "tablebodycell"
                }), [_ctx.showOtherMonths || !date.otherMonth ? withDirectives((openBlock(), createElementBlock("span", mergeProps({
                  key: 0,
                  "class": _ctx.cx("day", {
                    date
                  }),
                  onClick: /* @__PURE__ */ __name(function onClick11($event) {
                    return $options.onDateSelect($event, date);
                  }, "onClick"),
                  draggable: "false",
                  onKeydown: /* @__PURE__ */ __name(function onKeydown6($event) {
                    return $options.onDateCellKeydown($event, date, groupIndex);
                  }, "onKeydown"),
                  "aria-selected": $options.isSelected(date),
                  "aria-disabled": !date.selectable,
                  ref_for: true
                }, _ctx.ptm("day", {
                  context: {
                    date,
                    today: date.today,
                    otherMonth: date.otherMonth,
                    selected: $options.isSelected(date),
                    disabled: !date.selectable
                  }
                }), {
                  "data-p-disabled": !date.selectable,
                  "data-p-selected": $options.isSelected(date),
                  "data-pc-group-section": "tablebodycelllabel"
                }), [renderSlot(_ctx.$slots, "date", {
                  date
                }, function() {
                  return [createTextVNode(toDisplayString(date.day), 1)];
                })], 16, _hoisted_12)), [[_directive_ripple]]) : createCommentVNode("", true), $options.isSelected(date) ? (openBlock(), createElementBlock("div", mergeProps({
                  key: 1,
                  "class": "p-hidden-accessible",
                  "aria-live": "polite",
                  ref_for: true
                }, _ctx.ptm("hiddenSelectedDay"), {
                  "data-p-hidden-accessible": true
                }), toDisplayString(date.day), 17)) : createCommentVNode("", true)], 16, _hoisted_11);
              }), 128))], 16);
            }), 128))], 16)], 16)) : createCommentVNode("", true)], 16);
          }), 128))], 16), $data.currentView === "month" ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            "class": _ctx.cx("monthView")
          }, _ctx.ptm("monthView")), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.monthPickerValues, function(m, i) {
            return withDirectives((openBlock(), createElementBlock("span", mergeProps({
              key: m,
              onClick: /* @__PURE__ */ __name(function onClick11($event) {
                return $options.onMonthSelect($event, {
                  month: m,
                  index: i
                });
              }, "onClick"),
              onKeydown: /* @__PURE__ */ __name(function onKeydown6($event) {
                return $options.onMonthCellKeydown($event, {
                  month: m,
                  index: i
                });
              }, "onKeydown"),
              "class": _ctx.cx("month", {
                month: m,
                index: i
              }),
              ref_for: true
            }, _ctx.ptm("month", {
              context: {
                month: m,
                monthIndex: i,
                selected: $options.isMonthSelected(i),
                disabled: !m.selectable
              }
            }), {
              "data-p-disabled": !m.selectable,
              "data-p-selected": $options.isMonthSelected(i)
            }), [createTextVNode(toDisplayString(m.value) + " ", 1), $options.isMonthSelected(i) ? (openBlock(), createElementBlock("div", mergeProps({
              key: 0,
              "class": "p-hidden-accessible",
              "aria-live": "polite",
              ref_for: true
            }, _ctx.ptm("hiddenMonth"), {
              "data-p-hidden-accessible": true
            }), toDisplayString(m.value), 17)) : createCommentVNode("", true)], 16, _hoisted_13)), [[_directive_ripple]]);
          }), 128))], 16)) : createCommentVNode("", true), $data.currentView === "year" ? (openBlock(), createElementBlock("div", mergeProps({
            key: 1,
            "class": _ctx.cx("yearView")
          }, _ctx.ptm("yearView")), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.yearPickerValues, function(y) {
            return withDirectives((openBlock(), createElementBlock("span", mergeProps({
              key: y.value,
              onClick: /* @__PURE__ */ __name(function onClick11($event) {
                return $options.onYearSelect($event, y);
              }, "onClick"),
              onKeydown: /* @__PURE__ */ __name(function onKeydown6($event) {
                return $options.onYearCellKeydown($event, y);
              }, "onKeydown"),
              "class": _ctx.cx("year", {
                year: y
              }),
              ref_for: true
            }, _ctx.ptm("year", {
              context: {
                year: y,
                selected: $options.isYearSelected(y.value),
                disabled: !y.selectable
              }
            }), {
              "data-p-disabled": !y.selectable,
              "data-p-selected": $options.isYearSelected(y.value)
            }), [createTextVNode(toDisplayString(y.value) + " ", 1), $options.isYearSelected(y.value) ? (openBlock(), createElementBlock("div", mergeProps({
              key: 0,
              "class": "p-hidden-accessible",
              "aria-live": "polite",
              ref_for: true
            }, _ctx.ptm("hiddenYear"), {
              "data-p-hidden-accessible": true
            }), toDisplayString(y.value), 17)) : createCommentVNode("", true)], 16, _hoisted_14)), [[_directive_ripple]]);
          }), 128))], 16)) : createCommentVNode("", true)], 64)) : createCommentVNode("", true), (_ctx.showTime || _ctx.timeOnly) && $data.currentView === "date" ? (openBlock(), createElementBlock("div", mergeProps({
            key: 1,
            "class": _ctx.cx("timePicker")
          }, _ctx.ptm("timePicker")), [createBaseVNode("div", mergeProps({
            "class": _ctx.cx("hourPicker")
          }, _ctx.ptm("hourPicker"), {
            "data-pc-group-section": "timepickerContainer"
          }), [createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcIncrementButton"),
            "aria-label": _ctx.$primevue.config.locale.nextHour,
            unstyled: _ctx.unstyled,
            onMousedown: _cache[9] || (_cache[9] = function($event) {
              return $options.onTimePickerElementMouseDown($event, 0, 1);
            }),
            onMouseup: _cache[10] || (_cache[10] = function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }),
            onKeydown: [$options.onContainerButtonKeydown, _cache[12] || (_cache[12] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 0, 1);
            }, ["enter"])), _cache[13] || (_cache[13] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 0, 1);
            }, ["space"]))],
            onMouseleave: _cache[11] || (_cache[11] = function($event) {
              return $options.onTimePickerElementMouseLeave();
            }),
            onKeyup: [_cache[14] || (_cache[14] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["enter"])), _cache[15] || (_cache[15] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["space"]))]
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcIncrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "incrementicon", {}, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.incrementIcon ? "span" : "ChevronUpIcon"), mergeProps({
                  "class": [_ctx.incrementIcon, slotProps["class"]]
                }, _ctx.ptm("pcIncrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "unstyled", "onKeydown", "pt"]), createBaseVNode("span", mergeProps(_ctx.ptm("hour"), {
            "data-pc-group-section": "timepickerlabel"
          }), toDisplayString($options.formattedCurrentHour), 17), createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcDecrementButton"),
            "aria-label": _ctx.$primevue.config.locale.prevHour,
            unstyled: _ctx.unstyled,
            onMousedown: _cache[16] || (_cache[16] = function($event) {
              return $options.onTimePickerElementMouseDown($event, 0, -1);
            }),
            onMouseup: _cache[17] || (_cache[17] = function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }),
            onKeydown: [$options.onContainerButtonKeydown, _cache[19] || (_cache[19] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 0, -1);
            }, ["enter"])), _cache[20] || (_cache[20] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 0, -1);
            }, ["space"]))],
            onMouseleave: _cache[18] || (_cache[18] = function($event) {
              return $options.onTimePickerElementMouseLeave();
            }),
            onKeyup: [_cache[21] || (_cache[21] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["enter"])), _cache[22] || (_cache[22] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["space"]))]
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcDecrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "decrementicon", {}, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.decrementIcon ? "span" : "ChevronDownIcon"), mergeProps({
                  "class": [_ctx.decrementIcon, slotProps["class"]]
                }, _ctx.ptm("pcDecrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "unstyled", "onKeydown", "pt"])], 16), createBaseVNode("div", mergeProps(_ctx.ptm("separatorContainer"), {
            "data-pc-group-section": "timepickerContainer"
          }), [createBaseVNode("span", mergeProps(_ctx.ptm("separator"), {
            "data-pc-group-section": "timepickerlabel"
          }), toDisplayString(_ctx.timeSeparator), 17)], 16), createBaseVNode("div", mergeProps({
            "class": _ctx.cx("minutePicker")
          }, _ctx.ptm("minutePicker"), {
            "data-pc-group-section": "timepickerContainer"
          }), [createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcIncrementButton"),
            "aria-label": _ctx.$primevue.config.locale.nextMinute,
            disabled: _ctx.disabled,
            unstyled: _ctx.unstyled,
            onMousedown: _cache[23] || (_cache[23] = function($event) {
              return $options.onTimePickerElementMouseDown($event, 1, 1);
            }),
            onMouseup: _cache[24] || (_cache[24] = function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }),
            onKeydown: [$options.onContainerButtonKeydown, _cache[26] || (_cache[26] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 1, 1);
            }, ["enter"])), _cache[27] || (_cache[27] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 1, 1);
            }, ["space"]))],
            onMouseleave: _cache[25] || (_cache[25] = function($event) {
              return $options.onTimePickerElementMouseLeave();
            }),
            onKeyup: [_cache[28] || (_cache[28] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["enter"])), _cache[29] || (_cache[29] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["space"]))]
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcIncrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "incrementicon", {}, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.incrementIcon ? "span" : "ChevronUpIcon"), mergeProps({
                  "class": [_ctx.incrementIcon, slotProps["class"]]
                }, _ctx.ptm("pcIncrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "disabled", "unstyled", "onKeydown", "pt"]), createBaseVNode("span", mergeProps(_ctx.ptm("minute"), {
            "data-pc-group-section": "timepickerlabel"
          }), toDisplayString($options.formattedCurrentMinute), 17), createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcDecrementButton"),
            "aria-label": _ctx.$primevue.config.locale.prevMinute,
            disabled: _ctx.disabled,
            onMousedown: _cache[30] || (_cache[30] = function($event) {
              return $options.onTimePickerElementMouseDown($event, 1, -1);
            }),
            onMouseup: _cache[31] || (_cache[31] = function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }),
            onKeydown: [$options.onContainerButtonKeydown, _cache[33] || (_cache[33] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 1, -1);
            }, ["enter"])), _cache[34] || (_cache[34] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 1, -1);
            }, ["space"]))],
            onMouseleave: _cache[32] || (_cache[32] = function($event) {
              return $options.onTimePickerElementMouseLeave();
            }),
            onKeyup: [_cache[35] || (_cache[35] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["enter"])), _cache[36] || (_cache[36] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["space"]))]
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcDecrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "decrementicon", {}, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.decrementIcon ? "span" : "ChevronDownIcon"), mergeProps({
                  "class": [_ctx.decrementIcon, slotProps["class"]]
                }, _ctx.ptm("pcDecrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "disabled", "onKeydown", "pt"])], 16), _ctx.showSeconds ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            "class": _ctx.cx("separatorContainer")
          }, _ctx.ptm("separatorContainer"), {
            "data-pc-group-section": "timepickerContainer"
          }), [createBaseVNode("span", mergeProps(_ctx.ptm("separator"), {
            "data-pc-group-section": "timepickerlabel"
          }), toDisplayString(_ctx.timeSeparator), 17)], 16)) : createCommentVNode("", true), _ctx.showSeconds ? (openBlock(), createElementBlock("div", mergeProps({
            key: 1,
            "class": _ctx.cx("secondPicker")
          }, _ctx.ptm("secondPicker"), {
            "data-pc-group-section": "timepickerContainer"
          }), [createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcIncrementButton"),
            "aria-label": _ctx.$primevue.config.locale.nextSecond,
            disabled: _ctx.disabled,
            unstyled: _ctx.unstyled,
            onMousedown: _cache[37] || (_cache[37] = function($event) {
              return $options.onTimePickerElementMouseDown($event, 2, 1);
            }),
            onMouseup: _cache[38] || (_cache[38] = function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }),
            onKeydown: [$options.onContainerButtonKeydown, _cache[40] || (_cache[40] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 2, 1);
            }, ["enter"])), _cache[41] || (_cache[41] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 2, 1);
            }, ["space"]))],
            onMouseleave: _cache[39] || (_cache[39] = function($event) {
              return $options.onTimePickerElementMouseLeave();
            }),
            onKeyup: [_cache[42] || (_cache[42] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["enter"])), _cache[43] || (_cache[43] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["space"]))]
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcIncrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "incrementicon", {}, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.incrementIcon ? "span" : "ChevronUpIcon"), mergeProps({
                  "class": [_ctx.incrementIcon, slotProps["class"]]
                }, _ctx.ptm("pcIncrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "disabled", "unstyled", "onKeydown", "pt"]), createBaseVNode("span", mergeProps(_ctx.ptm("second"), {
            "data-pc-group-section": "timepickerlabel"
          }), toDisplayString($options.formattedCurrentSecond), 17), createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcDecrementButton"),
            "aria-label": _ctx.$primevue.config.locale.prevSecond,
            disabled: _ctx.disabled,
            unstyled: _ctx.unstyled,
            onMousedown: _cache[44] || (_cache[44] = function($event) {
              return $options.onTimePickerElementMouseDown($event, 2, -1);
            }),
            onMouseup: _cache[45] || (_cache[45] = function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }),
            onKeydown: [$options.onContainerButtonKeydown, _cache[47] || (_cache[47] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 2, -1);
            }, ["enter"])), _cache[48] || (_cache[48] = withKeys(function($event) {
              return $options.onTimePickerElementMouseDown($event, 2, -1);
            }, ["space"]))],
            onMouseleave: _cache[46] || (_cache[46] = function($event) {
              return $options.onTimePickerElementMouseLeave();
            }),
            onKeyup: [_cache[49] || (_cache[49] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["enter"])), _cache[50] || (_cache[50] = withKeys(function($event) {
              return $options.onTimePickerElementMouseUp($event);
            }, ["space"]))]
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcDecrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "decrementicon", {}, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.decrementIcon ? "span" : "ChevronDownIcon"), mergeProps({
                  "class": [_ctx.decrementIcon, slotProps["class"]]
                }, _ctx.ptm("pcDecrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "disabled", "unstyled", "onKeydown", "pt"])], 16)) : createCommentVNode("", true), _ctx.hourFormat == "12" ? (openBlock(), createElementBlock("div", mergeProps({
            key: 2,
            "class": _ctx.cx("separatorContainer")
          }, _ctx.ptm("separatorContainer"), {
            "data-pc-group-section": "timepickerContainer"
          }), [createBaseVNode("span", mergeProps(_ctx.ptm("separator"), {
            "data-pc-group-section": "timepickerlabel"
          }), toDisplayString(_ctx.timeSeparator), 17)], 16)) : createCommentVNode("", true), _ctx.hourFormat == "12" ? (openBlock(), createElementBlock("div", mergeProps({
            key: 3,
            "class": _ctx.cx("ampmPicker")
          }, _ctx.ptm("ampmPicker")), [createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcIncrementButton"),
            "aria-label": _ctx.$primevue.config.locale.am,
            disabled: _ctx.disabled,
            unstyled: _ctx.unstyled,
            onClick: _cache[51] || (_cache[51] = function($event) {
              return $options.toggleAMPM($event);
            }),
            onKeydown: $options.onContainerButtonKeydown
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcIncrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "incrementicon", {
                "class": normalizeClass(_ctx.cx("incrementIcon"))
              }, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.incrementIcon ? "span" : "ChevronUpIcon"), mergeProps({
                  "class": [_ctx.cx("incrementIcon"), slotProps["class"]]
                }, _ctx.ptm("pcIncrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "disabled", "unstyled", "onKeydown", "pt"]), createBaseVNode("span", mergeProps(_ctx.ptm("ampm"), {
            "data-pc-group-section": "timepickerlabel"
          }), toDisplayString($data.pm ? _ctx.$primevue.config.locale.pm : _ctx.$primevue.config.locale.am), 17), createVNode(_component_Button, mergeProps({
            "class": _ctx.cx("pcDecrementButton"),
            "aria-label": _ctx.$primevue.config.locale.pm,
            disabled: _ctx.disabled,
            onClick: _cache[52] || (_cache[52] = function($event) {
              return $options.toggleAMPM($event);
            }),
            onKeydown: $options.onContainerButtonKeydown
          }, _ctx.timepickerButtonProps, {
            pt: _ctx.ptm("pcDecrementButton"),
            "data-pc-group-section": "timepickerbutton"
          }), {
            icon: withCtx(function(slotProps) {
              return [renderSlot(_ctx.$slots, "decrementicon", {
                "class": normalizeClass(_ctx.cx("decrementIcon"))
              }, function() {
                return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.decrementIcon ? "span" : "ChevronDownIcon"), mergeProps({
                  "class": [_ctx.cx("decrementIcon"), slotProps["class"]]
                }, _ctx.ptm("pcDecrementButton")["icon"], {
                  "data-pc-group-section": "timepickerlabel"
                }), null, 16, ["class"]))];
              })];
            }),
            _: 3
          }, 16, ["class", "aria-label", "disabled", "onKeydown", "pt"])], 16)) : createCommentVNode("", true)], 16)) : createCommentVNode("", true), _ctx.showButtonBar ? (openBlock(), createElementBlock("div", mergeProps({
            key: 2,
            "class": _ctx.cx("buttonbar")
          }, _ctx.ptm("buttonbar")), [createVNode(_component_Button, mergeProps({
            label: $options.todayLabel,
            onClick: _cache[53] || (_cache[53] = function($event) {
              return $options.onTodayButtonClick($event);
            }),
            "class": _ctx.cx("pcTodayButton"),
            unstyled: _ctx.unstyled,
            onKeydown: $options.onContainerButtonKeydown
          }, _ctx.todayButtonProps, {
            pt: _ctx.ptm("pcTodayButton"),
            "data-pc-group-section": "button"
          }), null, 16, ["label", "class", "unstyled", "onKeydown", "pt"]), createVNode(_component_Button, mergeProps({
            label: $options.clearLabel,
            onClick: _cache[54] || (_cache[54] = function($event) {
              return $options.onClearButtonClick($event);
            }),
            "class": _ctx.cx("pcClearButton"),
            unstyled: _ctx.unstyled,
            onKeydown: $options.onContainerButtonKeydown
          }, _ctx.clearButtonProps, {
            pt: _ctx.ptm("pcClearButton"),
            "data-pc-group-section": "button"
          }), null, 16, ["label", "class", "unstyled", "onKeydown", "pt"])], 16)) : createCommentVNode("", true), renderSlot(_ctx.$slots, "footer")], 16, _hoisted_3$h)) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onAfterEnter", "onAfterLeave", "onLeave"])];
    }),
    _: 3
  }, 8, ["appendTo", "disabled"])], 16, _hoisted_1$s);
}
__name(render$V, "render$V");
script$12.render = render$V;
var script$11 = {
  name: "Calendar",
  "extends": script$12,
  mounted: /* @__PURE__ */ __name(function mounted6() {
    console.warn("Deprecated since v4. Use DatePicker component instead.");
  }, "mounted")
};
var CalendarStyle = BaseStyle.extend({
  name: "calendar"
});
var theme$y = /* @__PURE__ */ __name(function theme6(_ref) {
  var dt = _ref.dt;
  return "\n.p-cascadeselect {\n    display: inline-flex;\n    cursor: pointer;\n    position: relative;\n    user-select: none;\n    background: ".concat(dt("cascadeselect.background"), ";\n    border: 1px solid ").concat(dt("cascadeselect.border.color"), ";\n    transition: background ").concat(dt("cascadeselect.transition.duration"), ", color ").concat(dt("cascadeselect.transition.duration"), ", border-color ").concat(dt("cascadeselect.transition.duration"), ", outline-color ").concat(dt("cascadeselect.transition.duration"), ", box-shadow ").concat(dt("cascadeselect.transition.duration"), ";\n    border-radius: ").concat(dt("cascadeselect.border.radius"), ";\n    outline-color: transparent;\n    box-shadow: ").concat(dt("cascadeselect.shadow"), ";\n}\n\n.p-cascadeselect:not(.p-disabled):hover {\n    border-color: ").concat(dt("cascadeselect.hover.border.color"), ";\n}\n\n.p-cascadeselect:not(.p-disabled).p-focus {\n    border-color: ").concat(dt("cascadeselect.focus.border.color"), ";\n    box-shadow: ").concat(dt("cascadeselect.focus.ring.shadow"), ";\n    outline: ").concat(dt("cascadeselect.focus.ring.width"), " ").concat(dt("cascadeselect.focus.ring.style"), " ").concat(dt("cascadeselect.focus.ring.color"), ";\n    outline-offset: ").concat(dt("cascadeselect.focus.ring.offset"), ";\n}\n\n.p-cascadeselect.p-variant-filled {\n    background: ").concat(dt("cascadeselect.filled.background"), ";\n}\n\n.p-cascadeselect.p-variant-filled:not(.p-disabled):hover {\n    background: ").concat(dt("cascadeselect.filled.hover.background"), ";\n}\n\n.p-cascadeselect.p-variant-filled.p-focus {\n    background: ").concat(dt("cascadeselect.filled.focus.background"), ";\n}\n\n.p-cascadeselect.p-invalid {\n    border-color: ").concat(dt("cascadeselect.invalid.border.color"), ";\n}\n\n.p-cascadeselect.p-disabled {\n    opacity: 1;\n    background: ").concat(dt("cascadeselect.disabled.background"), ";\n}\n\n.p-cascadeselect-dropdown {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n    background: transparent;\n    color: ").concat(dt("cascadeselect.dropdown.color"), ";\n    width: ").concat(dt("cascadeselect.dropdown.width"), ";\n    border-start-end-radius: ").concat(dt("border.radius.md"), ";\n    border-end-end-radius: ").concat(dt("border.radius.md"), ";\n}\n\n.p-cascadeselect-clear-icon {\n    position: absolute;\n    top: 50%;\n    margin-top: -0.5rem;\n    color: ").concat(dt("cascadeselect.clear.icon.color"), ";\n    inset-inline-end: ").concat(dt("cascadeselect.dropdown.width"), ";\n}\n\n.p-cascadeselect-label {\n    display: block;\n    white-space: nowrap;\n    overflow: hidden;\n    flex: 1 1 auto;\n    width: 1%;\n    text-overflow: ellipsis;\n    cursor: pointer;\n    padding: ").concat(dt("cascadeselect.padding.y"), " ").concat(dt("cascadeselect.padding.x"), ";\n    background: transparent;\n    border: 0 none;\n    outline: 0 none;\n}\n\n.p-cascadeselect-label.p-placeholder {\n    color: ").concat(dt("cascadeselect.placeholder.color"), ";\n}\n\n.p-cascadeselect.p-invalid .p-cascadeselect-label.p-placeholder {\n    color: ").concat(dt("cascadeselect.invalid.placeholder.color"), ";\n}\n\n.p-cascadeselect.p-disabled .p-cascadeselect-label {\n    color: ").concat(dt("cascadeselect.disabled.color"), ";\n}\n\n.p-cascadeselect-label-empty {\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.p-cascadeselect-fluid {\n    display: flex;\n}\n\n.p-cascadeselect-fluid .p-cascadeselect-label {\n    width: 1%;\n}\n\n.p-cascadeselect-overlay {\n    background: ").concat(dt("cascadeselect.overlay.background"), ";\n    color: ").concat(dt("cascadeselect.overlay.color"), ";\n    border: 1px solid ").concat(dt("cascadeselect.overlay.border.color"), ";\n    border-radius: ").concat(dt("cascadeselect.overlay.border.radius"), ";\n    box-shadow: ").concat(dt("cascadeselect.overlay.shadow"), ";\n}\n\n.p-cascadeselect .p-cascadeselect-overlay {\n    min-width: 100%;\n}\n\n.p-cascadeselect-option-list {\n    display: none;\n    min-width: 100%;\n    position: absolute;\n    z-index: 1;\n}\n\n.p-cascadeselect-list {\n    min-width: 100%;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    padding: ").concat(dt("cascadeselect.list.padding"), ";\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("cascadeselect.list.gap"), ";\n}\n\n.p-cascadeselect-option {\n    cursor: pointer;\n    font-weight: normal;\n    white-space: nowrap;\n    border: 0 none;\n    color: ").concat(dt("cascadeselect.option.color"), ";\n    background: transparent;\n    border-radius: ").concat(dt("cascadeselect.option.border.radius"), ";\n}\n\n.p-cascadeselect-option-active {\n    overflow: visible;\n}\n\n.p-cascadeselect-option-active > .p-cascadeselect-option-content {\n    background: ").concat(dt("cascadeselect.option.focus.background"), ";\n    color: ").concat(dt("cascadeselect.option.focus.color"), ";\n}\n\n.p-cascadeselect-option:not(.p-cascadeselect-option-selected):not(.p-disabled).p-focus > .p-cascadeselect-option-content {\n    background: ").concat(dt("cascadeselect.option.focus.background"), ";\n    color: ").concat(dt("cascadeselect.option.focus.color"), ";\n}\n\n.p-cascadeselect-option:not(.p-cascadeselect-option-selected):not(.p-disabled).p-focus > .p-cascadeselect-option-content > .p-cascadeselect-group-icon-container > .p-cascadeselect-group-icon {\n    color: ").concat(dt("cascadeselect.option.icon.focus.color"), ";\n}\n\n.p-cascadeselect-option-selected > .p-cascadeselect-option-content {\n    background: ").concat(dt("cascadeselect.option.selected.background"), ";\n    color: ").concat(dt("cascadeselect.option.selected.color"), ";\n}\n\n.p-cascadeselect-option-selected.p-focus > .p-cascadeselect-option-content {\n    background: ").concat(dt("cascadeselect.option.selected.focus.background"), ";\n    color: ").concat(dt("cascadeselect.option.selected.focus.color"), ";\n}\n\n.p-cascadeselect-option-active > .p-cascadeselect-option-list {\n    inset-inline-start: 100%;\n    inset-block-start: 0;\n}\n\n.p-cascadeselect-option-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    overflow: hidden;\n    position: relative;\n    padding: ").concat(dt("cascadeselect.option.padding"), ";\n    border-radius: ").concat(dt("cascadeselect.option.border.radius"), ";\n    transition: background ").concat(dt("cascadeselect.transition.duration"), ", color ").concat(dt("cascadeselect.transition.duration"), ", border-color ").concat(dt("cascadeselect.transition.duration"), ", box-shadow ").concat(dt("cascadeselect.transition.duration"), ", outline-color ").concat(dt("cascadeselect.transition.duration"), ";\n}\n\n.p-cascadeselect-group-icon {\n    font-size: ").concat(dt("cascadeselect.option.icon.size"), ";\n    width: ").concat(dt("cascadeselect.option.icon.size"), ";\n    height: ").concat(dt("cascadeselect.option.icon.size"), ";\n    color: ").concat(dt("cascadeselect.option.icon.color"), ";\n}\n\n.p-cascadeselect-group-icon:dir(rtl) {\n    transform: rotate(180deg);\n}\n\n.p-cascadeselect-mobile-active .p-cascadeselect-option-list {\n    position: static;\n    box-shadow: none;\n    border: 0 none;\n    padding-inline-start: ").concat(dt("tieredmenu.submenu.mobile.indent"), ";\n    padding-inline-end: 0;\n}\n\n.p-cascadeselect-mobile-active .p-cascadeselect-group-icon {\n    transition: transform 0.2s;\n    transform: rotate(90deg);\n}\n\n.p-cascadeselect-mobile-active .p-cascadeselect-option-active > .p-cascadeselect-option-content .p-cascadeselect-group-icon {\n    transform: rotate(-90deg);\n}\n\n.p-cascadeselect-sm .p-cascadeselect-label {\n    font-size: ").concat(dt("cascadeselect.sm.font.size"), ";\n    padding-block: ").concat(dt("cascadeselect.sm.padding.y"), ";\n    padding-inline: ").concat(dt("cascadeselect.sm.padding.x"), ";\n}\n\n.p-cascadeselect-sm .p-cascadeselect-dropdown .p-icon {\n    font-size: ").concat(dt("cascadeselect.sm.font.size"), ";\n    width: ").concat(dt("cascadeselect.sm.font.size"), ";\n    height: ").concat(dt("cascadeselect.sm.font.size"), ";\n}\n\n.p-cascadeselect-lg .p-cascadeselect-label {\n    font-size: ").concat(dt("cascadeselect.lg.font.size"), ";\n    padding-block: ").concat(dt("cascadeselect.lg.padding.y"), ";\n    padding-inline: ").concat(dt("cascadeselect.lg.padding.x"), ";\n}\n\n.p-cascadeselect-lg .p-cascadeselect-dropdown .p-icon {\n    font-size: ").concat(dt("cascadeselect.lg.font.size"), ";\n    width: ").concat(dt("cascadeselect.lg.font.size"), ";\n    height: ").concat(dt("cascadeselect.lg.font.size"), ";\n}\n");
}, "theme");
var inlineStyles$7 = {
  root: /* @__PURE__ */ __name(function root6(_ref2) {
    var props = _ref2.props;
    return {
      position: props.appendTo === "self" ? "relative" : void 0
    };
  }, "root")
};
var classes$C = {
  root: /* @__PURE__ */ __name(function root7(_ref3) {
    var instance = _ref3.instance, props = _ref3.props;
    return ["p-cascadeselect p-component p-inputwrapper", {
      "p-cascadeselect-mobile": instance.queryMatches,
      "p-disabled": props.disabled,
      "p-invalid": instance.$invalid,
      "p-variant-filled": instance.$variant === "filled",
      "p-focus": instance.focused,
      "p-inputwrapper-filled": instance.$filled,
      "p-inputwrapper-focus": instance.focused || instance.overlayVisible,
      "p-cascadeselect-open": instance.overlayVisible,
      "p-cascadeselect-fluid": instance.$fluid,
      "p-cascadeselect-sm p-inputfield-sm": props.size === "small",
      "p-cascadeselect-lg p-inputfield-lg": props.size === "large"
    }];
  }, "root"),
  label: /* @__PURE__ */ __name(function label2(_ref4) {
    var instance = _ref4.instance, props = _ref4.props;
    return ["p-cascadeselect-label", {
      "p-placeholder": instance.label === props.placeholder,
      "p-cascadeselect-label-empty": !instance.$slots["value"] && (instance.label === "p-emptylabel" || instance.label.length === 0)
    }];
  }, "label"),
  clearIcon: "p-cascadeselect-clear-icon",
  dropdown: "p-cascadeselect-dropdown",
  loadingIcon: "p-cascadeselect-loading-icon",
  dropdownIcon: "p-cascadeselect-dropdown-icon",
  overlay: /* @__PURE__ */ __name(function overlay(_ref5) {
    var instance = _ref5.instance;
    return ["p-cascadeselect-overlay p-component", {
      "p-cascadeselect-mobile-active": instance.queryMatches
    }];
  }, "overlay"),
  listContainer: "p-cascadeselect-list-container",
  list: "p-cascadeselect-list",
  option: /* @__PURE__ */ __name(function option(_ref6) {
    var instance = _ref6.instance, processedOption = _ref6.processedOption;
    return ["p-cascadeselect-option", {
      "p-cascadeselect-option-active": instance.isOptionActive(processedOption),
      "p-cascadeselect-option-selected": instance.isOptionSelected(processedOption),
      "p-focus": instance.isOptionFocused(processedOption),
      "p-disabled": instance.isOptionDisabled(processedOption)
    }];
  }, "option"),
  optionContent: "p-cascadeselect-option-content",
  optionText: "p-cascadeselect-option-text",
  groupIconContainer: "p-cascadeselect-group-icon-container",
  groupIcon: "p-cascadeselect-group-icon",
  optionList: "p-cascadeselect-overlay p-cascadeselect-option-list"
};
var CascadeSelectStyle = BaseStyle.extend({
  name: "cascadeselect",
  theme: theme$y,
  classes: classes$C,
  inlineStyles: inlineStyles$7
});
var script$2$8 = {
  name: "BaseCascadeSelect",
  "extends": script$1n,
  props: {
    options: Array,
    optionLabel: null,
    optionValue: null,
    optionDisabled: null,
    optionGroupLabel: null,
    optionGroupChildren: null,
    placeholder: String,
    breakpoint: {
      type: String,
      "default": "960px"
    },
    dataKey: null,
    showClear: {
      type: Boolean,
      "default": false
    },
    clearIcon: {
      type: String,
      "default": void 0
    },
    inputId: {
      type: String,
      "default": null
    },
    inputClass: {
      type: [String, Object],
      "default": null
    },
    inputStyle: {
      type: Object,
      "default": null
    },
    inputProps: {
      type: null,
      "default": null
    },
    panelClass: {
      type: [String, Object],
      "default": null
    },
    panelStyle: {
      type: Object,
      "default": null
    },
    panelProps: {
      type: null,
      "default": null
    },
    overlayClass: {
      type: [String, Object],
      "default": null
    },
    overlayStyle: {
      type: Object,
      "default": null
    },
    overlayProps: {
      type: null,
      "default": null
    },
    appendTo: {
      type: [String, Object],
      "default": "body"
    },
    loading: {
      type: Boolean,
      "default": false
    },
    dropdownIcon: {
      type: String,
      "default": void 0
    },
    loadingIcon: {
      type: String,
      "default": void 0
    },
    optionGroupIcon: {
      type: String,
      "default": void 0
    },
    autoOptionFocus: {
      type: Boolean,
      "default": false
    },
    selectOnFocus: {
      type: Boolean,
      "default": false
    },
    focusOnHover: {
      type: Boolean,
      "default": true
    },
    searchLocale: {
      type: String,
      "default": void 0
    },
    searchMessage: {
      type: String,
      "default": null
    },
    selectionMessage: {
      type: String,
      "default": null
    },
    emptySelectionMessage: {
      type: String,
      "default": null
    },
    emptySearchMessage: {
      type: String,
      "default": null
    },
    emptyMessage: {
      type: String,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: CascadeSelectStyle,
  provide: /* @__PURE__ */ __name(function provide11() {
    return {
      $pcCascadeSelect: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1$E = {
  name: "CascadeSelectSub",
  hostName: "CascadeSelect",
  "extends": script$1d,
  emits: ["option-change", "option-focus-change", "option-focus-enter-change"],
  container: null,
  props: {
    selectId: String,
    focusedOptionId: String,
    options: Array,
    optionLabel: String,
    optionValue: String,
    optionDisabled: null,
    optionGroupIcon: String,
    optionGroupLabel: String,
    optionGroupChildren: {
      type: [String, Array],
      "default": null
    },
    activeOptionPath: Array,
    level: Number,
    templates: null,
    value: null
  },
  methods: {
    getOptionId: /* @__PURE__ */ __name(function getOptionId(processedOption) {
      return "".concat(this.selectId, "_").concat(processedOption.key);
    }, "getOptionId"),
    getOptionLabel: /* @__PURE__ */ __name(function getOptionLabel(processedOption) {
      return this.optionLabel ? resolveFieldData(processedOption.option, this.optionLabel) : processedOption.option;
    }, "getOptionLabel"),
    getOptionValue: /* @__PURE__ */ __name(function getOptionValue(processedOption) {
      return this.optionValue ? resolveFieldData(processedOption.option, this.optionValue) : processedOption.option;
    }, "getOptionValue"),
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions(processedOption, index, key) {
      return this.ptm(key, {
        context: {
          option: processedOption,
          index,
          level: this.level,
          optionGroup: this.isOptionGroup(processedOption),
          active: this.isOptionActive(processedOption),
          focused: this.isOptionFocused(processedOption),
          disabled: this.isOptionDisabled(processedOption)
        }
      });
    }, "getPTOptions"),
    isOptionDisabled: /* @__PURE__ */ __name(function isOptionDisabled(processedOption) {
      return this.optionDisabled ? resolveFieldData(processedOption.option, this.optionDisabled) : false;
    }, "isOptionDisabled"),
    getOptionGroupLabel: /* @__PURE__ */ __name(function getOptionGroupLabel(processedOption) {
      return this.optionGroupLabel ? resolveFieldData(processedOption.option, this.optionGroupLabel) : null;
    }, "getOptionGroupLabel"),
    getOptionGroupChildren: /* @__PURE__ */ __name(function getOptionGroupChildren(processedOption) {
      return processedOption.children;
    }, "getOptionGroupChildren"),
    isOptionGroup: /* @__PURE__ */ __name(function isOptionGroup(processedOption) {
      return isNotEmpty(processedOption.children);
    }, "isOptionGroup"),
    isOptionSelected: /* @__PURE__ */ __name(function isOptionSelected(processedOption) {
      return equals(this.value, processedOption === null || processedOption === void 0 ? void 0 : processedOption.option);
    }, "isOptionSelected"),
    isOptionActive: /* @__PURE__ */ __name(function isOptionActive(processedOption) {
      return this.activeOptionPath.some(function(path) {
        return path.key === processedOption.key;
      });
    }, "isOptionActive"),
    isOptionFocused: /* @__PURE__ */ __name(function isOptionFocused(processedOption) {
      return this.focusedOptionId === this.getOptionId(processedOption);
    }, "isOptionFocused"),
    getOptionLabelToRender: /* @__PURE__ */ __name(function getOptionLabelToRender(processedOption) {
      return this.isOptionGroup(processedOption) ? this.getOptionGroupLabel(processedOption) : this.getOptionLabel(processedOption);
    }, "getOptionLabelToRender"),
    onOptionClick: /* @__PURE__ */ __name(function onOptionClick(event2, processedOption) {
      this.$emit("option-change", {
        originalEvent: event2,
        processedOption,
        isFocus: true
      });
    }, "onOptionClick"),
    onOptionMouseEnter: /* @__PURE__ */ __name(function onOptionMouseEnter(event2, processedOption) {
      this.$emit("option-focus-enter-change", {
        originalEvent: event2,
        processedOption
      });
    }, "onOptionMouseEnter"),
    onOptionMouseMove: /* @__PURE__ */ __name(function onOptionMouseMove(event2, processedOption) {
      this.$emit("option-focus-change", {
        originalEvent: event2,
        processedOption
      });
    }, "onOptionMouseMove"),
    containerRef: /* @__PURE__ */ __name(function containerRef2(el) {
      this.container = el;
    }, "containerRef"),
    listAriaLabel: /* @__PURE__ */ __name(function listAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.listLabel : void 0;
    }, "listAriaLabel")
  },
  directives: {
    ripple: Ripple
  },
  components: {
    AngleRightIcon: script$1q
  }
};
var _hoisted_1$1$6 = ["id", "aria-label", "aria-selected", "aria-expanded", "aria-level", "aria-setsize", "aria-posinset", "data-p-option-group", "data-p-active", "data-p-focus", "data-p-disabled"];
var _hoisted_2$k = ["onClick", "onMouseenter", "onMousemove"];
function render$1$8(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_AngleRightIcon = resolveComponent("AngleRightIcon");
  var _component_CascadeSelectSub = resolveComponent("CascadeSelectSub", true);
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("ul", mergeProps({
    ref: $options.containerRef,
    "class": _ctx.cx("list")
  }, $props.level === 0 ? _ctx.ptm("list") : _ctx.ptm("optionList")), [(openBlock(true), createElementBlock(Fragment, null, renderList($props.options, function(processedOption, index) {
    return openBlock(), createElementBlock("li", mergeProps({
      key: $options.getOptionLabelToRender(processedOption),
      id: $options.getOptionId(processedOption),
      "class": _ctx.cx("option", {
        processedOption
      }),
      role: "treeitem",
      "aria-label": $options.getOptionLabelToRender(processedOption),
      "aria-selected": $options.isOptionGroup(processedOption) ? void 0 : $options.isOptionSelected(processedOption),
      "aria-expanded": $options.isOptionGroup(processedOption) ? $options.isOptionActive(processedOption) : void 0,
      "aria-level": $props.level + 1,
      "aria-setsize": $props.options.length,
      "aria-posinset": index + 1,
      ref_for: true
    }, $options.getPTOptions(processedOption, index, "option"), {
      "data-p-option-group": $options.isOptionGroup(processedOption),
      "data-p-active": $options.isOptionActive(processedOption),
      "data-p-focus": $options.isOptionFocused(processedOption),
      "data-p-disabled": $options.isOptionDisabled(processedOption)
    }), [withDirectives((openBlock(), createElementBlock("div", mergeProps({
      "class": _ctx.cx("optionContent"),
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onOptionClick($event, processedOption);
      }, "onClick"),
      onMouseenter: /* @__PURE__ */ __name(function onMouseenter($event) {
        return $options.onOptionMouseEnter($event, processedOption);
      }, "onMouseenter"),
      onMousemove: /* @__PURE__ */ __name(function onMousemove($event) {
        return $options.onOptionMouseMove($event, processedOption);
      }, "onMousemove"),
      ref_for: true
    }, $options.getPTOptions(processedOption, index, "optionContent")), [$props.templates["option"] ? (openBlock(), createBlock(resolveDynamicComponent($props.templates["option"]), {
      key: 0,
      option: processedOption.option,
      selected: $options.isOptionGroup(processedOption) ? false : $options.isOptionSelected(processedOption)
    }, null, 8, ["option", "selected"])) : (openBlock(), createElementBlock("span", mergeProps({
      key: 1,
      "class": _ctx.cx("optionText"),
      ref_for: true
    }, $options.getPTOptions(processedOption, index, "optionText")), toDisplayString($options.getOptionLabelToRender(processedOption)), 17)), $options.isOptionGroup(processedOption) ? (openBlock(), createElementBlock("span", {
      key: 2,
      "class": normalizeClass(_ctx.cx("groupIconContainer"))
    }, [$props.templates["optiongroupicon"] ? (openBlock(), createBlock(resolveDynamicComponent($props.templates["optiongroupicon"]), {
      key: 0,
      "class": normalizeClass(_ctx.cx("groupIcon"))
    }, null, 8, ["class"])) : $props.optionGroupIcon ? (openBlock(), createElementBlock("span", mergeProps({
      key: 1,
      "class": [_ctx.cx("groupIcon"), $props.optionGroupIcon],
      "aria-hidden": "true",
      ref_for: true
    }, $options.getPTOptions(processedOption, index, "groupIcon")), null, 16)) : (openBlock(), createBlock(_component_AngleRightIcon, mergeProps({
      key: 2,
      "class": _ctx.cx("groupIcon"),
      "aria-hidden": "true",
      ref_for: true
    }, $options.getPTOptions(processedOption, index, "groupIcon")), null, 16, ["class"]))], 2)) : createCommentVNode("", true)], 16, _hoisted_2$k)), [[_directive_ripple]]), $options.isOptionGroup(processedOption) && $options.isOptionActive(processedOption) ? (openBlock(), createBlock(_component_CascadeSelectSub, {
      key: 0,
      role: "group",
      "class": normalizeClass(_ctx.cx("optionList")),
      selectId: $props.selectId,
      focusedOptionId: $props.focusedOptionId,
      options: $options.getOptionGroupChildren(processedOption),
      activeOptionPath: $props.activeOptionPath,
      level: $props.level + 1,
      templates: $props.templates,
      optionLabel: $props.optionLabel,
      optionValue: $props.optionValue,
      optionDisabled: $props.optionDisabled,
      optionGroupIcon: $props.optionGroupIcon,
      optionGroupLabel: $props.optionGroupLabel,
      optionGroupChildren: $props.optionGroupChildren,
      value: $props.value,
      onOptionChange: _cache[0] || (_cache[0] = function($event) {
        return _ctx.$emit("option-change", $event);
      }),
      onOptionFocusChange: _cache[1] || (_cache[1] = function($event) {
        return _ctx.$emit("option-focus-change", $event);
      }),
      onOptionFocusEnterChange: _cache[2] || (_cache[2] = function($event) {
        return _ctx.$emit("option-focus-enter-change", $event);
      }),
      pt: _ctx.pt,
      unstyled: _ctx.unstyled
    }, null, 8, ["class", "selectId", "focusedOptionId", "options", "activeOptionPath", "level", "templates", "optionLabel", "optionValue", "optionDisabled", "optionGroupIcon", "optionGroupLabel", "optionGroupChildren", "value", "pt", "unstyled"])) : createCommentVNode("", true)], 16, _hoisted_1$1$6);
  }), 128))], 16);
}
__name(render$1$8, "render$1$8");
script$1$E.render = render$1$8;
function _typeof$1$3(o) {
  "@babel/helpers - typeof";
  return _typeof$1$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$1$3(o);
}
__name(_typeof$1$3, "_typeof$1$3");
function ownKeys$1$2(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$1$2, "ownKeys$1$2");
function _objectSpread$1$2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$1$2(Object(t2), true).forEach(function(r2) {
      _defineProperty$1$3(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$1$2(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$1$2, "_objectSpread$1$2");
function _defineProperty$1$3(e, r, t2) {
  return (r = _toPropertyKey$1$3(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$1$3, "_defineProperty$1$3");
function _toPropertyKey$1$3(t2) {
  var i = _toPrimitive$1$3(t2, "string");
  return "symbol" == _typeof$1$3(i) ? i : i + "";
}
__name(_toPropertyKey$1$3, "_toPropertyKey$1$3");
function _toPrimitive$1$3(t2, r) {
  if ("object" != _typeof$1$3(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$1$3(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$1$3, "_toPrimitive$1$3");
var script$10 = {
  name: "CascadeSelect",
  "extends": script$2$8,
  inheritAttrs: false,
  emits: ["change", "focus", "blur", "click", "group-change", "before-show", "before-hide", "hide", "show"],
  outsideClickListener: null,
  matchMediaListener: null,
  scrollHandler: null,
  resizeListener: null,
  overlay: null,
  searchTimeout: null,
  searchValue: null,
  data: /* @__PURE__ */ __name(function data4() {
    return {
      id: this.$attrs.id,
      clicked: false,
      focused: false,
      focusedOptionInfo: {
        index: -1,
        level: 0,
        parentKey: ""
      },
      activeOptionPath: [],
      overlayVisible: false,
      dirty: false,
      mobileActive: false,
      query: null,
      queryMatches: false
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId2(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    options: /* @__PURE__ */ __name(function options() {
      this.autoUpdateModel();
    }, "options")
  },
  mounted: /* @__PURE__ */ __name(function mounted7() {
    this.id = this.id || UniqueComponentId();
    this.autoUpdateModel();
    this.bindMatchMediaListener();
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount3() {
    this.unbindOutsideClickListener();
    this.unbindResizeListener();
    this.unbindMatchMediaListener();
    if (this.scrollHandler) {
      this.scrollHandler.destroy();
      this.scrollHandler = null;
    }
    if (this.overlay) {
      ZIndex.clear(this.overlay);
      this.overlay = null;
    }
    if (this.mobileActive) {
      this.mobileActive = false;
    }
  }, "beforeUnmount"),
  methods: {
    getOptionLabel: /* @__PURE__ */ __name(function getOptionLabel2(option4) {
      return this.optionLabel ? resolveFieldData(option4, this.optionLabel) : option4;
    }, "getOptionLabel"),
    getOptionValue: /* @__PURE__ */ __name(function getOptionValue2(option4) {
      return this.optionValue ? resolveFieldData(option4, this.optionValue) : option4;
    }, "getOptionValue"),
    isOptionDisabled: /* @__PURE__ */ __name(function isOptionDisabled2(option4) {
      return this.optionDisabled ? resolveFieldData(option4, this.optionDisabled) : false;
    }, "isOptionDisabled"),
    getOptionGroupLabel: /* @__PURE__ */ __name(function getOptionGroupLabel2(optionGroup) {
      return this.optionGroupLabel ? resolveFieldData(optionGroup, this.optionGroupLabel) : null;
    }, "getOptionGroupLabel"),
    getOptionGroupChildren: /* @__PURE__ */ __name(function getOptionGroupChildren2(optionGroup, level) {
      return isString(this.optionGroupChildren) ? resolveFieldData(optionGroup, this.optionGroupChildren) : resolveFieldData(optionGroup, this.optionGroupChildren[level]);
    }, "getOptionGroupChildren"),
    isOptionGroup: /* @__PURE__ */ __name(function isOptionGroup2(option4, level) {
      return Object.prototype.hasOwnProperty.call(option4, this.optionGroupChildren[level]);
    }, "isOptionGroup"),
    getProccessedOptionLabel: /* @__PURE__ */ __name(function getProccessedOptionLabel() {
      var processedOption = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var grouped = this.isProccessedOptionGroup(processedOption);
      return grouped ? this.getOptionGroupLabel(processedOption.option, processedOption.level) : this.getOptionLabel(processedOption.option);
    }, "getProccessedOptionLabel"),
    isProccessedOptionGroup: /* @__PURE__ */ __name(function isProccessedOptionGroup(processedOption) {
      return isNotEmpty(processedOption === null || processedOption === void 0 ? void 0 : processedOption.children);
    }, "isProccessedOptionGroup"),
    show: /* @__PURE__ */ __name(function show(isFocus) {
      this.$emit("before-show");
      this.overlayVisible = true;
      this.activeOptionPath = this.$filled ? this.findOptionPathByValue(this.d_value) : this.activeOptionPath;
      if (this.$filled && isNotEmpty(this.activeOptionPath)) {
        var processedOption = this.activeOptionPath[this.activeOptionPath.length - 1];
        this.focusedOptionInfo = {
          index: processedOption.index,
          level: processedOption.level,
          parentKey: processedOption.parentKey
        };
      } else {
        this.focusedOptionInfo = {
          index: this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex(),
          level: 0,
          parentKey: ""
        };
      }
      isFocus && focus(this.$refs.focusInput);
    }, "show"),
    hide: /* @__PURE__ */ __name(function hide2(isFocus) {
      var _this = this;
      var _hide = /* @__PURE__ */ __name(function _hide2() {
        _this.$emit("before-hide");
        _this.overlayVisible = false;
        _this.clicked = false;
        _this.activeOptionPath = [];
        _this.focusedOptionInfo = {
          index: -1,
          level: 0,
          parentKey: ""
        };
        isFocus && focus(_this.$refs.focusInput);
      }, "_hide");
      setTimeout(function() {
        _hide();
      }, 0);
    }, "hide"),
    onFocus: /* @__PURE__ */ __name(function onFocus3(event2) {
      if (this.disabled) {
        return;
      }
      this.focused = true;
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur2(event2) {
      var _this$formField$onBlu, _this$formField;
      this.focused = false;
      this.focusedOptionInfo = {
        index: -1,
        level: 0,
        parentKey: ""
      };
      this.searchValue = "";
      this.$emit("blur", event2);
      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField);
    }, "onBlur"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown2(event2) {
      if (this.disabled || this.loading) {
        event2.preventDefault();
        return;
      }
      var metaKey = event2.metaKey || event2.ctrlKey;
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2);
          break;
        case "ArrowLeft":
          this.onArrowLeftKey(event2);
          break;
        case "ArrowRight":
          this.onArrowRightKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
        case "Space":
          this.onSpaceKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(event2);
          break;
        case "Escape":
          this.onEscapeKey(event2);
          break;
        case "Tab":
          this.onTabKey(event2);
          break;
        case "PageDown":
        case "PageUp":
        case "Backspace":
        case "ShiftLeft":
        case "ShiftRight":
          break;
        default:
          if (!metaKey && isPrintableCharacter(event2.key)) {
            !this.overlayVisible && this.show();
            this.searchOptions(event2, event2.key);
          }
          break;
      }
      this.clicked = false;
    }, "onKeyDown"),
    onOptionChange: /* @__PURE__ */ __name(function onOptionChange(event2) {
      var processedOption = event2.processedOption, type = event2.type;
      if (isEmpty(processedOption)) return;
      var index = processedOption.index, key = processedOption.key, level = processedOption.level, parentKey = processedOption.parentKey, children = processedOption.children;
      var grouped = isNotEmpty(children);
      var activeOptionPath = this.activeOptionPath.filter(function(p) {
        return p.parentKey !== parentKey && p.parentKey !== key;
      });
      this.focusedOptionInfo = {
        index,
        level,
        parentKey
      };
      if (type == "hover" && this.queryMatches) {
        return;
      }
      if (grouped) {
        activeOptionPath.push(processedOption);
      }
      this.activeOptionPath = activeOptionPath;
    }, "onOptionChange"),
    onOptionClick: /* @__PURE__ */ __name(function onOptionClick2(event2) {
      var originalEvent = event2.originalEvent, processedOption = event2.processedOption, isFocus = event2.isFocus, isHide = event2.isHide, preventSelection = event2.preventSelection;
      var index = processedOption.index, key = processedOption.key, level = processedOption.level, parentKey = processedOption.parentKey;
      var grouped = this.isProccessedOptionGroup(processedOption);
      var selected3 = this.isSelected(processedOption);
      if (selected3) {
        this.activeOptionPath = this.activeOptionPath.filter(function(p) {
          return key !== p.key && key.startsWith(p.key);
        });
        this.focusedOptionInfo = {
          index,
          level,
          parentKey
        };
      } else {
        if (grouped) {
          this.onOptionChange(event2);
          this.onOptionGroupSelect(originalEvent, processedOption);
        } else {
          var activeOptionPath = this.activeOptionPath.filter(function(p) {
            return p.parentKey !== parentKey;
          });
          activeOptionPath.push(processedOption);
          this.focusedOptionInfo = {
            index,
            level,
            parentKey
          };
          if (!preventSelection || (processedOption === null || processedOption === void 0 ? void 0 : processedOption.children.length) !== 0) {
            this.activeOptionPath = activeOptionPath;
            this.onOptionSelect(originalEvent, processedOption, isHide);
          }
        }
      }
      isFocus && focus(this.$refs.focusInput);
    }, "onOptionClick"),
    onOptionMouseEnter: /* @__PURE__ */ __name(function onOptionMouseEnter2(event2) {
      if (this.focusOnHover) {
        if (this.dirty || !this.dirty && isNotEmpty(this.d_value)) {
          this.onOptionChange(_objectSpread$1$2(_objectSpread$1$2({}, event2), {}, {
            type: "hover"
          }));
        } else if (!this.dirty && event2.processedOption.level === 0) {
          this.onOptionClick(_objectSpread$1$2(_objectSpread$1$2({}, event2), {}, {
            type: "hover"
          }));
        }
      }
    }, "onOptionMouseEnter"),
    onOptionMouseMove: /* @__PURE__ */ __name(function onOptionMouseMove2(event2) {
      if (this.focused && this.focusOnHover) {
        this.changeFocusedOptionIndex(event2, event2.processedOption.index);
      }
    }, "onOptionMouseMove"),
    onOptionSelect: /* @__PURE__ */ __name(function onOptionSelect(event2, processedOption) {
      var isHide = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
      var value2 = this.getOptionValue(processedOption === null || processedOption === void 0 ? void 0 : processedOption.option);
      this.activeOptionPath.forEach(function(p) {
        return p.selected = true;
      });
      this.updateModel(event2, value2);
      isHide && this.hide(true);
    }, "onOptionSelect"),
    onOptionGroupSelect: /* @__PURE__ */ __name(function onOptionGroupSelect(event2, processedOption) {
      this.dirty = true;
      this.$emit("group-change", {
        originalEvent: event2,
        value: processedOption.option
      });
    }, "onOptionGroupSelect"),
    onContainerClick: /* @__PURE__ */ __name(function onContainerClick(event2) {
      if (this.disabled || this.loading) {
        return;
      }
      if (event2.target.getAttribute("data-pc-section") === "clearicon" || event2.target.closest('[data-pc-section="clearicon"]')) {
        return;
      } else if (!this.overlay || !this.overlay.contains(event2.target)) {
        this.overlayVisible ? this.hide() : this.show();
        focus(this.$refs.focusInput);
      }
      this.clicked = true;
      this.$emit("click", event2);
    }, "onContainerClick"),
    onClearClick: /* @__PURE__ */ __name(function onClearClick(event2) {
      this.updateModel(event2, null);
    }, "onClearClick"),
    onOverlayClick: /* @__PURE__ */ __name(function onOverlayClick2(event2) {
      OverlayEventBus.emit("overlay-click", {
        originalEvent: event2,
        target: this.$el
      });
    }, "onOverlayClick"),
    onOverlayKeyDown: /* @__PURE__ */ __name(function onOverlayKeyDown2(event2) {
      switch (event2.code) {
        case "Escape":
          this.onEscapeKey(event2);
          break;
      }
    }, "onOverlayKeyDown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey2(event2) {
      if (!this.overlayVisible) {
        this.show();
      } else {
        var optionIndex = this.focusedOptionInfo.index !== -1 ? this.findNextOptionIndex(this.focusedOptionInfo.index) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();
        this.changeFocusedOptionIndex(event2, optionIndex, true);
      }
      event2.preventDefault();
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey2(event2) {
      if (event2.altKey) {
        if (this.focusedOptionInfo.index !== -1) {
          var processedOption = this.visibleOptions[this.focusedOptionInfo.index];
          var grouped = this.isProccessedOptionGroup(processedOption);
          !grouped && this.onOptionChange({
            originalEvent: event2,
            processedOption
          });
        }
        this.overlayVisible && this.hide();
        event2.preventDefault();
      } else {
        var optionIndex = this.focusedOptionInfo.index !== -1 ? this.findPrevOptionIndex(this.focusedOptionInfo.index) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();
        this.changeFocusedOptionIndex(event2, optionIndex, true);
        !this.overlayVisible && this.show();
        event2.preventDefault();
      }
    }, "onArrowUpKey"),
    onArrowLeftKey: /* @__PURE__ */ __name(function onArrowLeftKey(event2) {
      var _this2 = this;
      if (this.overlayVisible) {
        var processedOption = this.visibleOptions[this.focusedOptionInfo.index];
        var parentOption = this.activeOptionPath.find(function(p) {
          return p.key === (processedOption === null || processedOption === void 0 ? void 0 : processedOption.parentKey);
        });
        var matched = this.focusedOptionInfo.parentKey === "" || parentOption && parentOption.key === this.focusedOptionInfo.parentKey;
        var root35 = isEmpty(processedOption === null || processedOption === void 0 ? void 0 : processedOption.parent);
        if (matched) {
          this.activeOptionPath = this.activeOptionPath.filter(function(p) {
            return p.parentKey !== _this2.focusedOptionInfo.parentKey;
          });
        }
        if (!root35) {
          this.focusedOptionInfo = {
            index: -1,
            parentKey: parentOption ? parentOption.parentKey : ""
          };
          this.searchValue = "";
          this.onArrowDownKey(event2);
        }
        event2.preventDefault();
      }
    }, "onArrowLeftKey"),
    onArrowRightKey: /* @__PURE__ */ __name(function onArrowRightKey(event2) {
      if (this.overlayVisible) {
        var processedOption = this.visibleOptions[this.focusedOptionInfo.index];
        var grouped = this.isProccessedOptionGroup(processedOption);
        if (grouped) {
          var matched = this.activeOptionPath.some(function(p) {
            return (processedOption === null || processedOption === void 0 ? void 0 : processedOption.key) === p.key;
          });
          if (matched) {
            this.focusedOptionInfo = {
              index: -1,
              parentKey: processedOption === null || processedOption === void 0 ? void 0 : processedOption.key
            };
            this.searchValue = "";
            this.onArrowDownKey(event2);
          } else {
            this.onOptionChange({
              originalEvent: event2,
              processedOption
            });
          }
        }
        event2.preventDefault();
      }
    }, "onArrowRightKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey2(event2) {
      this.changeFocusedOptionIndex(event2, this.findFirstOptionIndex());
      !this.overlayVisible && this.show();
      event2.preventDefault();
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey2(event2) {
      this.changeFocusedOptionIndex(event2, this.findLastOptionIndex());
      !this.overlayVisible && this.show();
      event2.preventDefault();
    }, "onEndKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey2(event2) {
      if (!this.overlayVisible) {
        this.focusedOptionInfo.index !== -1;
        this.onArrowDownKey(event2);
      } else {
        if (this.focusedOptionInfo.index !== -1) {
          var processedOption = this.visibleOptions[this.focusedOptionInfo.index];
          var grouped = this.isProccessedOptionGroup(processedOption);
          this.onOptionClick({
            originalEvent: event2,
            processedOption,
            preventSelection: false
          });
          !grouped && this.hide();
        }
      }
      event2.preventDefault();
    }, "onEnterKey"),
    onSpaceKey: /* @__PURE__ */ __name(function onSpaceKey(event2) {
      this.onEnterKey(event2);
    }, "onSpaceKey"),
    onEscapeKey: /* @__PURE__ */ __name(function onEscapeKey(event2) {
      this.overlayVisible && this.hide(true);
      event2.preventDefault();
    }, "onEscapeKey"),
    onTabKey: /* @__PURE__ */ __name(function onTabKey(event2) {
      if (this.focusedOptionInfo.index !== -1) {
        var processedOption = this.visibleOptions[this.focusedOptionInfo.index];
        var grouped = this.isProccessedOptionGroup(processedOption);
        !grouped && this.onOptionChange({
          originalEvent: event2,
          processedOption
        });
      }
      this.overlayVisible && this.hide();
    }, "onTabKey"),
    onOverlayEnter: /* @__PURE__ */ __name(function onOverlayEnter2(el) {
      ZIndex.set("overlay", el, this.$primevue.config.zIndex.overlay);
      addStyle(el, {
        position: "absolute",
        top: "0",
        left: "0"
      });
      this.alignOverlay();
      this.scrollInView();
    }, "onOverlayEnter"),
    onOverlayAfterEnter: /* @__PURE__ */ __name(function onOverlayAfterEnter() {
      this.bindOutsideClickListener();
      this.bindScrollListener();
      this.bindResizeListener();
      this.$emit("show");
    }, "onOverlayAfterEnter"),
    onOverlayLeave: /* @__PURE__ */ __name(function onOverlayLeave2() {
      this.unbindOutsideClickListener();
      this.unbindScrollListener();
      this.unbindResizeListener();
      this.$emit("hide");
      this.overlay = null;
      this.dirty = false;
    }, "onOverlayLeave"),
    onOverlayAfterLeave: /* @__PURE__ */ __name(function onOverlayAfterLeave2(el) {
      ZIndex.clear(el);
    }, "onOverlayAfterLeave"),
    alignOverlay: /* @__PURE__ */ __name(function alignOverlay2() {
      if (this.appendTo === "self") {
        relativePosition(this.overlay, this.$el);
      } else {
        this.overlay.style.minWidth = getOuterWidth(this.$el) + "px";
        absolutePosition(this.overlay, this.$el);
      }
    }, "alignOverlay"),
    bindOutsideClickListener: /* @__PURE__ */ __name(function bindOutsideClickListener3() {
      var _this3 = this;
      if (!this.outsideClickListener) {
        this.outsideClickListener = function(event2) {
          if (_this3.overlayVisible && _this3.overlay && !_this3.$el.contains(event2.target) && !_this3.overlay.contains(event2.target)) {
            _this3.hide();
          }
        };
        document.addEventListener("click", this.outsideClickListener);
      }
    }, "bindOutsideClickListener"),
    unbindOutsideClickListener: /* @__PURE__ */ __name(function unbindOutsideClickListener3() {
      if (this.outsideClickListener) {
        document.removeEventListener("click", this.outsideClickListener);
        this.outsideClickListener = null;
      }
    }, "unbindOutsideClickListener"),
    bindScrollListener: /* @__PURE__ */ __name(function bindScrollListener2() {
      var _this4 = this;
      if (!this.scrollHandler) {
        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, function() {
          if (_this4.overlayVisible) {
            _this4.hide();
          }
        });
      }
      this.scrollHandler.bindScrollListener();
    }, "bindScrollListener"),
    unbindScrollListener: /* @__PURE__ */ __name(function unbindScrollListener2() {
      if (this.scrollHandler) {
        this.scrollHandler.unbindScrollListener();
      }
    }, "unbindScrollListener"),
    bindResizeListener: /* @__PURE__ */ __name(function bindResizeListener2() {
      var _this5 = this;
      if (!this.resizeListener) {
        this.resizeListener = function() {
          if (_this5.overlayVisible && !isTouchDevice()) {
            _this5.hide();
          }
        };
        window.addEventListener("resize", this.resizeListener);
      }
    }, "bindResizeListener"),
    unbindResizeListener: /* @__PURE__ */ __name(function unbindResizeListener2() {
      if (this.resizeListener) {
        window.removeEventListener("resize", this.resizeListener);
        this.resizeListener = null;
      }
    }, "unbindResizeListener"),
    bindMatchMediaListener: /* @__PURE__ */ __name(function bindMatchMediaListener2() {
      var _this6 = this;
      if (!this.matchMediaListener) {
        var query = matchMedia("(max-width: ".concat(this.breakpoint, ")"));
        this.query = query;
        this.queryMatches = query.matches;
        this.matchMediaListener = function() {
          _this6.queryMatches = query.matches;
          _this6.mobileActive = false;
        };
        this.query.addEventListener("change", this.matchMediaListener);
      }
    }, "bindMatchMediaListener"),
    unbindMatchMediaListener: /* @__PURE__ */ __name(function unbindMatchMediaListener2() {
      if (this.matchMediaListener) {
        this.query.removeEventListener("change", this.matchMediaListener);
        this.matchMediaListener = null;
      }
    }, "unbindMatchMediaListener"),
    isOptionMatched: /* @__PURE__ */ __name(function isOptionMatched(processedOption) {
      var _this$getProccessedOp;
      return this.isValidOption(processedOption) && ((_this$getProccessedOp = this.getProccessedOptionLabel(processedOption)) === null || _this$getProccessedOp === void 0 ? void 0 : _this$getProccessedOp.toLocaleLowerCase(this.searchLocale).startsWith(this.searchValue.toLocaleLowerCase(this.searchLocale)));
    }, "isOptionMatched"),
    isValidOption: /* @__PURE__ */ __name(function isValidOption(processedOption) {
      return isNotEmpty(processedOption) && !this.isOptionDisabled(processedOption.option);
    }, "isValidOption"),
    isValidSelectedOption: /* @__PURE__ */ __name(function isValidSelectedOption(processedOption) {
      return this.isValidOption(processedOption) && this.isSelected(processedOption);
    }, "isValidSelectedOption"),
    isSelected: /* @__PURE__ */ __name(function isSelected2(processedOption) {
      return this.activeOptionPath.some(function(p) {
        return p.key === processedOption.key;
      });
    }, "isSelected"),
    findFirstOptionIndex: /* @__PURE__ */ __name(function findFirstOptionIndex() {
      var _this7 = this;
      return this.visibleOptions.findIndex(function(processedOption) {
        return _this7.isValidOption(processedOption);
      });
    }, "findFirstOptionIndex"),
    findLastOptionIndex: /* @__PURE__ */ __name(function findLastOptionIndex() {
      var _this8 = this;
      return findLastIndex(this.visibleOptions, function(processedOption) {
        return _this8.isValidOption(processedOption);
      });
    }, "findLastOptionIndex"),
    findNextOptionIndex: /* @__PURE__ */ __name(function findNextOptionIndex(index) {
      var _this9 = this;
      var matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex(function(processedOption) {
        return _this9.isValidOption(processedOption);
      }) : -1;
      return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;
    }, "findNextOptionIndex"),
    findPrevOptionIndex: /* @__PURE__ */ __name(function findPrevOptionIndex(index) {
      var _this10 = this;
      var matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), function(processedOption) {
        return _this10.isValidOption(processedOption);
      }) : -1;
      return matchedOptionIndex > -1 ? matchedOptionIndex : index;
    }, "findPrevOptionIndex"),
    findSelectedOptionIndex: /* @__PURE__ */ __name(function findSelectedOptionIndex() {
      var _this11 = this;
      return this.visibleOptions.findIndex(function(processedOption) {
        return _this11.isValidSelectedOption(processedOption);
      });
    }, "findSelectedOptionIndex"),
    findFirstFocusedOptionIndex: /* @__PURE__ */ __name(function findFirstFocusedOptionIndex() {
      var selectedIndex = this.findSelectedOptionIndex();
      return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;
    }, "findFirstFocusedOptionIndex"),
    findLastFocusedOptionIndex: /* @__PURE__ */ __name(function findLastFocusedOptionIndex() {
      var selectedIndex = this.findSelectedOptionIndex();
      return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;
    }, "findLastFocusedOptionIndex"),
    findOptionPathByValue: /* @__PURE__ */ __name(function findOptionPathByValue(value2, processedOptions2) {
      var level = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      processedOptions2 = processedOptions2 || level === 0 && this.processedOptions;
      if (!processedOptions2) return null;
      if (isEmpty(value2)) return [];
      for (var i = 0; i < processedOptions2.length; i++) {
        var processedOption = processedOptions2[i];
        if (equals(value2, this.getOptionValue(processedOption.option), this.equalityKey)) {
          return [processedOption];
        }
        var matchedOptions = this.findOptionPathByValue(value2, processedOption.children, level + 1);
        if (matchedOptions) {
          matchedOptions.unshift(processedOption);
          return matchedOptions;
        }
      }
    }, "findOptionPathByValue"),
    searchOptions: /* @__PURE__ */ __name(function searchOptions(event2, _char) {
      var _this12 = this;
      this.searchValue = (this.searchValue || "") + _char;
      var optionIndex = -1;
      var matched = false;
      if (isNotEmpty(this.searchValue)) {
        if (this.focusedOptionInfo.index !== -1) {
          optionIndex = this.visibleOptions.slice(this.focusedOptionInfo.index).findIndex(function(processedOption) {
            return _this12.isOptionMatched(processedOption);
          });
          optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionInfo.index).findIndex(function(processedOption) {
            return _this12.isOptionMatched(processedOption);
          }) : optionIndex + this.focusedOptionInfo.index;
        } else {
          optionIndex = this.visibleOptions.findIndex(function(processedOption) {
            return _this12.isOptionMatched(processedOption);
          });
        }
        if (optionIndex !== -1) {
          matched = true;
        }
        if (optionIndex === -1 && this.focusedOptionInfo.index === -1) {
          optionIndex = this.findFirstFocusedOptionIndex();
        }
        if (optionIndex !== -1) {
          this.changeFocusedOptionIndex(event2, optionIndex);
        }
      }
      if (this.searchTimeout) {
        clearTimeout(this.searchTimeout);
      }
      this.searchTimeout = setTimeout(function() {
        _this12.searchValue = "";
        _this12.searchTimeout = null;
      }, 500);
      return matched;
    }, "searchOptions"),
    changeFocusedOptionIndex: /* @__PURE__ */ __name(function changeFocusedOptionIndex(event2, index, preventSelection) {
      if (this.focusedOptionInfo.index !== index) {
        this.focusedOptionInfo.index = index;
        this.scrollInView();
        if (this.focusOnHover) {
          this.onOptionClick({
            originalEvent: event2,
            processedOption: this.visibleOptions[index],
            isHide: false,
            preventSelection
          });
        }
        if (this.selectOnFocus) {
          this.onOptionChange({
            originalEvent: event2,
            processedOption: this.visibleOptions[index],
            isHide: false
          });
        }
      }
    }, "changeFocusedOptionIndex"),
    scrollInView: /* @__PURE__ */ __name(function scrollInView2() {
      var _this13 = this;
      var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : -1;
      this.$nextTick(function() {
        var id4 = index !== -1 ? "".concat(_this13.id, "_").concat(index) : _this13.focusedOptionId;
        var element = findSingle(_this13.list, 'li[id="'.concat(id4, '"]'));
        if (element) {
          element.scrollIntoView && element.scrollIntoView({
            block: "nearest",
            inline: "start"
          });
        }
      });
    }, "scrollInView"),
    autoUpdateModel: /* @__PURE__ */ __name(function autoUpdateModel() {
      if (this.selectOnFocus && this.autoOptionFocus && !this.$filled) {
        this.focusedOptionInfo.index = this.findFirstFocusedOptionIndex();
        this.onOptionChange({
          processedOption: this.visibleOptions[this.focusedOptionInfo.index],
          isHide: false
        });
        !this.overlayVisible && (this.focusedOptionInfo = {
          index: -1,
          level: 0,
          parentKey: ""
        });
      }
    }, "autoUpdateModel"),
    updateModel: /* @__PURE__ */ __name(function updateModel2(event2, value2) {
      this.writeValue(value2, event2);
      this.$emit("change", {
        originalEvent: event2,
        value: value2
      });
    }, "updateModel"),
    createProcessedOptions: /* @__PURE__ */ __name(function createProcessedOptions(options4) {
      var _this14 = this;
      var level = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var parent = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var parentKey = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "";
      var processedOptions2 = [];
      options4 && options4.forEach(function(option4, index) {
        var key = (parentKey !== "" ? parentKey + "_" : "") + index;
        var newOption = {
          option: option4,
          index,
          level,
          key,
          parent,
          parentKey
        };
        newOption["children"] = _this14.createProcessedOptions(_this14.getOptionGroupChildren(option4, level), level + 1, newOption, key);
        processedOptions2.push(newOption);
      });
      return processedOptions2;
    }, "createProcessedOptions"),
    overlayRef: /* @__PURE__ */ __name(function overlayRef2(el) {
      this.overlay = el;
    }, "overlayRef")
  },
  computed: {
    // @deprecated use $filled instead.
    hasSelectedOption: /* @__PURE__ */ __name(function hasSelectedOption() {
      return this.$filled;
    }, "hasSelectedOption"),
    label: /* @__PURE__ */ __name(function label3() {
      var label12 = this.placeholder || "p-emptylabel";
      if (this.$filled) {
        var activeOptionPath = this.findOptionPathByValue(this.d_value);
        var processedOption = isNotEmpty(activeOptionPath) ? activeOptionPath[activeOptionPath.length - 1] : null;
        return processedOption ? this.getOptionLabel(processedOption.option) : label12;
      }
      return label12;
    }, "label"),
    processedOptions: /* @__PURE__ */ __name(function processedOptions() {
      return this.createProcessedOptions(this.options || []);
    }, "processedOptions"),
    visibleOptions: /* @__PURE__ */ __name(function visibleOptions() {
      var _this15 = this;
      var processedOption = this.activeOptionPath.find(function(p) {
        return p.key === _this15.focusedOptionInfo.parentKey;
      });
      return processedOption ? processedOption.children : this.processedOptions;
    }, "visibleOptions"),
    equalityKey: /* @__PURE__ */ __name(function equalityKey() {
      return this.optionValue ? null : this.dataKey;
    }, "equalityKey"),
    searchResultMessageText: /* @__PURE__ */ __name(function searchResultMessageText() {
      return isNotEmpty(this.visibleOptions) ? this.searchMessageText.replaceAll("{0}", this.visibleOptions.length) : this.emptySearchMessageText;
    }, "searchResultMessageText"),
    searchMessageText: /* @__PURE__ */ __name(function searchMessageText() {
      return this.searchMessage || this.$primevue.config.locale.searchMessage || "";
    }, "searchMessageText"),
    emptySearchMessageText: /* @__PURE__ */ __name(function emptySearchMessageText() {
      return this.emptySearchMessage || this.$primevue.config.locale.emptySearchMessage || "";
    }, "emptySearchMessageText"),
    emptyMessageText: /* @__PURE__ */ __name(function emptyMessageText() {
      return this.emptyMessage || this.$primevue.config.locale.emptyMessage || "";
    }, "emptyMessageText"),
    selectionMessageText: /* @__PURE__ */ __name(function selectionMessageText() {
      return this.selectionMessage || this.$primevue.config.locale.selectionMessage || "";
    }, "selectionMessageText"),
    emptySelectionMessageText: /* @__PURE__ */ __name(function emptySelectionMessageText() {
      return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || "";
    }, "emptySelectionMessageText"),
    selectedMessageText: /* @__PURE__ */ __name(function selectedMessageText() {
      return this.$filled ? this.selectionMessageText.replaceAll("{0}", "1") : this.emptySelectionMessageText;
    }, "selectedMessageText"),
    focusedOptionId: /* @__PURE__ */ __name(function focusedOptionId() {
      return this.focusedOptionInfo.index !== -1 ? "".concat(this.id).concat(isNotEmpty(this.focusedOptionInfo.parentKey) ? "_" + this.focusedOptionInfo.parentKey : "", "_").concat(this.focusedOptionInfo.index) : null;
    }, "focusedOptionId"),
    isClearIconVisible: /* @__PURE__ */ __name(function isClearIconVisible() {
      return this.showClear && this.d_value != null && isNotEmpty(this.options);
    }, "isClearIconVisible")
  },
  components: {
    CascadeSelectSub: script$1$E,
    Portal: script$1f,
    ChevronDownIcon: script$1k,
    SpinnerIcon: script$1r,
    AngleRightIcon: script$1q,
    TimesIcon: script$1g
  }
};
function _typeof$k(o) {
  "@babel/helpers - typeof";
  return _typeof$k = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$k(o);
}
__name(_typeof$k, "_typeof$k");
function ownKeys$i(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$i, "ownKeys$i");
function _objectSpread$i(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$i(Object(t2), true).forEach(function(r2) {
      _defineProperty$j(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$i(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$i, "_objectSpread$i");
function _defineProperty$j(e, r, t2) {
  return (r = _toPropertyKey$j(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$j, "_defineProperty$j");
function _toPropertyKey$j(t2) {
  var i = _toPrimitive$j(t2, "string");
  return "symbol" == _typeof$k(i) ? i : i + "";
}
__name(_toPropertyKey$j, "_toPropertyKey$j");
function _toPrimitive$j(t2, r) {
  if ("object" != _typeof$k(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$k(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$j, "_toPrimitive$j");
var _hoisted_1$r = ["id", "disabled", "placeholder", "tabindex", "aria-label", "aria-labelledby", "aria-expanded", "aria-controls", "aria-activedescendant", "aria-invalid"];
function render$U(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_SpinnerIcon = resolveComponent("SpinnerIcon");
  var _component_CascadeSelectSub = resolveComponent("CascadeSelectSub");
  var _component_Portal = resolveComponent("Portal");
  return openBlock(), createElementBlock("div", mergeProps({
    ref: "container",
    "class": _ctx.cx("root"),
    style: _ctx.sx("root"),
    onClick: _cache[5] || (_cache[5] = function($event) {
      return $options.onContainerClick($event);
    })
  }, _ctx.ptmi("root")), [createBaseVNode("div", mergeProps({
    "class": "p-hidden-accessible"
  }, _ctx.ptm("hiddenInputContainer"), {
    "data-p-hidden-accessible": true
  }), [createBaseVNode("input", mergeProps({
    ref: "focusInput",
    id: _ctx.inputId,
    type: "text",
    "class": _ctx.inputClass,
    style: _ctx.inputStyle,
    readonly: "",
    disabled: _ctx.disabled,
    placeholder: _ctx.placeholder,
    tabindex: !_ctx.disabled ? _ctx.tabindex : -1,
    role: "combobox",
    "aria-label": _ctx.ariaLabel,
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-haspopup": "tree",
    "aria-expanded": $data.overlayVisible,
    "aria-controls": $data.id + "_tree",
    "aria-activedescendant": $data.focused ? $options.focusedOptionId : void 0,
    "aria-invalid": _ctx.invalid || void 0,
    onFocus: _cache[0] || (_cache[0] = function() {
      return $options.onFocus && $options.onFocus.apply($options, arguments);
    }),
    onBlur: _cache[1] || (_cache[1] = function() {
      return $options.onBlur && $options.onBlur.apply($options, arguments);
    }),
    onKeydown: _cache[2] || (_cache[2] = function() {
      return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);
    })
  }, _objectSpread$i(_objectSpread$i({}, _ctx.inputProps), _ctx.ptm("hiddenInput"))), null, 16, _hoisted_1$r)], 16), createBaseVNode("span", mergeProps({
    "class": _ctx.cx("label")
  }, _ctx.ptm("label")), [renderSlot(_ctx.$slots, "value", {
    value: _ctx.d_value,
    placeholder: _ctx.placeholder
  }, function() {
    return [createTextVNode(toDisplayString($options.label), 1)];
  })], 16), $options.isClearIconVisible ? renderSlot(_ctx.$slots, "clearicon", {
    key: 0,
    "class": normalizeClass(_ctx.cx("clearIcon")),
    clearCallback: $options.onClearClick
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon ? "i" : "TimesIcon"), mergeProps({
      ref: "clearIcon",
      "class": [_ctx.cx("clearIcon"), _ctx.clearIcon],
      onClick: $options.onClearClick
    }, _ctx.ptm("clearIcon"), {
      "data-pc-section": "clearicon"
    }), null, 16, ["class", "onClick"]))];
  }) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("dropdown"),
    role: "button",
    tabindex: "-1"
  }, _ctx.ptm("dropdown")), [_ctx.loading ? renderSlot(_ctx.$slots, "loadingicon", {
    key: 0,
    "class": normalizeClass(_ctx.cx("loadingIcon"))
  }, function() {
    return [_ctx.loadingIcon ? (openBlock(), createElementBlock("span", mergeProps({
      key: 0,
      "class": [_ctx.cx("loadingIcon"), "pi-spin", _ctx.loadingIcon],
      "aria-hidden": "true"
    }, _ctx.ptm("loadingIcon")), null, 16)) : (openBlock(), createBlock(_component_SpinnerIcon, mergeProps({
      key: 1,
      "class": _ctx.cx("loadingIcon"),
      spin: "",
      "aria-hidden": "true"
    }, _ctx.ptm("loadingIcon")), null, 16, ["class"]))];
  }) : renderSlot(_ctx.$slots, "dropdownicon", {
    key: 1,
    "class": normalizeClass(_ctx.cx("dropdownIcon"))
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.dropdownIcon ? "span" : "ChevronDownIcon"), mergeProps({
      "class": [_ctx.cx("dropdownIcon"), _ctx.dropdownIcon],
      "aria-hidden": "true"
    }, _ctx.ptm("dropdownIcon")), null, 16, ["class"]))];
  })], 16), createBaseVNode("span", mergeProps({
    role: "status",
    "aria-live": "polite",
    "class": "p-hidden-accessible"
  }, _ctx.ptm("hiddenSearchResult"), {
    "data-p-hidden-accessible": true
  }), toDisplayString($options.searchResultMessageText), 17), createVNode(_component_Portal, {
    appendTo: _ctx.appendTo
  }, {
    "default": withCtx(function() {
      return [createVNode(Transition, mergeProps({
        name: "p-connected-overlay",
        onEnter: $options.onOverlayEnter,
        onAfterEnter: $options.onOverlayAfterEnter,
        onLeave: $options.onOverlayLeave,
        onAfterLeave: $options.onOverlayAfterLeave
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [$data.overlayVisible ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.overlayRef,
            "class": [_ctx.cx("overlay"), _ctx.panelClass, _ctx.overlayClass],
            style: [_ctx.panelStyle, _ctx.overlayStyle],
            onClick: _cache[3] || (_cache[3] = function() {
              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);
            }),
            onKeydown: _cache[4] || (_cache[4] = function() {
              return $options.onOverlayKeyDown && $options.onOverlayKeyDown.apply($options, arguments);
            })
          }, _objectSpread$i(_objectSpread$i(_objectSpread$i({}, _ctx.panelProps), _ctx.overlayProps), _ctx.ptm("overlay"))), [renderSlot(_ctx.$slots, "header", {
            value: _ctx.d_value,
            options: _ctx.options
          }), createBaseVNode("div", mergeProps({
            "class": _ctx.cx("listContainer")
          }, _ctx.ptm("listContainer")), [createVNode(_component_CascadeSelectSub, {
            id: $data.id + "_tree",
            role: "tree",
            "aria-orientation": "horizontal",
            selectId: $data.id,
            focusedOptionId: $data.focused ? $options.focusedOptionId : void 0,
            options: $options.processedOptions,
            activeOptionPath: $data.activeOptionPath,
            level: 0,
            templates: _ctx.$slots,
            optionLabel: _ctx.optionLabel,
            optionValue: _ctx.optionValue,
            optionDisabled: _ctx.optionDisabled,
            optionGroupIcon: _ctx.optionGroupIcon,
            optionGroupLabel: _ctx.optionGroupLabel,
            optionGroupChildren: _ctx.optionGroupChildren,
            value: _ctx.d_value,
            onOptionChange: $options.onOptionClick,
            onOptionFocusChange: $options.onOptionMouseMove,
            onOptionFocusEnterChange: $options.onOptionMouseEnter,
            pt: _ctx.pt,
            unstyled: _ctx.unstyled
          }, null, 8, ["id", "selectId", "focusedOptionId", "options", "activeOptionPath", "templates", "optionLabel", "optionValue", "optionDisabled", "optionGroupIcon", "optionGroupLabel", "optionGroupChildren", "value", "onOptionChange", "onOptionFocusChange", "onOptionFocusEnterChange", "pt", "unstyled"])], 16), createBaseVNode("span", mergeProps({
            role: "status",
            "aria-live": "polite",
            "class": "p-hidden-accessible"
          }, _ctx.ptm("hiddenSelectedMessage"), {
            "data-p-hidden-accessible": true
          }), toDisplayString($options.selectedMessageText), 17), renderSlot(_ctx.$slots, "footer", {
            value: _ctx.d_value,
            options: _ctx.options
          })], 16)) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onEnter", "onAfterEnter", "onLeave", "onAfterLeave"])];
    }),
    _: 3
  }, 8, ["appendTo"])], 16);
}
__name(render$U, "render$U");
script$10.render = render$U;
var theme$x = /* @__PURE__ */ __name(function theme7(_ref) {
  _ref.dt;
  return "\n.p-checkbox-group {\n    display: inline-flex;\n}\n";
}, "theme");
var classes$B = {
  root: "p-checkbox-group p-component"
};
var CheckboxGroupStyle = BaseStyle.extend({
  name: "checkboxgroup",
  theme: theme$x,
  classes: classes$B
});
var script$1$D = {
  name: "BaseCheckboxGroup",
  "extends": script$1s,
  style: CheckboxGroupStyle,
  provide: /* @__PURE__ */ __name(function provide12() {
    return {
      $pcCheckboxGroup: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$$ = {
  name: "CheckboxGroup",
  "extends": script$1$D,
  inheritAttrs: false,
  data: /* @__PURE__ */ __name(function data5() {
    return {
      groupName: this.name
    };
  }, "data"),
  watch: {
    name: /* @__PURE__ */ __name(function name(newValue) {
      this.groupName = newValue || uuid("checkbox-group-");
    }, "name")
  },
  mounted: /* @__PURE__ */ __name(function mounted8() {
    this.groupName = this.groupName || uuid("checkbox-group-");
  }, "mounted")
};
function render$T(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
__name(render$T, "render$T");
script$$.render = render$T;
var theme$w = /* @__PURE__ */ __name(function theme8(_ref) {
  var dt = _ref.dt;
  return "\n.p-inputchips {\n    display: inline-flex;\n}\n\n.p-inputchips-input {\n    margin: 0;\n    list-style-type: none;\n    cursor: text;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    padding: calc(".concat(dt("inputchips.padding.y"), " / 2) ").concat(dt("inputchips.padding.x"), ";\n    gap: calc(").concat(dt("inputchips.padding.y"), " / 2);\n    color: ").concat(dt("inputchips.color"), ";\n    background: ").concat(dt("inputchips.background"), ";\n    border: 1px solid ").concat(dt("inputchips.border.color"), ";\n    border-radius: ").concat(dt("inputchips.border.radius"), ";\n    width: 100%;\n    transition: background ").concat(dt("inputchips.transition.duration"), ", color ").concat(dt("inputchips.transition.duration"), ", border-color ").concat(dt("inputchips.transition.duration"), ", outline-color ").concat(dt("inputchips.transition.duration"), ", box-shadow ").concat(dt("inputchips.transition.duration"), ";\n    outline-color: transparent;\n    box-shadow: ").concat(dt("inputchips.shadow"), ";\n}\n\n.p-inputchips:not(.p-disabled):hover .p-inputchips-input {\n    border-color: ").concat(dt("inputchips.hover.border.color"), ";\n}\n\n.p-inputchips:not(.p-disabled).p-focus .p-inputchips-input {\n    border-color: ").concat(dt("inputchips.focus.border.color"), ";\n    box-shadow: ").concat(dt("inputchips.focus.ring.shadow"), ";\n    outline: ").concat(dt("inputchips.focus.ring.width"), " ").concat(dt("inputchips.focus.ring.style"), " ").concat(dt("inputchips.focus.ring.color"), ";\n    outline-offset: ").concat(dt("inputchips.focus.ring.offset"), ";\n}\n\n.p-inputchips.p-invalid .p-inputchips-input {\n    border-color: ").concat(dt("inputchips.invalid.border.color"), ";\n}\n\n.p-variant-filled.p-inputchips-input {\n    background: ").concat(dt("inputchips.filled.background"), ";\n}\n\n.p-inputchips:not(.p-disabled).p-focus .p-variant-filled.p-inputchips-input  {\n    background: ").concat(dt("inputchips.filled.focus.background"), ";\n}\n\n.p-inputchips.p-disabled .p-inputchips-input {\n    opacity: 1;\n    background: ").concat(dt("inputchips.disabled.background"), ";\n    color: ").concat(dt("inputchips.disabled.color"), ";\n}\n\n.p-inputchips-chip.p-chip {\n    padding-top: calc(").concat(dt("inputchips.padding.y"), " / 2);\n    padding-bottom: calc(").concat(dt("inputchips.padding.y"), " / 2);\n    border-radius: ").concat(dt("inputchips.chip.border.radius"), ";\n    transition: background ").concat(dt("inputchips.transition.duration"), ", color ").concat(dt("inputchips.transition.duration"), ";\n}\n\n.p-inputchips-chip-item.p-focus .p-inputchips-chip {\n    background: ").concat(dt("inputchips.chip.focus.background"), ";\n    color: ").concat(dt("inputchips.chip.focus.color"), ";\n}\n\n.p-inputchips-input:has(.p-inputchips-chip) {\n    padding-left: calc(").concat(dt("inputchips.padding.y"), " / 2);\n    padding-right: calc(").concat(dt("inputchips.padding.y"), " / 2);\n}\n\n.p-inputchips-input-item {\n    flex: 1 1 auto;\n    display: inline-flex;\n    padding-top: calc(").concat(dt("inputchips.padding.y"), " / 2);\n    padding-bottom: calc(").concat(dt("inputchips.padding.y"), " / 2);\n}\n\n.p-inputchips-input-item input {\n    border: 0 none;\n    outline: 0 none;\n    background: transparent;\n    margin: 0;\n    padding: 0;\n    box-shadow: none;\n    border-radius: 0;\n    width: 100%;\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n    color: inherit;\n}\n\n.p-inputchips-input-item input::placeholder {\n    color: ").concat(dt("inputchips.placeholder.color"), ";\n}\n");
}, "theme");
var classes$A = {
  root: /* @__PURE__ */ __name(function root8(_ref2) {
    var instance = _ref2.instance, props = _ref2.props;
    return ["p-inputchips p-component p-inputwrapper", {
      "p-disabled": props.disabled,
      "p-invalid": props.invalid,
      "p-focus": instance.focused,
      "p-inputwrapper-filled": props.modelValue && props.modelValue.length || instance.inputValue && instance.inputValue.length,
      "p-inputwrapper-focus": instance.focused
    }];
  }, "root"),
  input: /* @__PURE__ */ __name(function input(_ref3) {
    var props = _ref3.props, instance = _ref3.instance;
    return ["p-inputchips-input", {
      "p-variant-filled": props.variant ? props.variant === "filled" : instance.$primevue.config.inputStyle === "filled" || instance.$primevue.config.inputVariant === "filled"
    }];
  }, "input"),
  chipItem: /* @__PURE__ */ __name(function chipItem(_ref4) {
    var state = _ref4.state, index = _ref4.index;
    return ["p-inputchips-chip-item", {
      "p-focus": state.focusedIndex === index
    }];
  }, "chipItem"),
  pcChip: "p-inputchips-chip",
  chipIcon: "p-inputchips-chip-icon",
  inputItem: "p-inputchips-input-item"
};
var InputChipsStyle = BaseStyle.extend({
  name: "inputchips",
  theme: theme$w,
  classes: classes$A
});
var script$1$C = {
  name: "BaseInputChips",
  "extends": script$1d,
  props: {
    modelValue: {
      type: Array,
      "default": null
    },
    max: {
      type: Number,
      "default": null
    },
    separator: {
      type: [String, Object],
      "default": null
    },
    addOnBlur: {
      type: Boolean,
      "default": null
    },
    allowDuplicate: {
      type: Boolean,
      "default": true
    },
    placeholder: {
      type: String,
      "default": null
    },
    variant: {
      type: String,
      "default": null
    },
    invalid: {
      type: Boolean,
      "default": false
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    inputId: {
      type: String,
      "default": null
    },
    inputClass: {
      type: [String, Object],
      "default": null
    },
    inputStyle: {
      type: Object,
      "default": null
    },
    inputProps: {
      type: null,
      "default": null
    },
    removeTokenIcon: {
      type: String,
      "default": void 0
    },
    chipIcon: {
      type: String,
      "default": void 0
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: InputChipsStyle,
  provide: /* @__PURE__ */ __name(function provide13() {
    return {
      $pcInputChips: this,
      $parentInstance: this
    };
  }, "provide")
};
function _toConsumableArray$c(r) {
  return _arrayWithoutHoles$c(r) || _iterableToArray$c(r) || _unsupportedIterableToArray$d(r) || _nonIterableSpread$c();
}
__name(_toConsumableArray$c, "_toConsumableArray$c");
function _nonIterableSpread$c() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$c, "_nonIterableSpread$c");
function _unsupportedIterableToArray$d(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$d(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$d(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$d, "_unsupportedIterableToArray$d");
function _iterableToArray$c(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$c, "_iterableToArray$c");
function _arrayWithoutHoles$c(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$d(r);
}
__name(_arrayWithoutHoles$c, "_arrayWithoutHoles$c");
function _arrayLikeToArray$d(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$d, "_arrayLikeToArray$d");
var script$_ = {
  name: "InputChips",
  "extends": script$1$C,
  inheritAttrs: false,
  emits: ["update:modelValue", "add", "remove", "focus", "blur"],
  data: /* @__PURE__ */ __name(function data6() {
    return {
      id: this.$attrs.id,
      inputValue: null,
      focused: false,
      focusedIndex: null
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId3(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId")
  },
  mounted: /* @__PURE__ */ __name(function mounted9() {
    console.warn("Deprecated since v4. Use AutoComplete component instead with its typeahead property.");
    this.id = this.id || UniqueComponentId();
  }, "mounted"),
  methods: {
    onWrapperClick: /* @__PURE__ */ __name(function onWrapperClick() {
      this.$refs.input.focus();
    }, "onWrapperClick"),
    onInput: /* @__PURE__ */ __name(function onInput2(event2) {
      this.inputValue = event2.target.value;
      this.focusedIndex = null;
    }, "onInput"),
    onFocus: /* @__PURE__ */ __name(function onFocus4(event2) {
      this.focused = true;
      this.focusedIndex = null;
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur3(event2) {
      this.focused = false;
      this.focusedIndex = null;
      if (this.addOnBlur) {
        this.addItem(event2, event2.target.value, false);
      }
      this.$emit("blur", event2);
    }, "onBlur"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown3(event2) {
      var inputValue = event2.target.value;
      switch (event2.code) {
        case "Backspace":
          if (inputValue.length === 0 && this.modelValue && this.modelValue.length > 0) {
            if (this.focusedIndex !== null) {
              this.removeItem(event2, this.focusedIndex);
            } else this.removeItem(event2, this.modelValue.length - 1);
          }
          break;
        case "Enter":
        case "NumpadEnter":
          if (inputValue && inputValue.trim().length && !this.maxedOut) {
            this.addItem(event2, inputValue, true);
          }
          break;
        case "ArrowLeft":
          if (inputValue.length === 0 && this.modelValue && this.modelValue.length > 0) {
            this.$refs.container.focus();
          }
          break;
        case "ArrowRight":
          event2.stopPropagation();
          break;
        default:
          if (this.separator) {
            if (this.separator === event2.key || event2.key.match(this.separator)) {
              this.addItem(event2, inputValue, true);
            }
          }
          break;
      }
    }, "onKeyDown"),
    onPaste: /* @__PURE__ */ __name(function onPaste(event2) {
      var _this = this;
      if (this.separator) {
        var separator = this.separator.replace("\\n", "\n").replace("\\r", "\r").replace("\\t", "	");
        var pastedData = (event2.clipboardData || window["clipboardData"]).getData("Text");
        if (pastedData) {
          var value2 = this.modelValue || [];
          var pastedValues = pastedData.split(separator);
          pastedValues = pastedValues.filter(function(val) {
            return _this.allowDuplicate || value2.indexOf(val) === -1;
          });
          value2 = [].concat(_toConsumableArray$c(value2), _toConsumableArray$c(pastedValues));
          this.updateModel(event2, value2, true);
        }
      }
    }, "onPaste"),
    onContainerFocus: /* @__PURE__ */ __name(function onContainerFocus() {
      this.focused = true;
    }, "onContainerFocus"),
    onContainerBlur: /* @__PURE__ */ __name(function onContainerBlur() {
      this.focusedIndex = -1;
      this.focused = false;
    }, "onContainerBlur"),
    onContainerKeyDown: /* @__PURE__ */ __name(function onContainerKeyDown(event2) {
      switch (event2.code) {
        case "ArrowLeft":
          this.onArrowLeftKeyOn(event2);
          break;
        case "ArrowRight":
          this.onArrowRightKeyOn(event2);
          break;
        case "Backspace":
          this.onBackspaceKeyOn(event2);
          break;
      }
    }, "onContainerKeyDown"),
    onArrowLeftKeyOn: /* @__PURE__ */ __name(function onArrowLeftKeyOn() {
      if (this.inputValue.length === 0 && this.modelValue && this.modelValue.length > 0) {
        this.focusedIndex = this.focusedIndex === null ? this.modelValue.length - 1 : this.focusedIndex - 1;
        if (this.focusedIndex < 0) this.focusedIndex = 0;
      }
    }, "onArrowLeftKeyOn"),
    onArrowRightKeyOn: /* @__PURE__ */ __name(function onArrowRightKeyOn() {
      if (this.inputValue.length === 0 && this.modelValue && this.modelValue.length > 0) {
        if (this.focusedIndex === this.modelValue.length - 1) {
          this.focusedIndex = null;
          this.$refs.input.focus();
        } else {
          this.focusedIndex++;
        }
      }
    }, "onArrowRightKeyOn"),
    onBackspaceKeyOn: /* @__PURE__ */ __name(function onBackspaceKeyOn(event2) {
      if (this.focusedIndex !== null) {
        this.removeItem(event2, this.focusedIndex);
      }
    }, "onBackspaceKeyOn"),
    updateModel: /* @__PURE__ */ __name(function updateModel3(event2, value2, preventDefault) {
      var _this2 = this;
      this.$emit("update:modelValue", value2);
      this.$emit("add", {
        originalEvent: event2,
        value: value2
      });
      this.$refs.input.value = "";
      this.inputValue = "";
      setTimeout(function() {
        _this2.maxedOut && (_this2.focused = false);
      }, 0);
      if (preventDefault) {
        event2.preventDefault();
      }
    }, "updateModel"),
    addItem: /* @__PURE__ */ __name(function addItem(event2, item8, preventDefault) {
      if (item8 && item8.trim().length) {
        var value2 = this.modelValue ? _toConsumableArray$c(this.modelValue) : [];
        if (this.allowDuplicate || value2.indexOf(item8) === -1) {
          value2.push(item8);
          this.updateModel(event2, value2, preventDefault);
        }
      }
    }, "addItem"),
    removeItem: /* @__PURE__ */ __name(function removeItem(event2, index) {
      if (this.disabled) {
        return;
      }
      var values = _toConsumableArray$c(this.modelValue);
      var removedItem = values.splice(index, 1);
      this.focusedIndex = null;
      this.$refs.input.focus();
      this.$emit("update:modelValue", values);
      this.$emit("remove", {
        originalEvent: event2,
        value: removedItem
      });
    }, "removeItem")
  },
  computed: {
    maxedOut: /* @__PURE__ */ __name(function maxedOut() {
      return this.max && this.modelValue && this.max === this.modelValue.length;
    }, "maxedOut"),
    focusedOptionId: /* @__PURE__ */ __name(function focusedOptionId2() {
      return this.focusedIndex !== null ? "".concat(this.id, "_inputchips_item_").concat(this.focusedIndex) : null;
    }, "focusedOptionId")
  },
  components: {
    Chip: script$1t
  }
};
function _typeof$j(o) {
  "@babel/helpers - typeof";
  return _typeof$j = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$j(o);
}
__name(_typeof$j, "_typeof$j");
function ownKeys$h(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$h, "ownKeys$h");
function _objectSpread$h(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$h(Object(t2), true).forEach(function(r2) {
      _defineProperty$i(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$h(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$h, "_objectSpread$h");
function _defineProperty$i(e, r, t2) {
  return (r = _toPropertyKey$i(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$i, "_defineProperty$i");
function _toPropertyKey$i(t2) {
  var i = _toPrimitive$i(t2, "string");
  return "symbol" == _typeof$j(i) ? i : i + "";
}
__name(_toPropertyKey$i, "_toPropertyKey$i");
function _toPrimitive$i(t2, r) {
  if ("object" != _typeof$j(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$j(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$i, "_toPrimitive$i");
var _hoisted_1$q = ["aria-labelledby", "aria-label", "aria-activedescendant"];
var _hoisted_2$j = ["id", "aria-label", "aria-setsize", "aria-posinset", "data-p-focused"];
var _hoisted_3$g = ["id", "disabled", "placeholder", "aria-invalid"];
function render$S(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Chip = resolveComponent("Chip");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createBaseVNode("ul", mergeProps({
    ref: "container",
    "class": _ctx.cx("input"),
    tabindex: "-1",
    role: "listbox",
    "aria-orientation": "horizontal",
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel,
    "aria-activedescendant": $data.focused ? $options.focusedOptionId : void 0,
    onClick: _cache[5] || (_cache[5] = function($event) {
      return $options.onWrapperClick();
    }),
    onFocus: _cache[6] || (_cache[6] = function() {
      return $options.onContainerFocus && $options.onContainerFocus.apply($options, arguments);
    }),
    onBlur: _cache[7] || (_cache[7] = function() {
      return $options.onContainerBlur && $options.onContainerBlur.apply($options, arguments);
    }),
    onKeydown: _cache[8] || (_cache[8] = function() {
      return $options.onContainerKeyDown && $options.onContainerKeyDown.apply($options, arguments);
    })
  }, _ctx.ptm("input")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.modelValue, function(val, i) {
    return openBlock(), createElementBlock("li", mergeProps({
      key: "".concat(i, "_").concat(val),
      id: $data.id + "_inputchips_item_" + i,
      role: "option",
      "class": _ctx.cx("chipItem", {
        index: i
      }),
      "aria-label": val,
      "aria-selected": true,
      "aria-setsize": _ctx.modelValue.length,
      "aria-posinset": i + 1,
      ref_for: true
    }, _ctx.ptm("chipItem"), {
      "data-p-focused": $data.focusedIndex === i
    }), [renderSlot(_ctx.$slots, "chip", {
      "class": normalizeClass(_ctx.cx("pcChip")),
      index: i,
      value: val,
      removeCallback: /* @__PURE__ */ __name(function removeCallback(event2) {
        return _ctx.removeOption(event2, i);
      }, "removeCallback")
    }, function() {
      return [createVNode(_component_Chip, {
        "class": normalizeClass(_ctx.cx("pcChip")),
        label: val,
        removeIcon: _ctx.chipIcon || _ctx.removeTokenIcon,
        removable: "",
        unstyled: _ctx.unstyled,
        onRemove: /* @__PURE__ */ __name(function onRemove($event) {
          return $options.removeItem($event, i);
        }, "onRemove"),
        pt: _ctx.ptm("pcChip")
      }, {
        removeicon: withCtx(function() {
          return [renderSlot(_ctx.$slots, _ctx.$slots.chipicon ? "chipicon" : "removetokenicon", {
            "class": normalizeClass(_ctx.cx("chipIcon")),
            index: i,
            removeCallback: /* @__PURE__ */ __name(function removeCallback(event2) {
              return $options.removeItem(event2, i);
            }, "removeCallback")
          })];
        }),
        _: 2
      }, 1032, ["class", "label", "removeIcon", "unstyled", "onRemove", "pt"])];
    })], 16, _hoisted_2$j);
  }), 128)), createBaseVNode("li", mergeProps({
    "class": _ctx.cx("inputItem"),
    role: "option"
  }, _ctx.ptm("inputItem")), [createBaseVNode("input", mergeProps({
    ref: "input",
    id: _ctx.inputId,
    type: "text",
    "class": _ctx.inputClass,
    style: _ctx.inputStyle,
    disabled: _ctx.disabled || $options.maxedOut,
    placeholder: _ctx.placeholder,
    "aria-invalid": _ctx.invalid || void 0,
    onFocus: _cache[0] || (_cache[0] = function($event) {
      return $options.onFocus($event);
    }),
    onBlur: _cache[1] || (_cache[1] = function($event) {
      return $options.onBlur($event);
    }),
    onInput: _cache[2] || (_cache[2] = function() {
      return $options.onInput && $options.onInput.apply($options, arguments);
    }),
    onKeydown: _cache[3] || (_cache[3] = function($event) {
      return $options.onKeyDown($event);
    }),
    onPaste: _cache[4] || (_cache[4] = function($event) {
      return $options.onPaste($event);
    })
  }, _objectSpread$h(_objectSpread$h({}, _ctx.inputProps), _ctx.ptm("inputItemField"))), null, 16, _hoisted_3$g)], 16)], 16, _hoisted_1$q)], 16);
}
__name(render$S, "render$S");
script$_.render = render$S;
var script$Z = {
  name: "Chips",
  "extends": script$_,
  mounted: /* @__PURE__ */ __name(function mounted10() {
    console.warn("Deprecated since v4. Use InputChips component instead.");
  }, "mounted")
};
var ChipsStyle = BaseStyle.extend({
  name: "chips"
});
var ColumnGroupStyle = BaseStyle.extend({
  name: "columngroup"
});
var script$1$B = {
  name: "BaseColumnGroup",
  "extends": script$1d,
  props: {
    type: {
      type: String,
      "default": null
    }
  },
  style: ColumnGroupStyle,
  provide: /* @__PURE__ */ __name(function provide14() {
    return {
      $pcColumnGroup: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$Y = {
  name: "ColumnGroup",
  "extends": script$1$B,
  inheritAttrs: false,
  inject: ["$columnGroups"],
  mounted: /* @__PURE__ */ __name(function mounted11() {
    var _this$$columnGroups;
    (_this$$columnGroups = this.$columnGroups) === null || _this$$columnGroups === void 0 || _this$$columnGroups.add(this.$);
  }, "mounted"),
  unmounted: /* @__PURE__ */ __name(function unmounted2() {
    var _this$$columnGroups2;
    (_this$$columnGroups2 = this.$columnGroups) === null || _this$$columnGroups2 === void 0 || _this$$columnGroups2["delete"](this.$);
  }, "unmounted"),
  render: /* @__PURE__ */ __name(function render() {
    return null;
  }, "render")
};
var theme$v = /* @__PURE__ */ __name(function theme9(_ref) {
  var dt = _ref.dt;
  return "\n.p-dataview {\n    border-color: ".concat(dt("dataview.border.color"), ";\n    border-width: ").concat(dt("dataview.border.width"), ";\n    border-style: solid;\n    border-radius: ").concat(dt("dataview.border.radius"), ";\n    padding: ").concat(dt("dataview.padding"), ";\n}\n\n.p-dataview-header {\n    background: ").concat(dt("dataview.header.background"), ";\n    color: ").concat(dt("dataview.header.color"), ";\n    border-color: ").concat(dt("dataview.header.border.color"), ";\n    border-width: ").concat(dt("dataview.header.border.width"), ";\n    border-style: solid;\n    padding: ").concat(dt("dataview.header.padding"), ";\n    border-radius: ").concat(dt("dataview.header.border.radius"), ";\n}\n\n.p-dataview-content {\n    background: ").concat(dt("dataview.content.background"), ";\n    border-color: ").concat(dt("dataview.content.border.color"), ";\n    border-width: ").concat(dt("dataview.content.border.width"), ";\n    border-style: solid;\n    color: ").concat(dt("dataview.content.color"), ";\n    padding: ").concat(dt("dataview.content.padding"), ";\n    border-radius: ").concat(dt("dataview.content.border.radius"), ";\n}\n\n.p-dataview-footer {\n    background: ").concat(dt("dataview.footer.background"), ";\n    color: ").concat(dt("dataview.footer.color"), ";\n    border-color: ").concat(dt("dataview.footer.border.color"), ";\n    border-width: ").concat(dt("dataview.footer.border.width"), ";\n    border-style: solid;\n    padding: ").concat(dt("dataview.footer.padding"), ";\n    border-radius: ").concat(dt("dataview.footer.border.radius"), ";\n}\n\n.p-dataview-paginator-top {\n    border-width: ").concat(dt("dataview.paginator.top.border.width"), ";\n    border-color: ").concat(dt("dataview.paginator.top.border.color"), ";\n    border-style: solid;\n}\n\n.p-dataview-paginator-bottom {\n    border-width: ").concat(dt("dataview.paginator.bottom.border.width"), ";\n    border-color: ").concat(dt("dataview.paginator.bottom.border.color"), ";\n    border-style: solid;\n}\n");
}, "theme");
var classes$z = {
  root: /* @__PURE__ */ __name(function root9(_ref2) {
    var props = _ref2.props;
    return ["p-dataview p-component", {
      "p-dataview-list": props.layout === "list",
      "p-dataview-grid": props.layout === "grid"
    }];
  }, "root"),
  header: "p-dataview-header",
  pcPaginator: /* @__PURE__ */ __name(function pcPaginator(_ref3) {
    var position = _ref3.position;
    return "p-dataview-paginator-" + position;
  }, "pcPaginator"),
  content: "p-dataview-content",
  emptyMessage: "p-dataview-empty-message",
  // TODO: remove?
  footer: "p-dataview-footer"
};
var DataViewStyle = BaseStyle.extend({
  name: "dataview",
  theme: theme$v,
  classes: classes$z
});
var script$1$A = {
  name: "BaseDataView",
  "extends": script$1d,
  props: {
    value: {
      type: Array,
      "default": null
    },
    layout: {
      type: String,
      "default": "list"
    },
    rows: {
      type: Number,
      "default": 0
    },
    first: {
      type: Number,
      "default": 0
    },
    totalRecords: {
      type: Number,
      "default": 0
    },
    paginator: {
      type: Boolean,
      "default": false
    },
    paginatorPosition: {
      type: String,
      "default": "bottom"
    },
    alwaysShowPaginator: {
      type: Boolean,
      "default": true
    },
    paginatorTemplate: {
      type: String,
      "default": "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown"
    },
    pageLinkSize: {
      type: Number,
      "default": 5
    },
    rowsPerPageOptions: {
      type: Array,
      "default": null
    },
    currentPageReportTemplate: {
      type: String,
      "default": "({currentPage} of {totalPages})"
    },
    sortField: {
      type: [String, Function],
      "default": null
    },
    sortOrder: {
      type: Number,
      "default": null
    },
    lazy: {
      type: Boolean,
      "default": false
    },
    dataKey: {
      type: String,
      "default": null
    }
  },
  style: DataViewStyle,
  provide: /* @__PURE__ */ __name(function provide15() {
    return {
      $pcDataView: this,
      $parentInstance: this
    };
  }, "provide")
};
function _toConsumableArray$b(r) {
  return _arrayWithoutHoles$b(r) || _iterableToArray$b(r) || _unsupportedIterableToArray$c(r) || _nonIterableSpread$b();
}
__name(_toConsumableArray$b, "_toConsumableArray$b");
function _nonIterableSpread$b() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$b, "_nonIterableSpread$b");
function _unsupportedIterableToArray$c(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$c(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$c(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$c, "_unsupportedIterableToArray$c");
function _iterableToArray$b(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$b, "_iterableToArray$b");
function _arrayWithoutHoles$b(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$c(r);
}
__name(_arrayWithoutHoles$b, "_arrayWithoutHoles$b");
function _arrayLikeToArray$c(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$c, "_arrayLikeToArray$c");
var script$X = {
  name: "DataView",
  "extends": script$1$A,
  inheritAttrs: false,
  emits: ["update:first", "update:rows", "page"],
  data: /* @__PURE__ */ __name(function data7() {
    return {
      d_first: this.first,
      d_rows: this.rows
    };
  }, "data"),
  watch: {
    first: /* @__PURE__ */ __name(function first(newValue) {
      this.d_first = newValue;
    }, "first"),
    rows: /* @__PURE__ */ __name(function rows(newValue) {
      this.d_rows = newValue;
    }, "rows"),
    sortField: /* @__PURE__ */ __name(function sortField() {
      this.resetPage();
    }, "sortField"),
    sortOrder: /* @__PURE__ */ __name(function sortOrder() {
      this.resetPage();
    }, "sortOrder")
  },
  methods: {
    getKey: /* @__PURE__ */ __name(function getKey2(item8, index) {
      return this.dataKey ? resolveFieldData(item8, this.dataKey) : index;
    }, "getKey"),
    onPage: /* @__PURE__ */ __name(function onPage(event2) {
      this.d_first = event2.first;
      this.d_rows = event2.rows;
      this.$emit("update:first", this.d_first);
      this.$emit("update:rows", this.d_rows);
      this.$emit("page", event2);
    }, "onPage"),
    sort: /* @__PURE__ */ __name(function sort$1() {
      var _this = this;
      if (this.value) {
        var value2 = _toConsumableArray$b(this.value);
        var comparer = localeComparator();
        value2.sort(function(data1, data210) {
          var value1 = resolveFieldData(data1, _this.sortField);
          var value22 = resolveFieldData(data210, _this.sortField);
          return sort(value1, value22, _this.sortOrder, comparer);
        });
        return value2;
      } else {
        return null;
      }
    }, "sort$1"),
    resetPage: /* @__PURE__ */ __name(function resetPage() {
      this.d_first = 0;
      this.$emit("update:first", this.d_first);
    }, "resetPage")
  },
  computed: {
    getTotalRecords: /* @__PURE__ */ __name(function getTotalRecords() {
      if (this.totalRecords) return this.totalRecords;
      else return this.value ? this.value.length : 0;
    }, "getTotalRecords"),
    empty: /* @__PURE__ */ __name(function empty() {
      return !this.value || this.value.length === 0;
    }, "empty"),
    emptyMessageText: /* @__PURE__ */ __name(function emptyMessageText2() {
      var _this$$primevue$confi;
      return ((_this$$primevue$confi = this.$primevue.config) === null || _this$$primevue$confi === void 0 || (_this$$primevue$confi = _this$$primevue$confi.locale) === null || _this$$primevue$confi === void 0 ? void 0 : _this$$primevue$confi.emptyMessage) || "";
    }, "emptyMessageText"),
    paginatorTop: /* @__PURE__ */ __name(function paginatorTop() {
      return this.paginator && (this.paginatorPosition !== "bottom" || this.paginatorPosition === "both");
    }, "paginatorTop"),
    paginatorBottom: /* @__PURE__ */ __name(function paginatorBottom() {
      return this.paginator && (this.paginatorPosition !== "top" || this.paginatorPosition === "both");
    }, "paginatorBottom"),
    items: /* @__PURE__ */ __name(function items() {
      if (this.value && this.value.length) {
        var data41 = this.value;
        if (data41 && data41.length && this.sortField) {
          data41 = this.sort();
        }
        if (this.paginator) {
          var first3 = this.lazy ? 0 : this.d_first;
          return data41.slice(first3, first3 + this.d_rows);
        } else {
          return data41;
        }
      } else {
        return null;
      }
    }, "items")
  },
  components: {
    DVPaginator: script$1u
  }
};
function render$R(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_DVPaginator = resolveComponent("DVPaginator");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [_ctx.$slots.header ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": _ctx.cx("header")
  }, _ctx.ptm("header")), [renderSlot(_ctx.$slots, "header")], 16)) : createCommentVNode("", true), $options.paginatorTop ? (openBlock(), createBlock(_component_DVPaginator, {
    key: 1,
    rows: $data.d_rows,
    first: $data.d_first,
    totalRecords: $options.getTotalRecords,
    pageLinkSize: _ctx.pageLinkSize,
    template: _ctx.paginatorTemplate,
    rowsPerPageOptions: _ctx.rowsPerPageOptions,
    currentPageReportTemplate: _ctx.currentPageReportTemplate,
    "class": normalizeClass(_ctx.cx("pcPaginator", {
      position: "top"
    })),
    alwaysShow: _ctx.alwaysShowPaginator,
    onPage: _cache[0] || (_cache[0] = function($event) {
      return $options.onPage($event);
    }),
    unstyled: _ctx.unstyled,
    pt: _ctx.ptm("pcPaginator")
  }, createSlots({
    _: 2
  }, [_ctx.$slots.paginatorcontainer ? {
    name: "container",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorcontainer", {
        first: slotProps.first,
        last: slotProps.last,
        rows: slotProps.rows,
        page: slotProps.page,
        pageCount: slotProps.pageCount,
        totalRecords: slotProps.totalRecords,
        firstPageCallback: slotProps.firstPageCallback,
        lastPageCallback: slotProps.lastPageCallback,
        prevPageCallback: slotProps.prevPageCallback,
        nextPageCallback: slotProps.nextPageCallback,
        rowChangeCallback: slotProps.rowChangeCallback
      })];
    }),
    key: "0"
  } : void 0, _ctx.$slots.paginatorstart ? {
    name: "start",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorstart")];
    }),
    key: "1"
  } : void 0, _ctx.$slots.paginatorend ? {
    name: "end",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorend")];
    }),
    key: "2"
  } : void 0]), 1032, ["rows", "first", "totalRecords", "pageLinkSize", "template", "rowsPerPageOptions", "currentPageReportTemplate", "class", "alwaysShow", "unstyled", "pt"])) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("content")
  }, _ctx.ptm("content")), [!$options.empty ? (openBlock(), createElementBlock(Fragment, {
    key: 0
  }, [_ctx.$slots.list && _ctx.layout === "list" ? renderSlot(_ctx.$slots, "list", {
    key: 0,
    items: $options.items
  }) : createCommentVNode("", true), _ctx.$slots.grid && _ctx.layout === "grid" ? renderSlot(_ctx.$slots, "grid", {
    key: 1,
    items: $options.items
  }) : createCommentVNode("", true)], 64)) : (openBlock(), createElementBlock("div", mergeProps({
    key: 1,
    "class": _ctx.cx("emptyMessage")
  }, _ctx.ptm("emptyMessage")), [renderSlot(_ctx.$slots, "empty", {
    layout: _ctx.layout
  }, function() {
    return [createTextVNode(toDisplayString($options.emptyMessageText), 1)];
  })], 16))], 16), $options.paginatorBottom ? (openBlock(), createBlock(_component_DVPaginator, {
    key: 2,
    rows: $data.d_rows,
    first: $data.d_first,
    totalRecords: $options.getTotalRecords,
    pageLinkSize: _ctx.pageLinkSize,
    template: _ctx.paginatorTemplate,
    rowsPerPageOptions: _ctx.rowsPerPageOptions,
    currentPageReportTemplate: _ctx.currentPageReportTemplate,
    "class": normalizeClass(_ctx.cx("pcPaginator", {
      position: "bottom"
    })),
    alwaysShow: _ctx.alwaysShowPaginator,
    onPage: _cache[1] || (_cache[1] = function($event) {
      return $options.onPage($event);
    }),
    unstyled: _ctx.unstyled,
    pt: _ctx.ptm("pcPaginator")
  }, createSlots({
    _: 2
  }, [_ctx.$slots.paginatorcontainer ? {
    name: "container",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorcontainer", {
        first: slotProps.first,
        last: slotProps.last,
        rows: slotProps.rows,
        page: slotProps.page,
        pageCount: slotProps.pageCount,
        totalRecords: slotProps.totalRecords,
        firstPageCallback: slotProps.firstPageCallback,
        lastPageCallback: slotProps.lastPageCallback,
        prevPageCallback: slotProps.prevPageCallback,
        nextPageCallback: slotProps.nextPageCallback,
        rowChangeCallback: slotProps.rowChangeCallback
      })];
    }),
    key: "0"
  } : void 0, _ctx.$slots.paginatorstart ? {
    name: "start",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorstart")];
    }),
    key: "1"
  } : void 0, _ctx.$slots.paginatorend ? {
    name: "end",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorend")];
    }),
    key: "2"
  } : void 0]), 1032, ["rows", "first", "totalRecords", "pageLinkSize", "template", "rowsPerPageOptions", "currentPageReportTemplate", "class", "alwaysShow", "unstyled", "pt"])) : createCommentVNode("", true), _ctx.$slots.footer ? (openBlock(), createElementBlock("div", mergeProps({
    key: 3,
    "class": _ctx.cx("footer")
  }, _ctx.ptm("footer")), [renderSlot(_ctx.$slots, "footer")], 16)) : createCommentVNode("", true)], 16);
}
__name(render$R, "render$R");
script$X.render = render$R;
var DeferredContentStyle = BaseStyle.extend({
  name: "deferredcontent"
});
var script$W = {
  name: "DeferredContent",
  "extends": script$1d,
  inheritAttrs: false,
  emits: ["load"],
  style: DeferredContentStyle,
  data: /* @__PURE__ */ __name(function data8() {
    return {
      loaded: false
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted12() {
    if (!this.loaded) {
      if (this.shouldLoad()) this.load();
      else this.bindScrollListener();
    }
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount4() {
    this.unbindScrollListener();
  }, "beforeUnmount"),
  methods: {
    bindScrollListener: /* @__PURE__ */ __name(function bindScrollListener3() {
      var _this = this;
      this.documentScrollListener = function() {
        if (_this.shouldLoad()) {
          _this.load();
          _this.unbindScrollListener();
        }
      };
      window.addEventListener("scroll", this.documentScrollListener);
    }, "bindScrollListener"),
    unbindScrollListener: /* @__PURE__ */ __name(function unbindScrollListener3() {
      if (this.documentScrollListener) {
        window.removeEventListener("scroll", this.documentScrollListener);
        this.documentScrollListener = null;
      }
    }, "unbindScrollListener"),
    shouldLoad: /* @__PURE__ */ __name(function shouldLoad() {
      if (this.loaded) {
        return false;
      } else {
        var rect = this.$refs.container.getBoundingClientRect();
        var docElement = document.documentElement;
        var winHeight = docElement.clientHeight;
        return winHeight >= rect.top;
      }
    }, "shouldLoad"),
    load: /* @__PURE__ */ __name(function load(event2) {
      this.loaded = true;
      this.$emit("load", event2);
    }, "load")
  }
};
function render$Q(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    ref: "container"
  }, _ctx.ptmi("root")), [$data.loaded ? renderSlot(_ctx.$slots, "default", {
    key: 0
  }) : createCommentVNode("", true)], 16);
}
__name(render$Q, "render$Q");
script$W.render = render$Q;
var DynamicDialogEventBus = EventBus();
var DialogService = {
  install: /* @__PURE__ */ __name(function install(app) {
    var DialogService2 = {
      open: /* @__PURE__ */ __name(function open2(content, options4) {
        var instance = {
          content: content && markRaw(content),
          options: options4 || {},
          data: options4 && options4.data,
          close: /* @__PURE__ */ __name(function close2(params) {
            DynamicDialogEventBus.emit("close", {
              instance,
              params
            });
          }, "close")
        };
        DynamicDialogEventBus.emit("open", {
          instance
        });
        return instance;
      }, "open")
    };
    app.config.globalProperties.$dialog = DialogService2;
    app.provide(PrimeVueDialogSymbol, DialogService2);
  }, "install")
};
var theme$u = /* @__PURE__ */ __name(function theme10(_ref) {
  var dt = _ref.dt;
  return "\n.p-dock {\n    position: absolute;\n    z-index: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    pointer-events: none;\n}\n\n.p-dock-list-container {\n    display: flex;\n    pointer-events: auto;\n    background: ".concat(dt("dock.background"), ";\n    border: 1px solid ").concat(dt("dock.border.color"), ";\n    padding: ").concat(dt("dock.padding"), ";\n    border-radius: ").concat(dt("dock.border.radius"), ";\n}\n\n.p-dock-list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    outline: 0 none;\n}\n\n.p-dock-item {\n    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n    will-change: transform;\n    padding: ").concat(dt("dock.item.padding"), ";\n    border-radius: ").concat(dt("dock.item.border.radius"), ";\n}\n\n.p-dock-item.p-focus {\n    box-shadow: ").concat(dt("dock.item.focus.ring.shadow"), ";\n    outline: ").concat(dt("dock.item.focus.ring.width"), " ").concat(dt("dock.item.focus.ring.style"), " ").concat(dt("dock.item.focus.ring.color"), ";\n    outline-offset: ").concat(dt("dock.item.focus.ring.offset"), ";\n}\n\n.p-dock-item-link {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    overflow: hidden;\n    cursor: default;\n    width: ").concat(dt("dock.item.size"), ";\n    height: ").concat(dt("dock.item.size"), ";\n}\n\n.p-dock-top {\n    left: 0;\n    top: 0;\n    width: 100%;\n}\n\n.p-dock-bottom {\n    left: 0;\n    bottom: 0;\n    width: 100%;\n}\n\n.p-dock-right {\n    right: 0;\n    top: 0;\n    height: 100%;\n}\n\n.p-dock-right .p-dock-list {\n    flex-direction: column;\n}\n\n.p-dock-left {\n    left: 0;\n    top: 0;\n    height: 100%;\n}\n\n.p-dock-left .p-dock-list {\n    flex-direction: column;\n}\n\n.p-dock-mobile.p-dock-top .p-dock-list-container,\n.p-dock-mobile.p-dock-bottom .p-dock-list-container {\n    overflow-x: auto;\n    width: 100%;\n}\n\n.p-dock-mobile.p-dock-top .p-dock-list-container .p-dock-list,\n.p-dock-mobile.p-dock-bottom .p-dock-list-container .p-dock-list {\n    margin: 0 auto;\n}\n\n.p-dock-mobile.p-dock-left .p-dock-list-container,\n.p-dock-mobile.p-dock-right .p-dock-list-container {\n    overflow-y: auto;\n    height: 100%;\n}\n\n.p-dock-mobile.p-dock-left .p-dock-list-container .p-dock-list,\n.p-dock-mobile.p-dock-right .p-dock-list-container .p-dock-list {\n    margin: auto 0;\n}\n\n.p-dock-mobile .p-dock-list .p-dock-item {\n    transform: none;\n    margin: 0;\n}\n");
}, "theme");
var classes$y = {
  root: /* @__PURE__ */ __name(function root10(_ref2) {
    var instance = _ref2.instance, props = _ref2.props;
    return ["p-dock p-component", "p-dock-".concat(props.position), {
      "p-dock-mobile": instance.queryMatches
    }];
  }, "root"),
  listContainer: "p-dock-list-container",
  list: "p-dock-list",
  item: /* @__PURE__ */ __name(function item2(_ref3) {
    var instance = _ref3.instance, processedItem = _ref3.processedItem, id4 = _ref3.id;
    return ["p-dock-item", {
      "p-focus": instance.isItemActive(id4),
      "p-disabled": instance.disabled(processedItem)
    }];
  }, "item"),
  itemContent: "p-dock-item-content",
  itemLink: "p-dock-item-link",
  itemIcon: "p-dock-item-icon"
};
var DockStyle = BaseStyle.extend({
  name: "dock",
  theme: theme$u,
  classes: classes$y
});
var script$2$7 = {
  name: "BaseDock",
  "extends": script$1d,
  props: {
    position: {
      type: String,
      "default": "bottom"
    },
    model: null,
    "class": null,
    style: null,
    tooltipOptions: null,
    menuId: {
      type: String,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    breakpoint: {
      type: String,
      "default": "960px"
    },
    ariaLabel: {
      type: String,
      "default": null
    },
    ariaLabelledby: {
      type: String,
      "default": null
    }
  },
  style: DockStyle,
  provide: /* @__PURE__ */ __name(function provide16() {
    return {
      $pcDock: this,
      $parentInstance: this
    };
  }, "provide")
};
function _toConsumableArray$a(r) {
  return _arrayWithoutHoles$a(r) || _iterableToArray$a(r) || _unsupportedIterableToArray$b(r) || _nonIterableSpread$a();
}
__name(_toConsumableArray$a, "_toConsumableArray$a");
function _nonIterableSpread$a() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$a, "_nonIterableSpread$a");
function _unsupportedIterableToArray$b(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$b(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$b(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$b, "_unsupportedIterableToArray$b");
function _iterableToArray$a(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$a, "_iterableToArray$a");
function _arrayWithoutHoles$a(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$b(r);
}
__name(_arrayWithoutHoles$a, "_arrayWithoutHoles$a");
function _arrayLikeToArray$b(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$b, "_arrayLikeToArray$b");
var script$1$z = {
  name: "DockSub",
  hostName: "Dock",
  "extends": script$1d,
  emits: ["focus", "blur"],
  props: {
    position: {
      type: String,
      "default": "bottom"
    },
    model: {
      type: Array,
      "default": null
    },
    templates: {
      type: null,
      "default": null
    },
    tooltipOptions: null,
    menuId: {
      type: String,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    ariaLabel: {
      type: String,
      "default": null
    },
    ariaLabelledby: {
      type: String,
      "default": null
    }
  },
  data: /* @__PURE__ */ __name(function data9() {
    return {
      id: this.menuId,
      currentIndex: -3,
      focused: false,
      focusedOptionIndex: -1
    };
  }, "data"),
  watch: {
    menuId: /* @__PURE__ */ __name(function menuId(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "menuId")
  },
  mounted: /* @__PURE__ */ __name(function mounted13() {
    this.id = this.id || UniqueComponentId();
  }, "mounted"),
  methods: {
    getItemId: /* @__PURE__ */ __name(function getItemId(index) {
      return "".concat(this.id, "_").concat(index);
    }, "getItemId"),
    getItemProp: /* @__PURE__ */ __name(function getItemProp(processedItem, name4) {
      return processedItem && processedItem.item ? resolve(processedItem.item[name4]) : void 0;
    }, "getItemProp"),
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions2(key, item8, index) {
      return this.ptm(key, {
        context: {
          index,
          item: item8,
          active: this.isItemActive(this.getItemId(index))
        }
      });
    }, "getPTOptions"),
    isSameMenuItem: /* @__PURE__ */ __name(function isSameMenuItem(event2) {
      return event2.currentTarget && (event2.currentTarget.isSameNode(event2.target) || event2.currentTarget.isSameNode(event2.target.closest('[data-pc-section="item"]')));
    }, "isSameMenuItem"),
    isItemActive: /* @__PURE__ */ __name(function isItemActive2(id4) {
      return id4 === this.focusedOptionIndex;
    }, "isItemActive"),
    onListMouseLeave: /* @__PURE__ */ __name(function onListMouseLeave() {
      this.currentIndex = -3;
    }, "onListMouseLeave"),
    onItemMouseEnter: /* @__PURE__ */ __name(function onItemMouseEnter(index) {
      this.currentIndex = index;
    }, "onItemMouseEnter"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick(event2, processedItem) {
      if (this.isSameMenuItem(event2)) {
        var command = this.getItemProp(processedItem, "command");
        command && command({
          originalEvent: event2,
          item: processedItem.item
        });
      }
    }, "onItemClick"),
    onListFocus: /* @__PURE__ */ __name(function onListFocus(event2) {
      this.focused = true;
      this.changeFocusedOptionIndex(0);
      this.$emit("focus", event2);
    }, "onListFocus"),
    onListBlur: /* @__PURE__ */ __name(function onListBlur(event2) {
      this.focused = false;
      this.focusedOptionIndex = -1;
      this.$emit("blur", event2);
    }, "onListBlur"),
    onListKeyDown: /* @__PURE__ */ __name(function onListKeyDown(event2) {
      switch (event2.code) {
        case "ArrowDown": {
          if (this.position === "left" || this.position === "right") this.onArrowDownKey();
          event2.preventDefault();
          break;
        }
        case "ArrowUp": {
          if (this.position === "left" || this.position === "right") this.onArrowUpKey();
          event2.preventDefault();
          break;
        }
        case "ArrowRight": {
          if (this.position === "top" || this.position === "bottom") this.onArrowDownKey();
          event2.preventDefault();
          break;
        }
        case "ArrowLeft": {
          if (this.position === "top" || this.position === "bottom") this.onArrowUpKey();
          event2.preventDefault();
          break;
        }
        case "Home": {
          this.onHomeKey();
          event2.preventDefault();
          break;
        }
        case "End": {
          this.onEndKey();
          event2.preventDefault();
          break;
        }
        case "Enter":
        case "NumpadEnter":
        case "Space": {
          this.onSpaceKey(event2);
          event2.preventDefault();
          break;
        }
      }
    }, "onListKeyDown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey3() {
      var optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);
      this.changeFocusedOptionIndex(optionIndex);
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey3() {
      var optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);
      this.changeFocusedOptionIndex(optionIndex);
    }, "onArrowUpKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey3() {
      this.changeFocusedOptionIndex(0);
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey3() {
      this.changeFocusedOptionIndex(find(this.$refs.list, 'li[data-pc-section="item"][data-p-disabled="false"]').length - 1);
    }, "onEndKey"),
    onSpaceKey: /* @__PURE__ */ __name(function onSpaceKey2() {
      var element = findSingle(this.$refs.list, 'li[id="'.concat("".concat(this.focusedOptionIndex), '"]'));
      var anchorElement = element && findSingle(element, '[data-pc-section="itemlink"]');
      anchorElement ? anchorElement.click() : element && element.click();
    }, "onSpaceKey"),
    findNextOptionIndex: /* @__PURE__ */ __name(function findNextOptionIndex2(index) {
      var menuitems = find(this.$refs.list, 'li[data-pc-section="item"][data-p-disabled="false"]');
      var matchedOptionIndex = _toConsumableArray$a(menuitems).findIndex(function(link) {
        return link.id === index;
      });
      return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;
    }, "findNextOptionIndex"),
    findPrevOptionIndex: /* @__PURE__ */ __name(function findPrevOptionIndex2(index) {
      var menuitems = find(this.$refs.list, 'li[data-pc-section="item"][data-p-disabled="false"]');
      var matchedOptionIndex = _toConsumableArray$a(menuitems).findIndex(function(link) {
        return link.id === index;
      });
      return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;
    }, "findPrevOptionIndex"),
    changeFocusedOptionIndex: /* @__PURE__ */ __name(function changeFocusedOptionIndex2(index) {
      var menuitems = find(this.$refs.list, 'li[data-pc-section="item"][data-p-disabled="false"]');
      var order = index >= menuitems.length ? menuitems.length - 1 : index < 0 ? 0 : index;
      this.focusedOptionIndex = menuitems[order].getAttribute("id");
    }, "changeFocusedOptionIndex"),
    disabled: /* @__PURE__ */ __name(function disabled2(item8) {
      return typeof item8.disabled === "function" ? item8.disabled() : item8.disabled;
    }, "disabled"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps2(item8, index) {
      return {
        action: mergeProps({
          tabindex: -1,
          "class": this.cx("itemLink")
        }, this.getPTOptions("itemLink", item8, index)),
        icon: mergeProps({
          "class": [this.cx("itemIcon"), item8.icon]
        }, this.getPTOptions("itemIcon", item8, index))
      };
    }, "getMenuItemProps")
  },
  computed: {
    focusedOptionId: /* @__PURE__ */ __name(function focusedOptionId3() {
      return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;
    }, "focusedOptionId")
  },
  directives: {
    ripple: Ripple,
    tooltip: Tooltip
  }
};
var _hoisted_1$p = ["id", "aria-orientation", "aria-activedescendant", "tabindex", "aria-label", "aria-labelledby"];
var _hoisted_2$i = ["id", "aria-label", "aria-disabled", "onClick", "onMouseenter", "data-p-focused", "data-p-disabled"];
var _hoisted_3$f = ["href", "target"];
function render$1$7(_ctx, _cache, $props, $setup, $data, $options) {
  var _directive_ripple = resolveDirective("ripple");
  var _directive_tooltip = resolveDirective("tooltip");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("listContainer")
  }, _ctx.ptm("listContainer")), [createBaseVNode("ul", mergeProps({
    ref: "list",
    id: $data.id,
    "class": _ctx.cx("list"),
    role: "menu",
    "aria-orientation": $props.position === "bottom" || $props.position === "top" ? "horizontal" : "vertical",
    "aria-activedescendant": $data.focused ? $options.focusedOptionId : void 0,
    tabindex: $props.tabindex,
    "aria-label": $props.ariaLabel,
    "aria-labelledby": $props.ariaLabelledby,
    onFocus: _cache[0] || (_cache[0] = function() {
      return $options.onListFocus && $options.onListFocus.apply($options, arguments);
    }),
    onBlur: _cache[1] || (_cache[1] = function() {
      return $options.onListBlur && $options.onListBlur.apply($options, arguments);
    }),
    onKeydown: _cache[2] || (_cache[2] = function() {
      return $options.onListKeyDown && $options.onListKeyDown.apply($options, arguments);
    }),
    onMouseleave: _cache[3] || (_cache[3] = function() {
      return $options.onListMouseLeave && $options.onListMouseLeave.apply($options, arguments);
    })
  }, _ctx.ptm("list")), [(openBlock(true), createElementBlock(Fragment, null, renderList($props.model, function(processedItem, index) {
    return openBlock(), createElementBlock("li", mergeProps({
      key: index,
      id: $options.getItemId(index),
      "class": _ctx.cx("item", {
        processedItem,
        id: $options.getItemId(index)
      }),
      role: "menuitem",
      "aria-label": processedItem.label,
      "aria-disabled": $options.disabled(processedItem),
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onItemClick($event, processedItem);
      }, "onClick"),
      onMouseenter: /* @__PURE__ */ __name(function onMouseenter($event) {
        return $options.onItemMouseEnter(index);
      }, "onMouseenter"),
      ref_for: true
    }, $options.getPTOptions("item", processedItem, index), {
      "data-p-focused": $options.isItemActive($options.getItemId(index)),
      "data-p-disabled": $options.disabled(processedItem) || false
    }), [createBaseVNode("div", mergeProps({
      "class": _ctx.cx("itemContent"),
      ref_for: true
    }, $options.getPTOptions("itemContent", processedItem, index)), [!$props.templates["item"] ? withDirectives((openBlock(), createElementBlock("a", mergeProps({
      key: 0,
      href: processedItem.url,
      "class": _ctx.cx("itemLink"),
      target: processedItem.target,
      tabindex: "-1",
      "aria-hidden": "true",
      ref_for: true
    }, $options.getPTOptions("itemLink", processedItem, index)), [!$props.templates["icon"] && !$props.templates["itemicon"] ? withDirectives((openBlock(), createElementBlock("span", mergeProps({
      key: 0,
      "class": [_ctx.cx("itemIcon"), processedItem.icon],
      ref_for: true
    }, $options.getPTOptions("itemIcon", processedItem, index)), null, 16)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates["icon"] || $props.templates["itemicon"]), {
      key: 1,
      item: processedItem,
      "class": normalizeClass(_ctx.cx("itemIcon"))
    }, null, 8, ["item", "class"]))], 16, _hoisted_3$f)), [[_directive_tooltip, {
      value: processedItem.label,
      disabled: !$props.tooltipOptions
    }, $props.tooltipOptions]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates["item"]), {
      key: 1,
      item: processedItem,
      index,
      label: processedItem.label,
      props: $options.getMenuItemProps(processedItem, index)
    }, null, 8, ["item", "index", "label", "props"]))], 16)], 16, _hoisted_2$i);
  }), 128))], 16, _hoisted_1$p)], 16);
}
__name(render$1$7, "render$1$7");
script$1$z.render = render$1$7;
var script$V = {
  name: "Dock",
  "extends": script$2$7,
  inheritAttrs: false,
  matchMediaListener: null,
  data: /* @__PURE__ */ __name(function data10() {
    return {
      query: null,
      queryMatches: false
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted14() {
    this.bindMatchMediaListener();
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount5() {
    this.unbindMatchMediaListener();
  }, "beforeUnmount"),
  methods: {
    bindMatchMediaListener: /* @__PURE__ */ __name(function bindMatchMediaListener3() {
      var _this = this;
      if (!this.matchMediaListener) {
        var query = matchMedia("(max-width: ".concat(this.breakpoint, ")"));
        this.query = query;
        this.queryMatches = query.matches;
        this.matchMediaListener = function() {
          _this.queryMatches = query.matches;
          _this.mobileActive = false;
        };
        this.query.addEventListener("change", this.matchMediaListener);
      }
    }, "bindMatchMediaListener"),
    unbindMatchMediaListener: /* @__PURE__ */ __name(function unbindMatchMediaListener3() {
      if (this.matchMediaListener) {
        this.query.removeEventListener("change", this.matchMediaListener);
        this.matchMediaListener = null;
      }
    }, "unbindMatchMediaListener")
  },
  computed: {
    containerClass: /* @__PURE__ */ __name(function containerClass() {
      return [this["class"], this.cx("root")];
    }, "containerClass")
  },
  components: {
    DockSub: script$1$z
  }
};
function render$P(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_DockSub = resolveComponent("DockSub");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": $options.containerClass,
    style: _ctx.style
  }, _ctx.ptmi("root")), [createVNode(_component_DockSub, {
    model: _ctx.model,
    templates: _ctx.$slots,
    tooltipOptions: _ctx.tooltipOptions,
    position: _ctx.position,
    menuId: _ctx.menuId,
    "aria-label": _ctx.ariaLabel,
    "aria-labelledby": _ctx.ariaLabelledby,
    tabindex: _ctx.tabindex,
    pt: _ctx.pt,
    unstyled: _ctx.unstyled
  }, null, 8, ["model", "templates", "tooltipOptions", "position", "menuId", "aria-label", "aria-labelledby", "tabindex", "pt", "unstyled"])], 16);
}
__name(render$P, "render$P");
script$V.render = render$P;
var script$U = {
  name: "Dropdown",
  "extends": script$1v,
  mounted: /* @__PURE__ */ __name(function mounted15() {
    console.warn("Deprecated since v4. Use Select component instead.");
  }, "mounted")
};
var DropdownStyle = BaseStyle.extend({
  name: "dropdown"
});
var DynamicDialogStyle = BaseStyle.extend({
  name: "dynamicdialog"
});
var script$1$y = {
  name: "BaseDynamicDialog",
  "extends": script$1d,
  props: {},
  style: DynamicDialogStyle,
  provide: /* @__PURE__ */ __name(function provide17() {
    return {
      $pcDynamicDialog: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$T = {
  name: "DynamicDialog",
  "extends": script$1$y,
  inheritAttrs: false,
  data: /* @__PURE__ */ __name(function data11() {
    return {
      instanceMap: {}
    };
  }, "data"),
  openListener: null,
  closeListener: null,
  currentInstance: null,
  mounted: /* @__PURE__ */ __name(function mounted16() {
    var _this = this;
    this.openListener = function(_ref) {
      var instance = _ref.instance;
      var key = UniqueComponentId() + "_dynamic_dialog";
      instance.visible = true;
      instance.key = key;
      _this.instanceMap[key] = instance;
    };
    this.closeListener = function(_ref2) {
      var instance = _ref2.instance, params = _ref2.params;
      var key = instance.key;
      var currentInstance = _this.instanceMap[key];
      if (currentInstance) {
        currentInstance.visible = false;
        currentInstance.options.onClose && currentInstance.options.onClose({
          data: params,
          type: "config-close"
        });
        _this.currentInstance = currentInstance;
      }
    };
    DynamicDialogEventBus.on("open", this.openListener);
    DynamicDialogEventBus.on("close", this.closeListener);
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount6() {
    DynamicDialogEventBus.off("open", this.openListener);
    DynamicDialogEventBus.off("close", this.closeListener);
  }, "beforeUnmount"),
  methods: {
    onDialogHide: /* @__PURE__ */ __name(function onDialogHide(instance) {
      !this.currentInstance && instance.options.onClose && instance.options.onClose({
        type: "dialog-close"
      });
      delete this.instanceMap[instance.key];
    }, "onDialogHide"),
    onDialogAfterHide: /* @__PURE__ */ __name(function onDialogAfterHide() {
      this.currentInstance && delete this.currentInstance;
      this.currentInstance = null;
    }, "onDialogAfterHide"),
    getTemplateItems: /* @__PURE__ */ __name(function getTemplateItems(template) {
      return Array.isArray(template) ? template : [template];
    }, "getTemplateItems")
  },
  components: {
    DDialog: script$1w
  }
};
function render$O(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_DDialog = resolveComponent("DDialog");
  return openBlock(true), createElementBlock(Fragment, null, renderList($data.instanceMap, function(instance, key) {
    return openBlock(), createBlock(_component_DDialog, mergeProps({
      key,
      visible: instance.visible,
      "onUpdate:visible": /* @__PURE__ */ __name(function onUpdateVisible($event) {
        return instance.visible = $event;
      }, "onUpdateVisible"),
      _instance: instance,
      ref_for: true
    }, instance.options.props, {
      onHide: /* @__PURE__ */ __name(function onHide($event) {
        return $options.onDialogHide(instance);
      }, "onHide"),
      onAfterHide: $options.onDialogAfterHide
    }), createSlots({
      "default": withCtx(function() {
        return [(openBlock(), createBlock(resolveDynamicComponent(instance.content), mergeProps({
          ref_for: true
        }, instance.options.emits), null, 16))];
      }),
      _: 2
    }, [instance.options.templates && instance.options.templates.header ? {
      name: "header",
      fn: withCtx(function() {
        return [(openBlock(true), createElementBlock(Fragment, null, renderList($options.getTemplateItems(instance.options.templates.header), function(header2, index) {
          return openBlock(), createBlock(resolveDynamicComponent(header2), mergeProps({
            key: index + "_header",
            ref_for: true
          }, instance.options.emits), null, 16);
        }), 128))];
      }),
      key: "0"
    } : void 0, instance.options.templates && instance.options.templates.footer ? {
      name: "footer",
      fn: withCtx(function() {
        return [(openBlock(true), createElementBlock(Fragment, null, renderList($options.getTemplateItems(instance.options.templates.footer), function(footer, index) {
          return openBlock(), createBlock(resolveDynamicComponent(footer), mergeProps({
            key: index + "_footer",
            ref_for: true
          }, instance.options.emits), null, 16);
        }), 128))];
      }),
      key: "1"
    } : void 0]), 1040, ["visible", "onUpdate:visible", "_instance", "onHide", "onAfterHide"]);
  }), 128);
}
__name(render$O, "render$O");
script$T.render = render$O;
var theme$t = /* @__PURE__ */ __name(function theme11(_ref) {
  var dt = _ref.dt;
  return "\n.p-fieldset {\n    background: ".concat(dt("fieldset.background"), ";\n    border: 1px solid ").concat(dt("fieldset.border.color"), ";\n    border-radius: ").concat(dt("fieldset.border.radius"), ";\n    color: ").concat(dt("fieldset.color"), ";\n    padding: ").concat(dt("fieldset.padding"), ";\n    margin: 0;\n}\n\n.p-fieldset-legend {\n    background: ").concat(dt("fieldset.legend.background"), ";\n    border-radius: ").concat(dt("fieldset.legend.border.radius"), ";\n    border-width: ").concat(dt("fieldset.legend.border.width"), ";\n    border-style: solid;\n    border-color: ").concat(dt("fieldset.legend.border.color"), ";\n    padding: ").concat(dt("fieldset.legend.padding"), ";\n    transition: background ").concat(dt("fieldset.transition.duration"), ", color ").concat(dt("fieldset.transition.duration"), ", outline-color ").concat(dt("fieldset.transition.duration"), ", box-shadow ").concat(dt("fieldset.transition.duration"), ";\n}\n\n.p-fieldset-toggleable > .p-fieldset-legend {\n    padding: 0;\n}\n\n.p-fieldset-toggle-button {\n    cursor: pointer;\n    user-select: none;\n    overflow: hidden;\n    position: relative;\n    text-decoration: none;\n    display: flex;\n    gap: ").concat(dt("fieldset.legend.gap"), ";\n    align-items: center;\n    justify-content: center;\n    padding: ").concat(dt("fieldset.legend.padding"), ";\n    background: transparent;\n    border: 0 none;\n    border-radius: ").concat(dt("fieldset.legend.border.radius"), ";\n    transition: background ").concat(dt("fieldset.transition.duration"), ", color ").concat(dt("fieldset.transition.duration"), ", outline-color ").concat(dt("fieldset.transition.duration"), ", box-shadow ").concat(dt("fieldset.transition.duration"), ";\n    outline-color: transparent;\n}\n\n.p-fieldset-legend-label {\n    font-weight: ").concat(dt("fieldset.legend.font.weight"), ";\n}\n\n.p-fieldset-toggle-button:focus-visible {\n    box-shadow: ").concat(dt("fieldset.legend.focus.ring.shadow"), ";\n    outline: ").concat(dt("fieldset.legend.focus.ring.width"), " ").concat(dt("fieldset.legend.focus.ring.style"), " ").concat(dt("fieldset.legend.focus.ring.color"), ";\n    outline-offset: ").concat(dt("fieldset.legend.focus.ring.offset"), ";\n}\n\n.p-fieldset-toggleable > .p-fieldset-legend:hover {\n    color: ").concat(dt("fieldset.legend.hover.color"), ";\n    background: ").concat(dt("fieldset.legend.hover.background"), ";\n}\n\n.p-fieldset-toggle-icon {\n    color: ").concat(dt("fieldset.toggle.icon.color"), ";\n    transition: color ").concat(dt("fieldset.transition.duration"), ";\n}\n\n.p-fieldset-toggleable > .p-fieldset-legend:hover .p-fieldset-toggle-icon {\n    color: ").concat(dt("fieldset.toggle.icon.hover.color"), ";\n}\n\n.p-fieldset .p-fieldset-content {\n    padding: ").concat(dt("fieldset.content.padding"), ";\n}\n");
}, "theme");
var classes$x = {
  root: /* @__PURE__ */ __name(function root11(_ref2) {
    var props = _ref2.props;
    return ["p-fieldset p-component", {
      "p-fieldset-toggleable": props.toggleable
    }];
  }, "root"),
  legend: "p-fieldset-legend",
  legendLabel: "p-fieldset-legend-label",
  toggleButton: "p-fieldset-toggle-button",
  toggleIcon: "p-fieldset-toggle-icon",
  contentContainer: "p-fieldset-content-container",
  content: "p-fieldset-content"
};
var FieldsetStyle = BaseStyle.extend({
  name: "fieldset",
  theme: theme$t,
  classes: classes$x
});
var script$1$x = {
  name: "BaseFieldset",
  "extends": script$1d,
  props: {
    legend: String,
    toggleable: Boolean,
    collapsed: Boolean,
    toggleButtonProps: {
      type: null,
      "default": null
    }
  },
  style: FieldsetStyle,
  provide: /* @__PURE__ */ __name(function provide18() {
    return {
      $pcFieldset: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$S = {
  name: "Fieldset",
  "extends": script$1$x,
  inheritAttrs: false,
  emits: ["update:collapsed", "toggle"],
  data: /* @__PURE__ */ __name(function data12() {
    return {
      id: this.$attrs.id,
      d_collapsed: this.collapsed
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId4(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    collapsed: /* @__PURE__ */ __name(function collapsed(newValue) {
      this.d_collapsed = newValue;
    }, "collapsed")
  },
  mounted: /* @__PURE__ */ __name(function mounted17() {
    this.id = this.id || UniqueComponentId();
  }, "mounted"),
  methods: {
    toggle: /* @__PURE__ */ __name(function toggle(event2) {
      this.d_collapsed = !this.d_collapsed;
      this.$emit("update:collapsed", this.d_collapsed);
      this.$emit("toggle", {
        originalEvent: event2,
        value: this.d_collapsed
      });
    }, "toggle"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown4(event2) {
      if (event2.code === "Enter" || event2.code === "NumpadEnter" || event2.code === "Space") {
        this.toggle(event2);
        event2.preventDefault();
      }
    }, "onKeyDown")
  },
  computed: {
    buttonAriaLabel: /* @__PURE__ */ __name(function buttonAriaLabel() {
      return this.toggleButtonProps && this.toggleButtonProps.ariaLabel ? this.toggleButtonProps.ariaLabel : this.legend;
    }, "buttonAriaLabel")
  },
  directives: {
    ripple: Ripple
  },
  components: {
    PlusIcon: script$1x,
    MinusIcon: script$1y
  }
};
function _typeof$i(o) {
  "@babel/helpers - typeof";
  return _typeof$i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$i(o);
}
__name(_typeof$i, "_typeof$i");
function ownKeys$g(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$g, "ownKeys$g");
function _objectSpread$g(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$g(Object(t2), true).forEach(function(r2) {
      _defineProperty$h(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$g(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$g, "_objectSpread$g");
function _defineProperty$h(e, r, t2) {
  return (r = _toPropertyKey$h(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$h, "_defineProperty$h");
function _toPropertyKey$h(t2) {
  var i = _toPrimitive$h(t2, "string");
  return "symbol" == _typeof$i(i) ? i : i + "";
}
__name(_toPropertyKey$h, "_toPropertyKey$h");
function _toPrimitive$h(t2, r) {
  if ("object" != _typeof$i(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$i(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$h, "_toPrimitive$h");
var _hoisted_1$o = ["id"];
var _hoisted_2$h = ["id", "aria-controls", "aria-expanded", "aria-label"];
var _hoisted_3$e = ["id", "aria-labelledby"];
function render$N(_ctx, _cache, $props, $setup, $data, $options) {
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("fieldset", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createBaseVNode("legend", mergeProps({
    "class": _ctx.cx("legend")
  }, _ctx.ptm("legend")), [renderSlot(_ctx.$slots, "legend", {
    toggleCallback: $options.toggle
  }, function() {
    return [!_ctx.toggleable ? (openBlock(), createElementBlock("span", mergeProps({
      key: 0,
      id: $data.id + "_header",
      "class": _ctx.cx("legendLabel")
    }, _ctx.ptm("legendLabel")), toDisplayString(_ctx.legend), 17, _hoisted_1$o)) : createCommentVNode("", true), _ctx.toggleable ? withDirectives((openBlock(), createElementBlock("button", mergeProps({
      key: 1,
      id: $data.id + "_header",
      type: "button",
      "aria-controls": $data.id + "_content",
      "aria-expanded": !$data.d_collapsed,
      "aria-label": $options.buttonAriaLabel,
      "class": _ctx.cx("toggleButton"),
      onClick: _cache[0] || (_cache[0] = function() {
        return $options.toggle && $options.toggle.apply($options, arguments);
      }),
      onKeydown: _cache[1] || (_cache[1] = function() {
        return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);
      })
    }, _objectSpread$g(_objectSpread$g({}, _ctx.toggleButtonProps), _ctx.ptm("toggleButton"))), [renderSlot(_ctx.$slots, _ctx.$slots.toggleicon ? "toggleicon" : "togglericon", {
      collapsed: $data.d_collapsed,
      "class": normalizeClass(_ctx.cx("toggleIcon"))
    }, function() {
      return [(openBlock(), createBlock(resolveDynamicComponent($data.d_collapsed ? "PlusIcon" : "MinusIcon"), mergeProps({
        "class": _ctx.cx("toggleIcon")
      }, _ctx.ptm("toggleIcon")), null, 16, ["class"]))];
    }), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("legendLabel")
    }, _ctx.ptm("legendLabel")), toDisplayString(_ctx.legend), 17)], 16, _hoisted_2$h)), [[_directive_ripple]]) : createCommentVNode("", true)];
  })], 16), createVNode(Transition, mergeProps({
    name: "p-toggleable-content"
  }, _ctx.ptm("transition")), {
    "default": withCtx(function() {
      return [withDirectives(createBaseVNode("div", mergeProps({
        id: $data.id + "_content",
        "class": _ctx.cx("contentContainer"),
        role: "region",
        "aria-labelledby": $data.id + "_header"
      }, _ctx.ptm("contentContainer")), [createBaseVNode("div", mergeProps({
        "class": _ctx.cx("content")
      }, _ctx.ptm("content")), [renderSlot(_ctx.$slots, "default")], 16)], 16, _hoisted_3$e), [[vShow, !$data.d_collapsed]])];
    }),
    _: 3
  }, 16)], 16);
}
__name(render$N, "render$N");
script$S.render = render$N;
var script$R = {
  name: "UploadIcon",
  "extends": script$1m
};
function render$M(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M6.58942 9.82197C6.70165 9.93405 6.85328 9.99793 7.012 10C7.17071 9.99793 7.32234 9.93405 7.43458 9.82197C7.54681 9.7099 7.61079 9.55849 7.61286 9.4V2.04798L9.79204 4.22402C9.84752 4.28011 9.91365 4.32457 9.98657 4.35479C10.0595 4.38502 10.1377 4.40039 10.2167 4.40002C10.2956 4.40039 10.3738 4.38502 10.4467 4.35479C10.5197 4.32457 10.5858 4.28011 10.6413 4.22402C10.7538 4.11152 10.817 3.95902 10.817 3.80002C10.817 3.64102 10.7538 3.48852 10.6413 3.37602L7.45127 0.190618C7.44656 0.185584 7.44176 0.180622 7.43687 0.175736C7.32419 0.063214 7.17136 0 7.012 0C6.85264 0 6.69981 0.063214 6.58712 0.175736C6.58181 0.181045 6.5766 0.186443 6.5715 0.191927L3.38282 3.37602C3.27669 3.48976 3.2189 3.6402 3.22165 3.79564C3.2244 3.95108 3.28746 4.09939 3.39755 4.20932C3.50764 4.31925 3.65616 4.38222 3.81182 4.38496C3.96749 4.3877 4.11814 4.33001 4.23204 4.22402L6.41113 2.04807V9.4C6.41321 9.55849 6.47718 9.7099 6.58942 9.82197ZM11.9952 14H2.02883C1.751 13.9887 1.47813 13.9228 1.22584 13.8061C0.973545 13.6894 0.746779 13.5241 0.558517 13.3197C0.370254 13.1154 0.22419 12.876 0.128681 12.6152C0.0331723 12.3545 -0.00990605 12.0775 0.0019109 11.8V9.40005C0.0019109 9.24092 0.065216 9.08831 0.1779 8.97579C0.290584 8.86326 0.443416 8.80005 0.602775 8.80005C0.762134 8.80005 0.914966 8.86326 1.02765 8.97579C1.14033 9.08831 1.20364 9.24092 1.20364 9.40005V11.8C1.18295 12.0376 1.25463 12.274 1.40379 12.4602C1.55296 12.6463 1.76817 12.7681 2.00479 12.8H11.9952C12.2318 12.7681 12.447 12.6463 12.5962 12.4602C12.7453 12.274 12.817 12.0376 12.7963 11.8V9.40005C12.7963 9.24092 12.8596 9.08831 12.9723 8.97579C13.085 8.86326 13.2378 8.80005 13.3972 8.80005C13.5565 8.80005 13.7094 8.86326 13.8221 8.97579C13.9347 9.08831 13.998 9.24092 13.998 9.40005V11.8C14.022 12.3563 13.8251 12.8996 13.45 13.3116C13.0749 13.7236 12.552 13.971 11.9952 14Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$M, "render$M");
script$R.render = render$M;
var theme$s = /* @__PURE__ */ __name(function theme12(_ref) {
  var dt = _ref.dt;
  return '\n.p-fileupload input[type="file"] {\n    display: none;\n}\n\n.p-fileupload-advanced {\n    border: 1px solid '.concat(dt("fileupload.border.color"), ";\n    border-radius: ").concat(dt("fileupload.border.radius"), ";\n    background: ").concat(dt("fileupload.background"), ";\n    color: ").concat(dt("fileupload.color"), ";\n}\n\n.p-fileupload-header {\n    display: flex;\n    align-items: center;\n    padding: ").concat(dt("fileupload.header.padding"), ";\n    background: ").concat(dt("fileupload.header.background"), ";\n    color: ").concat(dt("fileupload.header.color"), ";\n    border-style: solid;\n    border-width: ").concat(dt("fileupload.header.border.width"), ";\n    border-color: ").concat(dt("fileupload.header.border.color"), ";\n    border-radius: ").concat(dt("fileupload.header.border.radius"), ";\n    gap: ").concat(dt("fileupload.header.gap"), ";\n}\n\n.p-fileupload-content {\n    border: 1px solid transparent;\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("fileupload.content.gap"), ";\n    transition: border-color ").concat(dt("fileupload.transition.duration"), ";\n    padding: ").concat(dt("fileupload.content.padding"), ";\n}\n\n.p-fileupload-content .p-progressbar {\n    width: 100%;\n    height: ").concat(dt("fileupload.progressbar.height"), ";\n}\n\n.p-fileupload-file-list {\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("fileupload.filelist.gap"), ";\n}\n\n.p-fileupload-file {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    padding: ").concat(dt("fileupload.file.padding"), ";\n    border-block-end: 1px solid ").concat(dt("fileupload.file.border.color"), ";\n    gap: ").concat(dt("fileupload.file.gap"), ";\n}\n\n.p-fileupload-file:last-child {\n    border-block-end: 0;\n}\n\n.p-fileupload-file-info {\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("fileupload.file.info.gap"), ";\n}\n\n.p-fileupload-file-thumbnail {\n    flex-shrink: 0;\n}\n\n.p-fileupload-file-actions {\n    margin-inline-start: auto;\n}\n\n.p-fileupload-highlight {\n    border: 1px dashed ").concat(dt("fileupload.content.highlight.border.color"), ";\n}\n\n.p-fileupload-basic {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    gap: ").concat(dt("fileupload.basic.gap"), ";\n}\n");
}, "theme");
var classes$w = {
  root: /* @__PURE__ */ __name(function root12(_ref2) {
    var props = _ref2.props;
    return ["p-fileupload p-fileupload-".concat(props.mode, " p-component")];
  }, "root"),
  header: "p-fileupload-header",
  pcChooseButton: "p-fileupload-choose-button",
  pcUploadButton: "p-fileupload-upload-button",
  pcCancelButton: "p-fileupload-cancel-button",
  content: "p-fileupload-content",
  fileList: "p-fileupload-file-list",
  file: "p-fileupload-file",
  fileThumbnail: "p-fileupload-file-thumbnail",
  fileInfo: "p-fileupload-file-info",
  fileName: "p-fileupload-file-name",
  fileSize: "p-fileupload-file-size",
  pcFileBadge: "p-fileupload-file-badge",
  fileActions: "p-fileupload-file-actions",
  pcFileRemoveButton: "p-fileupload-file-remove-button"
};
var FileUploadStyle = BaseStyle.extend({
  name: "fileupload",
  theme: theme$s,
  classes: classes$w
});
var script$2$6 = {
  name: "BaseFileUpload",
  "extends": script$1d,
  props: {
    name: {
      type: String,
      "default": null
    },
    url: {
      type: String,
      "default": null
    },
    mode: {
      type: String,
      "default": "advanced"
    },
    multiple: {
      type: Boolean,
      "default": false
    },
    accept: {
      type: String,
      "default": null
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    auto: {
      type: Boolean,
      "default": false
    },
    maxFileSize: {
      type: Number,
      "default": null
    },
    invalidFileSizeMessage: {
      type: String,
      "default": "{0}: Invalid file size, file size should be smaller than {1}."
    },
    invalidFileTypeMessage: {
      type: String,
      "default": "{0}: Invalid file type, allowed file types: {1}."
    },
    fileLimit: {
      type: Number,
      "default": null
    },
    invalidFileLimitMessage: {
      type: String,
      "default": "Maximum number of files exceeded, limit is {0} at most."
    },
    withCredentials: {
      type: Boolean,
      "default": false
    },
    previewWidth: {
      type: Number,
      "default": 50
    },
    chooseLabel: {
      type: String,
      "default": null
    },
    uploadLabel: {
      type: String,
      "default": null
    },
    cancelLabel: {
      type: String,
      "default": null
    },
    customUpload: {
      type: Boolean,
      "default": false
    },
    showUploadButton: {
      type: Boolean,
      "default": true
    },
    showCancelButton: {
      type: Boolean,
      "default": true
    },
    chooseIcon: {
      type: String,
      "default": void 0
    },
    uploadIcon: {
      type: String,
      "default": void 0
    },
    cancelIcon: {
      type: String,
      "default": void 0
    },
    style: null,
    "class": null,
    chooseButtonProps: {
      type: null,
      "default": null
    },
    uploadButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default7() {
        return {
          severity: "secondary"
        };
      }, "_default")
    },
    cancelButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default8() {
        return {
          severity: "secondary"
        };
      }, "_default")
    }
  },
  style: FileUploadStyle,
  provide: /* @__PURE__ */ __name(function provide19() {
    return {
      $pcFileUpload: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1$w = {
  name: "FileContent",
  hostName: "FileUpload",
  "extends": script$1d,
  emits: ["remove"],
  props: {
    files: {
      type: Array,
      "default": /* @__PURE__ */ __name(function _default9() {
        return [];
      }, "_default")
    },
    badgeSeverity: {
      type: String,
      "default": "warn"
    },
    badgeValue: {
      type: String,
      "default": null
    },
    previewWidth: {
      type: Number,
      "default": 50
    },
    templates: {
      type: null,
      "default": null
    }
  },
  methods: {
    formatSize: /* @__PURE__ */ __name(function formatSize(bytes) {
      var _this$$primevue$confi;
      var k = 1024;
      var dm = 3;
      var sizes = ((_this$$primevue$confi = this.$primevue.config.locale) === null || _this$$primevue$confi === void 0 ? void 0 : _this$$primevue$confi.fileSizeTypes) || ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
      if (bytes === 0) {
        return "0 ".concat(sizes[0]);
      }
      var i = Math.floor(Math.log(bytes) / Math.log(k));
      var formattedSize = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));
      return "".concat(formattedSize, " ").concat(sizes[i]);
    }, "formatSize")
  },
  components: {
    Button: script$1e,
    Badge: script$1z,
    TimesIcon: script$1g
  }
};
var _hoisted_1$1$5 = ["alt", "src", "width"];
function render$1$6(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Badge = resolveComponent("Badge");
  var _component_TimesIcon = resolveComponent("TimesIcon");
  var _component_Button = resolveComponent("Button");
  return openBlock(true), createElementBlock(Fragment, null, renderList($props.files, function(file, index) {
    return openBlock(), createElementBlock("div", mergeProps({
      key: file.name + file.type + file.size,
      "class": _ctx.cx("file"),
      ref_for: true
    }, _ctx.ptm("file")), [createBaseVNode("img", mergeProps({
      role: "presentation",
      "class": _ctx.cx("fileThumbnail"),
      alt: file.name,
      src: file.objectURL,
      width: $props.previewWidth,
      ref_for: true
    }, _ctx.ptm("fileThumbnail")), null, 16, _hoisted_1$1$5), createBaseVNode("div", mergeProps({
      "class": _ctx.cx("fileInfo"),
      ref_for: true
    }, _ctx.ptm("fileInfo")), [createBaseVNode("div", mergeProps({
      "class": _ctx.cx("fileName"),
      ref_for: true
    }, _ctx.ptm("fileName")), toDisplayString(file.name), 17), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("fileSize"),
      ref_for: true
    }, _ctx.ptm("fileSize")), toDisplayString($options.formatSize(file.size)), 17)], 16), createVNode(_component_Badge, {
      value: $props.badgeValue,
      "class": normalizeClass(_ctx.cx("pcFileBadge")),
      severity: $props.badgeSeverity,
      unstyled: _ctx.unstyled,
      pt: _ctx.ptm("pcFileBadge")
    }, null, 8, ["value", "class", "severity", "unstyled", "pt"]), createBaseVNode("div", mergeProps({
      "class": _ctx.cx("fileActions"),
      ref_for: true
    }, _ctx.ptm("fileActions")), [createVNode(_component_Button, {
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return _ctx.$emit("remove", index);
      }, "onClick"),
      text: "",
      rounded: "",
      severity: "danger",
      "class": normalizeClass(_ctx.cx("pcFileRemoveButton")),
      unstyled: _ctx.unstyled,
      pt: _ctx.ptm("pcFileRemoveButton")
    }, {
      icon: withCtx(function(iconProps) {
        return [$props.templates.fileremoveicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.fileremoveicon), {
          key: 0,
          "class": normalizeClass(iconProps["class"]),
          file,
          index
        }, null, 8, ["class", "file", "index"])) : (openBlock(), createBlock(_component_TimesIcon, mergeProps({
          key: 1,
          "class": iconProps["class"],
          "aria-hidden": "true",
          ref_for: true
        }, _ctx.ptm("pcFileRemoveButton")["icon"]), null, 16, ["class"]))];
      }),
      _: 2
    }, 1032, ["onClick", "class", "unstyled", "pt"])], 16)], 16);
  }), 128);
}
__name(render$1$6, "render$1$6");
script$1$w.render = render$1$6;
function _toConsumableArray$9(r) {
  return _arrayWithoutHoles$9(r) || _iterableToArray$9(r) || _unsupportedIterableToArray$a(r) || _nonIterableSpread$9();
}
__name(_toConsumableArray$9, "_toConsumableArray$9");
function _nonIterableSpread$9() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$9, "_nonIterableSpread$9");
function _iterableToArray$9(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$9, "_iterableToArray$9");
function _arrayWithoutHoles$9(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$a(r);
}
__name(_arrayWithoutHoles$9, "_arrayWithoutHoles$9");
function _createForOfIteratorHelper$3(r, e) {
  var t2 = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t2) {
    if (Array.isArray(r) || (t2 = _unsupportedIterableToArray$a(r)) || e) {
      t2 && (r = t2);
      var _n = 0, F = /* @__PURE__ */ __name(function F2() {
      }, "F");
      return { s: F, n: /* @__PURE__ */ __name(function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
        throw r2;
      }, "e"), f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: /* @__PURE__ */ __name(function s() {
    t2 = t2.call(r);
  }, "s"), n: /* @__PURE__ */ __name(function n() {
    var r2 = t2.next();
    return a = r2.done, r2;
  }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
    u = true, o = r2;
  }, "e"), f: /* @__PURE__ */ __name(function f() {
    try {
      a || null == t2["return"] || t2["return"]();
    } finally {
      if (u) throw o;
    }
  }, "f") };
}
__name(_createForOfIteratorHelper$3, "_createForOfIteratorHelper$3");
function _unsupportedIterableToArray$a(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$a(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$a(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$a, "_unsupportedIterableToArray$a");
function _arrayLikeToArray$a(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$a, "_arrayLikeToArray$a");
var script$Q = {
  name: "FileUpload",
  "extends": script$2$6,
  inheritAttrs: false,
  emits: ["select", "uploader", "before-upload", "progress", "upload", "error", "before-send", "clear", "remove", "remove-uploaded-file"],
  duplicateIEEvent: false,
  data: /* @__PURE__ */ __name(function data13() {
    return {
      uploadedFileCount: 0,
      files: [],
      messages: [],
      focused: false,
      progress: null,
      uploadedFiles: []
    };
  }, "data"),
  methods: {
    upload: /* @__PURE__ */ __name(function upload() {
      if (this.hasFiles) this.uploader();
    }, "upload"),
    onBasicUploaderClick: /* @__PURE__ */ __name(function onBasicUploaderClick(event2) {
      if (event2.button === 0) this.$refs.fileInput.click();
    }, "onBasicUploaderClick"),
    onFileSelect: /* @__PURE__ */ __name(function onFileSelect(event2) {
      if (event2.type !== "drop" && this.isIE11() && this.duplicateIEEvent) {
        this.duplicateIEEvent = false;
        return;
      }
      if (this.isBasic && this.hasFiles) {
        this.files = [];
      }
      this.messages = [];
      this.files = this.files || [];
      var files = event2.dataTransfer ? event2.dataTransfer.files : event2.target.files;
      var _iterator = _createForOfIteratorHelper$3(files), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var file = _step.value;
          if (!this.isFileSelected(file) && !this.isFileLimitExceeded()) {
            if (this.validate(file)) {
              if (this.isImage(file)) {
                file.objectURL = window.URL.createObjectURL(file);
              }
              this.files.push(file);
            }
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      this.$emit("select", {
        originalEvent: event2,
        files: this.files
      });
      if (this.fileLimit) {
        this.checkFileLimit();
      }
      if (this.auto && this.hasFiles && !this.isFileLimitExceeded()) {
        this.uploader();
      }
      if (event2.type !== "drop" && this.isIE11()) {
        this.clearIEInput();
      } else {
        this.clearInputElement();
      }
    }, "onFileSelect"),
    choose: /* @__PURE__ */ __name(function choose() {
      this.$refs.fileInput.click();
    }, "choose"),
    uploader: /* @__PURE__ */ __name(function uploader() {
      var _this = this;
      if (this.customUpload) {
        if (this.fileLimit) {
          this.uploadedFileCount += this.files.length;
        }
        this.$emit("uploader", {
          files: this.files
        });
        this.clear();
      } else {
        var xhr = new XMLHttpRequest();
        var formData = new FormData();
        this.$emit("before-upload", {
          xhr,
          formData
        });
        var _iterator2 = _createForOfIteratorHelper$3(this.files), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var file = _step2.value;
            formData.append(this.name, file, file.name);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        xhr.upload.addEventListener("progress", function(event2) {
          if (event2.lengthComputable) {
            _this.progress = Math.round(event2.loaded * 100 / event2.total);
          }
          _this.$emit("progress", {
            originalEvent: event2,
            progress: _this.progress
          });
        });
        xhr.onreadystatechange = function() {
          if (xhr.readyState === 4) {
            var _this$uploadedFiles;
            _this.progress = 0;
            if (xhr.status >= 200 && xhr.status < 300) {
              if (_this.fileLimit) {
                _this.uploadedFileCount += _this.files.length;
              }
              _this.$emit("upload", {
                xhr,
                files: _this.files
              });
            } else {
              _this.$emit("error", {
                xhr,
                files: _this.files
              });
            }
            (_this$uploadedFiles = _this.uploadedFiles).push.apply(_this$uploadedFiles, _toConsumableArray$9(_this.files));
            _this.clear();
          }
        };
        xhr.open("POST", this.url, true);
        this.$emit("before-send", {
          xhr,
          formData
        });
        xhr.withCredentials = this.withCredentials;
        xhr.send(formData);
      }
    }, "uploader"),
    clear: /* @__PURE__ */ __name(function clear() {
      this.files = [];
      this.messages = null;
      this.$emit("clear");
      if (this.isAdvanced) {
        this.clearInputElement();
      }
    }, "clear"),
    onFocus: /* @__PURE__ */ __name(function onFocus5() {
      this.focused = true;
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur4() {
      this.focused = false;
    }, "onBlur"),
    isFileSelected: /* @__PURE__ */ __name(function isFileSelected(file) {
      if (this.files && this.files.length) {
        var _iterator3 = _createForOfIteratorHelper$3(this.files), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var sFile = _step3.value;
            if (sFile.name + sFile.type + sFile.size === file.name + file.type + file.size) return true;
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      return false;
    }, "isFileSelected"),
    isIE11: /* @__PURE__ */ __name(function isIE11() {
      return !!window["MSInputMethodContext"] && !!document["documentMode"];
    }, "isIE11"),
    validate: /* @__PURE__ */ __name(function validate(file) {
      if (this.accept && !this.isFileTypeValid(file)) {
        this.messages.push(this.invalidFileTypeMessage.replace("{0}", file.name).replace("{1}", this.accept));
        return false;
      }
      if (this.maxFileSize && file.size > this.maxFileSize) {
        this.messages.push(this.invalidFileSizeMessage.replace("{0}", file.name).replace("{1}", this.formatSize(this.maxFileSize)));
        return false;
      }
      return true;
    }, "validate"),
    isFileTypeValid: /* @__PURE__ */ __name(function isFileTypeValid(file) {
      var acceptableTypes = this.accept.split(",").map(function(type2) {
        return type2.trim();
      });
      var _iterator4 = _createForOfIteratorHelper$3(acceptableTypes), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var type = _step4.value;
          var acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type) : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();
          if (acceptable) {
            return true;
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return false;
    }, "isFileTypeValid"),
    getTypeClass: /* @__PURE__ */ __name(function getTypeClass(fileType) {
      return fileType.substring(0, fileType.indexOf("/"));
    }, "getTypeClass"),
    isWildcard: /* @__PURE__ */ __name(function isWildcard(fileType) {
      return fileType.indexOf("*") !== -1;
    }, "isWildcard"),
    getFileExtension: /* @__PURE__ */ __name(function getFileExtension(file) {
      return "." + file.name.split(".").pop();
    }, "getFileExtension"),
    isImage: /* @__PURE__ */ __name(function isImage(file) {
      return /^image\//.test(file.type);
    }, "isImage"),
    onDragEnter: /* @__PURE__ */ __name(function onDragEnter(event2) {
      if (!this.disabled) {
        event2.stopPropagation();
        event2.preventDefault();
      }
    }, "onDragEnter"),
    onDragOver: /* @__PURE__ */ __name(function onDragOver(event2) {
      if (!this.disabled) {
        !this.isUnstyled && addClass(this.$refs.content, "p-fileupload-highlight");
        this.$refs.content.setAttribute("data-p-highlight", true);
        event2.stopPropagation();
        event2.preventDefault();
      }
    }, "onDragOver"),
    onDragLeave: /* @__PURE__ */ __name(function onDragLeave() {
      if (!this.disabled) {
        !this.isUnstyled && removeClass(this.$refs.content, "p-fileupload-highlight");
        this.$refs.content.setAttribute("data-p-highlight", false);
      }
    }, "onDragLeave"),
    onDrop: /* @__PURE__ */ __name(function onDrop(event2) {
      if (!this.disabled) {
        !this.isUnstyled && removeClass(this.$refs.content, "p-fileupload-highlight");
        this.$refs.content.setAttribute("data-p-highlight", false);
        event2.stopPropagation();
        event2.preventDefault();
        var files = event2.dataTransfer ? event2.dataTransfer.files : event2.target.files;
        var allowDrop = this.multiple || files && files.length === 1;
        if (allowDrop) {
          this.onFileSelect(event2);
        }
      }
    }, "onDrop"),
    remove: /* @__PURE__ */ __name(function remove(index) {
      this.clearInputElement();
      var removedFile = this.files.splice(index, 1)[0];
      this.files = _toConsumableArray$9(this.files);
      this.$emit("remove", {
        file: removedFile,
        files: this.files
      });
    }, "remove"),
    removeUploadedFile: /* @__PURE__ */ __name(function removeUploadedFile(index) {
      var removedFile = this.uploadedFiles.splice(index, 1)[0];
      this.uploadedFiles = _toConsumableArray$9(this.uploadedFiles);
      this.$emit("remove-uploaded-file", {
        file: removedFile,
        files: this.uploadedFiles
      });
    }, "removeUploadedFile"),
    clearInputElement: /* @__PURE__ */ __name(function clearInputElement() {
      this.$refs.fileInput.value = "";
    }, "clearInputElement"),
    clearIEInput: /* @__PURE__ */ __name(function clearIEInput() {
      if (this.$refs.fileInput) {
        this.duplicateIEEvent = true;
        this.$refs.fileInput.value = "";
      }
    }, "clearIEInput"),
    formatSize: /* @__PURE__ */ __name(function formatSize2(bytes) {
      var _this$$primevue$confi;
      var k = 1024;
      var dm = 3;
      var sizes = ((_this$$primevue$confi = this.$primevue.config.locale) === null || _this$$primevue$confi === void 0 ? void 0 : _this$$primevue$confi.fileSizeTypes) || ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
      if (bytes === 0) {
        return "0 ".concat(sizes[0]);
      }
      var i = Math.floor(Math.log(bytes) / Math.log(k));
      var formattedSize = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));
      return "".concat(formattedSize, " ").concat(sizes[i]);
    }, "formatSize"),
    isFileLimitExceeded: /* @__PURE__ */ __name(function isFileLimitExceeded() {
      if (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount && this.focused) {
        this.focused = false;
      }
      return this.fileLimit && this.fileLimit < this.files.length + this.uploadedFileCount;
    }, "isFileLimitExceeded"),
    checkFileLimit: /* @__PURE__ */ __name(function checkFileLimit() {
      if (this.isFileLimitExceeded()) {
        this.messages.push(this.invalidFileLimitMessage.replace("{0}", this.fileLimit.toString()));
      }
    }, "checkFileLimit"),
    onMessageClose: /* @__PURE__ */ __name(function onMessageClose() {
      this.messages = null;
    }, "onMessageClose")
  },
  computed: {
    isAdvanced: /* @__PURE__ */ __name(function isAdvanced() {
      return this.mode === "advanced";
    }, "isAdvanced"),
    isBasic: /* @__PURE__ */ __name(function isBasic() {
      return this.mode === "basic";
    }, "isBasic"),
    chooseButtonClass: /* @__PURE__ */ __name(function chooseButtonClass() {
      return [this.cx("pcChooseButton"), this["class"]];
    }, "chooseButtonClass"),
    basicFileChosenLabel: /* @__PURE__ */ __name(function basicFileChosenLabel() {
      var _this$$primevue$confi3;
      if (this.auto) return this.chooseButtonLabel;
      else if (this.hasFiles) {
        var _this$$primevue$confi2;
        if (this.files && this.files.length === 1) return this.files[0].name;
        return (_this$$primevue$confi2 = this.$primevue.config.locale) === null || _this$$primevue$confi2 === void 0 || (_this$$primevue$confi2 = _this$$primevue$confi2.fileChosenMessage) === null || _this$$primevue$confi2 === void 0 ? void 0 : _this$$primevue$confi2.replace("{0}", this.files.length);
      }
      return ((_this$$primevue$confi3 = this.$primevue.config.locale) === null || _this$$primevue$confi3 === void 0 ? void 0 : _this$$primevue$confi3.noFileChosenMessage) || "";
    }, "basicFileChosenLabel"),
    hasFiles: /* @__PURE__ */ __name(function hasFiles() {
      return this.files && this.files.length > 0;
    }, "hasFiles"),
    hasUploadedFiles: /* @__PURE__ */ __name(function hasUploadedFiles() {
      return this.uploadedFiles && this.uploadedFiles.length > 0;
    }, "hasUploadedFiles"),
    chooseDisabled: /* @__PURE__ */ __name(function chooseDisabled() {
      return this.disabled || this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount;
    }, "chooseDisabled"),
    uploadDisabled: /* @__PURE__ */ __name(function uploadDisabled() {
      return this.disabled || !this.hasFiles || this.fileLimit && this.fileLimit < this.files.length;
    }, "uploadDisabled"),
    cancelDisabled: /* @__PURE__ */ __name(function cancelDisabled() {
      return this.disabled || !this.hasFiles;
    }, "cancelDisabled"),
    chooseButtonLabel: /* @__PURE__ */ __name(function chooseButtonLabel() {
      return this.chooseLabel || this.$primevue.config.locale.choose;
    }, "chooseButtonLabel"),
    uploadButtonLabel: /* @__PURE__ */ __name(function uploadButtonLabel() {
      return this.uploadLabel || this.$primevue.config.locale.upload;
    }, "uploadButtonLabel"),
    cancelButtonLabel: /* @__PURE__ */ __name(function cancelButtonLabel() {
      return this.cancelLabel || this.$primevue.config.locale.cancel;
    }, "cancelButtonLabel"),
    completedLabel: /* @__PURE__ */ __name(function completedLabel() {
      return this.$primevue.config.locale.completed;
    }, "completedLabel"),
    pendingLabel: /* @__PURE__ */ __name(function pendingLabel() {
      return this.$primevue.config.locale.pending;
    }, "pendingLabel")
  },
  components: {
    Button: script$1e,
    ProgressBar: script$1A,
    Message: script$1B,
    FileContent: script$1$w,
    PlusIcon: script$1x,
    UploadIcon: script$R,
    TimesIcon: script$1g
  },
  directives: {
    ripple: Ripple
  }
};
var _hoisted_1$n = ["multiple", "accept", "disabled"];
var _hoisted_2$g = ["files"];
var _hoisted_3$d = ["accept", "disabled", "multiple"];
function render$L(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Button = resolveComponent("Button");
  var _component_ProgressBar = resolveComponent("ProgressBar");
  var _component_Message = resolveComponent("Message");
  var _component_FileContent = resolveComponent("FileContent");
  return $options.isAdvanced ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createBaseVNode("input", mergeProps({
    ref: "fileInput",
    type: "file",
    onChange: _cache[0] || (_cache[0] = function() {
      return $options.onFileSelect && $options.onFileSelect.apply($options, arguments);
    }),
    multiple: _ctx.multiple,
    accept: _ctx.accept,
    disabled: $options.chooseDisabled
  }, _ctx.ptm("input")), null, 16, _hoisted_1$n), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("header")
  }, _ctx.ptm("header")), [renderSlot(_ctx.$slots, "header", {
    files: $data.files,
    uploadedFiles: $data.uploadedFiles,
    chooseCallback: $options.choose,
    uploadCallback: $options.uploader,
    clearCallback: $options.clear
  }, function() {
    return [createVNode(_component_Button, mergeProps({
      label: $options.chooseButtonLabel,
      "class": $options.chooseButtonClass,
      style: _ctx.style,
      disabled: _ctx.disabled,
      unstyled: _ctx.unstyled,
      onClick: $options.choose,
      onKeydown: withKeys($options.choose, ["enter"]),
      onFocus: $options.onFocus,
      onBlur: $options.onBlur
    }, _ctx.chooseButtonProps, {
      pt: _ctx.ptm("pcChooseButton")
    }), {
      icon: withCtx(function(iconProps) {
        return [renderSlot(_ctx.$slots, "chooseicon", {}, function() {
          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.chooseIcon ? "span" : "PlusIcon"), mergeProps({
            "class": [iconProps["class"], _ctx.chooseIcon],
            "aria-hidden": "true"
          }, _ctx.ptm("pcChooseButton")["icon"]), null, 16, ["class"]))];
        })];
      }),
      _: 3
    }, 16, ["label", "class", "style", "disabled", "unstyled", "onClick", "onKeydown", "onFocus", "onBlur", "pt"]), _ctx.showUploadButton ? (openBlock(), createBlock(_component_Button, mergeProps({
      key: 0,
      "class": _ctx.cx("pcUploadButton"),
      label: $options.uploadButtonLabel,
      onClick: $options.uploader,
      disabled: $options.uploadDisabled,
      unstyled: _ctx.unstyled
    }, _ctx.uploadButtonProps, {
      pt: _ctx.ptm("pcUploadButton")
    }), {
      icon: withCtx(function(iconProps) {
        return [renderSlot(_ctx.$slots, "uploadicon", {}, function() {
          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.uploadIcon ? "span" : "UploadIcon"), mergeProps({
            "class": [iconProps["class"], _ctx.uploadIcon],
            "aria-hidden": "true"
          }, _ctx.ptm("pcUploadButton")["icon"], {
            "data-pc-section": "uploadbuttonicon"
          }), null, 16, ["class"]))];
        })];
      }),
      _: 3
    }, 16, ["class", "label", "onClick", "disabled", "unstyled", "pt"])) : createCommentVNode("", true), _ctx.showCancelButton ? (openBlock(), createBlock(_component_Button, mergeProps({
      key: 1,
      "class": _ctx.cx("pcCancelButton"),
      label: $options.cancelButtonLabel,
      onClick: $options.clear,
      disabled: $options.cancelDisabled,
      unstyled: _ctx.unstyled
    }, _ctx.cancelButtonProps, {
      pt: _ctx.ptm("pcCancelButton")
    }), {
      icon: withCtx(function(iconProps) {
        return [renderSlot(_ctx.$slots, "cancelicon", {}, function() {
          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.cancelIcon ? "span" : "TimesIcon"), mergeProps({
            "class": [iconProps["class"], _ctx.cancelIcon],
            "aria-hidden": "true"
          }, _ctx.ptm("pcCancelButton")["icon"], {
            "data-pc-section": "cancelbuttonicon"
          }), null, 16, ["class"]))];
        })];
      }),
      _: 3
    }, 16, ["class", "label", "onClick", "disabled", "unstyled", "pt"])) : createCommentVNode("", true)];
  })], 16), createBaseVNode("div", mergeProps({
    ref: "content",
    "class": _ctx.cx("content"),
    onDragenter: _cache[1] || (_cache[1] = function() {
      return $options.onDragEnter && $options.onDragEnter.apply($options, arguments);
    }),
    onDragover: _cache[2] || (_cache[2] = function() {
      return $options.onDragOver && $options.onDragOver.apply($options, arguments);
    }),
    onDragleave: _cache[3] || (_cache[3] = function() {
      return $options.onDragLeave && $options.onDragLeave.apply($options, arguments);
    }),
    onDrop: _cache[4] || (_cache[4] = function() {
      return $options.onDrop && $options.onDrop.apply($options, arguments);
    })
  }, _ctx.ptm("content"), {
    "data-p-highlight": false
  }), [renderSlot(_ctx.$slots, "content", {
    files: $data.files,
    uploadedFiles: $data.uploadedFiles,
    removeUploadedFileCallback: $options.removeUploadedFile,
    removeFileCallback: $options.remove,
    progress: $data.progress,
    messages: $data.messages
  }, function() {
    return [$options.hasFiles ? (openBlock(), createBlock(_component_ProgressBar, {
      key: 0,
      value: $data.progress,
      showValue: false,
      unstyled: _ctx.unstyled,
      pt: _ctx.ptm("pcProgressbar")
    }, null, 8, ["value", "unstyled", "pt"])) : createCommentVNode("", true), (openBlock(true), createElementBlock(Fragment, null, renderList($data.messages, function(msg) {
      return openBlock(), createBlock(_component_Message, {
        key: msg,
        severity: "error",
        onClose: $options.onMessageClose,
        unstyled: _ctx.unstyled,
        pt: _ctx.ptm("pcMessage")
      }, {
        "default": withCtx(function() {
          return [createTextVNode(toDisplayString(msg), 1)];
        }),
        _: 2
      }, 1032, ["onClose", "unstyled", "pt"]);
    }), 128)), $options.hasFiles ? (openBlock(), createElementBlock("div", {
      key: 1,
      "class": normalizeClass(_ctx.cx("fileList"))
    }, [createVNode(_component_FileContent, {
      files: $data.files,
      onRemove: $options.remove,
      badgeValue: $options.pendingLabel,
      previewWidth: _ctx.previewWidth,
      templates: _ctx.$slots,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["files", "onRemove", "badgeValue", "previewWidth", "templates", "unstyled", "pt"])], 2)) : createCommentVNode("", true), $options.hasUploadedFiles ? (openBlock(), createElementBlock("div", {
      key: 2,
      "class": normalizeClass(_ctx.cx("fileList"))
    }, [createVNode(_component_FileContent, {
      files: $data.uploadedFiles,
      onRemove: $options.removeUploadedFile,
      badgeValue: $options.completedLabel,
      badgeSeverity: "success",
      previewWidth: _ctx.previewWidth,
      templates: _ctx.$slots,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["files", "onRemove", "badgeValue", "previewWidth", "templates", "unstyled", "pt"])], 2)) : createCommentVNode("", true)];
  }), _ctx.$slots.empty && !$options.hasFiles && !$options.hasUploadedFiles ? (openBlock(), createElementBlock("div", normalizeProps(mergeProps({
    key: 0
  }, _ctx.ptm("empty"))), [renderSlot(_ctx.$slots, "empty")], 16)) : createCommentVNode("", true)], 16)], 16)) : $options.isBasic ? (openBlock(), createElementBlock("div", mergeProps({
    key: 1,
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [(openBlock(true), createElementBlock(Fragment, null, renderList($data.messages, function(msg) {
    return openBlock(), createBlock(_component_Message, {
      key: msg,
      severity: "error",
      onClose: $options.onMessageClose,
      unstyled: _ctx.unstyled,
      pt: _ctx.ptm("pcMessage")
    }, {
      "default": withCtx(function() {
        return [createTextVNode(toDisplayString(msg), 1)];
      }),
      _: 2
    }, 1032, ["onClose", "unstyled", "pt"]);
  }), 128)), createVNode(_component_Button, mergeProps({
    label: $options.chooseButtonLabel,
    "class": $options.chooseButtonClass,
    style: _ctx.style,
    disabled: _ctx.disabled,
    unstyled: _ctx.unstyled,
    onMouseup: $options.onBasicUploaderClick,
    onKeydown: withKeys($options.choose, ["enter"]),
    onFocus: $options.onFocus,
    onBlur: $options.onBlur
  }, _ctx.chooseButtonProps, {
    pt: _ctx.ptm("pcChooseButton")
  }), {
    icon: withCtx(function(iconProps) {
      return [renderSlot(_ctx.$slots, "chooseicon", {}, function() {
        return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.chooseIcon ? "span" : "PlusIcon"), mergeProps({
          "class": [iconProps["class"], _ctx.chooseIcon],
          "aria-hidden": "true"
        }, _ctx.ptm("pcChooseButton")["icon"]), null, 16, ["class"]))];
      })];
    }),
    _: 3
  }, 16, ["label", "class", "style", "disabled", "unstyled", "onMouseup", "onKeydown", "onFocus", "onBlur", "pt"]), !_ctx.auto ? renderSlot(_ctx.$slots, "filelabel", {
    key: 0,
    "class": normalizeClass(_ctx.cx("filelabel"))
  }, function() {
    return [createBaseVNode("span", {
      "class": normalizeClass(_ctx.cx("filelabel")),
      files: $data.files
    }, toDisplayString($options.basicFileChosenLabel), 11, _hoisted_2$g)];
  }) : createCommentVNode("", true), createBaseVNode("input", mergeProps({
    ref: "fileInput",
    type: "file",
    accept: _ctx.accept,
    disabled: _ctx.disabled,
    multiple: _ctx.multiple,
    onChange: _cache[5] || (_cache[5] = function() {
      return $options.onFileSelect && $options.onFileSelect.apply($options, arguments);
    }),
    onFocus: _cache[6] || (_cache[6] = function() {
      return $options.onFocus && $options.onFocus.apply($options, arguments);
    }),
    onBlur: _cache[7] || (_cache[7] = function() {
      return $options.onBlur && $options.onBlur.apply($options, arguments);
    })
  }, _ctx.ptm("input")), null, 16, _hoisted_3$d)], 16)) : createCommentVNode("", true);
}
__name(render$L, "render$L");
script$Q.render = render$L;
var classes$v = {
  root: "p-fluid"
};
var FluidStyle = BaseStyle.extend({
  name: "fluid",
  classes: classes$v
});
var script$1$v = {
  name: "BaseFluid",
  "extends": script$1d,
  style: FluidStyle,
  provide: /* @__PURE__ */ __name(function provide20() {
    return {
      $pcFluid: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$P = {
  name: "Fluid",
  "extends": script$1$v,
  inheritAttrs: false
};
function render$K(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
__name(render$K, "render$K");
script$P.render = render$K;
var theme$r = /* @__PURE__ */ __name(function theme13(_ref) {
  var dt = _ref.dt;
  return "\n.p-iftalabel {\n    display: block;\n    position: relative;\n}\n\n.p-iftalabel label {\n    position: absolute;\n    pointer-events: none;\n    top: ".concat(dt("iftalabel.top"), ";\n    transition-property: all;\n    transition-timing-function: ease;\n    line-height: 1;\n    font-size: ").concat(dt("iftalabel.font.size"), ";\n    font-weight: ").concat(dt("iftalabel.font.weight"), ";\n    inset-inline-start: ").concat(dt("iftalabel.position.x"), ";\n    color: ").concat(dt("iftalabel.color"), ";\n    transition-duration: ").concat(dt("iftalabel.transition.duration"), ";\n}\n\n.p-iftalabel .p-inputtext,\n.p-iftalabel .p-textarea,\n.p-iftalabel .p-select-label,\n.p-iftalabel .p-multiselect-label,\n.p-iftalabel .p-autocomplete-input-multiple,\n.p-iftalabel .p-cascadeselect-label,\n.p-iftalabel .p-treeselect-label {\n    padding-block-start: ").concat(dt("iftalabel.input.padding.top"), ";\n    padding-block-end: ").concat(dt("iftalabel.input.padding.bottom"), ";\n}\n\n.p-iftalabel:has(.p-invalid) label {\n    color: ").concat(dt("iftalabel.invalid.color"), ";\n}\n\n.p-iftalabel:has(input:focus) label,\n.p-iftalabel:has(input:-webkit-autofill) label,\n.p-iftalabel:has(textarea:focus) label,\n.p-iftalabel:has(.p-inputwrapper-focus) label {\n    color: ").concat(dt("iftalabel.focus.color"), ";\n}\n\n.p-iftalabel .p-inputicon {\n    top: ").concat(dt("iftalabel.input.padding.top"), ";\n    transform: translateY(25%);\n    margin-top: 0;\n}\n");
}, "theme");
var classes$u = {
  root: "p-iftalabel"
};
var IftaLabelStyle = BaseStyle.extend({
  name: "iftalabel",
  theme: theme$r,
  classes: classes$u
});
var script$1$u = {
  name: "BaseIftaLabel",
  "extends": script$1d,
  style: IftaLabelStyle,
  provide: /* @__PURE__ */ __name(function provide21() {
    return {
      $pcIftaLabel: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$O = {
  name: "IftaLabel",
  "extends": script$1$u,
  inheritAttrs: false
};
function render$J(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("span", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
__name(render$J, "render$J");
script$O.render = render$J;
var script$N = {
  name: "EyeIcon",
  "extends": script$1m
};
function render$I(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M0.0535499 7.25213C0.208567 7.59162 2.40413 12.4 7 12.4C11.5959 12.4 13.7914 7.59162 13.9465 7.25213C13.9487 7.2471 13.9506 7.24304 13.952 7.24001C13.9837 7.16396 14 7.08239 14 7.00001C14 6.91762 13.9837 6.83605 13.952 6.76001C13.9506 6.75697 13.9487 6.75292 13.9465 6.74788C13.7914 6.4084 11.5959 1.60001 7 1.60001C2.40413 1.60001 0.208567 6.40839 0.0535499 6.74788C0.0512519 6.75292 0.0494023 6.75697 0.048 6.76001C0.0163137 6.83605 0 6.91762 0 7.00001C0 7.08239 0.0163137 7.16396 0.048 7.24001C0.0494023 7.24304 0.0512519 7.2471 0.0535499 7.25213ZM7 11.2C3.664 11.2 1.736 7.92001 1.264 7.00001C1.736 6.08001 3.664 2.80001 7 2.80001C10.336 2.80001 12.264 6.08001 12.736 7.00001C12.264 7.92001 10.336 11.2 7 11.2ZM5.55551 9.16182C5.98308 9.44751 6.48576 9.6 7 9.6C7.68891 9.59789 8.349 9.32328 8.83614 8.83614C9.32328 8.349 9.59789 7.68891 9.59999 7C9.59999 6.48576 9.44751 5.98308 9.16182 5.55551C8.87612 5.12794 8.47006 4.7947 7.99497 4.59791C7.51988 4.40112 6.99711 4.34963 6.49276 4.44995C5.98841 4.55027 5.52513 4.7979 5.16152 5.16152C4.7979 5.52513 4.55027 5.98841 4.44995 6.49276C4.34963 6.99711 4.40112 7.51988 4.59791 7.99497C4.7947 8.47006 5.12794 8.87612 5.55551 9.16182ZM6.2222 5.83594C6.45243 5.6821 6.7231 5.6 7 5.6C7.37065 5.6021 7.72553 5.75027 7.98762 6.01237C8.24972 6.27446 8.39789 6.62934 8.4 7C8.4 7.27689 8.31789 7.54756 8.16405 7.77779C8.01022 8.00802 7.79157 8.18746 7.53575 8.29343C7.27994 8.39939 6.99844 8.42711 6.72687 8.37309C6.4553 8.31908 6.20584 8.18574 6.01005 7.98994C5.81425 7.79415 5.68091 7.54469 5.6269 7.27312C5.57288 7.00155 5.6006 6.72006 5.70656 6.46424C5.81253 6.20842 5.99197 5.98977 6.2222 5.83594Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$I, "render$I");
script$N.render = render$I;
var script$M = {
  name: "RefreshIcon",
  "extends": script$1m
};
function render$H(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M6.77051 5.96336C6.84324 5.99355 6.92127 6.00891 7.00002 6.00854C7.07877 6.00891 7.1568 5.99355 7.22953 5.96336C7.30226 5.93317 7.36823 5.88876 7.42357 5.83273L9.82101 3.43529C9.93325 3.32291 9.99629 3.17058 9.99629 3.01175C9.99629 2.85292 9.93325 2.70058 9.82101 2.5882L7.42357 0.190763C7.3687 0.131876 7.30253 0.0846451 7.22901 0.0518865C7.15549 0.019128 7.07612 0.00151319 6.99564 9.32772e-05C6.91517 -0.00132663 6.83523 0.0134773 6.7606 0.0436218C6.68597 0.0737664 6.61817 0.118634 6.56126 0.175548C6.50435 0.232462 6.45948 0.300257 6.42933 0.374888C6.39919 0.449519 6.38439 0.529456 6.38581 0.609933C6.38722 0.690409 6.40484 0.769775 6.4376 0.843296C6.47036 0.916817 6.51759 0.982986 6.57647 1.03786L7.95103 2.41241H6.99998C5.46337 2.41241 3.98969 3.02283 2.90314 4.10938C1.81659 5.19593 1.20618 6.66961 1.20618 8.20622C1.20618 9.74283 1.81659 11.2165 2.90314 12.3031C3.98969 13.3896 5.46337 14 6.99998 14C8.53595 13.9979 10.0084 13.3868 11.0945 12.3007C12.1806 11.2146 12.7917 9.74218 12.7938 8.20622C12.7938 8.04726 12.7306 7.89481 12.6182 7.78241C12.5058 7.67001 12.3534 7.60686 12.1944 7.60686C12.0355 7.60686 11.883 7.67001 11.7706 7.78241C11.6582 7.89481 11.5951 8.04726 11.5951 8.20622C11.5951 9.11504 11.3256 10.0035 10.8207 10.7591C10.3157 11.5148 9.59809 12.1037 8.75845 12.4515C7.9188 12.7993 6.99489 12.8903 6.10353 12.713C5.21217 12.5357 4.3934 12.0981 3.75077 11.4554C3.10813 10.8128 2.67049 9.99404 2.49319 9.10268C2.31589 8.21132 2.40688 7.2874 2.75468 6.44776C3.10247 5.60811 3.69143 4.89046 4.44709 4.38554C5.20275 3.88063 6.09116 3.61113 6.99998 3.61113H7.95098L6.57647 4.98564C6.46423 5.09802 6.40119 5.25035 6.40119 5.40918C6.40119 5.56801 6.46423 5.72035 6.57647 5.83273C6.63181 5.88876 6.69778 5.93317 6.77051 5.96336Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$H, "render$H");
script$M.render = render$H;
var script$L = {
  name: "SearchMinusIcon",
  "extends": script$1m
};
function render$G(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M6.0208 12.0411C4.83005 12.0411 3.66604 11.688 2.67596 11.0265C1.68589 10.3649 0.914216 9.42464 0.458534 8.32452C0.00285271 7.22441 -0.116374 6.01388 0.11593 4.84601C0.348235 3.67813 0.921637 2.60537 1.76363 1.76338C2.60562 0.921393 3.67838 0.34799 4.84625 0.115686C6.01412 -0.116618 7.22466 0.00260857 8.32477 0.45829C9.42488 0.913972 10.3652 1.68564 11.0267 2.67572C11.6883 3.66579 12.0414 4.8298 12.0414 6.02056C12.0395 7.41563 11.5542 8.76029 10.6783 9.8305L13.8244 12.9765C13.9367 13.089 13.9997 13.2414 13.9997 13.4003C13.9997 13.5592 13.9367 13.7116 13.8244 13.8241C13.769 13.8801 13.703 13.9245 13.6302 13.9548C13.5575 13.985 13.4794 14.0003 13.4006 14C13.3218 14.0003 13.2437 13.985 13.171 13.9548C13.0982 13.9245 13.0322 13.8801 12.9768 13.8241L9.83082 10.678C8.76059 11.5539 7.4159 12.0393 6.0208 12.0411ZM6.0208 1.20731C5.07199 1.20731 4.14449 1.48867 3.35559 2.0158C2.56669 2.54292 1.95181 3.29215 1.58872 4.16874C1.22562 5.04532 1.13062 6.00989 1.31572 6.94046C1.50083 7.87104 1.95772 8.72583 2.62863 9.39674C3.29954 10.0676 4.15433 10.5245 5.0849 10.7096C6.01548 10.8947 6.98005 10.7997 7.85663 10.4367C8.73322 10.0736 9.48244 9.45868 10.0096 8.66978C10.5367 7.88088 10.8181 6.95337 10.8181 6.00457C10.8181 4.73226 10.3126 3.51206 9.41297 2.6124C8.51331 1.71274 7.29311 1.20731 6.0208 1.20731ZM4.00591 6.60422H8.00362C8.16266 6.60422 8.31518 6.54104 8.42764 6.42859C8.5401 6.31613 8.60328 6.1636 8.60328 6.00456C8.60328 5.84553 8.5401 5.693 8.42764 5.58054C8.31518 5.46809 8.16266 5.40491 8.00362 5.40491H4.00591C3.84687 5.40491 3.69434 5.46809 3.58189 5.58054C3.46943 5.693 3.40625 5.84553 3.40625 6.00456C3.40625 6.1636 3.46943 6.31613 3.58189 6.42859C3.69434 6.54104 3.84687 6.60422 4.00591 6.60422Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$G, "render$G");
script$L.render = render$G;
var script$K = {
  name: "SearchPlusIcon",
  "extends": script$1m
};
function render$F(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M2.67596 11.0265C3.66604 11.688 4.83005 12.0411 6.0208 12.0411C6.81143 12.0411 7.59432 11.8854 8.32477 11.5828C8.86999 11.357 9.37802 11.0526 9.83311 10.6803L12.9768 13.8241C13.0322 13.8801 13.0982 13.9245 13.171 13.9548C13.2437 13.985 13.3218 14.0003 13.4006 14C13.4794 14.0003 13.5575 13.985 13.6302 13.9548C13.703 13.9245 13.769 13.8801 13.8244 13.8241C13.9367 13.7116 13.9997 13.5592 13.9997 13.4003C13.9997 13.2414 13.9367 13.089 13.8244 12.9765L10.6806 9.8328C11.0529 9.37773 11.3572 8.86972 11.5831 8.32452C11.8856 7.59408 12.0414 6.81119 12.0414 6.02056C12.0414 4.8298 11.6883 3.66579 11.0267 2.67572C10.3652 1.68564 9.42488 0.913972 8.32477 0.45829C7.22466 0.00260857 6.01412 -0.116618 4.84625 0.115686C3.67838 0.34799 2.60562 0.921393 1.76363 1.76338C0.921637 2.60537 0.348235 3.67813 0.11593 4.84601C-0.116374 6.01388 0.00285271 7.22441 0.458534 8.32452C0.914216 9.42464 1.68589 10.3649 2.67596 11.0265ZM3.35559 2.0158C4.14449 1.48867 5.07199 1.20731 6.0208 1.20731C7.29311 1.20731 8.51331 1.71274 9.41297 2.6124C10.3126 3.51206 10.8181 4.73226 10.8181 6.00457C10.8181 6.95337 10.5367 7.88088 10.0096 8.66978C9.48244 9.45868 8.73322 10.0736 7.85663 10.4367C6.98005 10.7997 6.01548 10.8947 5.0849 10.7096C4.15433 10.5245 3.29954 10.0676 2.62863 9.39674C1.95772 8.72583 1.50083 7.87104 1.31572 6.94046C1.13062 6.00989 1.22562 5.04532 1.58872 4.16874C1.95181 3.29215 2.56669 2.54292 3.35559 2.0158ZM6.00481 8.60309C5.84641 8.60102 5.69509 8.53718 5.58308 8.42517C5.47107 8.31316 5.40722 8.16183 5.40515 8.00344V6.60422H4.00591C3.84687 6.60422 3.69434 6.54104 3.58189 6.42859C3.46943 6.31613 3.40625 6.1636 3.40625 6.00456C3.40625 5.84553 3.46943 5.693 3.58189 5.58054C3.69434 5.46809 3.84687 5.40491 4.00591 5.40491H5.40515V4.00572C5.40515 3.84668 5.46833 3.69416 5.58079 3.5817C5.69324 3.46924 5.84577 3.40607 6.00481 3.40607C6.16385 3.40607 6.31637 3.46924 6.42883 3.5817C6.54129 3.69416 6.60447 3.84668 6.60447 4.00572V5.40491H8.00362C8.16266 5.40491 8.31518 5.46809 8.42764 5.58054C8.5401 5.693 8.60328 5.84553 8.60328 6.00456C8.60328 6.1636 8.5401 6.31613 8.42764 6.42859C8.31518 6.54104 8.16266 6.60422 8.00362 6.60422H6.60447V8.00344C6.60239 8.16183 6.53855 8.31316 6.42654 8.42517C6.31453 8.53718 6.1632 8.60102 6.00481 8.60309Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$F, "render$F");
script$K.render = render$F;
var script$J = {
  name: "UndoIcon",
  "extends": script$1m
};
function render$E(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M6.77042 5.96336C6.84315 5.99355 6.92118 6.00891 6.99993 6.00854C7.07868 6.00891 7.15671 5.99355 7.22944 5.96336C7.30217 5.93317 7.36814 5.88876 7.42348 5.83273C7.53572 5.72035 7.59876 5.56801 7.59876 5.40918C7.59876 5.25035 7.53572 5.09802 7.42348 4.98564L6.04897 3.61113H6.99998C7.9088 3.61113 8.79722 3.88063 9.55288 4.38554C10.3085 4.89046 10.8975 5.60811 11.2453 6.44776C11.5931 7.2874 11.6841 8.21132 11.5068 9.10268C11.3295 9.99404 10.8918 10.8128 10.2492 11.4554C9.60657 12.0981 8.7878 12.5357 7.89644 12.713C7.00508 12.8903 6.08116 12.7993 5.24152 12.4515C4.40188 12.1037 3.68422 11.5148 3.17931 10.7591C2.67439 10.0035 2.4049 9.11504 2.4049 8.20622C2.4049 8.04726 2.34175 7.89481 2.22935 7.78241C2.11695 7.67001 1.9645 7.60686 1.80554 7.60686C1.64658 7.60686 1.49413 7.67001 1.38172 7.78241C1.26932 7.89481 1.20618 8.04726 1.20618 8.20622C1.20829 9.74218 1.81939 11.2146 2.90548 12.3007C3.99157 13.3868 5.46402 13.9979 6.99998 14C8.5366 14 10.0103 13.3896 11.0968 12.3031C12.1834 11.2165 12.7938 9.74283 12.7938 8.20622C12.7938 6.66961 12.1834 5.19593 11.0968 4.10938C10.0103 3.02283 8.5366 2.41241 6.99998 2.41241H6.04892L7.42348 1.03786C7.48236 0.982986 7.5296 0.916817 7.56235 0.843296C7.59511 0.769775 7.61273 0.690409 7.61415 0.609933C7.61557 0.529456 7.60076 0.449519 7.57062 0.374888C7.54047 0.300257 7.49561 0.232462 7.43869 0.175548C7.38178 0.118634 7.31398 0.0737664 7.23935 0.0436218C7.16472 0.0134773 7.08478 -0.00132663 7.00431 9.32772e-05C6.92383 0.00151319 6.84447 0.019128 6.77095 0.0518865C6.69742 0.0846451 6.63126 0.131876 6.57638 0.190763L4.17895 2.5882C4.06671 2.70058 4.00366 2.85292 4.00366 3.01175C4.00366 3.17058 4.06671 3.32291 4.17895 3.43529L6.57638 5.83273C6.63172 5.88876 6.69769 5.93317 6.77042 5.96336Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$E, "render$E");
script$J.render = render$E;
var theme$q = /* @__PURE__ */ __name(function theme14(_ref) {
  var dt = _ref.dt;
  return "\n.p-image-mask {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.p-image-preview {\n    position: relative;\n    display: inline-flex;\n    line-height: 0;\n}\n\n.p-image-preview-mask {\n    position: absolute;\n    inset-inline-start: 0;\n    inset-block-start: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0;\n    transition: opacity 0.3s;\n    border: 0 none;\n    padding: 0;\n    cursor: pointer;\n    background: transparent;\n    color: ".concat(dt("image.preview.mask.color"), ";\n    transition: background ").concat(dt("image.transition.duration"), ";\n}\n\n.p-image-preview:hover > .p-image-preview-mask {\n    opacity: 1;\n    cursor: pointer;\n    background: ").concat(dt("image.preview.mask.background"), ";\n}\n\n.p-image-preview-icon {\n    font-size: ").concat(dt("image.preview.icon.size"), ";\n    width: ").concat(dt("image.preview.icon.size"), ";\n    height: ").concat(dt("image.preview.icon.size"), ";\n}\n\n.p-image-toolbar {\n    position: absolute;\n    inset-block-start: ").concat(dt("image.toolbar.position.top"), ";\n    inset-inline-end: ").concat(dt("image.toolbar.position.right"), ";\n    inset-inline-start: ").concat(dt("image.toolbar.position.left"), ";\n    inset-block-end: ").concat(dt("image.toolbar.position.bottom"), ";\n    display: flex;\n    z-index: 1;\n    padding: ").concat(dt("image.toolbar.padding"), ";\n    background: ").concat(dt("image.toolbar.background"), ";\n    backdrop-filter: blur(").concat(dt("image.toolbar.blur"), ");\n    border-color: ").concat(dt("image.toolbar.border.color"), ";\n    border-style: solid;\n    border-width: ").concat(dt("image.toolbar.border.width"), ";\n    border-radius: ").concat(dt("image.toolbar.border.radius"), ";\n    gap: ").concat(dt("image.toolbar.gap"), ";\n}\n\n.p-image-action {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    color: ").concat(dt("image.action.color"), ";\n    background: transparent;\n    width: ").concat(dt("image.action.size"), ";\n    height: ").concat(dt("image.action.size"), ";\n    margin: 0;\n    padding: 0;\n    border: 0 none;\n    cursor: pointer;\n    user-select: none;\n    border-radius: ").concat(dt("image.action.border.radius"), ";\n    outline-color: transparent;\n    transition: background ").concat(dt("image.transition.duration"), ", color ").concat(dt("image.transition.duration"), ", outline-color ").concat(dt("image.transition.duration"), ", box-shadow ").concat(dt("image.transition.duration"), ";\n}\n\n.p-image-action:hover {\n    color: ").concat(dt("image.action.hover.color"), ";\n    background: ").concat(dt("image.action.hover.background"), ";\n}\n\n.p-image-action:focus-visible {\n    box-shadow: ").concat(dt("image.action.focus.ring.shadow"), ";\n    outline: ").concat(dt("image.action.focus.ring.width"), " ").concat(dt("image.action.focus.ring.style"), " ").concat(dt("image.action.focus.ring.color"), ";\n    outline-offset: ").concat(dt("image.action.focus.ring.offset"), ";\n}\n\n.p-image-action .p-icon {\n    font-size: ").concat(dt("image.action.icon.size"), ";\n    width: ").concat(dt("image.action.icon.size"), ";\n    height: ").concat(dt("image.action.icon.size"), ";\n}\n\n.p-image-action.p-disabled {\n    pointer-events: auto;\n}\n\n.p-image-original {\n    transition: transform 0.15s;\n    max-width: 100vw;\n    max-height: 100vh;\n}\n\n.p-image-original-enter-active {\n    transition: all 150ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.p-image-original-leave-active {\n    transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.p-image-original-enter-from,\n.p-image-original-leave-to {\n    opacity: 0;\n    transform: scale(0.7);\n}\n");
}, "theme");
var classes$t = {
  root: /* @__PURE__ */ __name(function root13(_ref2) {
    var props = _ref2.props;
    return ["p-image p-component", {
      "p-image-preview": props.preview
    }];
  }, "root"),
  previewMask: "p-image-preview-mask",
  previewIcon: "p-image-preview-icon",
  mask: "p-image-mask p-overlay-mask p-overlay-mask-enter",
  toolbar: "p-image-toolbar",
  rotateRightButton: "p-image-action p-image-rotate-right-button",
  rotateLeftButton: "p-image-action p-image-rotate-left-button",
  zoomOutButton: /* @__PURE__ */ __name(function zoomOutButton(_ref3) {
    var instance = _ref3.instance;
    return ["p-image-action p-image-zoom-out-button", {
      "p-disabled": instance.isZoomOutDisabled
    }];
  }, "zoomOutButton"),
  zoomInButton: /* @__PURE__ */ __name(function zoomInButton(_ref4) {
    var instance = _ref4.instance;
    return ["p-image-action p-image-zoom-in-button", {
      "p-disabled": instance.isZoomInDisabled
    }];
  }, "zoomInButton"),
  closeButton: "p-image-action p-image-close-button",
  original: "p-image-original"
};
var ImageStyle = BaseStyle.extend({
  name: "image",
  theme: theme$q,
  classes: classes$t
});
var script$1$t = {
  name: "BaseImage",
  "extends": script$1d,
  props: {
    preview: {
      type: Boolean,
      "default": false
    },
    "class": {
      type: null,
      "default": null
    },
    style: {
      type: null,
      "default": null
    },
    imageStyle: {
      type: null,
      "default": null
    },
    imageClass: {
      type: null,
      "default": null
    },
    previewButtonProps: {
      type: null,
      "default": null
    },
    indicatorIcon: {
      type: String,
      "default": void 0
    },
    previewIcon: {
      type: String,
      "default": void 0
    },
    zoomInDisabled: {
      type: Boolean,
      "default": false
    },
    zoomOutDisabled: {
      type: Boolean,
      "default": false
    }
  },
  style: ImageStyle,
  provide: /* @__PURE__ */ __name(function provide22() {
    return {
      $pcImage: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$I = {
  name: "Image",
  "extends": script$1$t,
  inheritAttrs: false,
  emits: ["show", "hide", "error"],
  mask: null,
  data: /* @__PURE__ */ __name(function data14() {
    return {
      maskVisible: false,
      previewVisible: false,
      rotate: 0,
      scale: 1
    };
  }, "data"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount7() {
    if (this.mask) {
      ZIndex.clear(this.container);
    }
  }, "beforeUnmount"),
  methods: {
    maskRef: /* @__PURE__ */ __name(function maskRef2(el) {
      this.mask = el;
    }, "maskRef"),
    toolbarRef: /* @__PURE__ */ __name(function toolbarRef(el) {
      this.toolbarRef = el;
    }, "toolbarRef"),
    onImageClick: /* @__PURE__ */ __name(function onImageClick() {
      var _this = this;
      if (this.preview) {
        blockBodyScroll();
        this.maskVisible = true;
        setTimeout(function() {
          _this.previewVisible = true;
        }, 25);
      }
    }, "onImageClick"),
    onPreviewImageClick: /* @__PURE__ */ __name(function onPreviewImageClick() {
      this.previewClick = true;
    }, "onPreviewImageClick"),
    onMaskClick: /* @__PURE__ */ __name(function onMaskClick2(event2) {
      var isBarActionsClicked = isAttributeEquals(event2.target, "data-pc-section-group", "action") || event2.target.closest('[data-pc-section-group="action"]');
      if (!this.previewClick && !isBarActionsClicked) {
        this.previewVisible = false;
        this.rotate = 0;
        this.scale = 1;
      }
      this.previewClick = false;
    }, "onMaskClick"),
    onMaskKeydown: /* @__PURE__ */ __name(function onMaskKeydown(event2) {
      var _this2 = this;
      switch (event2.code) {
        case "Escape":
          this.hidePreview();
          setTimeout(function() {
            focus(_this2.$refs.previewButton);
          }, 200);
          event2.preventDefault();
          break;
      }
    }, "onMaskKeydown"),
    onError: /* @__PURE__ */ __name(function onError2() {
      this.$emit("error");
    }, "onError"),
    rotateRight: /* @__PURE__ */ __name(function rotateRight() {
      this.rotate += 90;
      this.previewClick = true;
    }, "rotateRight"),
    rotateLeft: /* @__PURE__ */ __name(function rotateLeft() {
      this.rotate -= 90;
      this.previewClick = true;
    }, "rotateLeft"),
    zoomIn: /* @__PURE__ */ __name(function zoomIn() {
      this.scale = this.scale + 0.1;
      this.previewClick = true;
    }, "zoomIn"),
    zoomOut: /* @__PURE__ */ __name(function zoomOut() {
      this.scale = this.scale - 0.1;
      this.previewClick = true;
    }, "zoomOut"),
    onBeforeEnter: /* @__PURE__ */ __name(function onBeforeEnter() {
      ZIndex.set("modal", this.mask, this.$primevue.config.zIndex.modal);
    }, "onBeforeEnter"),
    onEnter: /* @__PURE__ */ __name(function onEnter2() {
      this.focus();
      this.$emit("show");
    }, "onEnter"),
    onBeforeLeave: /* @__PURE__ */ __name(function onBeforeLeave2() {
      !this.isUnstyled && addClass(this.mask, "p-overlay-mask-leave");
    }, "onBeforeLeave"),
    onLeave: /* @__PURE__ */ __name(function onLeave2() {
      unblockBodyScroll();
      this.$emit("hide");
    }, "onLeave"),
    onAfterLeave: /* @__PURE__ */ __name(function onAfterLeave2(el) {
      ZIndex.clear(el);
      this.maskVisible = false;
    }, "onAfterLeave"),
    focus: /* @__PURE__ */ __name(function focus2() {
      var focusTarget = this.mask.querySelector("[autofocus]");
      if (focusTarget) {
        focusTarget.focus();
      }
    }, "focus"),
    hidePreview: /* @__PURE__ */ __name(function hidePreview() {
      this.previewVisible = false;
      this.rotate = 0;
      this.scale = 1;
      unblockBodyScroll();
    }, "hidePreview")
  },
  computed: {
    containerClass: /* @__PURE__ */ __name(function containerClass2() {
      return [this.cx("root"), this["class"]];
    }, "containerClass"),
    rotateClass: /* @__PURE__ */ __name(function rotateClass() {
      return "p-image-preview-rotate-" + this.rotate;
    }, "rotateClass"),
    imagePreviewStyle: /* @__PURE__ */ __name(function imagePreviewStyle() {
      return {
        transform: "rotate(" + this.rotate + "deg) scale(" + this.scale + ")"
      };
    }, "imagePreviewStyle"),
    isZoomInDisabled: /* @__PURE__ */ __name(function isZoomInDisabled() {
      return this.zoomInDisabled || this.scale >= 1.5;
    }, "isZoomInDisabled"),
    isZoomOutDisabled: /* @__PURE__ */ __name(function isZoomOutDisabled() {
      return this.zoomOutDisabled || this.scale <= 0.5;
    }, "isZoomOutDisabled"),
    rightAriaLabel: /* @__PURE__ */ __name(function rightAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.rotateRight : void 0;
    }, "rightAriaLabel"),
    leftAriaLabel: /* @__PURE__ */ __name(function leftAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.rotateLeft : void 0;
    }, "leftAriaLabel"),
    zoomInAriaLabel: /* @__PURE__ */ __name(function zoomInAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.zoomIn : void 0;
    }, "zoomInAriaLabel"),
    zoomOutAriaLabel: /* @__PURE__ */ __name(function zoomOutAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.zoomOut : void 0;
    }, "zoomOutAriaLabel"),
    zoomImageAriaLabel: /* @__PURE__ */ __name(function zoomImageAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.zoomImage : void 0;
    }, "zoomImageAriaLabel"),
    closeAriaLabel: /* @__PURE__ */ __name(function closeAriaLabel2() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.close : void 0;
    }, "closeAriaLabel")
  },
  components: {
    Portal: script$1f,
    EyeIcon: script$N,
    RefreshIcon: script$M,
    UndoIcon: script$J,
    SearchMinusIcon: script$L,
    SearchPlusIcon: script$K,
    TimesIcon: script$1g
  },
  directives: {
    focustrap: FocusTrap
  }
};
function _typeof$h(o) {
  "@babel/helpers - typeof";
  return _typeof$h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$h(o);
}
__name(_typeof$h, "_typeof$h");
function ownKeys$f(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$f, "ownKeys$f");
function _objectSpread$f(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$f(Object(t2), true).forEach(function(r2) {
      _defineProperty$g(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$f(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$f, "_objectSpread$f");
function _defineProperty$g(e, r, t2) {
  return (r = _toPropertyKey$g(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$g, "_defineProperty$g");
function _toPropertyKey$g(t2) {
  var i = _toPrimitive$g(t2, "string");
  return "symbol" == _typeof$h(i) ? i : i + "";
}
__name(_toPropertyKey$g, "_toPropertyKey$g");
function _toPrimitive$g(t2, r) {
  if ("object" != _typeof$h(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$h(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$g, "_toPrimitive$g");
var _hoisted_1$m = ["aria-label"];
var _hoisted_2$f = ["aria-modal"];
var _hoisted_3$c = ["aria-label"];
var _hoisted_4$8 = ["aria-label"];
var _hoisted_5$3 = ["disabled", "aria-label"];
var _hoisted_6$1 = ["disabled", "aria-label"];
var _hoisted_7$1 = ["aria-label"];
var _hoisted_8 = ["src"];
function render$D(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_RefreshIcon = resolveComponent("RefreshIcon");
  var _component_UndoIcon = resolveComponent("UndoIcon");
  var _component_SearchMinusIcon = resolveComponent("SearchMinusIcon");
  var _component_SearchPlusIcon = resolveComponent("SearchPlusIcon");
  var _component_TimesIcon = resolveComponent("TimesIcon");
  var _component_Portal = resolveComponent("Portal");
  var _directive_focustrap = resolveDirective("focustrap");
  return openBlock(), createElementBlock("span", mergeProps({
    "class": $options.containerClass,
    style: _ctx.style
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "image", {
    errorCallback: $options.onError
  }, function() {
    return [createBaseVNode("img", mergeProps({
      style: _ctx.imageStyle,
      "class": _ctx.imageClass,
      onError: _cache[0] || (_cache[0] = function() {
        return $options.onError && $options.onError.apply($options, arguments);
      })
    }, _objectSpread$f(_objectSpread$f({}, _ctx.$attrs), _ctx.ptm("image"))), null, 16)];
  }), _ctx.preview ? (openBlock(), createElementBlock("button", mergeProps({
    key: 0,
    ref: "previewButton",
    "aria-label": $options.zoomImageAriaLabel,
    type: "button",
    "class": _ctx.cx("previewMask"),
    onClick: _cache[1] || (_cache[1] = function() {
      return $options.onImageClick && $options.onImageClick.apply($options, arguments);
    })
  }, _objectSpread$f(_objectSpread$f({}, _ctx.previewButtonProps), _ctx.ptm("previewMask"))), [renderSlot(_ctx.$slots, _ctx.$slots.previewicon ? "previewicon" : "indicatoricon", {}, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.previewIcon || _ctx.indicatorIcon ? "i" : "EyeIcon"), mergeProps({
      "class": _ctx.cx("previewIcon")
    }, _ctx.ptm("previewIcon")), null, 16, ["class"]))];
  })], 16, _hoisted_1$m)) : createCommentVNode("", true), createVNode(_component_Portal, null, {
    "default": withCtx(function() {
      return [$data.maskVisible ? withDirectives((openBlock(), createElementBlock("div", mergeProps({
        key: 0,
        ref: $options.maskRef,
        role: "dialog",
        "class": _ctx.cx("mask"),
        "aria-modal": $data.maskVisible,
        onClick: _cache[8] || (_cache[8] = function() {
          return $options.onMaskClick && $options.onMaskClick.apply($options, arguments);
        }),
        onKeydown: _cache[9] || (_cache[9] = function() {
          return $options.onMaskKeydown && $options.onMaskKeydown.apply($options, arguments);
        })
      }, _ctx.ptm("mask")), [createBaseVNode("div", mergeProps({
        "class": _ctx.cx("toolbar")
      }, _ctx.ptm("toolbar")), [createBaseVNode("button", mergeProps({
        "class": _ctx.cx("rotateRightButton"),
        onClick: _cache[2] || (_cache[2] = function() {
          return $options.rotateRight && $options.rotateRight.apply($options, arguments);
        }),
        type: "button",
        "aria-label": $options.rightAriaLabel
      }, _ctx.ptm("rotateRightButton"), {
        "data-pc-group-section": "action"
      }), [renderSlot(_ctx.$slots, "refresh", {}, function() {
        return [createVNode(_component_RefreshIcon, normalizeProps(guardReactiveProps(_ctx.ptm("rotateRightIcon"))), null, 16)];
      })], 16, _hoisted_3$c), createBaseVNode("button", mergeProps({
        "class": _ctx.cx("rotateLeftButton"),
        onClick: _cache[3] || (_cache[3] = function() {
          return $options.rotateLeft && $options.rotateLeft.apply($options, arguments);
        }),
        type: "button",
        "aria-label": $options.leftAriaLabel
      }, _ctx.ptm("rotateLeftButton"), {
        "data-pc-group-section": "action"
      }), [renderSlot(_ctx.$slots, "undo", {}, function() {
        return [createVNode(_component_UndoIcon, normalizeProps(guardReactiveProps(_ctx.ptm("rotateLeftIcon"))), null, 16)];
      })], 16, _hoisted_4$8), createBaseVNode("button", mergeProps({
        "class": _ctx.cx("zoomOutButton"),
        onClick: _cache[4] || (_cache[4] = function() {
          return $options.zoomOut && $options.zoomOut.apply($options, arguments);
        }),
        type: "button",
        disabled: $options.isZoomOutDisabled,
        "aria-label": $options.zoomOutAriaLabel
      }, _ctx.ptm("zoomOutButton"), {
        "data-pc-group-section": "action"
      }), [renderSlot(_ctx.$slots, "zoomout", {}, function() {
        return [createVNode(_component_SearchMinusIcon, normalizeProps(guardReactiveProps(_ctx.ptm("zoomOutIcon"))), null, 16)];
      })], 16, _hoisted_5$3), createBaseVNode("button", mergeProps({
        "class": _ctx.cx("zoomInButton"),
        onClick: _cache[5] || (_cache[5] = function() {
          return $options.zoomIn && $options.zoomIn.apply($options, arguments);
        }),
        type: "button",
        disabled: $options.isZoomInDisabled,
        "aria-label": $options.zoomInAriaLabel
      }, _ctx.ptm("zoomInButton"), {
        "data-pc-group-section": "action"
      }), [renderSlot(_ctx.$slots, "zoomin", {}, function() {
        return [createVNode(_component_SearchPlusIcon, normalizeProps(guardReactiveProps(_ctx.ptm("zoomInIcon"))), null, 16)];
      })], 16, _hoisted_6$1), createBaseVNode("button", mergeProps({
        "class": _ctx.cx("closeButton"),
        type: "button",
        onClick: _cache[6] || (_cache[6] = function() {
          return $options.hidePreview && $options.hidePreview.apply($options, arguments);
        }),
        "aria-label": $options.closeAriaLabel,
        autofocus: ""
      }, _ctx.ptm("closeButton"), {
        "data-pc-group-section": "action"
      }), [renderSlot(_ctx.$slots, "close", {}, function() {
        return [createVNode(_component_TimesIcon, normalizeProps(guardReactiveProps(_ctx.ptm("closeIcon"))), null, 16)];
      })], 16, _hoisted_7$1)], 16), createVNode(Transition, mergeProps({
        name: "p-image-original",
        onBeforeEnter: $options.onBeforeEnter,
        onEnter: $options.onEnter,
        onLeave: $options.onLeave,
        onBeforeLeave: $options.onBeforeLeave,
        onAfterLeave: $options.onAfterLeave
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [$data.previewVisible ? (openBlock(), createElementBlock("div", normalizeProps(mergeProps({
            key: 0
          }, _ctx.ptm("originalContainer"))), [renderSlot(_ctx.$slots, _ctx.$slots.original ? "original" : "preview", {
            "class": normalizeClass(_ctx.cx("original")),
            style: normalizeStyle($options.imagePreviewStyle),
            previewCallback: $options.onPreviewImageClick
          }, function() {
            return [createBaseVNode("img", mergeProps({
              src: _ctx.$attrs.src,
              "class": _ctx.cx("original"),
              style: $options.imagePreviewStyle,
              onClick: _cache[7] || (_cache[7] = function() {
                return $options.onPreviewImageClick && $options.onPreviewImageClick.apply($options, arguments);
              })
            }, _ctx.ptm("original")), null, 16, _hoisted_8)];
          })], 16)) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onBeforeEnter", "onEnter", "onLeave", "onBeforeLeave", "onAfterLeave"])], 16, _hoisted_2$f)), [[_directive_focustrap]]) : createCommentVNode("", true)];
    }),
    _: 3
  })], 16);
}
__name(render$D, "render$D");
script$I.render = render$D;
var theme$p = /* @__PURE__ */ __name(function theme15(_ref) {
  var dt = _ref.dt;
  return "\n.p-imagecompare {\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    aspect-ratio: 16 / 9;\n}\n\n.p-imagecompare img {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n}\n\n.p-imagecompare img + img {\n    clip-path: polygon(0 0, ".concat(dt("imagecompare.scope.x", "50%"), " 0, ").concat(dt("imagecompare.scope.x", "50%"), " 100%, 0 100%);\n}\n\n.p-imagecompare:dir(rtl) img + img {\n    clip-path: polygon(calc(100% - ").concat(dt("imagecompare.scope.x", "50%"), ") 0, 100% 0, 100% 100%, calc(100% - ").concat(dt("imagecompare.scope.x", "50%"), ") 100%);\n}\n\n.p-imagecompare-slider {\n    position: relative;\n    -webkit-appearance: none;\n    width: calc(100% + ").concat(dt("imagecompare.handle.size"), ");\n    height: 100%;\n    margin-inline-start: calc(-1 * calc(").concat(dt("imagecompare.handle.size"), " / 2));\n    background-color: transparent;\n    outline: none;\n    transition: all ").concat(dt("imagecompare.handle.transition.duration"), ";\n}\n\n.p-imagecompare-slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ").concat(dt("imagecompare.handle.size"), ";\n    width: ").concat(dt("imagecompare.handle.size"), ";\n    background: ").concat(dt("imagecompare.handle.background"), ";\n    border: ").concat(dt("imagecompare.handle.border.width"), " solid ").concat(dt("imagecompare.handle.border.color"), ";\n    border-radius: ").concat(dt("imagecompare.handle.border.radius"), ";\n    background-size: contain;\n    cursor: ew-resize;\n    transition: all ").concat(dt("imagecompare.handle.transition.duration"), ";\n}\n\n.p-imagecompare-slider::-moz-range-thumb {\n    height: ").concat(dt("imagecompare.handle.size"), ";\n    width: ").concat(dt("imagecompare.handle.size"), ";\n    background: ").concat(dt("imagecompare.handle.background"), ";\n    border: ").concat(dt("imagecompare.handle.border.width"), " ").concat(dt("imagecompare.handle.border.style"), " ").concat(dt("imagecompare.handle.border.color"), ";\n    border-radius: ").concat(dt("imagecompare.handle.border.radius"), ";\n    background-size: contain;\n    cursor: ew-resize;\n}\n\n.p-imagecompare-slider:focus-visible::-webkit-slider-thumb {\n    box-shadow: ").concat(dt("imagecompare.handle.focus.ring.shadow"), ";\n    outline: ").concat(dt("imagecompare.handle.focus.ring.width"), " ").concat(dt("imagecompare.handle.focus.ring.style"), " ").concat(dt("imagecompare.handle.focus.ring.color"), ";\n    outline-offset: ").concat(dt("imagecompare.handle.focus.ring.offset"), ";\n}\n\n.p-imagecompare-slider:focus-visible::-moz-range-thumb {\n    box-shadow: ").concat(dt("imagecompare.handle.focus.ring.shadow"), ";\n    outline: ").concat(dt("imagecompare.handle.focus.ring.width"), " ").concat(dt("imagecompare.handle.focus.ring.style"), " ").concat(dt("imagecompare.handle.focus.ring.color"), ";\n    outline-offset: ").concat(dt("imagecompare.handle.focus.ring.offset"), ";\n}\n\n.p-imagecompare-slider:hover {\n    width: calc(100% + ").concat(dt("imagecompare.handle.hover.size"), ");\n    margin-inline-start: calc(-1 * calc(").concat(dt("imagecompare.handle.hover.size"), " / 2));\n}\n\n.p-imagecompare-slider:hover::-webkit-slider-thumb {\n    background: ").concat(dt("imagecompare.handle.hover.background"), ";\n    border-color: ").concat(dt("imagecompare.handle.hover.border.color"), ";\n    height: ").concat(dt("imagecompare.handle.hover.size"), ";\n    width: ").concat(dt("imagecompare.handle.hover.size"), ";\n}\n\n.p-imagecompare-slider:hover::-moz-range-thumb {\n    background: ").concat(dt("imagecompare.handle.hover.background"), ";\n    border-color: ").concat(dt("imagecompare.handle.hover.border.color"), ";\n    height: ").concat(dt("imagecompare.handle.hover.size"), ";\n    width: ").concat(dt("imagecompare.handle.hover.size"), ";\n}\n");
}, "theme");
var classes$s = {
  root: "p-imagecompare",
  slider: "p-imagecompare-slider"
};
var ImageCompareStyle = BaseStyle.extend({
  name: "imagecompare",
  theme: theme$p,
  classes: classes$s
});
var script$1$s = {
  name: "BaseImageCompare",
  "extends": script$1d,
  props: {
    tabindex: {
      type: Number,
      "default": 0
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: ImageCompareStyle,
  provide: /* @__PURE__ */ __name(function provide23() {
    return {
      $pcImageCompare: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$H = {
  name: "ImageCompare",
  "extends": script$1$s,
  methods: {
    onSlide: /* @__PURE__ */ __name(function onSlide(event2) {
      var value2 = event2.target.value;
      var image = event2.target.previousElementSibling;
      setCSSProperty(image, $dt("imagecompare.scope.x").name, "".concat(value2, "%"));
    }, "onSlide")
  }
};
var _hoisted_1$l = ["aria-labelledby", "aria-label"];
function render$C(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "left"), renderSlot(_ctx.$slots, "right"), createBaseVNode("input", mergeProps({
    type: "range",
    min: "0",
    max: "100",
    value: "50",
    onInput: _cache[0] || (_cache[0] = function() {
      return $options.onSlide && $options.onSlide.apply($options, arguments);
    }),
    "class": _ctx.cx("slider")
  }, _ctx.ptm("slider")), null, 16)], 16, _hoisted_1$l);
}
__name(render$C, "render$C");
script$H.render = render$C;
var theme$o = /* @__PURE__ */ __name(function theme16(_ref) {
  var dt = _ref.dt;
  return "\n.p-inlinemessage {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: ".concat(dt("inlinemessage.padding"), ";\n    border-radius: ").concat(dt("inlinemessage.border.radius"), ";\n    gap: ").concat(dt("inlinemessage.gap"), ";\n}\n\n.p-inlinemessage-text {\n    font-weight: ").concat(dt("inlinemessage.text.font.weight"), ";\n}\n\n.p-inlinemessage-icon {\n    flex-shrink: 0;\n    font-size: ").concat(dt("inlinemessage.icon.size"), ";\n    width: ").concat(dt("inlinemessage.icon.size"), ";\n    height: ").concat(dt("inlinemessage.icon.size"), ";\n}\n\n.p-inlinemessage-icon-only .p-inlinemessage-text {\n    visibility: hidden;\n    width: 0;\n}\n\n.p-inlinemessage-info {\n    background: ").concat(dt("inlinemessage.info.background"), ";\n    border: 1px solid ").concat(dt("inlinemessage.info.border.color"), ";\n    color: ").concat(dt("inlinemessage.info.color"), ";\n    box-shadow: ").concat(dt("inlinemessage.info.shadow"), ";\n}\n\n.p-inlinemessage-info .p-inlinemessage-icon {\n    color: ").concat(dt("inlinemessage.info.color"), ";\n}\n\n.p-inlinemessage-success {\n    background: ").concat(dt("inlinemessage.success.background"), ";\n    border: 1px solid ").concat(dt("inlinemessage.success.border.color"), ";\n    color: ").concat(dt("inlinemessage.success.color"), ";\n    box-shadow: ").concat(dt("inlinemessage.success.shadow"), ";\n}\n\n.p-inlinemessage-success .p-inlinemessage-icon {\n    color: ").concat(dt("inlinemessage.success.color"), ";\n}\n\n.p-inlinemessage-warn {\n    background: ").concat(dt("inlinemessage.warn.background"), ";\n    border: 1px solid ").concat(dt("inlinemessage.warn.border.color"), ";\n    color: ").concat(dt("inlinemessage.warn.color"), ";\n    box-shadow: ").concat(dt("inlinemessage.warn.shadow"), ";\n}\n\n.p-inlinemessage-warn .p-inlinemessage-icon {\n    color: ").concat(dt("inlinemessage.warn.color"), ";\n}\n\n.p-inlinemessage-error {\n    background: ").concat(dt("inlinemessage.error.background"), ";\n    border: 1px solid ").concat(dt("inlinemessage.error.border.color"), ";\n    color: ").concat(dt("inlinemessage.error.color"), ";\n    box-shadow: ").concat(dt("inlinemessage.error.shadow"), ";\n}\n\n.p-inlinemessage-error .p-inlinemessage-icon {\n    color: ").concat(dt("inlinemessage.error.color"), ";\n}\n\n.p-inlinemessage-secondary {\n    background: ").concat(dt("inlinemessage.secondary.background"), ";\n    border: 1px solid ").concat(dt("inlinemessage.secondary.border.color"), ";\n    color: ").concat(dt("inlinemessage.secondary.color"), ";\n    box-shadow: ").concat(dt("inlinemessage.secondary.shadow"), ";\n}\n\n.p-inlinemessage-secondary .p-inlinemessage-icon {\n    color: ").concat(dt("inlinemessage.secondary.color"), ";\n}\n\n.p-inlinemessage-contrast {\n    background: ").concat(dt("inlinemessage.contrast.background"), ";\n    border: 1px solid ").concat(dt("inlinemessage.contrast.border.color"), ";\n    color: ").concat(dt("inlinemessage.contrast.color"), ";\n    box-shadow: ").concat(dt("inlinemessage.contrast.shadow"), ";\n}\n\n.p-inlinemessage-contrast .p-inlinemessage-icon {\n    color: ").concat(dt("inlinemessage.contrast.color"), ";\n}\n");
}, "theme");
var classes$r = {
  root: /* @__PURE__ */ __name(function root14(_ref2) {
    var props = _ref2.props, instance = _ref2.instance;
    return ["p-inlinemessage p-component p-inlinemessage-" + props.severity, {
      "p-inlinemessage-icon-only": !instance.$slots["default"]
    }];
  }, "root"),
  icon: /* @__PURE__ */ __name(function icon(_ref3) {
    var props = _ref3.props;
    return ["p-inlinemessage-icon", props.icon];
  }, "icon"),
  text: "p-inlinemessage-text"
};
var InlineMessageStyle = BaseStyle.extend({
  name: "inlinemessage",
  theme: theme$o,
  classes: classes$r
});
var script$1$r = {
  name: "BaseInlineMessage",
  "extends": script$1d,
  props: {
    severity: {
      type: String,
      "default": "error"
    },
    icon: {
      type: String,
      "default": void 0
    }
  },
  style: InlineMessageStyle,
  provide: /* @__PURE__ */ __name(function provide24() {
    return {
      $pcInlineMessage: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$G = {
  name: "InlineMessage",
  "extends": script$1$r,
  inheritAttrs: false,
  timeout: null,
  data: /* @__PURE__ */ __name(function data15() {
    return {
      visible: true
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted18() {
    var _this = this;
    if (!this.sticky) {
      setTimeout(function() {
        _this.visible = false;
      }, this.life);
    }
  }, "mounted"),
  computed: {
    iconComponent: /* @__PURE__ */ __name(function iconComponent() {
      return {
        info: script$1C,
        success: script$1D,
        warn: script$1E,
        error: script$1F
      }[this.severity];
    }, "iconComponent")
  }
};
function render$B(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    role: "alert",
    "aria-live": "assertive",
    "aria-atomic": "true",
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "icon", {}, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? "span" : $options.iconComponent), mergeProps({
      "class": _ctx.cx("icon")
    }, _ctx.ptm("icon")), null, 16, ["class"]))];
  }), _ctx.$slots["default"] ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": _ctx.cx("text")
  }, _ctx.ptm("text")), [renderSlot(_ctx.$slots, "default")], 16)) : createCommentVNode("", true)], 16);
}
__name(render$B, "render$B");
script$G.render = render$B;
var theme$n = /* @__PURE__ */ __name(function theme17(_ref) {
  var dt = _ref.dt;
  return "\n.p-inplace-display {\n    display: inline-block;\n    cursor: pointer;\n    border: 1px solid transparent;\n    padding: ".concat(dt("inplace.padding"), ";\n    border-radius: ").concat(dt("inplace.border.radius"), ";\n    transition: background ").concat(dt("inplace.transition.duration"), ", color ").concat(dt("inplace.transition.duration"), ", outline-color ").concat(dt("inplace.transition.duration"), ", box-shadow ").concat(dt("inplace.transition.duration"), ";\n    outline-color: transparent;\n}\n\n.p-inplace-display:not(.p-disabled):hover {\n    background: ").concat(dt("inplace.display.hover.background"), ";\n    color: ").concat(dt("inplace.display.hover.color"), ";\n}\n\n.p-inplace-display:focus-visible {\n    box-shadow: ").concat(dt("inplace.focus.ring.shadow"), ";\n    outline: ").concat(dt("inplace.focus.ring.width"), " ").concat(dt("inplace.focus.ring.style"), " ").concat(dt("inplace.focus.ring.color"), ";\n    outline-offset: ").concat(dt("inplace.focus.ring.offset"), ";\n}\n\n.p-inplace-content {\n    display: block;\n}\n");
}, "theme");
var classes$q = {
  root: "p-inplace p-component",
  display: /* @__PURE__ */ __name(function display(_ref2) {
    var props = _ref2.props;
    return ["p-inplace-display", {
      "p-disabled": props.disabled
    }];
  }, "display"),
  content: "p-inplace-content"
};
var InplaceStyle = BaseStyle.extend({
  name: "inplace",
  theme: theme$n,
  classes: classes$q
});
var script$1$q = {
  name: "BaseInplace",
  "extends": script$1d,
  props: {
    active: {
      type: Boolean,
      "default": false
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    displayProps: {
      type: null,
      "default": null
    }
  },
  style: InplaceStyle,
  provide: /* @__PURE__ */ __name(function provide25() {
    return {
      $pcInplace: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$F = {
  name: "Inplace",
  "extends": script$1$q,
  inheritAttrs: false,
  emits: ["open", "close", "update:active"],
  data: /* @__PURE__ */ __name(function data16() {
    return {
      d_active: this.active
    };
  }, "data"),
  watch: {
    active: /* @__PURE__ */ __name(function active2(newValue) {
      this.d_active = newValue;
    }, "active")
  },
  methods: {
    open: /* @__PURE__ */ __name(function open(event2) {
      if (this.disabled) {
        return;
      }
      this.d_active = true;
      this.$emit("open", event2);
      this.$emit("update:active", true);
    }, "open"),
    close: /* @__PURE__ */ __name(function close(event2) {
      var _this = this;
      this.d_active = false;
      this.$emit("close", event2);
      this.$emit("update:active", false);
      setTimeout(function() {
        _this.$refs.display.focus();
      }, 0);
    }, "close")
  }
};
function _typeof$g(o) {
  "@babel/helpers - typeof";
  return _typeof$g = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$g(o);
}
__name(_typeof$g, "_typeof$g");
function ownKeys$e(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$e, "ownKeys$e");
function _objectSpread$e(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$e(Object(t2), true).forEach(function(r2) {
      _defineProperty$f(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$e(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$e, "_objectSpread$e");
function _defineProperty$f(e, r, t2) {
  return (r = _toPropertyKey$f(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$f, "_defineProperty$f");
function _toPropertyKey$f(t2) {
  var i = _toPrimitive$f(t2, "string");
  return "symbol" == _typeof$g(i) ? i : i + "";
}
__name(_toPropertyKey$f, "_toPropertyKey$f");
function _toPrimitive$f(t2, r) {
  if ("object" != _typeof$g(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$g(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$f, "_toPrimitive$f");
var _hoisted_1$k = ["tabindex"];
function render$A(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    "aria-live": "polite"
  }, _ctx.ptmi("root")), [!$data.d_active ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    ref: "display",
    "class": _ctx.cx("display"),
    tabindex: _ctx.$attrs.tabindex || "0",
    role: "button",
    onClick: _cache[0] || (_cache[0] = function() {
      return $options.open && $options.open.apply($options, arguments);
    }),
    onKeydown: _cache[1] || (_cache[1] = withKeys(function() {
      return $options.open && $options.open.apply($options, arguments);
    }, ["enter"]))
  }, _objectSpread$e(_objectSpread$e({}, _ctx.displayProps), _ctx.ptm("display"))), [renderSlot(_ctx.$slots, "display")], 16, _hoisted_1$k)) : (openBlock(), createElementBlock("div", mergeProps({
    key: 1,
    "class": _ctx.cx("content")
  }, _ctx.ptm("content")), [renderSlot(_ctx.$slots, "content", {
    closeCallback: $options.close
  })], 16))], 16);
}
__name(render$A, "render$A");
script$F.render = render$A;
var theme$m = /* @__PURE__ */ __name(function theme18(_ref) {
  var dt = _ref.dt;
  return "\n.p-inputgroup,\n.p-inputgroup .p-iconfield,\n.p-inputgroup .p-floatlabel,\n.p-inputgroup .p-iftalabel {\n    display: flex;\n    align-items: stretch;\n    width: 100%;\n}\n\n.p-inputgroup .p-inputtext,\n.p-inputgroup .p-inputwrapper {\n    flex: 1 1 auto;\n    width: 1%;\n}\n\n.p-inputgroupaddon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: ".concat(dt("inputgroup.addon.padding"), ";\n    background: ").concat(dt("inputgroup.addon.background"), ";\n    color: ").concat(dt("inputgroup.addon.color"), ";\n    border-block-start: 1px solid ").concat(dt("inputgroup.addon.border.color"), ";\n    border-block-end: 1px solid ").concat(dt("inputgroup.addon.border.color"), ";\n    min-width: ").concat(dt("inputgroup.addon.min.width"), ";\n}\n\n.p-inputgroupaddon:first-child,\n.p-inputgroupaddon + .p-inputgroupaddon {\n    border-inline-start: 1px solid ").concat(dt("inputgroup.addon.border.color"), ";\n}\n\n.p-inputgroupaddon:last-child {\n    border-inline-end: 1px solid ").concat(dt("inputgroup.addon.border.color"), ";\n}\n\n.p-inputgroupaddon:has(.p-button) {\n    padding: 0;\n    overflow: hidden;\n}\n\n.p-inputgroupaddon .p-button {\n    border-radius: 0;\n}\n\n.p-inputgroup > .p-component,\n.p-inputgroup > .p-inputwrapper > .p-component,\n.p-inputgroup > .p-iconfield > .p-component,\n.p-inputgroup > .p-floatlabel > .p-component,\n.p-inputgroup > .p-floatlabel > .p-inputwrapper > .p-component,\n.p-inputgroup > .p-iftalabel > .p-component,\n.p-inputgroup > .p-iftalabel > .p-inputwrapper > .p-component {\n    border-radius: 0;\n    margin: 0;\n}\n\n.p-inputgroupaddon:first-child,\n.p-inputgroup > .p-component:first-child,\n.p-inputgroup > .p-inputwrapper:first-child > .p-component,\n.p-inputgroup > .p-iconfield:first-child > .p-component,\n.p-inputgroup > .p-floatlabel:first-child > .p-component,\n.p-inputgroup > .p-floatlabel:first-child > .p-inputwrapper > .p-component,\n.p-inputgroup > .p-iftalabel:first-child > .p-component,\n.p-inputgroup > .p-iftalabel:first-child > .p-inputwrapper > .p-component {\n    border-start-start-radius: ").concat(dt("inputgroup.addon.border.radius"), ";\n    border-end-start-radius: ").concat(dt("inputgroup.addon.border.radius"), ";\n}\n\n.p-inputgroupaddon:last-child,\n.p-inputgroup > .p-component:last-child,\n.p-inputgroup > .p-inputwrapper:last-child > .p-component,\n.p-inputgroup > .p-iconfield:last-child > .p-component,\n.p-inputgroup > .p-floatlabel:last-child > .p-component,\n.p-inputgroup > .p-floatlabel:last-child > .p-inputwrapper > .p-component,\n.p-inputgroup > .p-iftalabel:last-child > .p-component,\n.p-inputgroup > .p-iftalabel:last-child > .p-inputwrapper > .p-component {\n    border-start-end-radius: ").concat(dt("inputgroup.addon.border.radius"), ";\n    border-end-end-radius: ").concat(dt("inputgroup.addon.border.radius"), ";\n}\n\n.p-inputgroup .p-component:focus,\n.p-inputgroup .p-component.p-focus,\n.p-inputgroup .p-inputwrapper-focus,\n.p-inputgroup .p-component:focus ~ label,\n.p-inputgroup .p-component.p-focus ~ label,\n.p-inputgroup .p-inputwrapper-focus ~ label {\n    z-index: 1;\n}\n\n.p-inputgroup > .p-button:not(.p-button-icon-only) {\n    width: auto;\n}\n\n.p-inputgroup .p-iconfield + .p-iconfield .p-inputtext {\n    border-inline-start: 0;\n}\n");
}, "theme");
var classes$p = {
  root: "p-inputgroup"
};
var InputGroupStyle = BaseStyle.extend({
  name: "inputgroup",
  theme: theme$m,
  classes: classes$p
});
var script$1$p = {
  name: "BaseInputGroup",
  "extends": script$1d,
  style: InputGroupStyle,
  provide: /* @__PURE__ */ __name(function provide26() {
    return {
      $pcInputGroup: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$E = {
  name: "InputGroup",
  "extends": script$1$p,
  inheritAttrs: false
};
function render$z(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
__name(render$z, "render$z");
script$E.render = render$z;
var classes$o = {
  root: "p-inputgroupaddon"
};
var InputGroupAddonStyle = BaseStyle.extend({
  name: "inputgroupaddon",
  classes: classes$o
});
var script$1$o = {
  name: "BaseInputGroupAddon",
  "extends": script$1d,
  style: InputGroupAddonStyle,
  provide: /* @__PURE__ */ __name(function provide27() {
    return {
      $pcInputGroupAddon: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$D = {
  name: "InputGroupAddon",
  "extends": script$1$o,
  inheritAttrs: false
};
function render$y(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
__name(render$y, "render$y");
script$D.render = render$y;
var classes$n = {
  root: /* @__PURE__ */ __name(function root15(_ref) {
    var instance = _ref.instance;
    return ["p-inputmask", {
      "p-filled": instance.$filled
    }];
  }, "root")
};
var InputMaskStyle = BaseStyle.extend({
  name: "inputmask",
  classes: classes$n
});
var script$1$n = {
  name: "BaseInputMask",
  "extends": script$1n,
  props: {
    slotChar: {
      type: String,
      "default": "_"
    },
    id: {
      type: String,
      "default": null
    },
    "class": {
      type: [String, Object],
      "default": null
    },
    mask: {
      type: String,
      "default": null
    },
    placeholder: {
      type: String,
      "default": null
    },
    autoClear: {
      type: Boolean,
      "default": true
    },
    unmask: {
      type: Boolean,
      "default": false
    },
    readonly: {
      type: Boolean,
      "default": false
    }
  },
  style: InputMaskStyle,
  provide: /* @__PURE__ */ __name(function provide28() {
    return {
      $pcInputMask: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$C = {
  name: "InputMask",
  "extends": script$1$n,
  inheritAttrs: false,
  emits: ["focus", "blur", "keydown", "complete", "keypress", "paste"],
  inject: {
    $pcFluid: {
      "default": null
    }
  },
  data: /* @__PURE__ */ __name(function data17() {
    return {
      currentVal: ""
    };
  }, "data"),
  watch: {
    mask: /* @__PURE__ */ __name(function mask3(newMask, oldMask) {
      if (oldMask !== newMask) {
        this.initMask();
      }
    }, "mask")
  },
  mounted: /* @__PURE__ */ __name(function mounted19() {
    this.initMask();
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated4() {
    if (this.isValueUpdated()) {
      this.updateValue();
    }
  }, "updated"),
  methods: {
    onInput: /* @__PURE__ */ __name(function onInput3(event2) {
      if (!event2.isComposing) {
        if (this.androidChrome) this.handleAndroidInput(event2);
        else this.handleInputChange(event2);
        this.updateModelValue(event2.target.value);
      }
    }, "onInput"),
    onFocus: /* @__PURE__ */ __name(function onFocus6(event2) {
      var _this = this;
      if (this.readonly) {
        return;
      }
      this.focus = true;
      clearTimeout(this.caretTimeoutId);
      var pos;
      this.focusText = this.$el.value;
      pos = this.checkVal();
      this.caretTimeoutId = setTimeout(function() {
        if (_this.$el !== document.activeElement) {
          return;
        }
        _this.writeBuffer();
        if (pos === _this.mask.replace("?", "").length) {
          _this.caret(0, pos);
        } else {
          _this.caret(pos);
        }
      }, 10);
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur5(event2) {
      var _this$formField$onBlu, _this$formField;
      this.focus = false;
      this.checkVal();
      this.updateModelValue(event2.target.value);
      if (this.$el.value !== this.focusText) {
        var e = document.createEvent("HTMLEvents");
        e.initEvent("change", true, false);
        this.$el.dispatchEvent(e);
      }
      this.$emit("blur", event2);
      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField, event2);
    }, "onBlur"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown5(event2) {
      if (this.readonly) {
        return;
      }
      var k = event2.code, pos, begin, end;
      var iPhone = /iphone/i.test(getUserAgent());
      this.oldVal = this.$el.value;
      if (k === "Backspace" || k === "Delete" || iPhone && k === "Escape") {
        pos = this.caret();
        begin = pos.begin;
        end = pos.end;
        if (end - begin === 0) {
          begin = k !== "Delete" ? this.seekPrev(begin) : end = this.seekNext(begin - 1);
          end = k === "Delete" ? this.seekNext(end) : end;
        }
        this.clearBuffer(begin, end);
        this.shiftL(begin, end - 1);
        this.updateModelValue(event2.target.value);
        event2.preventDefault();
      } else if (k === "Enter") {
        this.$el.blur();
        this.updateModelValue(event2.target.value);
      } else if (k === "Escape") {
        this.$el.value = this.focusText;
        this.caret(0, this.checkVal());
        this.updateModelValue(event2.target.value);
        event2.preventDefault();
      }
      this.$emit("keydown", event2);
    }, "onKeyDown"),
    onKeyPress: /* @__PURE__ */ __name(function onKeyPress(event2) {
      var _this2 = this;
      if (this.readonly) {
        return;
      }
      var k = event2.code, pos = this.caret(), p, c, next, completed;
      if (event2.ctrlKey || event2.altKey || event2.metaKey || event2.shiftKey || event2.key === "CapsLock" || event2.key === "Escape" || event2.key === "Tab") {
        return;
      } else if (k && k !== "Enter") {
        if (pos.end - pos.begin !== 0) {
          this.clearBuffer(pos.begin, pos.end);
          this.shiftL(pos.begin, pos.end - 1);
        }
        p = this.seekNext(pos.begin - 1);
        if (p < this.len) {
          c = event2.key;
          if (this.tests[p].test(c)) {
            this.shiftR(p);
            this.buffer[p] = c;
            this.writeBuffer();
            next = this.seekNext(p);
            if (/android/i.test(getUserAgent())) {
              var proxy = /* @__PURE__ */ __name(function proxy2() {
                _this2.caret(next);
              }, "proxy");
              setTimeout(proxy, 0);
            } else {
              this.caret(next);
            }
            if (pos.begin <= this.lastRequiredNonMaskPos) {
              completed = this.isCompleted();
            }
          }
        }
        event2.preventDefault();
      }
      this.updateModelValue(event2.target.value);
      if (completed) {
        this.$emit("complete", event2);
      }
      this.$emit("keypress", event2);
    }, "onKeyPress"),
    onPaste: /* @__PURE__ */ __name(function onPaste2(event2) {
      this.handleInputChange(event2);
      this.$emit("paste", event2);
    }, "onPaste"),
    caret: /* @__PURE__ */ __name(function caret(first3, last) {
      var range, begin, end;
      if (!this.$el.offsetParent || this.$el !== document.activeElement) {
        return;
      }
      if (typeof first3 === "number") {
        begin = first3;
        end = typeof last === "number" ? last : begin;
        if (this.$el.setSelectionRange) {
          this.$el.setSelectionRange(begin, end);
        } else if (this.$el["createTextRange"]) {
          range = this.$el["createTextRange"]();
          range.collapse(true);
          range.moveEnd("character", end);
          range.moveStart("character", begin);
          range.select();
        }
      } else {
        if (this.$el.setSelectionRange) {
          begin = this.$el.selectionStart;
          end = this.$el.selectionEnd;
        } else if (document["selection"] && document["selection"].createRange) {
          range = document["selection"].createRange();
          begin = 0 - range.duplicate().moveStart("character", -1e5);
          end = begin + range.text.length;
        }
        return {
          begin,
          end
        };
      }
    }, "caret"),
    isCompleted: /* @__PURE__ */ __name(function isCompleted() {
      for (var i = this.firstNonMaskPos; i <= this.lastRequiredNonMaskPos; i++) {
        if (this.tests[i] && this.buffer[i] === this.getPlaceholder(i)) {
          return false;
        }
      }
      return true;
    }, "isCompleted"),
    getPlaceholder: /* @__PURE__ */ __name(function getPlaceholder(i) {
      if (i < this.slotChar.length) {
        return this.slotChar.charAt(i);
      }
      return this.slotChar.charAt(0);
    }, "getPlaceholder"),
    seekNext: /* @__PURE__ */ __name(function seekNext(pos) {
      while (++pos < this.len && !this.tests[pos]) ;
      return pos;
    }, "seekNext"),
    seekPrev: /* @__PURE__ */ __name(function seekPrev(pos) {
      while (--pos >= 0 && !this.tests[pos]) ;
      return pos;
    }, "seekPrev"),
    shiftL: /* @__PURE__ */ __name(function shiftL(begin, end) {
      var i, j;
      if (begin < 0) {
        return;
      }
      for (i = begin, j = this.seekNext(end); i < this.len; i++) {
        if (this.tests[i]) {
          if (j < this.len && this.tests[i].test(this.buffer[j])) {
            this.buffer[i] = this.buffer[j];
            this.buffer[j] = this.getPlaceholder(j);
          } else {
            break;
          }
          j = this.seekNext(j);
        }
      }
      this.writeBuffer();
      this.caret(Math.max(this.firstNonMaskPos, begin));
    }, "shiftL"),
    shiftR: /* @__PURE__ */ __name(function shiftR(pos) {
      var i, c, j, t2;
      for (i = pos, c = this.getPlaceholder(pos); i < this.len; i++) {
        if (this.tests[i]) {
          j = this.seekNext(i);
          t2 = this.buffer[i];
          this.buffer[i] = c;
          if (j < this.len && this.tests[j].test(t2)) {
            c = t2;
          } else {
            break;
          }
        }
      }
    }, "shiftR"),
    handleAndroidInput: /* @__PURE__ */ __name(function handleAndroidInput(event2) {
      var curVal = this.$el.value;
      var pos = this.caret();
      if (this.oldVal && this.oldVal.length && this.oldVal.length > curVal.length) {
        this.checkVal(true);
        while (pos.begin > 0 && !this.tests[pos.begin - 1]) pos.begin--;
        if (pos.begin === 0) {
          while (pos.begin < this.firstNonMaskPos && !this.tests[pos.begin]) pos.begin++;
        }
        this.caret(pos.begin, pos.begin);
      } else {
        this.checkVal(true);
        while (pos.begin < this.len && !this.tests[pos.begin]) pos.begin++;
        this.caret(pos.begin, pos.begin);
      }
      if (this.isCompleted()) {
        this.$emit("complete", event2);
      }
    }, "handleAndroidInput"),
    clearBuffer: /* @__PURE__ */ __name(function clearBuffer(start, end) {
      var i;
      for (i = start; i < end && i < this.len; i++) {
        if (this.tests[i]) {
          this.buffer[i] = this.getPlaceholder(i);
        }
      }
    }, "clearBuffer"),
    writeBuffer: /* @__PURE__ */ __name(function writeBuffer() {
      this.$el.value = this.buffer.join("");
    }, "writeBuffer"),
    checkVal: /* @__PURE__ */ __name(function checkVal(allow) {
      this.isValueChecked = true;
      var test = this.$el.value, lastMatch = -1, i, c, pos;
      for (i = 0, pos = 0; i < this.len; i++) {
        if (this.tests[i]) {
          this.buffer[i] = this.getPlaceholder(i);
          while (pos++ < test.length) {
            c = test.charAt(pos - 1);
            if (this.tests[i].test(c)) {
              this.buffer[i] = c;
              lastMatch = i;
              break;
            }
          }
          if (pos > test.length) {
            this.clearBuffer(i + 1, this.len);
            break;
          }
        } else {
          if (this.buffer[i] === test.charAt(pos)) {
            pos++;
          }
          if (i < this.partialPosition) {
            lastMatch = i;
          }
        }
      }
      if (allow) {
        this.writeBuffer();
      } else if (lastMatch + 1 < this.partialPosition) {
        if (this.autoClear || this.buffer.join("") === this.defaultBuffer) {
          if (this.$el.value) this.$el.value = "";
          this.clearBuffer(0, this.len);
        } else {
          this.writeBuffer();
        }
      } else {
        this.writeBuffer();
        this.$el.value = this.$el.value.substring(0, lastMatch + 1);
      }
      return this.partialPosition ? i : this.firstNonMaskPos;
    }, "checkVal"),
    handleInputChange: /* @__PURE__ */ __name(function handleInputChange(event2) {
      var isPasteEvent = event2.type === "paste";
      if (this.readonly || isPasteEvent) {
        return;
      }
      var pos = this.checkVal(true);
      this.caret(pos);
      this.updateModelValue(event2.target.value);
      if (this.isCompleted()) {
        this.$emit("complete", event2);
      }
    }, "handleInputChange"),
    getUnmaskedValue: /* @__PURE__ */ __name(function getUnmaskedValue() {
      var unmaskedBuffer = [];
      for (var i = 0; i < this.buffer.length; i++) {
        var c = this.buffer[i];
        if (this.tests[i] && c !== this.getPlaceholder(i)) {
          unmaskedBuffer.push(c);
        }
      }
      return unmaskedBuffer.join("");
    }, "getUnmaskedValue"),
    updateModelValue: /* @__PURE__ */ __name(function updateModelValue(value2) {
      if (this.currentVal === value2) return;
      var val = this.unmask ? this.getUnmaskedValue() : value2;
      this.currentVal = value2;
      this.writeValue(this.defaultBuffer !== val ? val : "");
    }, "updateModelValue"),
    updateValue: /* @__PURE__ */ __name(function updateValue2() {
      var _this3 = this;
      var updateModel8 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      if (this.$el) {
        if (this.d_value == null) {
          this.$el.value = "";
          updateModel8 && this.updateModelValue("");
        } else {
          this.$el.value = this.d_value;
          this.checkVal();
          setTimeout(function() {
            if (_this3.$el) {
              _this3.writeBuffer();
              _this3.checkVal();
              if (updateModel8) _this3.updateModelValue(_this3.$el.value);
            }
          }, 10);
        }
        this.focusText = this.$el.value;
      }
    }, "updateValue"),
    initMask: /* @__PURE__ */ __name(function initMask() {
      this.tests = [];
      this.partialPosition = this.mask.length;
      this.len = this.mask.length;
      this.firstNonMaskPos = null;
      this.defs = {
        9: "[0-9]",
        a: "[A-Za-z]",
        "*": "[A-Za-z0-9]"
      };
      var ua = getUserAgent();
      this.androidChrome = /chrome/i.test(ua) && /android/i.test(ua);
      var maskTokens = this.mask.split("");
      for (var i = 0; i < maskTokens.length; i++) {
        var c = maskTokens[i];
        if (c === "?") {
          this.len--;
          this.partialPosition = i;
        } else if (this.defs[c]) {
          this.tests.push(new RegExp(this.defs[c]));
          if (this.firstNonMaskPos === null) {
            this.firstNonMaskPos = this.tests.length - 1;
          }
          if (i < this.partialPosition) {
            this.lastRequiredNonMaskPos = this.tests.length - 1;
          }
        } else {
          this.tests.push(null);
        }
      }
      this.buffer = [];
      for (var _i = 0; _i < maskTokens.length; _i++) {
        var _c = maskTokens[_i];
        if (_c !== "?") {
          if (this.defs[_c]) this.buffer.push(this.getPlaceholder(_i));
          else this.buffer.push(_c);
        }
      }
      this.defaultBuffer = this.buffer.join("");
      this.updateValue(false);
    }, "initMask"),
    isValueUpdated: /* @__PURE__ */ __name(function isValueUpdated() {
      return this.unmask ? this.d_value != this.getUnmaskedValue() : this.defaultBuffer !== this.$el.value && this.$el.value !== this.d_value;
    }, "isValueUpdated")
  },
  computed: {
    inputClass: /* @__PURE__ */ __name(function inputClass() {
      return [this.cx("root"), this["class"]];
    }, "inputClass"),
    rootPTOptions: /* @__PURE__ */ __name(function rootPTOptions() {
      return {
        root: mergeProps(this.ptm("pcInputText", this.ptmParams), this.ptmi("root", this.ptmParams))
      };
    }, "rootPTOptions"),
    ptmParams: /* @__PURE__ */ __name(function ptmParams() {
      return {
        context: {
          filled: this.$filled
        }
      };
    }, "ptmParams")
  },
  components: {
    InputText: script$1o
  }
};
function render$x(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_InputText = resolveComponent("InputText");
  return openBlock(), createBlock(_component_InputText, {
    id: _ctx.id,
    value: $data.currentVal,
    "class": normalizeClass($options.inputClass),
    readonly: _ctx.readonly,
    disabled: _ctx.disabled,
    invalid: _ctx.invalid,
    size: _ctx.size,
    name: _ctx.name,
    variant: _ctx.variant,
    placeholder: _ctx.placeholder,
    fluid: _ctx.$fluid,
    unstyled: _ctx.unstyled,
    onInput: $options.onInput,
    onCompositionend: $options.onInput,
    onFocus: $options.onFocus,
    onBlur: $options.onBlur,
    onKeydown: $options.onKeyDown,
    onKeypress: $options.onKeyPress,
    onPaste: $options.onPaste,
    pt: $options.rootPTOptions
  }, null, 8, ["id", "value", "class", "readonly", "disabled", "invalid", "size", "name", "variant", "placeholder", "fluid", "unstyled", "onInput", "onCompositionend", "onFocus", "onBlur", "onKeydown", "onKeypress", "onPaste", "pt"]);
}
__name(render$x, "render$x");
script$C.render = render$x;
var theme$l = /* @__PURE__ */ __name(function theme19(_ref) {
  var dt = _ref.dt;
  return "\n.p-inputotp {\n    display: flex;\n    align-items: center;\n    gap: ".concat(dt("inputotp.gap"), ";\n}\n\n.p-inputotp-input {\n    text-align: center;\n    width: ").concat(dt("inputotp.input.width"), ";\n}\n\n.p-inputotp-input.p-inputtext-sm {\n    text-align: center;\n    width: ").concat(dt("inputotp.input.sm.width"), ";\n}\n\n.p-inputotp-input.p-inputtext-lg {\n    text-align: center;\n    width: ").concat(dt("inputotp.input.lg.width"), ";\n}\n");
}, "theme");
var classes$m = {
  root: "p-inputotp p-component",
  pcInputText: "p-inputotp-input"
};
var InputOtpStyle = BaseStyle.extend({
  name: "inputotp",
  theme: theme$l,
  classes: classes$m
});
var script$1$m = {
  name: "BaseInputOtp",
  "extends": script$1n,
  props: {
    readonly: {
      type: Boolean,
      "default": false
    },
    tabindex: {
      type: Number,
      "default": null
    },
    length: {
      type: Number,
      "default": 4
    },
    mask: {
      type: Boolean,
      "default": false
    },
    integerOnly: {
      type: Boolean,
      "default": false
    }
  },
  style: InputOtpStyle,
  provide: /* @__PURE__ */ __name(function provide29() {
    return {
      $pcInputOtp: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$B = {
  name: "InputOtp",
  "extends": script$1$m,
  inheritAttrs: false,
  emits: ["change", "focus", "blur"],
  data: /* @__PURE__ */ __name(function data18() {
    return {
      tokens: []
    };
  }, "data"),
  watch: {
    modelValue: {
      immediate: true,
      handler: /* @__PURE__ */ __name(function handler2(newValue) {
        this.tokens = newValue ? newValue.split("") : new Array(this.length);
      }, "handler")
    }
  },
  methods: {
    getTemplateAttrs: /* @__PURE__ */ __name(function getTemplateAttrs(index) {
      return {
        value: this.tokens[index]
      };
    }, "getTemplateAttrs"),
    getTemplateEvents: /* @__PURE__ */ __name(function getTemplateEvents(index) {
      var _this = this;
      return {
        input: /* @__PURE__ */ __name(function input2(event2) {
          return _this.onInput(event2, index);
        }, "input"),
        keydown: /* @__PURE__ */ __name(function keydown(event2) {
          return _this.onKeyDown(event2);
        }, "keydown"),
        focus: /* @__PURE__ */ __name(function focus4(event2) {
          return _this.onFocus(event2);
        }, "focus"),
        blur: /* @__PURE__ */ __name(function blur(event2) {
          return _this.onBlur(event2);
        }, "blur"),
        paste: /* @__PURE__ */ __name(function paste(event2) {
          return _this.onPaste(event2);
        }, "paste")
      };
    }, "getTemplateEvents"),
    onInput: /* @__PURE__ */ __name(function onInput4(event2, index) {
      this.tokens[index] = event2.target.value;
      this.updateModel(event2);
      if (event2.inputType === "deleteContentBackward") {
        this.moveToPrev(event2);
      } else if (event2.inputType === "insertText" || event2.inputType === "deleteContentForward" || isTouchDevice() && event2 instanceof CustomEvent) {
        this.moveToNext(event2);
      }
    }, "onInput"),
    updateModel: /* @__PURE__ */ __name(function updateModel4(event2) {
      var newValue = this.tokens.join("");
      this.writeValue(newValue, event2);
      this.$emit("change", {
        originalEvent: event2,
        value: newValue
      });
    }, "updateModel"),
    moveToPrev: /* @__PURE__ */ __name(function moveToPrev(event2) {
      var prevInput = this.findPrevInput(event2.target);
      if (prevInput) {
        prevInput.focus();
        prevInput.select();
      }
    }, "moveToPrev"),
    moveToNext: /* @__PURE__ */ __name(function moveToNext(event2) {
      var nextInput = this.findNextInput(event2.target);
      if (nextInput) {
        nextInput.focus();
        nextInput.select();
      }
    }, "moveToNext"),
    findNextInput: /* @__PURE__ */ __name(function findNextInput(element) {
      var nextElement = element.nextElementSibling;
      if (!nextElement) return;
      return nextElement.nodeName === "INPUT" ? nextElement : this.findNextInput(nextElement);
    }, "findNextInput"),
    findPrevInput: /* @__PURE__ */ __name(function findPrevInput(element) {
      var prevElement = element.previousElementSibling;
      if (!prevElement) return;
      return prevElement.nodeName === "INPUT" ? prevElement : this.findPrevInput(prevElement);
    }, "findPrevInput"),
    onFocus: /* @__PURE__ */ __name(function onFocus7(event2) {
      event2.target.select();
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur6(event2) {
      this.$emit("blur", event2);
    }, "onBlur"),
    onClick: /* @__PURE__ */ __name(function onClick3(event2) {
      setTimeout(function() {
        return event2.target.select();
      }, 1);
    }, "onClick"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown6(event2) {
      if (event2.ctrlKey || event2.metaKey) {
        return;
      }
      switch (event2.code) {
        case "ArrowLeft":
          this.moveToPrev(event2);
          event2.preventDefault();
          break;
        case "ArrowUp":
        case "ArrowDown":
          event2.preventDefault();
          break;
        case "Backspace":
          if (event2.target.value.length === 0) {
            this.moveToPrev(event2);
            event2.preventDefault();
          }
          break;
        case "ArrowRight":
          this.moveToNext(event2);
          event2.preventDefault();
          break;
        case "Enter":
        case "NumpadEnter":
        case "Tab":
          break;
        default:
          if (this.integerOnly && !(event2.code !== "Space" && Number(event2.key) >= 0 && Number(event2.key) <= 9) || this.tokens.join("").length >= this.length && event2.code !== "Delete") {
            event2.preventDefault();
          }
          break;
      }
    }, "onKeyDown"),
    onPaste: /* @__PURE__ */ __name(function onPaste3(event2) {
      var paste = event2.clipboardData.getData("text");
      if (paste.length) {
        var pastedCode = paste.substring(0, this.length);
        if (!this.integerOnly || !isNaN(pastedCode)) {
          this.tokens = pastedCode.split("");
          this.updateModel(event2);
        }
      }
      event2.preventDefault();
    }, "onPaste")
  },
  computed: {
    inputMode: /* @__PURE__ */ __name(function inputMode() {
      return this.integerOnly ? "numeric" : "text";
    }, "inputMode"),
    inputType: /* @__PURE__ */ __name(function inputType() {
      return this.mask ? "password" : "text";
    }, "inputType")
  },
  components: {
    OtpInputText: script$1o
  }
};
function render$w(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_OtpInputText = resolveComponent("OtpInputText");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.length, function(i) {
    return renderSlot(_ctx.$slots, "default", {
      key: i,
      events: $options.getTemplateEvents(i - 1),
      attrs: $options.getTemplateAttrs(i - 1),
      index: i
    }, function() {
      return [createVNode(_component_OtpInputText, {
        value: $data.tokens[i - 1],
        type: $options.inputType,
        "class": normalizeClass(_ctx.cx("pcInputText")),
        name: _ctx.$formName,
        inputmode: $options.inputMode,
        variant: _ctx.variant,
        readonly: _ctx.readonly,
        disabled: _ctx.disabled,
        size: _ctx.size,
        invalid: _ctx.invalid,
        tabindex: _ctx.tabindex,
        unstyled: _ctx.unstyled,
        onInput: /* @__PURE__ */ __name(function onInput6($event) {
          return $options.onInput($event, i - 1);
        }, "onInput"),
        onFocus: _cache[0] || (_cache[0] = function($event) {
          return $options.onFocus($event);
        }),
        onBlur: _cache[1] || (_cache[1] = function($event) {
          return $options.onBlur($event);
        }),
        onPaste: _cache[2] || (_cache[2] = function($event) {
          return $options.onPaste($event);
        }),
        onKeydown: _cache[3] || (_cache[3] = function($event) {
          return $options.onKeyDown($event);
        }),
        onClick: _cache[4] || (_cache[4] = function($event) {
          return $options.onClick($event);
        }),
        pt: _ctx.ptm("pcInputText")
      }, null, 8, ["value", "type", "class", "name", "inputmode", "variant", "readonly", "disabled", "size", "invalid", "tabindex", "unstyled", "onInput", "pt"])];
    });
  }), 128))], 16);
}
__name(render$w, "render$w");
script$B.render = render$w;
var script$A = {
  name: "InputSwitch",
  "extends": script$1G,
  mounted: /* @__PURE__ */ __name(function mounted20() {
    console.warn("Deprecated since v4. Use ToggleSwitch component instead.");
  }, "mounted")
};
var InputSwitchStyle = BaseStyle.extend({
  name: "inputswitch"
});
var KeyFilterStyle = BaseStyle.extend({
  name: "keyfilter-directive"
});
var BaseKeyFilter = BaseDirective.extend({
  style: KeyFilterStyle
});
function _toConsumableArray$8(r) {
  return _arrayWithoutHoles$8(r) || _iterableToArray$8(r) || _unsupportedIterableToArray$9(r) || _nonIterableSpread$8();
}
__name(_toConsumableArray$8, "_toConsumableArray$8");
function _nonIterableSpread$8() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$8, "_nonIterableSpread$8");
function _unsupportedIterableToArray$9(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$9(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$9(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$9, "_unsupportedIterableToArray$9");
function _iterableToArray$8(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$8, "_iterableToArray$8");
function _arrayWithoutHoles$8(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$9(r);
}
__name(_arrayWithoutHoles$8, "_arrayWithoutHoles$8");
function _arrayLikeToArray$9(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$9, "_arrayLikeToArray$9");
function _typeof$f(o) {
  "@babel/helpers - typeof";
  return _typeof$f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$f(o);
}
__name(_typeof$f, "_typeof$f");
var KeyFilter = BaseKeyFilter.extend("keyfilter", {
  beforeMount: /* @__PURE__ */ __name(function beforeMount(el, options4) {
    var target = this.getTarget(el);
    if (!target) return;
    target.$_pkeyfilterModifier = this.getModifiers(options4);
    if (_typeof$f(options4.value)) {
      var _options$value, _options$value2;
      target.$_pkeyfilterPattern = ((_options$value = options4.value) === null || _options$value === void 0 ? void 0 : _options$value.pattern) || options4.value;
      target.$_pkeyfilterValidateOnly = ((_options$value2 = options4.value) === null || _options$value2 === void 0 ? void 0 : _options$value2.validateOnly) || false;
    }
    this.bindEvents(target);
    target.setAttribute("data-pd-keyfilter", true);
  }, "beforeMount"),
  updated: /* @__PURE__ */ __name(function updated5(el, options4) {
    var target = this.getTarget(el);
    if (!target) return;
    target.$_pkeyfilterModifier = this.getModifiers(options4);
    this.unbindEvents(el, options4);
    if (_typeof$f(options4.value)) {
      var _options$value3, _options$value4;
      target.$_pkeyfilterPattern = ((_options$value3 = options4.value) === null || _options$value3 === void 0 ? void 0 : _options$value3.pattern) || options4.value;
      target.$_pkeyfilterValidateOnly = ((_options$value4 = options4.value) === null || _options$value4 === void 0 ? void 0 : _options$value4.validateOnly) || false;
    }
    this.bindEvents(target);
  }, "updated"),
  unmounted: /* @__PURE__ */ __name(function unmounted3(el, options4) {
    this.unbindEvents(el, options4);
  }, "unmounted"),
  DEFAULT_PATTERNS: {
    pint: /[\d]/,
    "int": /[\d\-]/,
    pnum: /[\d\.]/,
    money: /[\d\.\s,]/,
    num: /[\d\-\.]/,
    hex: /[0-9a-f]/i,
    email: /[a-z0-9_\.\-@]/i,
    alpha: /[a-z_]/i,
    alphanum: /[a-z0-9_]/i
  },
  methods: {
    getTarget: /* @__PURE__ */ __name(function getTarget(el) {
      return isAttributeEquals(el, "data-pc-name", "inputtext") || isAttributeEquals(el, "data-pc-name", "textarea") ? el : null;
    }, "getTarget"),
    getModifiers: /* @__PURE__ */ __name(function getModifiers(options4) {
      if (options4.modifiers && Object.keys(options4.modifiers).length) {
        return Object.keys(options4.modifiers)[Object.keys.length - 1];
      }
      return "";
    }, "getModifiers"),
    getRegex: /* @__PURE__ */ __name(function getRegex(target) {
      return target.$_pkeyfilterPattern ? target.$_pkeyfilterPattern : target.$_pkeyfilterModifier ? this.DEFAULT_PATTERNS[target.$_pkeyfilterModifier] : /./;
    }, "getRegex"),
    bindEvents: /* @__PURE__ */ __name(function bindEvents(el) {
      var _this = this;
      el.$_keyfilterKeydownEvent = function(event2) {
        return _this.onKeydown(event2, el);
      };
      el.$_keyfilterPasteEvent = function(event2) {
        return _this.onPaste(event2, el);
      };
      el.addEventListener("keypress", el.$_keyfilterKeydownEvent);
      el.addEventListener("paste", el.$_keyfilterPasteEvent);
    }, "bindEvents"),
    unbindEvents: /* @__PURE__ */ __name(function unbindEvents(el) {
      el.removeEventListener("keypress", el.$_keyfilterKeydownEvent);
      el.removeEventListener("paste", el.$_keyfilterPasteEvent);
      el.$_keyfilterKeydownEvent = null;
      el.$_keyfilterPasteEvent = null;
    }, "unbindEvents"),
    onKeydown: /* @__PURE__ */ __name(function onKeydown3(event2, target) {
      if (event2.ctrlKey || event2.altKey || event2.metaKey || event2.key === "Tab") {
        return;
      }
      var regex = this.getRegex(target);
      if (regex === "") {
        return;
      }
      var testKey = "".concat(event2.key);
      if (target.$_pkeyfilterValidateOnly) {
        testKey = "".concat(event2.target.value).concat(event2.key);
      }
      if (!regex.test(testKey)) {
        event2.preventDefault();
      }
    }, "onKeydown"),
    onPaste: /* @__PURE__ */ __name(function onPaste4(event2, target) {
      var regex = this.getRegex(target);
      if (regex === "") {
        return;
      }
      var clipboard = event2.clipboardData.getData("text");
      var testKey = "";
      _toConsumableArray$8(clipboard).forEach(function(c) {
        if (target.$_pkeyfilterValidateOnly) {
          testKey += c;
        } else {
          testKey = c;
        }
        if (!regex.test(testKey)) {
          event2.preventDefault();
          return false;
        }
      });
    }, "onPaste")
  }
});
var theme$k = /* @__PURE__ */ __name(function theme20(_ref) {
  var dt = _ref.dt;
  return "\n.p-knob-range {\n    fill: none;\n    transition: stroke 0.1s ease-in;\n}\n\n.p-knob-value {\n    animation-name: p-knob-dash-frame;\n    animation-fill-mode: forwards;\n    fill: none;\n}\n\n.p-knob-text {\n    font-size: 1.3rem;\n    text-align: center;\n}\n\n.p-knob svg {\n    border-radius: 50%;\n    outline-color: transparent;\n    transition: background ".concat(dt("knob.transition.duration"), ", color ").concat(dt("knob.transition.duration"), ", outline-color ").concat(dt("knob.transition.duration"), ", box-shadow ").concat(dt("knob.transition.duration"), ";\n}\n\n.p-knob svg:focus-visible {\n    box-shadow: ").concat(dt("knob.focus.ring.shadow"), ";\n    outline: ").concat(dt("knob.focus.ring.width"), " ").concat(dt("knob.focus.ring.style"), " ").concat(dt("knob.focus.ring.color"), ";\n    outline-offset: ").concat(dt("knob.focus.ring.offset"), ";\n}\n\n@keyframes p-knob-dash-frame {\n    100% {\n        stroke-dashoffset: 0;\n    }\n}\n");
}, "theme");
var classes$l = {
  root: /* @__PURE__ */ __name(function root16(_ref2) {
    var instance = _ref2.instance, props = _ref2.props;
    return ["p-knob p-component", {
      "p-disabled": props.disabled,
      "p-invalid": instance.$invalid
    }];
  }, "root"),
  range: "p-knob-range",
  value: "p-knob-value",
  text: "p-knob-text"
};
var KnobStyle = BaseStyle.extend({
  name: "knob",
  theme: theme$k,
  classes: classes$l
});
var script$1$l = {
  name: "BaseKnob",
  "extends": script$1s,
  props: {
    size: {
      type: Number,
      "default": 100
    },
    readonly: {
      type: Boolean,
      "default": false
    },
    step: {
      type: Number,
      "default": 1
    },
    min: {
      type: Number,
      "default": 0
    },
    max: {
      type: Number,
      "default": 100
    },
    valueColor: {
      type: String,
      "default": /* @__PURE__ */ __name(function _default10() {
        return $dt("knob.value.background").variable;
      }, "_default")
    },
    rangeColor: {
      type: String,
      "default": /* @__PURE__ */ __name(function _default11() {
        return $dt("knob.range.background").variable;
      }, "_default")
    },
    textColor: {
      type: String,
      "default": /* @__PURE__ */ __name(function _default12() {
        return $dt("knob.text.color").variable;
      }, "_default")
    },
    strokeWidth: {
      type: Number,
      "default": 14
    },
    showValue: {
      type: Boolean,
      "default": true
    },
    valueTemplate: {
      type: [String, Function],
      "default": "{value}"
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: KnobStyle,
  provide: /* @__PURE__ */ __name(function provide30() {
    return {
      $pcKnob: this,
      $parentInstance: this
    };
  }, "provide")
};
var Math_PI$1 = 3.14159265358979;
var script$z = {
  name: "Knob",
  "extends": script$1$l,
  inheritAttrs: false,
  emits: ["change"],
  data: /* @__PURE__ */ __name(function data19() {
    return {
      radius: 40,
      midX: 50,
      midY: 50,
      minRadians: 4 * Math_PI$1 / 3,
      maxRadians: -Math_PI$1 / 3
    };
  }, "data"),
  methods: {
    updateValueByOffset: /* @__PURE__ */ __name(function updateValueByOffset(offsetX, offsetY) {
      var dx = offsetX - this.size / 2;
      var dy = this.size / 2 - offsetY;
      var angle = Math.atan2(dy, dx);
      var start = -Math_PI$1 / 2 - Math_PI$1 / 6;
      this.updateModel(angle, start);
    }, "updateValueByOffset"),
    updateModel: /* @__PURE__ */ __name(function updateModel5(angle, start) {
      var mappedValue;
      if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);
      else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math_PI$1, this.minRadians, this.maxRadians, this.min, this.max);
      else return;
      var newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;
      this.writeValue(newValue);
      this.$emit("change", newValue);
    }, "updateModel"),
    updateModelValue: /* @__PURE__ */ __name(function updateModelValue2(newValue) {
      if (newValue > this.max) this.writeValue(this.max);
      else if (newValue < this.min) this.writeValue(this.min);
      else this.writeValue(newValue);
    }, "updateModelValue"),
    mapRange: /* @__PURE__ */ __name(function mapRange(x, inMin, inMax, outMin, outMax) {
      return (x - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;
    }, "mapRange"),
    onClick: /* @__PURE__ */ __name(function onClick4(event2) {
      if (!this.disabled && !this.readonly) {
        this.updateValueByOffset(event2.offsetX, event2.offsetY);
      }
    }, "onClick"),
    onBlur: /* @__PURE__ */ __name(function onBlur7(event2) {
      var _this$formField$onBlu, _this$formField;
      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField, event2);
    }, "onBlur"),
    onMouseDown: /* @__PURE__ */ __name(function onMouseDown(event2) {
      if (!this.disabled && !this.readonly) {
        window.addEventListener("mousemove", this.onMouseMove);
        window.addEventListener("mouseup", this.onMouseUp);
        event2.preventDefault();
      }
    }, "onMouseDown"),
    onMouseUp: /* @__PURE__ */ __name(function onMouseUp(event2) {
      if (!this.disabled && !this.readonly) {
        window.removeEventListener("mousemove", this.onMouseMove);
        window.removeEventListener("mouseup", this.onMouseUp);
        event2.preventDefault();
      }
    }, "onMouseUp"),
    onTouchStart: /* @__PURE__ */ __name(function onTouchStart(event2) {
      if (!this.disabled && !this.readonly) {
        window.addEventListener("touchmove", this.onTouchMove);
        window.addEventListener("touchend", this.onTouchEnd);
        event2.preventDefault();
      }
    }, "onTouchStart"),
    onTouchEnd: /* @__PURE__ */ __name(function onTouchEnd(event2) {
      if (!this.disabled && !this.readonly) {
        window.removeEventListener("touchmove", this.onTouchMove);
        window.removeEventListener("touchend", this.onTouchEnd);
        event2.preventDefault();
      }
    }, "onTouchEnd"),
    onMouseMove: /* @__PURE__ */ __name(function onMouseMove(event2) {
      if (!this.disabled && !this.readonly) {
        this.updateValueByOffset(event2.offsetX, event2.offsetY);
        event2.preventDefault();
      }
    }, "onMouseMove"),
    onTouchMove: /* @__PURE__ */ __name(function onTouchMove(event2) {
      if (!this.disabled && !this.readonly && event2.touches.length == 1) {
        var rect = this.$el.getBoundingClientRect();
        var touch = event2.targetTouches.item(0);
        var offsetX = touch.clientX - rect.left;
        var offsetY = touch.clientY - rect.top;
        this.updateValueByOffset(offsetX, offsetY);
      }
    }, "onTouchMove"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown7(event2) {
      if (!this.disabled && !this.readonly) {
        switch (event2.code) {
          case "ArrowRight":
          case "ArrowUp": {
            event2.preventDefault();
            this.updateModelValue(this.d_value + this.step);
            break;
          }
          case "ArrowLeft":
          case "ArrowDown": {
            event2.preventDefault();
            this.updateModelValue(this.d_value - this.step);
            break;
          }
          case "Home": {
            event2.preventDefault();
            this.writeValue(this.min);
            break;
          }
          case "End": {
            event2.preventDefault();
            this.writeValue(this.max);
            break;
          }
          case "PageUp": {
            event2.preventDefault();
            this.updateModelValue(this.d_value + 10);
            break;
          }
          case "PageDown": {
            event2.preventDefault();
            this.updateModelValue(this.d_value - 10);
            break;
          }
        }
      }
    }, "onKeyDown")
  },
  computed: {
    rangePath: /* @__PURE__ */ __name(function rangePath() {
      return "M ".concat(this.minX, " ").concat(this.minY, " A ").concat(this.radius, " ").concat(this.radius, " 0 1 1 ").concat(this.maxX, " ").concat(this.maxY);
    }, "rangePath"),
    valuePath: /* @__PURE__ */ __name(function valuePath() {
      return "M ".concat(this.zeroX, " ").concat(this.zeroY, " A ").concat(this.radius, " ").concat(this.radius, " 0 ").concat(this.largeArc, " ").concat(this.sweep, " ").concat(this.valueX, " ").concat(this.valueY);
    }, "valuePath"),
    zeroRadians: /* @__PURE__ */ __name(function zeroRadians() {
      if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);
      else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);
    }, "zeroRadians"),
    valueRadians: /* @__PURE__ */ __name(function valueRadians() {
      return this.mapRange(this.d_value, this.min, this.max, this.minRadians, this.maxRadians);
    }, "valueRadians"),
    minX: /* @__PURE__ */ __name(function minX() {
      return this.midX + Math.cos(this.minRadians) * this.radius;
    }, "minX"),
    minY: /* @__PURE__ */ __name(function minY() {
      return this.midY - Math.sin(this.minRadians) * this.radius;
    }, "minY"),
    maxX: /* @__PURE__ */ __name(function maxX() {
      return this.midX + Math.cos(this.maxRadians) * this.radius;
    }, "maxX"),
    maxY: /* @__PURE__ */ __name(function maxY() {
      return this.midY - Math.sin(this.maxRadians) * this.radius;
    }, "maxY"),
    zeroX: /* @__PURE__ */ __name(function zeroX() {
      return this.midX + Math.cos(this.zeroRadians) * this.radius;
    }, "zeroX"),
    zeroY: /* @__PURE__ */ __name(function zeroY() {
      return this.midY - Math.sin(this.zeroRadians) * this.radius;
    }, "zeroY"),
    valueX: /* @__PURE__ */ __name(function valueX() {
      return this.midX + Math.cos(this.valueRadians) * this.radius;
    }, "valueX"),
    valueY: /* @__PURE__ */ __name(function valueY() {
      return this.midY - Math.sin(this.valueRadians) * this.radius;
    }, "valueY"),
    largeArc: /* @__PURE__ */ __name(function largeArc() {
      return Math.abs(this.zeroRadians - this.valueRadians) < Math_PI$1 ? 0 : 1;
    }, "largeArc"),
    sweep: /* @__PURE__ */ __name(function sweep() {
      return this.valueRadians > this.zeroRadians ? 0 : 1;
    }, "sweep"),
    valueToDisplay: /* @__PURE__ */ __name(function valueToDisplay() {
      if (typeof this.valueTemplate === "string") {
        return this.valueTemplate.replace(/{value}/g, this.d_value);
      } else {
        return this.valueTemplate(this.d_value);
      }
    }, "valueToDisplay")
  }
};
var _hoisted_1$j = ["width", "height", "tabindex", "aria-valuemin", "aria-valuemax", "aria-valuenow", "aria-labelledby", "aria-label"];
var _hoisted_2$e = ["d", "stroke-width", "stroke"];
var _hoisted_3$b = ["d", "stroke-width", "stroke"];
var _hoisted_4$7 = ["fill"];
function render$v(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [(openBlock(), createElementBlock("svg", mergeProps({
    viewBox: "0 0 100 100",
    role: "slider",
    width: _ctx.size,
    height: _ctx.size,
    tabindex: _ctx.readonly || _ctx.disabled ? -1 : _ctx.tabindex,
    "aria-valuemin": _ctx.min,
    "aria-valuemax": _ctx.max,
    "aria-valuenow": _ctx.d_value,
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel,
    onClick: _cache[0] || (_cache[0] = function() {
      return $options.onClick && $options.onClick.apply($options, arguments);
    }),
    onBlur: _cache[1] || (_cache[1] = function() {
      return $options.onBlur && $options.onBlur.apply($options, arguments);
    }),
    onKeydown: _cache[2] || (_cache[2] = function() {
      return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);
    }),
    onMousedown: _cache[3] || (_cache[3] = function() {
      return $options.onMouseDown && $options.onMouseDown.apply($options, arguments);
    }),
    onMouseup: _cache[4] || (_cache[4] = function() {
      return $options.onMouseUp && $options.onMouseUp.apply($options, arguments);
    }),
    onTouchstartPassive: _cache[5] || (_cache[5] = function() {
      return $options.onTouchStart && $options.onTouchStart.apply($options, arguments);
    }),
    onTouchend: _cache[6] || (_cache[6] = function() {
      return $options.onTouchEnd && $options.onTouchEnd.apply($options, arguments);
    })
  }, _ctx.ptm("svg")), [createBaseVNode("path", mergeProps({
    d: $options.rangePath,
    "stroke-width": _ctx.strokeWidth,
    stroke: _ctx.rangeColor,
    "class": _ctx.cx("range")
  }, _ctx.ptm("range")), null, 16, _hoisted_2$e), createBaseVNode("path", mergeProps({
    d: $options.valuePath,
    "stroke-width": _ctx.strokeWidth,
    stroke: _ctx.valueColor,
    "class": _ctx.cx("value")
  }, _ctx.ptm("value")), null, 16, _hoisted_3$b), _ctx.showValue ? (openBlock(), createElementBlock("text", mergeProps({
    key: 0,
    x: 50,
    y: 57,
    "text-anchor": "middle",
    fill: _ctx.textColor,
    "class": _ctx.cx("text")
  }, _ctx.ptm("text")), toDisplayString($options.valueToDisplay), 17, _hoisted_4$7)) : createCommentVNode("", true)], 16, _hoisted_1$j))], 16);
}
__name(render$v, "render$v");
script$z.render = render$v;
var theme$j = /* @__PURE__ */ __name(function theme21(_ref) {
  var dt = _ref.dt;
  return "\n.p-megamenu {\n    position: relative;\n    display: flex;\n    align-items: center;\n    background: ".concat(dt("megamenu.background"), ";\n    border: 1px solid ").concat(dt("megamenu.border.color"), ";\n    border-radius: ").concat(dt("megamenu.border.radius"), ";\n    color: ").concat(dt("megamenu.color"), ";\n    gap: ").concat(dt("megamenu.gap"), ";\n}\n\n.p-megamenu-start,\n.p-megamenu-end {\n    display: flex;\n    align-items: center;\n}\n\n.p-megamenu-root-list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    outline: 0 none;\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    gap: ").concat(dt("megamenu.gap"), ";\n}\n\n.p-megamenu-root-list > .p-megamenu-item > .p-megamenu-item-content {\n    border-radius: ").concat(dt("megamenu.base.item.border.radius"), ";\n}\n\n.p-megamenu-root-list > .p-megamenu-item > .p-megamenu-item-content > .p-megamenu-item-link {\n    padding: ").concat(dt("megamenu.base.item.padding"), ";\n}\n\n.p-megamenu-item-content {\n    transition: background ").concat(dt("megamenu.transition.duration"), ", color ").concat(dt("megamenu.transition.duration"), ";\n    border-radius: ").concat(dt("megamenu.item.border.radius"), ";\n    color: ").concat(dt("megamenu.item.color"), ";\n}\n\n.p-megamenu-item-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n    color: inherit;\n    padding: ").concat(dt("megamenu.item.padding"), ";\n    gap: ").concat(dt("megamenu.item.gap"), ";\n    user-select: none;\n    outline: 0 none;\n}\n\n.p-megamenu-item-label {\n    line-height: 1;\n}\n\n.p-megamenu-item-icon {\n    color: ").concat(dt("megamenu.item.icon.color"), ";\n}\n\n.p-megamenu-submenu-icon {\n    color: ").concat(dt("megamenu.submenu.icon.color"), ";\n    font-size: ").concat(dt("megamenu.submenu.icon.size"), ";\n    width: ").concat(dt("megamenu.submenu.icon.size"), ";\n    height: ").concat(dt("megamenu.submenu.icon.size"), ";\n}\n\n.p-megamenu-item.p-focus > .p-megamenu-item-content {\n    color: ").concat(dt("megamenu.item.focus.color"), ";\n    background: ").concat(dt("megamenu.item.focus.background"), ";\n}\n\n.p-megamenu-item.p-focus > .p-megamenu-item-content .p-megamenu-item-icon {\n    color: ").concat(dt("megamenu.item.icon.focus.color"), ";\n}\n\n.p-megamenu-item.p-focus > .p-megamenu-item-content .p-megamenu-submenu-icon {\n    color: ").concat(dt("megamenu.submenu.icon.focus.color"), ";\n}\n\n.p-megamenu-item:not(.p-disabled) > .p-megamenu-item-content:hover {\n    color: ").concat(dt("megamenu.item.focus.color"), ";\n    background: ").concat(dt("megamenu.item.focus.background"), ";\n}\n\n.p-megamenu-item:not(.p-disabled) > .p-megamenu-item-content:hover .p-megamenu-item-icon {\n    color: ").concat(dt("megamenu.item.icon.focus.color"), ";\n}\n\n.p-megamenu-item:not(.p-disabled) > .p-megamenu-item-content:hover .p-megamenu-submenu-icon {\n    color: ").concat(dt("megamenu.submenu.icon.focus.color"), ";\n}\n\n.p-megamenu-item-active > .p-megamenu-item-content {\n    color: ").concat(dt("megamenu.item.active.color"), ";\n    background: ").concat(dt("megamenu.item.active.background"), ";\n}\n\n.p-megamenu-item-active > .p-megamenu-item-content .p-megamenu-item-icon {\n    color: ").concat(dt("megamenu.item.icon.active.color"), ";\n}\n\n.p-megamenu-item-active > .p-megamenu-item-content .p-megamenu-submenu-icon {\n    color: ").concat(dt("megamenu.submenu.icon.active.color"), ";\n}\n\n.p-megamenu-overlay {\n    display: none;\n    position: absolute;\n    width: auto;\n    z-index: 1;\n    left: 0;\n    min-width: 100%;\n    padding: ").concat(dt("megamenu.overlay.padding"), ";\n    background: ").concat(dt("megamenu.overlay.background"), ";\n    color: ").concat(dt("megamenu.overlay.color"), ";\n    border: 1px solid ").concat(dt("megamenu.overlay.border.color"), ";\n    border-radius: ").concat(dt("megamenu.overlay.border.radius"), ";\n    box-shadow: ").concat(dt("megamenu.overlay.shadow"), ";\n}\n\n.p-megamenu-overlay:dir(rtl) {\n    left: auto;\n    right: 0;\n}\n\n.p-megamenu-root-list > .p-megamenu-item-active > .p-megamenu-overlay {\n    display: block;\n}\n\n.p-megamenu-submenu {\n    margin: 0;\n    list-style: none;\n    padding: ").concat(dt("megamenu.submenu.padding"), ";\n    min-width: 12.5rem;\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("megamenu.submenu.gap"), "\n}\n\n.p-megamenu-submenu-label {\n    padding: ").concat(dt("megamenu.submenu.label.padding"), ";\n    color: ").concat(dt("megamenu.submenu.label.color"), ";\n    font-weight: ").concat(dt("megamenu.submenu.label.font.weight"), ";\n    background: ").concat(dt("megamenu.submenu.label.background"), ";\n}\n\n.p-megamenu-separator {\n    border-block-start: 1px solid ").concat(dt("megamenu.separator.border.color"), ";\n}\n\n.p-megamenu-horizontal {\n    align-items: center;\n    padding: ").concat(dt("megamenu.horizontal.orientation.padding"), ";\n}\n\n.p-megamenu-horizontal .p-megamenu-root-list {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: ").concat(dt("megamenu.horizontal.orientation.gap"), ";\n}\n\n.p-megamenu-horizontal .p-megamenu-end {\n    margin-left: auto;\n    align-self: center;\n}\n\n.p-megamenu-horizontal .p-megamenu-end:dir(rtl) {\n    margin-left: 0;\n    margin-right: auto;\n}\n\n.p-megamenu-vertical {\n    display: inline-flex;\n    min-width: 12.5rem;\n    flex-direction: column;\n    align-items: stretch;\n    padding: ").concat(dt("megamenu.vertical.orientation.padding"), ";\n}\n\n.p-megamenu-vertical .p-megamenu-root-list {\n    align-items: stretch;\n    flex-direction: column;\n    gap: ").concat(dt("megamenu.vertical.orientation.gap"), ";\n}\n\n.p-megamenu-vertical .p-megamenu-root-list > .p-megamenu-item-active > .p-megamenu-overlay {\n    left: 100%;\n    top: 0;\n}\n\n.p-megamenu-vertical .p-megamenu-root-list > .p-megamenu-item-active > .p-megamenu-overlay:dir(rtl) {\n    left: auto;\n    right: 100%;\n}\n\n.p-megamenu-vertical .p-megamenu-root-list > .p-megamenu-item > .p-megamenu-item-content .p-megamenu-submenu-icon {\n    margin-left: auto;\n}\n\n.p-megamenu-vertical .p-megamenu-root-list > .p-megamenu-item > .p-megamenu-item-content .p-megamenu-submenu-icon:dir(rtl) {\n    margin-left: 0;\n    margin-right: auto;\n    transform: rotate(180deg);\n}\n\n.p-megamenu-grid {\n    display: flex;\n}\n\n.p-megamenu-col-2,\n.p-megamenu-col-3,\n.p-megamenu-col-4,\n.p-megamenu-col-6,\n.p-megamenu-col-12 {\n    flex: 0 0 auto;\n    padding: ").concat(dt("megamenu.overlay.gap"), ";\n}\n\n.p-megamenu-col-2 {\n    width: 16.6667%;\n}\n\n.p-megamenu-col-3 {\n    width: 25%;\n}\n\n.p-megamenu-col-4 {\n    width: 33.3333%;\n}\n\n.p-megamenu-col-6 {\n    width: 50%;\n}\n\n.p-megamenu-col-12 {\n    width: 100%;\n}\n\n.p-megamenu-button {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    width: ").concat(dt("megamenu.mobile.button.size"), ";\n    height: ").concat(dt("megamenu.mobile.button.size"), ";\n    position: relative;\n    color: ").concat(dt("megamenu.mobile.button.color"), ";\n    border: 0 none;\n    background: transparent;\n    border-radius: ").concat(dt("megamenu.mobile.button.border.radius"), ";\n    transition: background ").concat(dt("megamenu.transition.duration"), ", color ").concat(dt("megamenu.transition.duration"), ", outline-color ").concat(dt("megamenu.transition.duration"), ", box-shadow ").concat(dt("megamenu.transition.duration"), ";\n    outline-color: transparent;\n}\n\n.p-megamenu-button:hover {\n    color: ").concat(dt("megamenu.mobile.button.hover.color"), ";\n    background: ").concat(dt("megamenu.mobile.button.hover.background"), ";\n}\n\n.p-megamenu-button:focus-visible {\n    box-shadow: ").concat(dt("megamenu.mobile.button.focus.ring.shadow"), ";\n    outline: ").concat(dt("megamenu.mobile.button.focus.ring.width"), " ").concat(dt("megamenu.mobile.button.focus.ring.style"), " ").concat(dt("megamenu.mobile.button.focus.ring.color"), ";\n    outline-offset: ").concat(dt("megamenu.mobile.button.focus.ring.offset"), ";\n}\n\n.p-megamenu-mobile {\n    display: flex;\n}\n\n.p-megamenu-mobile .p-megamenu-button {\n    display: flex;\n}\n\n.p-megamenu-mobile .p-megamenu-root-list {\n    position: absolute;\n    display: none;\n    flex-direction: column;\n    top: 100%;\n    left: 0;\n    z-index: 1;\n    width: 100%;\n    padding: ").concat(dt("megamenu.submenu.padding"), ";\n    gap: ").concat(dt("megamenu.submenu.gap"), ";\n    background: ").concat(dt("megamenu.overlay.background"), ";\n    border: 1px solid ").concat(dt("megamenu.overlay.border.color"), ";\n    box-shadow: ").concat(dt("megamenu.overlay.shadow"), ";\n}\n\n.p-megamenu-mobile .p-megamenu-root-list:dir(rtl) {\n    left: auto;\n    right: 0;\n}\n\n.p-megamenu-mobile-active .p-megamenu-root-list {\n    display: block;\n}\n\n.p-megamenu-mobile .p-megamenu-root-list .p-megamenu-item {\n    width: 100%;\n    position: static;\n}\n\n.p-megamenu-mobile .p-megamenu-overlay {\n    position: static;\n    border: 0 none;\n    border-radius: 0;\n    box-shadow: none;\n}\n\n.p-megamenu-mobile .p-megamenu-grid {\n    flex-wrap: wrap;\n    overflow: auto;\n    max-height: 90%;\n}\n\n.p-megamenu-mobile .p-megamenu-root-list > .p-megamenu-item > .p-megamenu-item-content .p-megamenu-submenu-icon {\n    margin-left: auto;\n    transition: transform 0.2s;\n}\n\n.p-megamenu-mobile .p-megamenu-root-list > .p-megamenu-item > .p-megamenu-item-content .p-megamenu-submenu-icon:dir(rtl) {\n    margin-left: 0;\n    margin-right: auto;\n}\n\n.p-megamenu-mobile .p-megamenu-root-list > .p-megamenu-item-active > .p-megamenu-item-content .p-megamenu-submenu-icon {\n    transform: rotate(-180deg);\n}\n");
}, "theme");
var inlineStyles$6 = {
  rootList: /* @__PURE__ */ __name(function rootList(_ref2) {
    var props = _ref2.props;
    return {
      "max-height": props.scrollHeight,
      overflow: "auto"
    };
  }, "rootList")
};
var classes$k = {
  root: /* @__PURE__ */ __name(function root17(_ref3) {
    var instance = _ref3.instance;
    return ["p-megamenu p-component", {
      "p-megamenu-mobile": instance.queryMatches,
      "p-megamenu-mobile-active": instance.mobileActive,
      "p-megamenu-horizontal": instance.horizontal,
      "p-megamenu-vertical": instance.vertical
    }];
  }, "root"),
  start: "p-megamenu-start",
  button: "p-megamenu-button",
  rootList: "p-megamenu-root-list",
  submenuLabel: /* @__PURE__ */ __name(function submenuLabel(_ref4) {
    var instance = _ref4.instance, processedItem = _ref4.processedItem;
    return ["p-megamenu-submenu-label", {
      "p-disabled": instance.isItemDisabled(processedItem)
    }];
  }, "submenuLabel"),
  item: /* @__PURE__ */ __name(function item3(_ref5) {
    var instance = _ref5.instance, processedItem = _ref5.processedItem;
    return ["p-megamenu-item", {
      "p-megamenu-item-active": instance.isItemActive(processedItem),
      "p-focus": instance.isItemFocused(processedItem),
      "p-disabled": instance.isItemDisabled(processedItem)
    }];
  }, "item"),
  itemContent: "p-megamenu-item-content",
  itemLink: "p-megamenu-item-link",
  itemIcon: "p-megamenu-item-icon",
  itemLabel: "p-megamenu-item-label",
  submenuIcon: "p-megamenu-submenu-icon",
  overlay: "p-megamenu-overlay",
  grid: "p-megamenu-grid",
  column: /* @__PURE__ */ __name(function column(_ref6) {
    var instance = _ref6.instance, processedItem = _ref6.processedItem;
    var length = instance.isItemGroup(processedItem) ? processedItem.items.length : 0;
    var columnClass;
    if (instance.$parentInstance.queryMatches) columnClass = "p-megamenu-col-12";
    else {
      switch (length) {
        case 2:
          columnClass = "p-megamenu-col-6";
          break;
        case 3:
          columnClass = "p-megamenu-col-4";
          break;
        case 4:
          columnClass = "p-megamenu-col-3";
          break;
        case 6:
          columnClass = "p-megamenu-col-2";
          break;
        default:
          columnClass = "p-megamenu-col-12";
          break;
      }
    }
    return columnClass;
  }, "column"),
  submenu: "p-megamenu-submenu",
  separator: "p-megamenu-separator",
  end: "p-megamenu-end"
};
var MegaMenuStyle = BaseStyle.extend({
  name: "megamenu",
  theme: theme$j,
  classes: classes$k,
  inlineStyles: inlineStyles$6
});
var script$2$5 = {
  name: "BaseMegaMenu",
  "extends": script$1d,
  props: {
    model: {
      type: Array,
      "default": null
    },
    orientation: {
      type: String,
      "default": "horizontal"
    },
    breakpoint: {
      type: String,
      "default": "960px"
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    scrollHeight: {
      type: String,
      "default": "20rem"
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: MegaMenuStyle,
  provide: /* @__PURE__ */ __name(function provide31() {
    return {
      $pcMegaMenu: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1$k = {
  name: "MegaMenuSub",
  hostName: "MegaMenu",
  "extends": script$1d,
  emits: ["item-click", "item-mouseenter"],
  props: {
    menuId: {
      type: String,
      "default": null
    },
    focusedItemId: {
      type: String,
      "default": null
    },
    horizontal: {
      type: Boolean,
      "default": false
    },
    submenu: {
      type: Object,
      "default": null
    },
    mobileActive: {
      type: Boolean,
      "default": false
    },
    items: {
      type: Array,
      "default": null
    },
    level: {
      type: Number,
      "default": 0
    },
    templates: {
      type: Object,
      "default": null
    },
    activeItem: {
      type: Object,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": 0
    }
  },
  methods: {
    getSubListId: /* @__PURE__ */ __name(function getSubListId(processedItem) {
      return "".concat(this.getItemId(processedItem), "_list");
    }, "getSubListId"),
    getSubListKey: /* @__PURE__ */ __name(function getSubListKey(processedItem) {
      return this.getSubListId(processedItem);
    }, "getSubListKey"),
    getItemId: /* @__PURE__ */ __name(function getItemId2(processedItem) {
      return "".concat(this.menuId, "_").concat(processedItem.key);
    }, "getItemId"),
    getItemKey: /* @__PURE__ */ __name(function getItemKey(processedItem) {
      return this.getItemId(processedItem);
    }, "getItemKey"),
    getItemProp: /* @__PURE__ */ __name(function getItemProp2(processedItem, name4, params) {
      return processedItem && processedItem.item ? resolve(processedItem.item[name4], params) : void 0;
    }, "getItemProp"),
    getItemLabel: /* @__PURE__ */ __name(function getItemLabel(processedItem) {
      return this.getItemProp(processedItem, "label");
    }, "getItemLabel"),
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions3(processedItem, index, key) {
      return this.ptm(key, {
        context: {
          item: processedItem.item,
          index,
          active: this.isItemActive(processedItem),
          focused: this.isItemFocused(processedItem),
          disabled: this.isItemDisabled(processedItem)
        }
      });
    }, "getPTOptions"),
    isItemActive: /* @__PURE__ */ __name(function isItemActive3(processedItem) {
      return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;
    }, "isItemActive"),
    isItemVisible: /* @__PURE__ */ __name(function isItemVisible(processedItem) {
      return this.getItemProp(processedItem, "visible") !== false;
    }, "isItemVisible"),
    isItemDisabled: /* @__PURE__ */ __name(function isItemDisabled(processedItem) {
      return this.getItemProp(processedItem, "disabled");
    }, "isItemDisabled"),
    isItemFocused: /* @__PURE__ */ __name(function isItemFocused(processedItem) {
      return this.focusedItemId === this.getItemId(processedItem);
    }, "isItemFocused"),
    isItemGroup: /* @__PURE__ */ __name(function isItemGroup(processedItem) {
      return isNotEmpty(processedItem.items);
    }, "isItemGroup"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick2(event2, processedItem) {
      this.getItemProp(processedItem, "command", {
        originalEvent: event2,
        item: processedItem.item
      });
      this.$emit("item-click", {
        originalEvent: event2,
        processedItem,
        isFocus: true
      });
    }, "onItemClick"),
    onItemMouseEnter: /* @__PURE__ */ __name(function onItemMouseEnter2(event2, processedItem) {
      this.$emit("item-mouseenter", {
        originalEvent: event2,
        processedItem
      });
    }, "onItemMouseEnter"),
    getAriaSetSize: /* @__PURE__ */ __name(function getAriaSetSize() {
      var _this = this;
      return this.items.filter(function(processedItem) {
        return _this.isItemVisible(processedItem) && !_this.getItemProp(processedItem, "separator");
      }).length;
    }, "getAriaSetSize"),
    getAriaPosInset: /* @__PURE__ */ __name(function getAriaPosInset(index) {
      var _this2 = this;
      return index - this.items.slice(0, index).filter(function(processedItem) {
        return _this2.isItemVisible(processedItem) && _this2.getItemProp(processedItem, "separator");
      }).length + 1;
    }, "getAriaPosInset"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps3(processedItem, index) {
      return {
        action: mergeProps({
          "class": this.cx("itemLink"),
          tabindex: -1
        }, this.getPTOptions(processedItem, index, "itemLink")),
        icon: mergeProps({
          "class": [this.cx("itemIcon"), this.getItemProp(processedItem, "icon")]
        }, this.getPTOptions(processedItem, index, "itemIcon")),
        label: mergeProps({
          "class": this.cx("label")
        }, this.getPTOptions(processedItem, index, "label")),
        submenuicon: mergeProps({
          "class": this.cx("submenuIcon")
        }, this.getPTOptions(processedItem, index, "submenuIcon"))
      };
    }, "getMenuItemProps")
  },
  components: {
    AngleRightIcon: script$1q,
    AngleDownIcon: script$1H
  },
  directives: {
    ripple: Ripple
  }
};
var _hoisted_1$1$4 = ["tabindex"];
var _hoisted_2$1$3 = ["id", "aria-label", "aria-disabled", "aria-expanded", "aria-haspopup", "aria-level", "aria-setsize", "aria-posinset", "data-p-active", "data-p-focused", "data-p-disabled"];
var _hoisted_3$a = ["onClick", "onMouseenter"];
var _hoisted_4$6 = ["href", "target"];
var _hoisted_5$2 = ["id"];
function render$1$5(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_MegaMenuSub = resolveComponent("MegaMenuSub", true);
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("ul", mergeProps({
    "class": $props.level === 0 ? _ctx.cx("rootList") : _ctx.cx("submenu"),
    tabindex: $props.tabindex
  }, $props.level === 0 ? _ctx.ptm("rootList") : _ctx.ptm("submenu")), [$props.submenu ? (openBlock(), createElementBlock("li", mergeProps({
    key: 0,
    "class": [_ctx.cx("submenuLabel", {
      submenu: $props.submenu
    }), $options.getItemProp($props.submenu, "class")],
    style: $options.getItemProp($props.submenu, "style"),
    role: "presentation"
  }, _ctx.ptm("submenuLabel")), toDisplayString($options.getItemLabel($props.submenu)), 17)) : createCommentVNode("", true), (openBlock(true), createElementBlock(Fragment, null, renderList($props.items, function(processedItem, index) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.getItemKey(processedItem)
    }, [$options.isItemVisible(processedItem) && !$options.getItemProp(processedItem, "separator") ? (openBlock(), createElementBlock("li", mergeProps({
      key: 0,
      id: $options.getItemId(processedItem),
      style: $options.getItemProp(processedItem, "style"),
      "class": [_ctx.cx("item", {
        processedItem
      }), $options.getItemProp(processedItem, "class")],
      role: "menuitem",
      "aria-label": $options.getItemLabel(processedItem),
      "aria-disabled": $options.isItemDisabled(processedItem) || void 0,
      "aria-expanded": $options.isItemGroup(processedItem) ? $options.isItemActive(processedItem) : void 0,
      "aria-haspopup": $options.isItemGroup(processedItem) && !$options.getItemProp(processedItem, "to") ? "menu" : void 0,
      "aria-level": $props.level + 1,
      "aria-setsize": $options.getAriaSetSize(),
      "aria-posinset": $options.getAriaPosInset(index),
      ref_for: true
    }, $options.getPTOptions(processedItem, index, "item"), {
      "data-p-active": $options.isItemActive(processedItem),
      "data-p-focused": $options.isItemFocused(processedItem),
      "data-p-disabled": $options.isItemDisabled(processedItem)
    }), [createBaseVNode("div", mergeProps({
      "class": _ctx.cx("itemContent"),
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onItemClick($event, processedItem);
      }, "onClick"),
      onMouseenter: /* @__PURE__ */ __name(function onMouseenter($event) {
        return $options.onItemMouseEnter($event, processedItem);
      }, "onMouseenter"),
      ref_for: true
    }, $options.getPTOptions(processedItem, index, "itemContent")), [!$props.templates.item ? withDirectives((openBlock(), createElementBlock("a", mergeProps({
      key: 0,
      href: $options.getItemProp(processedItem, "url"),
      "class": _ctx.cx("itemLink"),
      target: $options.getItemProp(processedItem, "target"),
      tabindex: "-1",
      ref_for: true
    }, $options.getPTOptions(processedItem, index, "itemLink")), [$props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {
      key: 0,
      item: processedItem.item,
      "class": normalizeClass(_ctx.cx("itemIcon"))
    }, null, 8, ["item", "class"])) : $options.getItemProp(processedItem, "icon") ? (openBlock(), createElementBlock("span", mergeProps({
      key: 1,
      "class": [_ctx.cx("itemIcon"), $options.getItemProp(processedItem, "icon")],
      ref_for: true
    }, $options.getPTOptions(processedItem, index, "itemIcon")), null, 16)) : createCommentVNode("", true), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("itemLabel"),
      ref_for: true
    }, $options.getPTOptions(processedItem, index, "itemLabel")), toDisplayString($options.getItemLabel(processedItem)), 17), $options.isItemGroup(processedItem) ? (openBlock(), createElementBlock(Fragment, {
      key: 2
    }, [$props.templates.submenuicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.submenuicon), mergeProps({
      key: 0,
      active: $options.isItemActive(processedItem),
      "class": _ctx.cx("submenuIcon"),
      ref_for: true
    }, $options.getPTOptions(processedItem, index, "submenuIcon")), null, 16, ["active", "class"])) : (openBlock(), createBlock(resolveDynamicComponent($props.horizontal || $props.mobileActive ? "AngleDownIcon" : "AngleRightIcon"), mergeProps({
      key: 1,
      "class": _ctx.cx("submenuIcon"),
      ref_for: true
    }, $options.getPTOptions(processedItem, index, "submenuIcon")), null, 16, ["class"]))], 64)) : createCommentVNode("", true)], 16, _hoisted_4$6)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {
      key: 1,
      item: processedItem.item,
      hasSubmenu: $options.isItemGroup(processedItem),
      label: $options.getItemLabel(processedItem),
      props: $options.getMenuItemProps(processedItem, index)
    }, null, 8, ["item", "hasSubmenu", "label", "props"]))], 16, _hoisted_3$a), $options.isItemVisible(processedItem) && $options.isItemGroup(processedItem) ? (openBlock(), createElementBlock("div", mergeProps({
      key: 0,
      "class": _ctx.cx("overlay"),
      ref_for: true
    }, _ctx.ptm("overlay")), [createBaseVNode("div", mergeProps({
      "class": _ctx.cx("grid"),
      ref_for: true
    }, _ctx.ptm("grid")), [(openBlock(true), createElementBlock(Fragment, null, renderList(processedItem.items, function(col) {
      return openBlock(), createElementBlock("div", mergeProps({
        key: $options.getItemKey(col),
        "class": _ctx.cx("column", {
          processedItem
        }),
        ref_for: true
      }, _ctx.ptm("column")), [(openBlock(true), createElementBlock(Fragment, null, renderList(col, function(submenu) {
        return openBlock(), createBlock(_component_MegaMenuSub, {
          key: $options.getSubListKey(submenu),
          id: $options.getSubListId(submenu),
          style: normalizeStyle(_ctx.sx("submenu", true, {
            processedItem
          })),
          role: "menu",
          menuId: $props.menuId,
          focusedItemId: $props.focusedItemId,
          submenu,
          items: submenu.items,
          templates: $props.templates,
          level: $props.level + 1,
          mobileActive: $props.mobileActive,
          pt: _ctx.pt,
          unstyled: _ctx.unstyled,
          onItemClick: _cache[0] || (_cache[0] = function($event) {
            return _ctx.$emit("item-click", $event);
          }),
          onItemMouseenter: _cache[1] || (_cache[1] = function($event) {
            return _ctx.$emit("item-mouseenter", $event);
          })
        }, null, 8, ["id", "style", "menuId", "focusedItemId", "submenu", "items", "templates", "level", "mobileActive", "pt", "unstyled"]);
      }), 128))], 16);
    }), 128))], 16)], 16)) : createCommentVNode("", true)], 16, _hoisted_2$1$3)) : createCommentVNode("", true), $options.isItemVisible(processedItem) && $options.getItemProp(processedItem, "separator") ? (openBlock(), createElementBlock("li", mergeProps({
      key: 1,
      id: $options.getItemId(processedItem),
      "class": [_ctx.cx("separator"), $options.getItemProp(processedItem, "class")],
      style: $options.getItemProp(processedItem, "style"),
      role: "separator",
      ref_for: true
    }, _ctx.ptm("separator")), null, 16, _hoisted_5$2)) : createCommentVNode("", true)], 64);
  }), 128))], 16, _hoisted_1$1$4);
}
__name(render$1$5, "render$1$5");
script$1$k.render = render$1$5;
var script$y = {
  name: "MegaMenu",
  "extends": script$2$5,
  inheritAttrs: false,
  emits: ["focus", "blur"],
  outsideClickListener: null,
  resizeListener: null,
  matchMediaListener: null,
  container: null,
  menubar: null,
  searchTimeout: null,
  searchValue: null,
  data: /* @__PURE__ */ __name(function data20() {
    return {
      id: this.$attrs.id,
      mobileActive: false,
      focused: false,
      focusedItemInfo: {
        index: -1,
        key: "",
        parentKey: ""
      },
      activeItem: null,
      dirty: false,
      query: null,
      queryMatches: false
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId5(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    activeItem: /* @__PURE__ */ __name(function activeItem(newItem) {
      if (isNotEmpty(newItem)) {
        this.bindOutsideClickListener();
        this.bindResizeListener();
      } else {
        this.unbindOutsideClickListener();
        this.unbindResizeListener();
      }
    }, "activeItem")
  },
  mounted: /* @__PURE__ */ __name(function mounted21() {
    this.id = this.id || UniqueComponentId();
    this.bindMatchMediaListener();
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount8() {
    this.mobileActive = false;
    this.unbindOutsideClickListener();
    this.unbindResizeListener();
    this.unbindMatchMediaListener();
  }, "beforeUnmount"),
  methods: {
    getItemProp: /* @__PURE__ */ __name(function getItemProp3(item8, name4) {
      return item8 ? resolve(item8[name4]) : void 0;
    }, "getItemProp"),
    getItemLabel: /* @__PURE__ */ __name(function getItemLabel2(item8) {
      return this.getItemProp(item8, "label");
    }, "getItemLabel"),
    isItemDisabled: /* @__PURE__ */ __name(function isItemDisabled2(item8) {
      return this.getItemProp(item8, "disabled");
    }, "isItemDisabled"),
    isItemVisible: /* @__PURE__ */ __name(function isItemVisible2(item8) {
      return this.getItemProp(item8, "visible") !== false;
    }, "isItemVisible"),
    isItemGroup: /* @__PURE__ */ __name(function isItemGroup2(item8) {
      return isNotEmpty(this.getItemProp(item8, "items"));
    }, "isItemGroup"),
    isItemSeparator: /* @__PURE__ */ __name(function isItemSeparator(item8) {
      return this.getItemProp(item8, "separator");
    }, "isItemSeparator"),
    getProccessedItemLabel: /* @__PURE__ */ __name(function getProccessedItemLabel(processedItem) {
      return processedItem ? this.getItemLabel(processedItem.item) : void 0;
    }, "getProccessedItemLabel"),
    isProccessedItemGroup: /* @__PURE__ */ __name(function isProccessedItemGroup(processedItem) {
      return processedItem && isNotEmpty(processedItem.items);
    }, "isProccessedItemGroup"),
    toggle: /* @__PURE__ */ __name(function toggle2(event2) {
      var _this = this;
      if (this.mobileActive) {
        this.mobileActive = false;
        ZIndex.clear(this.menubar);
        this.hide();
      } else {
        this.mobileActive = true;
        ZIndex.set("menu", this.menubar, this.$primevue.config.zIndex.menu);
        setTimeout(function() {
          _this.show();
        }, 1);
      }
      this.bindOutsideClickListener();
      event2.preventDefault();
    }, "toggle"),
    show: /* @__PURE__ */ __name(function show2() {
      this.focusedItemInfo = {
        index: this.findFirstFocusedItemIndex(),
        level: 0,
        parentKey: ""
      };
      focus(this.menubar);
    }, "show"),
    hide: /* @__PURE__ */ __name(function hide3(event2, isFocus) {
      var _this2 = this;
      if (this.mobileActive) {
        this.mobileActive = false;
        setTimeout(function() {
          focus(_this2.$refs.menubutton, {
            preventScroll: true
          });
        }, 1);
      }
      this.activeItem = null;
      this.focusedItemInfo = {
        index: -1,
        key: "",
        parentKey: ""
      };
      isFocus && focus(this.menubar);
      this.dirty = false;
    }, "hide"),
    onFocus: /* @__PURE__ */ __name(function onFocus8(event2) {
      this.focused = true;
      if (this.focusedItemInfo.index === -1) {
        var index = this.findFirstFocusedItemIndex();
        var processedItem = this.findVisibleItem(index);
        this.focusedItemInfo = {
          index,
          key: processedItem.key,
          parentKey: processedItem.parentKey
        };
      }
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur8(event2) {
      this.focused = false;
      this.focusedItemInfo = {
        index: -1,
        key: "",
        parentKey: ""
      };
      this.searchValue = "";
      this.dirty = false;
      this.$emit("blur", event2);
    }, "onBlur"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown8(event2) {
      if (this.disabled) {
        event2.preventDefault();
        return;
      }
      var metaKey = event2.metaKey || event2.ctrlKey;
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2);
          break;
        case "ArrowLeft":
          this.onArrowLeftKey(event2);
          break;
        case "ArrowRight":
          this.onArrowRightKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
        case "Space":
          this.onSpaceKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(event2);
          break;
        case "Escape":
          this.onEscapeKey(event2);
          break;
        case "Tab":
          this.onTabKey(event2);
          break;
        case "PageDown":
        case "PageUp":
        case "Backspace":
        case "ShiftLeft":
        case "ShiftRight":
          break;
        default:
          if (!metaKey && isPrintableCharacter(event2.key)) {
            this.searchItems(event2, event2.key);
          }
          break;
      }
    }, "onKeyDown"),
    onItemChange: /* @__PURE__ */ __name(function onItemChange(event2) {
      var processedItem = event2.processedItem, isFocus = event2.isFocus;
      if (isEmpty(processedItem)) return;
      var index = processedItem.index, key = processedItem.key, parentKey = processedItem.parentKey, items2 = processedItem.items;
      var grouped = isNotEmpty(items2);
      grouped && (this.activeItem = processedItem);
      this.focusedItemInfo = {
        index,
        key,
        parentKey
      };
      grouped && (this.dirty = true);
      isFocus && focus(this.menubar);
    }, "onItemChange"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick3(event2) {
      var originalEvent = event2.originalEvent, processedItem = event2.processedItem;
      var grouped = this.isProccessedItemGroup(processedItem);
      var root35 = isEmpty(processedItem.parent);
      var selected3 = this.isSelected(processedItem);
      if (selected3) {
        var index = processedItem.index, key = processedItem.key, parentKey = processedItem.parentKey;
        this.activeItem = null;
        this.focusedItemInfo = {
          index,
          key,
          parentKey
        };
        this.dirty = !root35;
        if (!this.mobileActive) {
          focus(this.menubar, {
            preventScroll: true
          });
        }
      } else {
        if (grouped) {
          this.onItemChange(event2);
        } else {
          this.hide(originalEvent);
        }
      }
    }, "onItemClick"),
    onItemMouseEnter: /* @__PURE__ */ __name(function onItemMouseEnter3(event2) {
      if (!this.mobileActive && this.dirty) {
        this.onItemChange(event2);
      }
    }, "onItemMouseEnter"),
    menuButtonClick: /* @__PURE__ */ __name(function menuButtonClick(event2) {
      this.toggle(event2);
    }, "menuButtonClick"),
    menuButtonKeydown: /* @__PURE__ */ __name(function menuButtonKeydown(event2) {
      (event2.code === "Enter" || event2.code === "NumpadEnter" || event2.code === "Space") && this.menuButtonClick(event2);
    }, "menuButtonKeydown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey4(event2) {
      if (this.horizontal) {
        if (isNotEmpty(this.activeItem) && this.activeItem.key === this.focusedItemInfo.key) {
          this.focusedItemInfo = {
            index: -1,
            key: "",
            parentKey: this.activeItem.key
          };
        } else {
          var processedItem = this.findVisibleItem(this.focusedItemInfo.index);
          var grouped = this.isProccessedItemGroup(processedItem);
          if (grouped) {
            this.onItemChange({
              originalEvent: event2,
              processedItem
            });
            this.focusedItemInfo = {
              index: -1,
              key: processedItem.key,
              parentKey: processedItem.parentKey
            };
            this.searchValue = "";
          }
        }
      }
      var itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();
      this.changeFocusedItemInfo(event2, itemIndex);
      event2.preventDefault();
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey4(event2) {
      if (event2.altKey && this.horizontal) {
        if (this.focusedItemInfo.index !== -1) {
          var processedItem = this.findVisibleItem(this.focusedItemInfo.index);
          var grouped = this.isProccessedItemGroup(processedItem);
          if (!grouped && isNotEmpty(this.activeItem)) {
            if (this.focusedItemInfo.index === 0) {
              this.focusedItemInfo = {
                index: this.activeItem.index,
                key: this.activeItem.key,
                parentKey: this.activeItem.parentKey
              };
              this.activeItem = null;
            } else {
              this.changeFocusedItemInfo(event2, this.findFirstItemIndex());
            }
          }
        }
        event2.preventDefault();
      } else {
        var itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();
        this.changeFocusedItemInfo(event2, itemIndex);
        event2.preventDefault();
      }
    }, "onArrowUpKey"),
    onArrowLeftKey: /* @__PURE__ */ __name(function onArrowLeftKey2(event2) {
      var processedItem = this.findVisibleItem(this.focusedItemInfo.index);
      var grouped = this.isProccessedItemGroup(processedItem);
      if (grouped) {
        if (this.horizontal) {
          var itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();
          this.changeFocusedItemInfo(event2, itemIndex);
        }
      } else {
        if (this.vertical && isNotEmpty(this.activeItem)) {
          if (processedItem.columnIndex === 0) {
            this.focusedItemInfo = {
              index: this.activeItem.index,
              key: this.activeItem.key,
              parentKey: this.activeItem.parentKey
            };
            this.activeItem = null;
          }
        }
        var columnIndex = processedItem.columnIndex - 1;
        var _itemIndex = this.visibleItems.findIndex(function(item8) {
          return item8.columnIndex === columnIndex;
        });
        _itemIndex !== -1 && this.changeFocusedItemInfo(event2, _itemIndex);
      }
      event2.preventDefault();
    }, "onArrowLeftKey"),
    onArrowRightKey: /* @__PURE__ */ __name(function onArrowRightKey2(event2) {
      var processedItem = this.findVisibleItem(this.focusedItemInfo.index);
      var grouped = this.isProccessedItemGroup(processedItem);
      if (grouped) {
        if (this.vertical) {
          if (isNotEmpty(this.activeItem) && this.activeItem.key === processedItem.key) {
            this.focusedItemInfo = {
              index: -1,
              key: "",
              parentKey: this.activeItem.key
            };
          } else {
            var _processedItem = this.findVisibleItem(this.focusedItemInfo.index);
            var _grouped = this.isProccessedItemGroup(_processedItem);
            if (_grouped) {
              this.onItemChange({
                originalEvent: event2,
                processedItem: _processedItem
              });
              this.focusedItemInfo = {
                index: -1,
                key: _processedItem.key,
                parentKey: _processedItem.parentKey
              };
              this.searchValue = "";
            }
          }
        }
        var itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();
        this.changeFocusedItemInfo(event2, itemIndex);
      } else {
        var columnIndex = processedItem.columnIndex + 1;
        var _itemIndex2 = this.visibleItems.findIndex(function(item8) {
          return item8.columnIndex === columnIndex;
        });
        _itemIndex2 !== -1 && this.changeFocusedItemInfo(event2, _itemIndex2);
      }
      event2.preventDefault();
    }, "onArrowRightKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey4(event2) {
      this.changeFocusedItemInfo(event2, this.findFirstItemIndex());
      event2.preventDefault();
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey4(event2) {
      this.changeFocusedItemInfo(event2, this.findLastItemIndex());
      event2.preventDefault();
    }, "onEndKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey3(event2) {
      if (this.focusedItemInfo.index !== -1) {
        var element = findSingle(this.menubar, 'li[id="'.concat("".concat(this.focusedItemId), '"]'));
        var anchorElement = element && findSingle(element, 'a[data-pc-section="itemlink"]');
        anchorElement ? anchorElement.click() : element && element.click();
        var processedItem = this.visibleItems[this.focusedItemInfo.index];
        var grouped = this.isProccessedItemGroup(processedItem);
        !grouped && this.changeFocusedItemInfo(event2, this.findFirstFocusedItemIndex());
      }
      event2.preventDefault();
    }, "onEnterKey"),
    onSpaceKey: /* @__PURE__ */ __name(function onSpaceKey3(event2) {
      this.onEnterKey(event2);
    }, "onSpaceKey"),
    onEscapeKey: /* @__PURE__ */ __name(function onEscapeKey2(event2) {
      if (isNotEmpty(this.activeItem)) {
        this.focusedItemInfo = {
          index: this.activeItem.index,
          key: this.activeItem.key
        };
        this.activeItem = null;
      }
      event2.preventDefault();
    }, "onEscapeKey"),
    onTabKey: /* @__PURE__ */ __name(function onTabKey2(event2) {
      if (this.focusedItemInfo.index !== -1) {
        var processedItem = this.findVisibleItem(this.focusedItemInfo.index);
        var grouped = this.isProccessedItemGroup(processedItem);
        !grouped && this.onItemChange({
          originalEvent: event2,
          processedItem
        });
      }
      this.hide();
    }, "onTabKey"),
    bindOutsideClickListener: /* @__PURE__ */ __name(function bindOutsideClickListener4() {
      var _this3 = this;
      if (!this.outsideClickListener) {
        this.outsideClickListener = function(event2) {
          var isOutsideContainer = _this3.container && !_this3.container.contains(event2.target);
          var isOutsideTarget = !(_this3.target && (_this3.target === event2.target || _this3.target.contains(event2.target)));
          if (isOutsideContainer && isOutsideTarget) {
            _this3.hide();
          }
        };
        document.addEventListener("click", this.outsideClickListener);
      }
    }, "bindOutsideClickListener"),
    unbindOutsideClickListener: /* @__PURE__ */ __name(function unbindOutsideClickListener4() {
      if (this.outsideClickListener) {
        document.removeEventListener("click", this.outsideClickListener);
        this.outsideClickListener = null;
      }
    }, "unbindOutsideClickListener"),
    bindResizeListener: /* @__PURE__ */ __name(function bindResizeListener3() {
      var _this4 = this;
      if (!this.resizeListener) {
        this.resizeListener = function(event2) {
          if (!isTouchDevice()) {
            _this4.hide(event2, true);
          }
          _this4.mobileActive = false;
        };
        window.addEventListener("resize", this.resizeListener);
      }
    }, "bindResizeListener"),
    unbindResizeListener: /* @__PURE__ */ __name(function unbindResizeListener3() {
      if (this.resizeListener) {
        window.removeEventListener("resize", this.resizeListener);
        this.resizeListener = null;
      }
    }, "unbindResizeListener"),
    bindMatchMediaListener: /* @__PURE__ */ __name(function bindMatchMediaListener4() {
      var _this5 = this;
      if (!this.matchMediaListener) {
        var query = matchMedia("(max-width: ".concat(this.breakpoint, ")"));
        this.query = query;
        this.queryMatches = query.matches;
        this.matchMediaListener = function() {
          _this5.queryMatches = query.matches;
          _this5.mobileActive = false;
        };
        this.query.addEventListener("change", this.matchMediaListener);
      }
    }, "bindMatchMediaListener"),
    unbindMatchMediaListener: /* @__PURE__ */ __name(function unbindMatchMediaListener4() {
      if (this.matchMediaListener) {
        this.query.removeEventListener("change", this.matchMediaListener);
        this.matchMediaListener = null;
      }
    }, "unbindMatchMediaListener"),
    isItemMatched: /* @__PURE__ */ __name(function isItemMatched(processedItem) {
      var _this$getProccessedIt;
      return this.isValidItem(processedItem) && ((_this$getProccessedIt = this.getProccessedItemLabel(processedItem)) === null || _this$getProccessedIt === void 0 ? void 0 : _this$getProccessedIt.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase()));
    }, "isItemMatched"),
    isValidItem: /* @__PURE__ */ __name(function isValidItem(processedItem) {
      return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);
    }, "isValidItem"),
    isValidSelectedItem: /* @__PURE__ */ __name(function isValidSelectedItem(processedItem) {
      return this.isValidItem(processedItem) && this.isSelected(processedItem);
    }, "isValidSelectedItem"),
    isSelected: /* @__PURE__ */ __name(function isSelected3(processedItem) {
      return isNotEmpty(this.activeItem) ? this.activeItem.key === processedItem.key : false;
    }, "isSelected"),
    findFirstItemIndex: /* @__PURE__ */ __name(function findFirstItemIndex() {
      var _this6 = this;
      return this.visibleItems.findIndex(function(processedItem) {
        return _this6.isValidItem(processedItem);
      });
    }, "findFirstItemIndex"),
    findLastItemIndex: /* @__PURE__ */ __name(function findLastItemIndex() {
      var _this7 = this;
      return findLastIndex(this.visibleItems, function(processedItem) {
        return _this7.isValidItem(processedItem);
      });
    }, "findLastItemIndex"),
    findNextItemIndex: /* @__PURE__ */ __name(function findNextItemIndex(index) {
      var _this8 = this;
      var matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex(function(processedItem) {
        return _this8.isValidItem(processedItem);
      }) : -1;
      return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;
    }, "findNextItemIndex"),
    findPrevItemIndex: /* @__PURE__ */ __name(function findPrevItemIndex(index) {
      var _this9 = this;
      var matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), function(processedItem) {
        return _this9.isValidItem(processedItem);
      }) : -1;
      return matchedItemIndex > -1 ? matchedItemIndex : index;
    }, "findPrevItemIndex"),
    findSelectedItemIndex: /* @__PURE__ */ __name(function findSelectedItemIndex() {
      var _this10 = this;
      return this.visibleItems.findIndex(function(processedItem) {
        return _this10.isValidSelectedItem(processedItem);
      });
    }, "findSelectedItemIndex"),
    findFirstFocusedItemIndex: /* @__PURE__ */ __name(function findFirstFocusedItemIndex() {
      var selectedIndex = this.findSelectedItemIndex();
      return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;
    }, "findFirstFocusedItemIndex"),
    findLastFocusedItemIndex: /* @__PURE__ */ __name(function findLastFocusedItemIndex() {
      var selectedIndex = this.findSelectedItemIndex();
      return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;
    }, "findLastFocusedItemIndex"),
    findVisibleItem: /* @__PURE__ */ __name(function findVisibleItem(index) {
      return isNotEmpty(this.visibleItems) ? this.visibleItems[index] : null;
    }, "findVisibleItem"),
    searchItems: /* @__PURE__ */ __name(function searchItems(event2, _char) {
      var _this11 = this;
      this.searchValue = (this.searchValue || "") + _char;
      var itemIndex = -1;
      var matched = false;
      if (this.focusedItemInfo.index !== -1) {
        itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex(function(processedItem) {
          return _this11.isItemMatched(processedItem);
        });
        itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex(function(processedItem) {
          return _this11.isItemMatched(processedItem);
        }) : itemIndex + this.focusedItemInfo.index;
      } else {
        itemIndex = this.visibleItems.findIndex(function(processedItem) {
          return _this11.isItemMatched(processedItem);
        });
      }
      if (itemIndex !== -1) {
        matched = true;
      }
      if (itemIndex === -1 && this.focusedItemInfo.index === -1) {
        itemIndex = this.findFirstFocusedItemIndex();
      }
      if (itemIndex !== -1) {
        this.changeFocusedItemInfo(event2, itemIndex);
      }
      if (this.searchTimeout) {
        clearTimeout(this.searchTimeout);
      }
      this.searchTimeout = setTimeout(function() {
        _this11.searchValue = "";
        _this11.searchTimeout = null;
      }, 500);
      return matched;
    }, "searchItems"),
    changeFocusedItemInfo: /* @__PURE__ */ __name(function changeFocusedItemInfo(event2, index) {
      var processedItem = this.findVisibleItem(index);
      this.focusedItemInfo.index = index;
      this.focusedItemInfo.key = isNotEmpty(processedItem) ? processedItem.key : "";
      this.scrollInView();
    }, "changeFocusedItemInfo"),
    scrollInView: /* @__PURE__ */ __name(function scrollInView3() {
      var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : -1;
      var id4 = index !== -1 ? "".concat(this.id, "_").concat(index) : this.focusedItemId;
      var element;
      if (id4 === null && this.queryMatches) {
        element = this.$refs.menubutton;
      } else {
        element = findSingle(this.menubar, 'li[id="'.concat(id4, '"]'));
      }
      if (element) {
        element.scrollIntoView && element.scrollIntoView({
          block: "nearest",
          inline: "nearest",
          behavior: "smooth"
        });
      }
    }, "scrollInView"),
    createProcessedItems: /* @__PURE__ */ __name(function createProcessedItems(items2) {
      var _this12 = this;
      var level = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var parent = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var parentKey = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "";
      var columnIndex = arguments.length > 4 ? arguments[4] : void 0;
      var processedItems3 = [];
      items2 && items2.forEach(function(item8, index) {
        var key = (parentKey !== "" ? parentKey + "_" : "") + (columnIndex !== void 0 ? columnIndex + "_" : "") + index;
        var newItem = {
          item: item8,
          index,
          level,
          key,
          parent,
          parentKey,
          columnIndex: columnIndex !== void 0 ? columnIndex : parent.columnIndex !== void 0 ? parent.columnIndex : index
        };
        newItem["items"] = level === 0 && item8.items && item8.items.length > 0 ? item8.items.map(function(_items, _index) {
          return _this12.createProcessedItems(_items, level + 1, newItem, key, _index);
        }) : _this12.createProcessedItems(item8.items, level + 1, newItem, key);
        processedItems3.push(newItem);
      });
      return processedItems3;
    }, "createProcessedItems"),
    containerRef: /* @__PURE__ */ __name(function containerRef3(el) {
      this.container = el;
    }, "containerRef"),
    menubarRef: /* @__PURE__ */ __name(function menubarRef(el) {
      this.menubar = el ? el.$el : void 0;
    }, "menubarRef")
  },
  computed: {
    processedItems: /* @__PURE__ */ __name(function processedItems() {
      return this.createProcessedItems(this.model || []);
    }, "processedItems"),
    visibleItems: /* @__PURE__ */ __name(function visibleItems() {
      var processedItem = isNotEmpty(this.activeItem) ? this.activeItem : null;
      return processedItem && processedItem.key === this.focusedItemInfo.parentKey ? processedItem.items.reduce(function(items2, col) {
        col.forEach(function(submenu) {
          submenu.items.forEach(function(a) {
            items2.push(a);
          });
        });
        return items2;
      }, []) : this.processedItems;
    }, "visibleItems"),
    horizontal: /* @__PURE__ */ __name(function horizontal() {
      return this.orientation === "horizontal";
    }, "horizontal"),
    vertical: /* @__PURE__ */ __name(function vertical() {
      return this.orientation === "vertical";
    }, "vertical"),
    focusedItemId: /* @__PURE__ */ __name(function focusedItemId() {
      return isNotEmpty(this.focusedItemInfo.key) ? "".concat(this.id, "_").concat(this.focusedItemInfo.key) : null;
    }, "focusedItemId")
  },
  components: {
    MegaMenuSub: script$1$k,
    BarsIcon: script$1I
  }
};
var _hoisted_1$i = ["id"];
var _hoisted_2$d = ["aria-haspopup", "aria-expanded", "aria-controls", "aria-label"];
function render$u(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_BarsIcon = resolveComponent("BarsIcon");
  var _component_MegaMenuSub = resolveComponent("MegaMenuSub");
  return openBlock(), createElementBlock("div", mergeProps({
    ref: $options.containerRef,
    id: $data.id,
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [_ctx.$slots.start ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": _ctx.cx("start")
  }, _ctx.ptm("start")), [renderSlot(_ctx.$slots, "start")], 16)) : createCommentVNode("", true), renderSlot(_ctx.$slots, _ctx.$slots.button ? "button" : "menubutton", {
    id: $data.id,
    "class": normalizeClass(_ctx.cx("button")),
    toggleCallback: /* @__PURE__ */ __name(function toggleCallback(event2) {
      return $options.menuButtonClick(event2);
    }, "toggleCallback")
  }, function() {
    var _ctx$$primevue$config;
    return [_ctx.model && _ctx.model.length > 0 ? (openBlock(), createElementBlock("a", mergeProps({
      key: 0,
      ref: "menubutton",
      role: "button",
      tabindex: "0",
      "class": _ctx.cx("button"),
      "aria-haspopup": _ctx.model.length && _ctx.model.length > 0 ? true : false,
      "aria-expanded": $data.mobileActive,
      "aria-controls": $data.id,
      "aria-label": (_ctx$$primevue$config = _ctx.$primevue.config.locale.aria) === null || _ctx$$primevue$config === void 0 ? void 0 : _ctx$$primevue$config.navigation,
      onClick: _cache[0] || (_cache[0] = function($event) {
        return $options.menuButtonClick($event);
      }),
      onKeydown: _cache[1] || (_cache[1] = function($event) {
        return $options.menuButtonKeydown($event);
      })
    }, _ctx.ptm("button")), [renderSlot(_ctx.$slots, _ctx.$slots.buttonicon ? "buttonicon" : "menubuttonicon", {}, function() {
      return [createVNode(_component_BarsIcon, normalizeProps(guardReactiveProps(_ctx.ptm("buttonIcon"))), null, 16)];
    })], 16, _hoisted_2$d)) : createCommentVNode("", true)];
  }), createVNode(_component_MegaMenuSub, {
    ref: $options.menubarRef,
    id: $data.id + "_list",
    tabindex: !_ctx.disabled ? _ctx.tabindex : -1,
    role: "menubar",
    "aria-label": _ctx.ariaLabel,
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-disabled": _ctx.disabled || void 0,
    "aria-orientation": _ctx.orientation,
    "aria-activedescendant": $data.focused ? $options.focusedItemId : void 0,
    menuId: $data.id,
    focusedItemId: $data.focused ? $options.focusedItemId : void 0,
    items: $options.processedItems,
    horizontal: $options.horizontal,
    templates: _ctx.$slots,
    activeItem: $data.activeItem,
    mobileActive: $data.mobileActive,
    level: 0,
    style: normalizeStyle(_ctx.sx("rootList")),
    pt: _ctx.pt,
    unstyled: _ctx.unstyled,
    onFocus: $options.onFocus,
    onBlur: $options.onBlur,
    onKeydown: $options.onKeyDown,
    onItemClick: $options.onItemClick,
    onItemMouseenter: $options.onItemMouseEnter
  }, null, 8, ["id", "tabindex", "aria-label", "aria-labelledby", "aria-disabled", "aria-orientation", "aria-activedescendant", "menuId", "focusedItemId", "items", "horizontal", "templates", "activeItem", "mobileActive", "style", "pt", "unstyled", "onFocus", "onBlur", "onKeydown", "onItemClick", "onItemMouseenter"]), _ctx.$slots.end ? (openBlock(), createElementBlock("div", mergeProps({
    key: 1,
    "class": _ctx.cx("end")
  }, _ctx.ptm("end")), [renderSlot(_ctx.$slots, "end")], 16)) : createCommentVNode("", true)], 16, _hoisted_1$i);
}
__name(render$u, "render$u");
script$y.render = render$u;
var theme$i = /* @__PURE__ */ __name(function theme22(_ref) {
  var dt = _ref.dt;
  return "\n.p-menu {\n    background: ".concat(dt("menu.background"), ";\n    color: ").concat(dt("menu.color"), ";\n    border: 1px solid ").concat(dt("menu.border.color"), ";\n    border-radius: ").concat(dt("menu.border.radius"), ";\n    min-width: 12.5rem;\n}\n\n.p-menu-list {\n    margin: 0;\n    padding: ").concat(dt("menu.list.padding"), ";\n    outline: 0 none;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("menu.list.gap"), ";\n}\n\n.p-menu-item-content {\n    transition: background ").concat(dt("menu.transition.duration"), ", color ").concat(dt("menu.transition.duration"), ";\n    border-radius: ").concat(dt("menu.item.border.radius"), ";\n    color: ").concat(dt("menu.item.color"), ";\n}\n\n.p-menu-item-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n    color: inherit;\n    padding: ").concat(dt("menu.item.padding"), ";\n    gap: ").concat(dt("menu.item.gap"), ";\n    user-select: none;\n    outline: 0 none;\n}\n\n.p-menu-item-label {\n    line-height: 1;\n}\n\n.p-menu-item-icon {\n    color: ").concat(dt("menu.item.icon.color"), ";\n}\n\n.p-menu-item.p-focus .p-menu-item-content {\n    color: ").concat(dt("menu.item.focus.color"), ";\n    background: ").concat(dt("menu.item.focus.background"), ";\n}\n\n.p-menu-item.p-focus .p-menu-item-icon {\n    color: ").concat(dt("menu.item.icon.focus.color"), ";\n}\n\n.p-menu-item:not(.p-disabled) .p-menu-item-content:hover {\n    color: ").concat(dt("menu.item.focus.color"), ";\n    background: ").concat(dt("menu.item.focus.background"), ";\n}\n\n.p-menu-item:not(.p-disabled) .p-menu-item-content:hover .p-menu-item-icon {\n    color: ").concat(dt("menu.item.icon.focus.color"), ";\n}\n\n.p-menu-overlay {\n    box-shadow: ").concat(dt("menu.shadow"), ";\n}\n\n.p-menu-submenu-label {\n    background: ").concat(dt("menu.submenu.label.background"), ";\n    padding: ").concat(dt("menu.submenu.label.padding"), ";\n    color: ").concat(dt("menu.submenu.label.color"), ";\n    font-weight: ").concat(dt("menu.submenu.label.font.weight"), ";\n}\n\n.p-menu-separator {\n    border-block-start: 1px solid ").concat(dt("menu.separator.border.color"), ";\n}\n");
}, "theme");
var classes$j = {
  root: /* @__PURE__ */ __name(function root18(_ref2) {
    var props = _ref2.props;
    return ["p-menu p-component", {
      "p-menu-overlay": props.popup
    }];
  }, "root"),
  start: "p-menu-start",
  list: "p-menu-list",
  submenuLabel: "p-menu-submenu-label",
  separator: "p-menu-separator",
  end: "p-menu-end",
  item: /* @__PURE__ */ __name(function item4(_ref3) {
    var instance = _ref3.instance;
    return ["p-menu-item", {
      "p-focus": instance.id === instance.focusedOptionId,
      "p-disabled": instance.disabled()
    }];
  }, "item"),
  itemContent: "p-menu-item-content",
  itemLink: "p-menu-item-link",
  itemIcon: "p-menu-item-icon",
  itemLabel: "p-menu-item-label"
};
var MenuStyle = BaseStyle.extend({
  name: "menu",
  theme: theme$i,
  classes: classes$j
});
var script$2$4 = {
  name: "BaseMenu",
  "extends": script$1d,
  props: {
    popup: {
      type: Boolean,
      "default": false
    },
    model: {
      type: Array,
      "default": null
    },
    appendTo: {
      type: [String, Object],
      "default": "body"
    },
    autoZIndex: {
      type: Boolean,
      "default": true
    },
    baseZIndex: {
      type: Number,
      "default": 0
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    ariaLabel: {
      type: String,
      "default": null
    },
    ariaLabelledby: {
      type: String,
      "default": null
    }
  },
  style: MenuStyle,
  provide: /* @__PURE__ */ __name(function provide32() {
    return {
      $pcMenu: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1$j = {
  name: "Menuitem",
  hostName: "Menu",
  "extends": script$1d,
  inheritAttrs: false,
  emits: ["item-click", "item-mousemove"],
  props: {
    item: null,
    templates: null,
    id: null,
    focusedOptionId: null,
    index: null
  },
  methods: {
    getItemProp: /* @__PURE__ */ __name(function getItemProp4(processedItem, name4) {
      return processedItem && processedItem.item ? resolve(processedItem.item[name4]) : void 0;
    }, "getItemProp"),
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions4(key) {
      return this.ptm(key, {
        context: {
          item: this.item,
          index: this.index,
          focused: this.isItemFocused(),
          disabled: this.disabled()
        }
      });
    }, "getPTOptions"),
    isItemFocused: /* @__PURE__ */ __name(function isItemFocused2() {
      return this.focusedOptionId === this.id;
    }, "isItemFocused"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick4(event2) {
      var command = this.getItemProp(this.item, "command");
      command && command({
        originalEvent: event2,
        item: this.item.item
      });
      this.$emit("item-click", {
        originalEvent: event2,
        item: this.item,
        id: this.id
      });
    }, "onItemClick"),
    onItemMouseMove: /* @__PURE__ */ __name(function onItemMouseMove(event2) {
      this.$emit("item-mousemove", {
        originalEvent: event2,
        item: this.item,
        id: this.id
      });
    }, "onItemMouseMove"),
    visible: /* @__PURE__ */ __name(function visible2() {
      return typeof this.item.visible === "function" ? this.item.visible() : this.item.visible !== false;
    }, "visible"),
    disabled: /* @__PURE__ */ __name(function disabled3() {
      return typeof this.item.disabled === "function" ? this.item.disabled() : this.item.disabled;
    }, "disabled"),
    label: /* @__PURE__ */ __name(function label4() {
      return typeof this.item.label === "function" ? this.item.label() : this.item.label;
    }, "label"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps4(item8) {
      return {
        action: mergeProps({
          "class": this.cx("itemLink"),
          tabindex: "-1"
        }, this.getPTOptions("itemLink")),
        icon: mergeProps({
          "class": [this.cx("itemIcon"), item8.icon]
        }, this.getPTOptions("itemIcon")),
        label: mergeProps({
          "class": this.cx("itemLabel")
        }, this.getPTOptions("itemLabel"))
      };
    }, "getMenuItemProps")
  },
  directives: {
    ripple: Ripple
  }
};
var _hoisted_1$1$3 = ["id", "aria-label", "aria-disabled", "data-p-focused", "data-p-disabled"];
var _hoisted_2$1$2 = ["href", "target"];
function render$1$4(_ctx, _cache, $props, $setup, $data, $options) {
  var _directive_ripple = resolveDirective("ripple");
  return $options.visible() ? (openBlock(), createElementBlock("li", mergeProps({
    key: 0,
    id: $props.id,
    "class": [_ctx.cx("item"), $props.item["class"]],
    role: "menuitem",
    style: $props.item.style,
    "aria-label": $options.label(),
    "aria-disabled": $options.disabled()
  }, $options.getPTOptions("item"), {
    "data-p-focused": $options.isItemFocused(),
    "data-p-disabled": $options.disabled() || false
  }), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("itemContent"),
    onClick: _cache[0] || (_cache[0] = function($event) {
      return $options.onItemClick($event);
    }),
    onMousemove: _cache[1] || (_cache[1] = function($event) {
      return $options.onItemMouseMove($event);
    })
  }, $options.getPTOptions("itemContent")), [!$props.templates.item ? withDirectives((openBlock(), createElementBlock("a", mergeProps({
    key: 0,
    href: $props.item.url,
    "class": _ctx.cx("itemLink"),
    target: $props.item.target,
    tabindex: "-1"
  }, $options.getPTOptions("itemLink")), [$props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {
    key: 0,
    item: $props.item,
    "class": normalizeClass(_ctx.cx("itemIcon"))
  }, null, 8, ["item", "class"])) : $props.item.icon ? (openBlock(), createElementBlock("span", mergeProps({
    key: 1,
    "class": [_ctx.cx("itemIcon"), $props.item.icon]
  }, $options.getPTOptions("itemIcon")), null, 16)) : createCommentVNode("", true), createBaseVNode("span", mergeProps({
    "class": _ctx.cx("itemLabel")
  }, $options.getPTOptions("itemLabel")), toDisplayString($options.label()), 17)], 16, _hoisted_2$1$2)), [[_directive_ripple]]) : $props.templates.item ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {
    key: 1,
    item: $props.item,
    label: $options.label(),
    props: $options.getMenuItemProps($props.item)
  }, null, 8, ["item", "label", "props"])) : createCommentVNode("", true)], 16)], 16, _hoisted_1$1$3)) : createCommentVNode("", true);
}
__name(render$1$4, "render$1$4");
script$1$j.render = render$1$4;
function _toConsumableArray$7(r) {
  return _arrayWithoutHoles$7(r) || _iterableToArray$7(r) || _unsupportedIterableToArray$8(r) || _nonIterableSpread$7();
}
__name(_toConsumableArray$7, "_toConsumableArray$7");
function _nonIterableSpread$7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$7, "_nonIterableSpread$7");
function _unsupportedIterableToArray$8(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$8(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$8(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$8, "_unsupportedIterableToArray$8");
function _iterableToArray$7(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$7, "_iterableToArray$7");
function _arrayWithoutHoles$7(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$8(r);
}
__name(_arrayWithoutHoles$7, "_arrayWithoutHoles$7");
function _arrayLikeToArray$8(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$8, "_arrayLikeToArray$8");
var script$x = {
  name: "Menu",
  "extends": script$2$4,
  inheritAttrs: false,
  emits: ["show", "hide", "focus", "blur"],
  data: /* @__PURE__ */ __name(function data21() {
    return {
      id: this.$attrs.id,
      overlayVisible: false,
      focused: false,
      focusedOptionIndex: -1,
      selectedOptionIndex: -1
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId6(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId")
  },
  target: null,
  outsideClickListener: null,
  scrollHandler: null,
  resizeListener: null,
  container: null,
  list: null,
  mounted: /* @__PURE__ */ __name(function mounted22() {
    this.id = this.id || UniqueComponentId();
    if (!this.popup) {
      this.bindResizeListener();
      this.bindOutsideClickListener();
    }
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount9() {
    this.unbindResizeListener();
    this.unbindOutsideClickListener();
    if (this.scrollHandler) {
      this.scrollHandler.destroy();
      this.scrollHandler = null;
    }
    this.target = null;
    if (this.container && this.autoZIndex) {
      ZIndex.clear(this.container);
    }
    this.container = null;
  }, "beforeUnmount"),
  methods: {
    itemClick: /* @__PURE__ */ __name(function itemClick(event2) {
      var item8 = event2.item;
      if (this.disabled(item8)) {
        return;
      }
      if (item8.command) {
        item8.command(event2);
      }
      if (this.overlayVisible) this.hide();
      if (!this.popup && this.focusedOptionIndex !== event2.id) {
        this.focusedOptionIndex = event2.id;
      }
    }, "itemClick"),
    itemMouseMove: /* @__PURE__ */ __name(function itemMouseMove(event2) {
      if (this.focused) {
        this.focusedOptionIndex = event2.id;
      }
    }, "itemMouseMove"),
    onListFocus: /* @__PURE__ */ __name(function onListFocus2(event2) {
      this.focused = true;
      !this.popup && this.changeFocusedOptionIndex(0);
      this.$emit("focus", event2);
    }, "onListFocus"),
    onListBlur: /* @__PURE__ */ __name(function onListBlur2(event2) {
      this.focused = false;
      this.focusedOptionIndex = -1;
      this.$emit("blur", event2);
    }, "onListBlur"),
    onListKeyDown: /* @__PURE__ */ __name(function onListKeyDown2(event2) {
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(event2);
          break;
        case "Space":
          this.onSpaceKey(event2);
          break;
        case "Escape":
          if (this.popup) {
            focus(this.target);
            this.hide();
          }
        case "Tab":
          this.overlayVisible && this.hide();
          break;
      }
    }, "onListKeyDown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey5(event2) {
      var optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);
      this.changeFocusedOptionIndex(optionIndex);
      event2.preventDefault();
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey5(event2) {
      if (event2.altKey && this.popup) {
        focus(this.target);
        this.hide();
        event2.preventDefault();
      } else {
        var optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);
        this.changeFocusedOptionIndex(optionIndex);
        event2.preventDefault();
      }
    }, "onArrowUpKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey5(event2) {
      this.changeFocusedOptionIndex(0);
      event2.preventDefault();
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey5(event2) {
      this.changeFocusedOptionIndex(find(this.container, 'li[data-pc-section="item"][data-p-disabled="false"]').length - 1);
      event2.preventDefault();
    }, "onEndKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey4(event2) {
      var element = findSingle(this.list, 'li[id="'.concat("".concat(this.focusedOptionIndex), '"]'));
      var anchorElement = element && findSingle(element, 'a[data-pc-section="itemlink"]');
      this.popup && focus(this.target);
      anchorElement ? anchorElement.click() : element && element.click();
      event2.preventDefault();
    }, "onEnterKey"),
    onSpaceKey: /* @__PURE__ */ __name(function onSpaceKey4(event2) {
      this.onEnterKey(event2);
    }, "onSpaceKey"),
    findNextOptionIndex: /* @__PURE__ */ __name(function findNextOptionIndex3(index) {
      var links = find(this.container, 'li[data-pc-section="item"][data-p-disabled="false"]');
      var matchedOptionIndex = _toConsumableArray$7(links).findIndex(function(link) {
        return link.id === index;
      });
      return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;
    }, "findNextOptionIndex"),
    findPrevOptionIndex: /* @__PURE__ */ __name(function findPrevOptionIndex3(index) {
      var links = find(this.container, 'li[data-pc-section="item"][data-p-disabled="false"]');
      var matchedOptionIndex = _toConsumableArray$7(links).findIndex(function(link) {
        return link.id === index;
      });
      return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;
    }, "findPrevOptionIndex"),
    changeFocusedOptionIndex: /* @__PURE__ */ __name(function changeFocusedOptionIndex3(index) {
      var links = find(this.container, 'li[data-pc-section="item"][data-p-disabled="false"]');
      var order = index >= links.length ? links.length - 1 : index < 0 ? 0 : index;
      order > -1 && (this.focusedOptionIndex = links[order].getAttribute("id"));
    }, "changeFocusedOptionIndex"),
    toggle: /* @__PURE__ */ __name(function toggle3(event2) {
      if (this.overlayVisible) this.hide();
      else this.show(event2);
    }, "toggle"),
    show: /* @__PURE__ */ __name(function show3(event2) {
      this.overlayVisible = true;
      this.target = event2.currentTarget;
    }, "show"),
    hide: /* @__PURE__ */ __name(function hide4() {
      this.overlayVisible = false;
      this.target = null;
    }, "hide"),
    onEnter: /* @__PURE__ */ __name(function onEnter3(el) {
      addStyle(el, {
        position: "absolute",
        top: "0",
        left: "0"
      });
      this.alignOverlay();
      this.bindOutsideClickListener();
      this.bindResizeListener();
      this.bindScrollListener();
      if (this.autoZIndex) {
        ZIndex.set("menu", el, this.baseZIndex + this.$primevue.config.zIndex.menu);
      }
      if (this.popup) {
        focus(this.list);
      }
      this.$emit("show");
    }, "onEnter"),
    onLeave: /* @__PURE__ */ __name(function onLeave3() {
      this.unbindOutsideClickListener();
      this.unbindResizeListener();
      this.unbindScrollListener();
      this.$emit("hide");
    }, "onLeave"),
    onAfterLeave: /* @__PURE__ */ __name(function onAfterLeave3(el) {
      if (this.autoZIndex) {
        ZIndex.clear(el);
      }
    }, "onAfterLeave"),
    alignOverlay: /* @__PURE__ */ __name(function alignOverlay3() {
      absolutePosition(this.container, this.target);
      var targetWidth = getOuterWidth(this.target);
      if (targetWidth > getOuterWidth(this.container)) {
        this.container.style.minWidth = getOuterWidth(this.target) + "px";
      }
    }, "alignOverlay"),
    bindOutsideClickListener: /* @__PURE__ */ __name(function bindOutsideClickListener5() {
      var _this = this;
      if (!this.outsideClickListener) {
        this.outsideClickListener = function(event2) {
          var isOutsideContainer = _this.container && !_this.container.contains(event2.target);
          var isOutsideTarget = !(_this.target && (_this.target === event2.target || _this.target.contains(event2.target)));
          if (_this.overlayVisible && isOutsideContainer && isOutsideTarget) {
            _this.hide();
          } else if (!_this.popup && isOutsideContainer && isOutsideTarget) {
            _this.focusedOptionIndex = -1;
          }
        };
        document.addEventListener("click", this.outsideClickListener);
      }
    }, "bindOutsideClickListener"),
    unbindOutsideClickListener: /* @__PURE__ */ __name(function unbindOutsideClickListener5() {
      if (this.outsideClickListener) {
        document.removeEventListener("click", this.outsideClickListener);
        this.outsideClickListener = null;
      }
    }, "unbindOutsideClickListener"),
    bindScrollListener: /* @__PURE__ */ __name(function bindScrollListener4() {
      var _this2 = this;
      if (!this.scrollHandler) {
        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, function() {
          if (_this2.overlayVisible) {
            _this2.hide();
          }
        });
      }
      this.scrollHandler.bindScrollListener();
    }, "bindScrollListener"),
    unbindScrollListener: /* @__PURE__ */ __name(function unbindScrollListener4() {
      if (this.scrollHandler) {
        this.scrollHandler.unbindScrollListener();
      }
    }, "unbindScrollListener"),
    bindResizeListener: /* @__PURE__ */ __name(function bindResizeListener4() {
      var _this3 = this;
      if (!this.resizeListener) {
        this.resizeListener = function() {
          if (_this3.overlayVisible && !isTouchDevice()) {
            _this3.hide();
          }
        };
        window.addEventListener("resize", this.resizeListener);
      }
    }, "bindResizeListener"),
    unbindResizeListener: /* @__PURE__ */ __name(function unbindResizeListener4() {
      if (this.resizeListener) {
        window.removeEventListener("resize", this.resizeListener);
        this.resizeListener = null;
      }
    }, "unbindResizeListener"),
    visible: /* @__PURE__ */ __name(function visible3(item8) {
      return typeof item8.visible === "function" ? item8.visible() : item8.visible !== false;
    }, "visible"),
    disabled: /* @__PURE__ */ __name(function disabled4(item8) {
      return typeof item8.disabled === "function" ? item8.disabled() : item8.disabled;
    }, "disabled"),
    label: /* @__PURE__ */ __name(function label5(item8) {
      return typeof item8.label === "function" ? item8.label() : item8.label;
    }, "label"),
    onOverlayClick: /* @__PURE__ */ __name(function onOverlayClick3(event2) {
      OverlayEventBus.emit("overlay-click", {
        originalEvent: event2,
        target: this.target
      });
    }, "onOverlayClick"),
    containerRef: /* @__PURE__ */ __name(function containerRef4(el) {
      this.container = el;
    }, "containerRef"),
    listRef: /* @__PURE__ */ __name(function listRef(el) {
      this.list = el;
    }, "listRef")
  },
  computed: {
    focusedOptionId: /* @__PURE__ */ __name(function focusedOptionId4() {
      return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;
    }, "focusedOptionId")
  },
  components: {
    PVMenuitem: script$1$j,
    Portal: script$1f
  }
};
var _hoisted_1$h = ["id"];
var _hoisted_2$c = ["id", "tabindex", "aria-activedescendant", "aria-label", "aria-labelledby"];
var _hoisted_3$9 = ["id"];
function render$t(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_PVMenuitem = resolveComponent("PVMenuitem");
  var _component_Portal = resolveComponent("Portal");
  return openBlock(), createBlock(_component_Portal, {
    appendTo: _ctx.appendTo,
    disabled: !_ctx.popup
  }, {
    "default": withCtx(function() {
      return [createVNode(Transition, mergeProps({
        name: "p-connected-overlay",
        onEnter: $options.onEnter,
        onLeave: $options.onLeave,
        onAfterLeave: $options.onAfterLeave
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [(_ctx.popup ? $data.overlayVisible : true) ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.containerRef,
            id: $data.id,
            "class": _ctx.cx("root"),
            onClick: _cache[3] || (_cache[3] = function() {
              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);
            })
          }, _ctx.ptmi("root")), [_ctx.$slots.start ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            "class": _ctx.cx("start")
          }, _ctx.ptm("start")), [renderSlot(_ctx.$slots, "start")], 16)) : createCommentVNode("", true), createBaseVNode("ul", mergeProps({
            ref: $options.listRef,
            id: $data.id + "_list",
            "class": _ctx.cx("list"),
            role: "menu",
            tabindex: _ctx.tabindex,
            "aria-activedescendant": $data.focused ? $options.focusedOptionId : void 0,
            "aria-label": _ctx.ariaLabel,
            "aria-labelledby": _ctx.ariaLabelledby,
            onFocus: _cache[0] || (_cache[0] = function() {
              return $options.onListFocus && $options.onListFocus.apply($options, arguments);
            }),
            onBlur: _cache[1] || (_cache[1] = function() {
              return $options.onListBlur && $options.onListBlur.apply($options, arguments);
            }),
            onKeydown: _cache[2] || (_cache[2] = function() {
              return $options.onListKeyDown && $options.onListKeyDown.apply($options, arguments);
            })
          }, _ctx.ptm("list")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function(item8, i) {
            return openBlock(), createElementBlock(Fragment, {
              key: $options.label(item8) + i.toString()
            }, [item8.items && $options.visible(item8) && !item8.separator ? (openBlock(), createElementBlock(Fragment, {
              key: 0
            }, [item8.items ? (openBlock(), createElementBlock("li", mergeProps({
              key: 0,
              id: $data.id + "_" + i,
              "class": [_ctx.cx("submenuLabel"), item8["class"]],
              role: "none",
              ref_for: true
            }, _ctx.ptm("submenuLabel")), [renderSlot(_ctx.$slots, _ctx.$slots.submenulabel ? "submenulabel" : "submenuheader", {
              item: item8
            }, function() {
              return [createTextVNode(toDisplayString($options.label(item8)), 1)];
            })], 16, _hoisted_3$9)) : createCommentVNode("", true), (openBlock(true), createElementBlock(Fragment, null, renderList(item8.items, function(child, j) {
              return openBlock(), createElementBlock(Fragment, {
                key: child.label + i + "_" + j
              }, [$options.visible(child) && !child.separator ? (openBlock(), createBlock(_component_PVMenuitem, {
                key: 0,
                id: $data.id + "_" + i + "_" + j,
                item: child,
                templates: _ctx.$slots,
                focusedOptionId: $options.focusedOptionId,
                unstyled: _ctx.unstyled,
                onItemClick: $options.itemClick,
                onItemMousemove: $options.itemMouseMove,
                pt: _ctx.pt
              }, null, 8, ["id", "item", "templates", "focusedOptionId", "unstyled", "onItemClick", "onItemMousemove", "pt"])) : $options.visible(child) && child.separator ? (openBlock(), createElementBlock("li", mergeProps({
                key: "separator" + i + j,
                "class": [_ctx.cx("separator"), item8["class"]],
                style: child.style,
                role: "separator",
                ref_for: true
              }, _ctx.ptm("separator")), null, 16)) : createCommentVNode("", true)], 64);
            }), 128))], 64)) : $options.visible(item8) && item8.separator ? (openBlock(), createElementBlock("li", mergeProps({
              key: "separator" + i.toString(),
              "class": [_ctx.cx("separator"), item8["class"]],
              style: item8.style,
              role: "separator",
              ref_for: true
            }, _ctx.ptm("separator")), null, 16)) : (openBlock(), createBlock(_component_PVMenuitem, {
              key: $options.label(item8) + i.toString(),
              id: $data.id + "_" + i,
              item: item8,
              index: i,
              templates: _ctx.$slots,
              focusedOptionId: $options.focusedOptionId,
              unstyled: _ctx.unstyled,
              onItemClick: $options.itemClick,
              onItemMousemove: $options.itemMouseMove,
              pt: _ctx.pt
            }, null, 8, ["id", "item", "index", "templates", "focusedOptionId", "unstyled", "onItemClick", "onItemMousemove", "pt"]))], 64);
          }), 128))], 16, _hoisted_2$c), _ctx.$slots.end ? (openBlock(), createElementBlock("div", mergeProps({
            key: 1,
            "class": _ctx.cx("end")
          }, _ctx.ptm("end")), [renderSlot(_ctx.$slots, "end")], 16)) : createCommentVNode("", true)], 16, _hoisted_1$h)) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onEnter", "onLeave", "onAfterLeave"])];
    }),
    _: 3
  }, 8, ["appendTo", "disabled"]);
}
__name(render$t, "render$t");
script$x.render = render$t;
var theme$h = /* @__PURE__ */ __name(function theme23(_ref) {
  var dt = _ref.dt;
  return "\n.p-metergroup {\n    display: flex;\n    gap: ".concat(dt("metergroup.gap"), ";\n}\n\n.p-metergroup-meters {\n    display: flex;\n    background: ").concat(dt("metergroup.meters.background"), ";\n    border-radius: ").concat(dt("metergroup.border.radius"), ";\n}\n\n.p-metergroup-label-list {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n}\n\n.p-metergroup-label {\n    display: inline-flex;\n    align-items: center;\n    gap: ").concat(dt("metergroup.label.gap"), ";\n}\n\n.p-metergroup-label-marker {\n    display: inline-flex;\n    width: ").concat(dt("metergroup.label.marker.size"), ";\n    height: ").concat(dt("metergroup.label.marker.size"), ";\n    border-radius: 100%;\n}\n\n.p-metergroup-label-icon {\n    font-size: ").concat(dt("metergroup.label.icon.size"), ";\n    width: ").concat(dt("metergroup.label.icon.size"), ";\n    height: ").concat(dt("metergroup.label.icon.size"), ";\n}\n\n.p-metergroup-horizontal {\n    flex-direction: column;\n}\n\n.p-metergroup-label-list-horizontal {\n    gap: ").concat(dt("metergroup.label.list.horizontal.gap"), ";\n}\n\n.p-metergroup-horizontal .p-metergroup-meters {\n    height: ").concat(dt("metergroup.meters.size"), ";\n}\n\n.p-metergroup-horizontal .p-metergroup-meter:first-of-type {\n    border-start-start-radius: ").concat(dt("metergroup.border.radius"), ";\n    border-end-start-radius: ").concat(dt("metergroup.border.radius"), ";\n}\n\n.p-metergroup-horizontal .p-metergroup-meter:last-of-type {\n    border-start-end-radius: ").concat(dt("metergroup.border.radius"), ";\n    border-end-end-radius: ").concat(dt("metergroup.border.radius"), ";\n}\n\n.p-metergroup-vertical {\n    flex-direction: row;\n}\n\n.p-metergroup-label-list-vertical {\n    flex-direction: column;\n    gap: ").concat(dt("metergroup.label.list.vertical.gap"), ";\n}\n\n.p-metergroup-vertical .p-metergroup-meters {\n    flex-direction: column;\n    width: ").concat(dt("metergroup.meters.size"), ";\n    height: 100%;\n}\n\n.p-metergroup-vertical .p-metergroup-label-list {\n    align-items: flex-start;\n}\n\n.p-metergroup-vertical .p-metergroup-meter:first-of-type {\n    border-start-start-radius: ").concat(dt("metergroup.border.radius"), ";\n    border-start-end-radius: ").concat(dt("metergroup.border.radius"), ";\n}\n\n.p-metergroup-vertical .p-metergroup-meter:last-of-type {\n    border-end-start-radius: ").concat(dt("metergroup.border.radius"), ";\n    border-end-end-radius: ").concat(dt("metergroup.border.radius"), ";\n}\n");
}, "theme");
var classes$i = {
  root: /* @__PURE__ */ __name(function root19(_ref2) {
    var props = _ref2.props;
    return ["p-metergroup p-component", {
      "p-metergroup-horizontal": props.orientation === "horizontal",
      "p-metergroup-vertical": props.orientation === "vertical"
    }];
  }, "root"),
  meters: "p-metergroup-meters",
  meter: "p-metergroup-meter",
  labelList: /* @__PURE__ */ __name(function labelList(_ref3) {
    var props = _ref3.props;
    return ["p-metergroup-label-list", {
      "p-metergroup-label-list-vertical": props.labelOrientation === "vertical",
      "p-metergroup-label-list-horizontal": props.labelOrientation === "horizontal"
    }];
  }, "labelList"),
  label: "p-metergroup-label",
  labelIcon: "p-metergroup-label-icon",
  labelMarker: "p-metergroup-label-marker",
  labelText: "p-metergroup-label-text"
};
var MeterGroupStyle = BaseStyle.extend({
  name: "metergroup",
  theme: theme$h,
  classes: classes$i
});
var script$2$3 = {
  name: "MeterGroup",
  "extends": script$1d,
  props: {
    value: {
      type: Array,
      "default": null
    },
    min: {
      type: Number,
      "default": 0
    },
    max: {
      type: Number,
      "default": 100
    },
    orientation: {
      type: String,
      "default": "horizontal"
    },
    labelPosition: {
      type: String,
      "default": "end"
    },
    labelOrientation: {
      type: String,
      "default": "horizontal"
    }
  },
  style: MeterGroupStyle,
  provide: /* @__PURE__ */ __name(function provide33() {
    return {
      $pcMeterGroup: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1$i = {
  name: "MeterGroupLabel",
  hostName: "MeterGroup",
  "extends": script$1d,
  inheritAttrs: false,
  props: {
    value: {
      type: Array,
      "default": null
    },
    labelPosition: {
      type: String,
      "default": "end"
    },
    labelOrientation: {
      type: String,
      "default": "horizontal"
    }
  }
};
function render$1$3(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("ol", mergeProps({
    "class": _ctx.cx("labelList")
  }, _ctx.ptm("labelList")), [(openBlock(true), createElementBlock(Fragment, null, renderList($props.value, function(val, index) {
    return openBlock(), createElementBlock("li", mergeProps({
      key: index + "_label",
      "class": _ctx.cx("label"),
      ref_for: true
    }, _ctx.ptm("label")), [renderSlot(_ctx.$slots, "icon", {
      value: val,
      "class": normalizeClass(_ctx.cx("labelIcon"))
    }, function() {
      return [val.icon ? (openBlock(), createElementBlock("i", mergeProps({
        key: 0,
        "class": [val.icon, _ctx.cx("labelIcon")],
        style: {
          color: val.color
        },
        ref_for: true
      }, _ctx.ptm("labelIcon")), null, 16)) : (openBlock(), createElementBlock("span", mergeProps({
        key: 1,
        "class": _ctx.cx("labelMarker"),
        style: {
          backgroundColor: val.color
        },
        ref_for: true
      }, _ctx.ptm("labelMarker")), null, 16))];
    }), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("labelText"),
      ref_for: true
    }, _ctx.ptm("labelText")), toDisplayString(val.label) + " (" + toDisplayString(_ctx.$parentInstance.percentValue(val.value)) + ")", 17)], 16);
  }), 128))], 16);
}
__name(render$1$3, "render$1$3");
script$1$i.render = render$1$3;
var script$w = {
  name: "MeterGroup",
  "extends": script$2$3,
  inheritAttrs: false,
  methods: {
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions5(key, value2, index) {
      return this.ptm(key, {
        context: {
          value: value2,
          index
        }
      });
    }, "getPTOptions"),
    percent: /* @__PURE__ */ __name(function percent() {
      var meter = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      var percentOfItem = (meter - this.min) / (this.max - this.min) * 100;
      return Math.round(Math.max(0, Math.min(100, percentOfItem)));
    }, "percent"),
    percentValue: /* @__PURE__ */ __name(function percentValue(meter) {
      return this.percent(meter) + "%";
    }, "percentValue"),
    meterCalculatedStyles: /* @__PURE__ */ __name(function meterCalculatedStyles(val) {
      return {
        backgroundColor: val.color,
        width: this.orientation === "horizontal" && this.percentValue(val.value),
        height: this.orientation === "vertical" && this.percentValue(val.value)
      };
    }, "meterCalculatedStyles")
  },
  computed: {
    totalPercent: /* @__PURE__ */ __name(function totalPercent() {
      return this.percent(this.value.reduce(function(total, val) {
        return total + val.value;
      }, 0));
    }, "totalPercent"),
    percentages: /* @__PURE__ */ __name(function percentages() {
      var sum = 0;
      var sumsArray = [];
      this.value.forEach(function(item8) {
        sum += item8.value;
        sumsArray.push(sum);
      });
      return sumsArray;
    }, "percentages")
  },
  components: {
    MeterGroupLabel: script$1$i
  }
};
var _hoisted_1$g = ["aria-valuemin", "aria-valuemax", "aria-valuenow"];
function render$s(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_MeterGroupLabel = resolveComponent("MeterGroupLabel");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    role: "meter",
    "aria-valuemin": _ctx.min,
    "aria-valuemax": _ctx.max,
    "aria-valuenow": $options.totalPercent
  }, _ctx.ptmi("root")), [_ctx.labelPosition === "start" ? renderSlot(_ctx.$slots, "label", {
    key: 0,
    value: _ctx.value,
    totalPercent: $options.totalPercent,
    percentages: $options.percentages
  }, function() {
    return [createVNode(_component_MeterGroupLabel, {
      value: _ctx.value,
      labelPosition: _ctx.labelPosition,
      labelOrientation: _ctx.labelOrientation,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["value", "labelPosition", "labelOrientation", "unstyled", "pt"])];
  }) : createCommentVNode("", true), renderSlot(_ctx.$slots, "start", {
    value: _ctx.value,
    totalPercent: $options.totalPercent,
    percentages: $options.percentages
  }), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("meters")
  }, _ctx.ptm("meters")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.value, function(val, index) {
    return renderSlot(_ctx.$slots, "meter", {
      key: index,
      value: val,
      index,
      "class": normalizeClass(_ctx.cx("meter")),
      orientation: _ctx.orientation,
      size: $options.percentValue(val.value),
      totalPercent: $options.totalPercent
    }, function() {
      return [$options.percent(val.value) ? (openBlock(), createElementBlock("span", mergeProps({
        key: 0,
        "class": _ctx.cx("meter"),
        style: $options.meterCalculatedStyles(val),
        ref_for: true
      }, $options.getPTOptions("meter", val, index)), null, 16)) : createCommentVNode("", true)];
    });
  }), 128))], 16), renderSlot(_ctx.$slots, "end", {
    value: _ctx.value,
    totalPercent: $options.totalPercent,
    percentages: $options.percentages
  }), _ctx.labelPosition === "end" ? renderSlot(_ctx.$slots, "label", {
    key: 1,
    value: _ctx.value,
    totalPercent: $options.totalPercent,
    percentages: $options.percentages
  }, function() {
    return [createVNode(_component_MeterGroupLabel, {
      value: _ctx.value,
      labelPosition: _ctx.labelPosition,
      labelOrientation: _ctx.labelOrientation,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["value", "labelPosition", "labelOrientation", "unstyled", "pt"])];
  }) : createCommentVNode("", true)], 16, _hoisted_1$g);
}
__name(render$s, "render$s");
script$w.render = render$s;
var theme$g = /* @__PURE__ */ __name(function theme24(_ref) {
  var dt = _ref.dt;
  return "\n.p-multiselect {\n    display: inline-flex;\n    cursor: pointer;\n    position: relative;\n    user-select: none;\n    background: ".concat(dt("multiselect.background"), ";\n    border: 1px solid ").concat(dt("multiselect.border.color"), ";\n    transition: background ").concat(dt("multiselect.transition.duration"), ", color ").concat(dt("multiselect.transition.duration"), ", border-color ").concat(dt("multiselect.transition.duration"), ", outline-color ").concat(dt("multiselect.transition.duration"), ", box-shadow ").concat(dt("multiselect.transition.duration"), ";\n    border-radius: ").concat(dt("multiselect.border.radius"), ";\n    outline-color: transparent;\n    box-shadow: ").concat(dt("multiselect.shadow"), ";\n}\n\n.p-multiselect:not(.p-disabled):hover {\n    border-color: ").concat(dt("multiselect.hover.border.color"), ";\n}\n\n.p-multiselect:not(.p-disabled).p-focus {\n    border-color: ").concat(dt("multiselect.focus.border.color"), ";\n    box-shadow: ").concat(dt("multiselect.focus.ring.shadow"), ";\n    outline: ").concat(dt("multiselect.focus.ring.width"), " ").concat(dt("multiselect.focus.ring.style"), " ").concat(dt("multiselect.focus.ring.color"), ";\n    outline-offset: ").concat(dt("multiselect.focus.ring.offset"), ";\n}\n\n.p-multiselect.p-variant-filled {\n    background: ").concat(dt("multiselect.filled.background"), ";\n}\n\n.p-multiselect.p-variant-filled:not(.p-disabled):hover {\n    background: ").concat(dt("multiselect.filled.hover.background"), ";\n}\n\n.p-multiselect.p-variant-filled.p-focus {\n    background: ").concat(dt("multiselect.filled.focus.background"), ";\n}\n\n.p-multiselect.p-invalid {\n    border-color: ").concat(dt("multiselect.invalid.border.color"), ";\n}\n\n.p-multiselect.p-disabled {\n    opacity: 1;\n    background: ").concat(dt("multiselect.disabled.background"), ";\n}\n\n.p-multiselect-dropdown {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n    background: transparent;\n    color: ").concat(dt("multiselect.dropdown.color"), ";\n    width: ").concat(dt("multiselect.dropdown.width"), ";\n    border-start-end-radius: ").concat(dt("multiselect.border.radius"), ";\n    border-end-end-radius: ").concat(dt("multiselect.border.radius"), ";\n}\n\n.p-multiselect-clear-icon {\n    position: absolute;\n    top: 50%;\n    margin-top: -0.5rem;\n    color: ").concat(dt("multiselect.clear.icon.color"), ";\n    inset-inline-end: ").concat(dt("multiselect.dropdown.width"), ";\n}\n\n.p-multiselect-label-container {\n    overflow: hidden;\n    flex: 1 1 auto;\n    cursor: pointer;\n}\n\n.p-multiselect-label {\n    display: flex;\n    align-items: center;\n    gap: calc(").concat(dt("multiselect.padding.y"), " / 2);\n    white-space: nowrap;\n    cursor: pointer;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: ").concat(dt("multiselect.padding.y"), " ").concat(dt("multiselect.padding.x"), ";\n    color: ").concat(dt("multiselect.color"), ";\n}\n\n.p-multiselect-label.p-placeholder {\n    color: ").concat(dt("multiselect.placeholder.color"), ";\n}\n\n.p-multiselect.p-invalid .p-multiselect-label.p-placeholder {\n    color: ").concat(dt("multiselect.invalid.placeholder.color"), ";\n}\n\n.p-multiselect.p-disabled .p-multiselect-label {\n    color: ").concat(dt("multiselect.disabled.color"), ";\n}\n\n.p-multiselect-label-empty {\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.p-multiselect .p-multiselect-overlay {\n    min-width: 100%;\n}\n\n.p-multiselect-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: ").concat(dt("multiselect.overlay.background"), ";\n    color: ").concat(dt("multiselect.overlay.color"), ";\n    border: 1px solid ").concat(dt("multiselect.overlay.border.color"), ";\n    border-radius: ").concat(dt("multiselect.overlay.border.radius"), ";\n    box-shadow: ").concat(dt("multiselect.overlay.shadow"), ";\n}\n\n.p-multiselect-header {\n    display: flex;\n    align-items: center;\n    padding: ").concat(dt("multiselect.list.header.padding"), ";\n}\n\n.p-multiselect-header .p-checkbox {\n    margin-inline-end: ").concat(dt("multiselect.option.gap"), ";\n}\n\n.p-multiselect-filter-container {\n    flex: 1 1 auto;\n}\n\n.p-multiselect-filter {\n    width: 100%;\n}\n\n.p-multiselect-list-container {\n    overflow: auto;\n}\n\n.p-multiselect-list {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    padding: ").concat(dt("multiselect.list.padding"), ";\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("multiselect.list.gap"), ";\n}\n\n.p-multiselect-option {\n    cursor: pointer;\n    font-weight: normal;\n    white-space: nowrap;\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    gap: ").concat(dt("multiselect.option.gap"), ";\n    padding: ").concat(dt("multiselect.option.padding"), ";\n    border: 0 none;\n    color: ").concat(dt("multiselect.option.color"), ";\n    background: transparent;\n    transition: background ").concat(dt("multiselect.transition.duration"), ", color ").concat(dt("multiselect.transition.duration"), ", border-color ").concat(dt("multiselect.transition.duration"), ", box-shadow ").concat(dt("multiselect.transition.duration"), ", outline-color ").concat(dt("multiselect.transition.duration"), ";\n    border-radius: ").concat(dt("multiselect.option.border.radius"), ";\n}\n\n.p-multiselect-option:not(.p-multiselect-option-selected):not(.p-disabled).p-focus {\n    background: ").concat(dt("multiselect.option.focus.background"), ";\n    color: ").concat(dt("multiselect.option.focus.color"), ";\n}\n\n.p-multiselect-option.p-multiselect-option-selected {\n    background: ").concat(dt("multiselect.option.selected.background"), ";\n    color: ").concat(dt("multiselect.option.selected.color"), ";\n}\n\n.p-multiselect-option.p-multiselect-option-selected.p-focus {\n    background: ").concat(dt("multiselect.option.selected.focus.background"), ";\n    color: ").concat(dt("multiselect.option.selected.focus.color"), ";\n}\n\n.p-multiselect-option-group {\n    cursor: auto;\n    margin: 0;\n    padding: ").concat(dt("multiselect.option.group.padding"), ";\n    background: ").concat(dt("multiselect.option.group.background"), ";\n    color: ").concat(dt("multiselect.option.group.color"), ";\n    font-weight: ").concat(dt("multiselect.option.group.font.weight"), ";\n}\n\n.p-multiselect-empty-message {\n    padding: ").concat(dt("multiselect.empty.message.padding"), ";\n}\n\n.p-multiselect-label .p-chip {\n    padding-block-start: calc(").concat(dt("multiselect.padding.y"), " / 2);\n    padding-block-end: calc(").concat(dt("multiselect.padding.y"), " / 2);\n    border-radius: ").concat(dt("multiselect.chip.border.radius"), ";\n}\n\n.p-multiselect-label:has(.p-chip) {\n    padding: calc(").concat(dt("multiselect.padding.y"), " / 2) calc(").concat(dt("multiselect.padding.x"), " / 2);\n}\n\n.p-multiselect-fluid {\n    display: flex;\n    width: 100%;\n}\n\n.p-multiselect-sm .p-multiselect-label {\n    font-size: ").concat(dt("multiselect.sm.font.size"), ";\n    padding-block: ").concat(dt("multiselect.sm.padding.y"), ";\n    padding-inline: ").concat(dt("multiselect.sm.padding.x"), ";\n}\n\n.p-multiselect-sm .p-multiselect-dropdown .p-icon {\n    font-size: ").concat(dt("multiselect.sm.font.size"), ";\n    width: ").concat(dt("multiselect.sm.font.size"), ";\n    height: ").concat(dt("multiselect.sm.font.size"), ";\n}\n\n.p-multiselect-lg .p-multiselect-label {\n    font-size: ").concat(dt("multiselect.lg.font.size"), ";\n    padding-block: ").concat(dt("multiselect.lg.padding.y"), ";\n    padding-inline: ").concat(dt("multiselect.lg.padding.x"), ";\n}\n\n.p-multiselect-lg .p-multiselect-dropdown .p-icon {\n    font-size: ").concat(dt("multiselect.lg.font.size"), ";\n    width: ").concat(dt("multiselect.lg.font.size"), ";\n    height: ").concat(dt("multiselect.lg.font.size"), ";\n}\n");
}, "theme");
var inlineStyles$5 = {
  root: /* @__PURE__ */ __name(function root20(_ref2) {
    var props = _ref2.props;
    return {
      position: props.appendTo === "self" ? "relative" : void 0
    };
  }, "root")
};
var classes$h = {
  root: /* @__PURE__ */ __name(function root21(_ref3) {
    var instance = _ref3.instance, props = _ref3.props;
    return ["p-multiselect p-component p-inputwrapper", {
      "p-multiselect-display-chip": props.display === "chip",
      "p-disabled": props.disabled,
      "p-invalid": instance.$invalid,
      "p-variant-filled": instance.$variant === "filled",
      "p-focus": instance.focused,
      "p-inputwrapper-filled": instance.$filled,
      "p-inputwrapper-focus": instance.focused || instance.overlayVisible,
      "p-multiselect-open": instance.overlayVisible,
      "p-multiselect-fluid": instance.$fluid,
      "p-multiselect-sm p-inputfield-sm": props.size === "small",
      "p-multiselect-lg p-inputfield-lg": props.size === "large"
    }];
  }, "root"),
  labelContainer: "p-multiselect-label-container",
  label: /* @__PURE__ */ __name(function label6(_ref4) {
    var instance = _ref4.instance, props = _ref4.props;
    return ["p-multiselect-label", {
      "p-placeholder": instance.label === props.placeholder,
      "p-multiselect-label-empty": !props.placeholder && (!props.modelValue || props.modelValue.length === 0)
    }];
  }, "label"),
  clearIcon: "p-multiselect-clear-icon",
  chipItem: "p-multiselect-chip-item",
  pcChip: "p-multiselect-chip",
  chipIcon: "p-multiselect-chip-icon",
  dropdown: "p-multiselect-dropdown",
  loadingIcon: "p-multiselect-loading-icon",
  dropdownIcon: "p-multiselect-dropdown-icon",
  overlay: "p-multiselect-overlay p-component",
  header: "p-multiselect-header",
  pcFilterContainer: "p-multiselect-filter-container",
  pcFilter: "p-multiselect-filter",
  listContainer: "p-multiselect-list-container",
  list: "p-multiselect-list",
  optionGroup: "p-multiselect-option-group",
  option: /* @__PURE__ */ __name(function option2(_ref5) {
    var instance = _ref5.instance, _option = _ref5.option, index = _ref5.index, getItemOptions = _ref5.getItemOptions, props = _ref5.props;
    return ["p-multiselect-option", {
      "p-multiselect-option-selected": instance.isSelected(_option) && props.highlightOnSelect,
      "p-focus": instance.focusedOptionIndex === instance.getOptionIndex(index, getItemOptions),
      "p-disabled": instance.isOptionDisabled(_option)
    }];
  }, "option"),
  emptyMessage: "p-multiselect-empty-message"
};
var MultiSelectStyle = BaseStyle.extend({
  name: "multiselect",
  theme: theme$g,
  classes: classes$h,
  inlineStyles: inlineStyles$5
});
var script$1$h = {
  name: "BaseMultiSelect",
  "extends": script$1n,
  props: {
    options: Array,
    optionLabel: null,
    optionValue: null,
    optionDisabled: null,
    optionGroupLabel: null,
    optionGroupChildren: null,
    scrollHeight: {
      type: String,
      "default": "14rem"
    },
    placeholder: String,
    inputId: {
      type: String,
      "default": null
    },
    panelClass: {
      type: String,
      "default": null
    },
    panelStyle: {
      type: null,
      "default": null
    },
    overlayClass: {
      type: String,
      "default": null
    },
    overlayStyle: {
      type: null,
      "default": null
    },
    dataKey: null,
    showClear: {
      type: Boolean,
      "default": false
    },
    clearIcon: {
      type: String,
      "default": void 0
    },
    resetFilterOnClear: {
      type: Boolean,
      "default": false
    },
    filter: Boolean,
    filterPlaceholder: String,
    filterLocale: String,
    filterMatchMode: {
      type: String,
      "default": "contains"
    },
    filterFields: {
      type: Array,
      "default": null
    },
    appendTo: {
      type: [String, Object],
      "default": "body"
    },
    display: {
      type: String,
      "default": "comma"
    },
    selectedItemsLabel: {
      type: String,
      "default": null
    },
    maxSelectedLabels: {
      type: Number,
      "default": null
    },
    selectionLimit: {
      type: Number,
      "default": null
    },
    showToggleAll: {
      type: Boolean,
      "default": true
    },
    loading: {
      type: Boolean,
      "default": false
    },
    checkboxIcon: {
      type: String,
      "default": void 0
    },
    dropdownIcon: {
      type: String,
      "default": void 0
    },
    filterIcon: {
      type: String,
      "default": void 0
    },
    loadingIcon: {
      type: String,
      "default": void 0
    },
    removeTokenIcon: {
      type: String,
      "default": void 0
    },
    chipIcon: {
      type: String,
      "default": void 0
    },
    selectAll: {
      type: Boolean,
      "default": null
    },
    resetFilterOnHide: {
      type: Boolean,
      "default": false
    },
    virtualScrollerOptions: {
      type: Object,
      "default": null
    },
    autoOptionFocus: {
      type: Boolean,
      "default": false
    },
    autoFilterFocus: {
      type: Boolean,
      "default": false
    },
    focusOnHover: {
      type: Boolean,
      "default": true
    },
    highlightOnSelect: {
      type: Boolean,
      "default": false
    },
    filterMessage: {
      type: String,
      "default": null
    },
    selectionMessage: {
      type: String,
      "default": null
    },
    emptySelectionMessage: {
      type: String,
      "default": null
    },
    emptyFilterMessage: {
      type: String,
      "default": null
    },
    emptyMessage: {
      type: String,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    ariaLabel: {
      type: String,
      "default": null
    },
    ariaLabelledby: {
      type: String,
      "default": null
    }
  },
  style: MultiSelectStyle,
  provide: /* @__PURE__ */ __name(function provide34() {
    return {
      $pcMultiSelect: this,
      $parentInstance: this
    };
  }, "provide")
};
function _typeof$1$2(o) {
  "@babel/helpers - typeof";
  return _typeof$1$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$1$2(o);
}
__name(_typeof$1$2, "_typeof$1$2");
function ownKeys$d(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$d, "ownKeys$d");
function _objectSpread$d(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$d(Object(t2), true).forEach(function(r2) {
      _defineProperty$1$2(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$d(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$d, "_objectSpread$d");
function _defineProperty$1$2(e, r, t2) {
  return (r = _toPropertyKey$1$2(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$1$2, "_defineProperty$1$2");
function _toPropertyKey$1$2(t2) {
  var i = _toPrimitive$1$2(t2, "string");
  return "symbol" == _typeof$1$2(i) ? i : i + "";
}
__name(_toPropertyKey$1$2, "_toPropertyKey$1$2");
function _toPrimitive$1$2(t2, r) {
  if ("object" != _typeof$1$2(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$1$2(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$1$2, "_toPrimitive$1$2");
function _toConsumableArray$6(r) {
  return _arrayWithoutHoles$6(r) || _iterableToArray$6(r) || _unsupportedIterableToArray$7(r) || _nonIterableSpread$6();
}
__name(_toConsumableArray$6, "_toConsumableArray$6");
function _nonIterableSpread$6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$6, "_nonIterableSpread$6");
function _unsupportedIterableToArray$7(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$7(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$7(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$7, "_unsupportedIterableToArray$7");
function _iterableToArray$6(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$6, "_iterableToArray$6");
function _arrayWithoutHoles$6(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$7(r);
}
__name(_arrayWithoutHoles$6, "_arrayWithoutHoles$6");
function _arrayLikeToArray$7(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$7, "_arrayLikeToArray$7");
var script$v = {
  name: "MultiSelect",
  "extends": script$1$h,
  inheritAttrs: false,
  emits: ["change", "focus", "blur", "before-show", "before-hide", "show", "hide", "filter", "selectall-change"],
  inject: {
    $pcFluid: {
      "default": null
    }
  },
  outsideClickListener: null,
  scrollHandler: null,
  resizeListener: null,
  overlay: null,
  list: null,
  virtualScroller: null,
  startRangeIndex: -1,
  searchTimeout: null,
  searchValue: "",
  selectOnFocus: false,
  data: /* @__PURE__ */ __name(function data22() {
    return {
      id: this.$attrs.id,
      clicked: false,
      focused: false,
      focusedOptionIndex: -1,
      filterValue: null,
      overlayVisible: false
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId7(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    options: /* @__PURE__ */ __name(function options2() {
      this.autoUpdateModel();
    }, "options")
  },
  mounted: /* @__PURE__ */ __name(function mounted23() {
    this.id = this.id || UniqueComponentId();
    this.autoUpdateModel();
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount10() {
    this.unbindOutsideClickListener();
    this.unbindResizeListener();
    if (this.scrollHandler) {
      this.scrollHandler.destroy();
      this.scrollHandler = null;
    }
    if (this.overlay) {
      ZIndex.clear(this.overlay);
      this.overlay = null;
    }
  }, "beforeUnmount"),
  methods: {
    getOptionIndex: /* @__PURE__ */ __name(function getOptionIndex(index, fn) {
      return this.virtualScrollerDisabled ? index : fn && fn(index)["index"];
    }, "getOptionIndex"),
    getOptionLabel: /* @__PURE__ */ __name(function getOptionLabel3(option4) {
      return this.optionLabel ? resolveFieldData(option4, this.optionLabel) : option4;
    }, "getOptionLabel"),
    getOptionValue: /* @__PURE__ */ __name(function getOptionValue3(option4) {
      return this.optionValue ? resolveFieldData(option4, this.optionValue) : option4;
    }, "getOptionValue"),
    getOptionRenderKey: /* @__PURE__ */ __name(function getOptionRenderKey(option4, index) {
      return this.dataKey ? resolveFieldData(option4, this.dataKey) : this.getOptionLabel(option4) + "_".concat(index);
    }, "getOptionRenderKey"),
    getHeaderCheckboxPTOptions: /* @__PURE__ */ __name(function getHeaderCheckboxPTOptions(key) {
      return this.ptm(key, {
        context: {
          selected: this.allSelected
        }
      });
    }, "getHeaderCheckboxPTOptions"),
    getCheckboxPTOptions: /* @__PURE__ */ __name(function getCheckboxPTOptions(option4, itemOptions, index, key) {
      return this.ptm(key, {
        context: {
          selected: this.isSelected(option4),
          focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),
          disabled: this.isOptionDisabled(option4)
        }
      });
    }, "getCheckboxPTOptions"),
    isOptionDisabled: /* @__PURE__ */ __name(function isOptionDisabled3(option4) {
      if (this.maxSelectionLimitReached && !this.isSelected(option4)) {
        return true;
      }
      return this.optionDisabled ? resolveFieldData(option4, this.optionDisabled) : false;
    }, "isOptionDisabled"),
    isOptionGroup: /* @__PURE__ */ __name(function isOptionGroup3(option4) {
      return this.optionGroupLabel && option4.optionGroup && option4.group;
    }, "isOptionGroup"),
    getOptionGroupLabel: /* @__PURE__ */ __name(function getOptionGroupLabel3(optionGroup) {
      return resolveFieldData(optionGroup, this.optionGroupLabel);
    }, "getOptionGroupLabel"),
    getOptionGroupChildren: /* @__PURE__ */ __name(function getOptionGroupChildren3(optionGroup) {
      return resolveFieldData(optionGroup, this.optionGroupChildren);
    }, "getOptionGroupChildren"),
    getAriaPosInset: /* @__PURE__ */ __name(function getAriaPosInset2(index) {
      var _this = this;
      return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter(function(option4) {
        return _this.isOptionGroup(option4);
      }).length : index) + 1;
    }, "getAriaPosInset"),
    show: /* @__PURE__ */ __name(function show4(isFocus) {
      this.$emit("before-show");
      this.overlayVisible = true;
      this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();
      isFocus && focus(this.$refs.focusInput);
    }, "show"),
    hide: /* @__PURE__ */ __name(function hide5(isFocus) {
      var _this2 = this;
      var _hide = /* @__PURE__ */ __name(function _hide2() {
        _this2.$emit("before-hide");
        _this2.overlayVisible = false;
        _this2.clicked = false;
        _this2.focusedOptionIndex = -1;
        _this2.searchValue = "";
        _this2.resetFilterOnHide && (_this2.filterValue = null);
        isFocus && focus(_this2.$refs.focusInput);
      }, "_hide");
      setTimeout(function() {
        _hide();
      }, 0);
    }, "hide"),
    onFocus: /* @__PURE__ */ __name(function onFocus9(event2) {
      if (this.disabled) {
        return;
      }
      this.focused = true;
      if (this.overlayVisible) {
        this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();
        this.scrollInView(this.focusedOptionIndex);
      }
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur9(event2) {
      var _this$formField$onBlu, _this$formField;
      this.clicked = false;
      this.focused = false;
      this.focusedOptionIndex = -1;
      this.searchValue = "";
      this.$emit("blur", event2);
      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField);
    }, "onBlur"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown9(event2) {
      var _this3 = this;
      if (this.disabled) {
        event2.preventDefault();
        return;
      }
      var metaKey = event2.metaKey || event2.ctrlKey;
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
        case "PageDown":
          this.onPageDownKey(event2);
          break;
        case "PageUp":
          this.onPageUpKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
        case "Space":
          this.onEnterKey(event2);
          break;
        case "Escape":
          this.onEscapeKey(event2);
          break;
        case "Tab":
          this.onTabKey(event2);
          break;
        case "ShiftLeft":
        case "ShiftRight":
          this.onShiftKey(event2);
          break;
        default:
          if (event2.code === "KeyA" && metaKey) {
            var value2 = this.visibleOptions.filter(function(option4) {
              return _this3.isValidOption(option4);
            }).map(function(option4) {
              return _this3.getOptionValue(option4);
            });
            this.updateModel(event2, value2);
            event2.preventDefault();
            break;
          }
          if (!metaKey && isPrintableCharacter(event2.key)) {
            !this.overlayVisible && this.show();
            this.searchOptions(event2);
            event2.preventDefault();
          }
          break;
      }
      this.clicked = false;
    }, "onKeyDown"),
    onContainerClick: /* @__PURE__ */ __name(function onContainerClick2(event2) {
      if (this.disabled || this.loading) {
        return;
      }
      if (event2.target.tagName === "INPUT" || event2.target.getAttribute("data-pc-section") === "clearicon" || event2.target.closest('[data-pc-section="clearicon"]')) {
        return;
      } else if (!this.overlay || !this.overlay.contains(event2.target)) {
        this.overlayVisible ? this.hide(true) : this.show(true);
      }
      this.clicked = true;
    }, "onContainerClick"),
    onClearClick: /* @__PURE__ */ __name(function onClearClick2(event2) {
      this.updateModel(event2, null);
      this.resetFilterOnClear && (this.filterValue = null);
    }, "onClearClick"),
    onFirstHiddenFocus: /* @__PURE__ */ __name(function onFirstHiddenFocus(event2) {
      var focusableEl = event2.relatedTarget === this.$refs.focusInput ? getFirstFocusableElement(this.overlay, ':not([data-p-hidden-focusable="true"])') : this.$refs.focusInput;
      focus(focusableEl);
    }, "onFirstHiddenFocus"),
    onLastHiddenFocus: /* @__PURE__ */ __name(function onLastHiddenFocus(event2) {
      var focusableEl = event2.relatedTarget === this.$refs.focusInput ? getLastFocusableElement(this.overlay, ':not([data-p-hidden-focusable="true"])') : this.$refs.focusInput;
      focus(focusableEl);
    }, "onLastHiddenFocus"),
    onOptionSelect: /* @__PURE__ */ __name(function onOptionSelect2(event2, option4) {
      var _this4 = this;
      var index = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
      var isFocus = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
      if (this.disabled || this.isOptionDisabled(option4)) {
        return;
      }
      var selected3 = this.isSelected(option4);
      var value2 = null;
      if (selected3) value2 = this.d_value.filter(function(val) {
        return !equals(val, _this4.getOptionValue(option4), _this4.equalityKey);
      });
      else value2 = [].concat(_toConsumableArray$6(this.d_value || []), [this.getOptionValue(option4)]);
      this.updateModel(event2, value2);
      index !== -1 && (this.focusedOptionIndex = index);
      isFocus && focus(this.$refs.focusInput);
    }, "onOptionSelect"),
    onOptionMouseMove: /* @__PURE__ */ __name(function onOptionMouseMove3(event2, index) {
      if (this.focusOnHover) {
        this.changeFocusedOptionIndex(event2, index);
      }
    }, "onOptionMouseMove"),
    onOptionSelectRange: /* @__PURE__ */ __name(function onOptionSelectRange(event2) {
      var _this5 = this;
      var start = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
      var end = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -1;
      start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));
      end === -1 && (end = this.findNearestSelectedOptionIndex(start));
      if (start !== -1 && end !== -1) {
        var rangeStart = Math.min(start, end);
        var rangeEnd = Math.max(start, end);
        var value2 = this.visibleOptions.slice(rangeStart, rangeEnd + 1).filter(function(option4) {
          return _this5.isValidOption(option4);
        }).map(function(option4) {
          return _this5.getOptionValue(option4);
        });
        this.updateModel(event2, value2);
      }
    }, "onOptionSelectRange"),
    onFilterChange: /* @__PURE__ */ __name(function onFilterChange(event2) {
      var value2 = event2.target.value;
      this.filterValue = value2;
      this.focusedOptionIndex = -1;
      this.$emit("filter", {
        originalEvent: event2,
        value: value2
      });
      !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);
    }, "onFilterChange"),
    onFilterKeyDown: /* @__PURE__ */ __name(function onFilterKeyDown(event2) {
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2, true);
          break;
        case "ArrowLeft":
        case "ArrowRight":
          this.onArrowLeftKey(event2, true);
          break;
        case "Home":
          this.onHomeKey(event2, true);
          break;
        case "End":
          this.onEndKey(event2, true);
          break;
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(event2);
          break;
        case "Escape":
          this.onEscapeKey(event2);
          break;
        case "Tab":
          this.onTabKey(event2, true);
          break;
      }
    }, "onFilterKeyDown"),
    onFilterBlur: /* @__PURE__ */ __name(function onFilterBlur() {
      this.focusedOptionIndex = -1;
    }, "onFilterBlur"),
    onFilterUpdated: /* @__PURE__ */ __name(function onFilterUpdated() {
      if (this.overlayVisible) {
        this.alignOverlay();
      }
    }, "onFilterUpdated"),
    onOverlayClick: /* @__PURE__ */ __name(function onOverlayClick4(event2) {
      OverlayEventBus.emit("overlay-click", {
        originalEvent: event2,
        target: this.$el
      });
    }, "onOverlayClick"),
    onOverlayKeyDown: /* @__PURE__ */ __name(function onOverlayKeyDown3(event2) {
      switch (event2.code) {
        case "Escape":
          this.onEscapeKey(event2);
          break;
      }
    }, "onOverlayKeyDown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey6(event2) {
      if (!this.overlayVisible) {
        this.show();
      } else {
        var optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();
        if (event2.shiftKey) {
          this.onOptionSelectRange(event2, this.startRangeIndex, optionIndex);
        }
        this.changeFocusedOptionIndex(event2, optionIndex);
      }
      event2.preventDefault();
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey6(event2) {
      var pressedInInputText = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      if (event2.altKey && !pressedInInputText) {
        if (this.focusedOptionIndex !== -1) {
          this.onOptionSelect(event2, this.visibleOptions[this.focusedOptionIndex]);
        }
        this.overlayVisible && this.hide();
        event2.preventDefault();
      } else {
        var optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();
        if (event2.shiftKey) {
          this.onOptionSelectRange(event2, optionIndex, this.startRangeIndex);
        }
        this.changeFocusedOptionIndex(event2, optionIndex);
        !this.overlayVisible && this.show();
        event2.preventDefault();
      }
    }, "onArrowUpKey"),
    onArrowLeftKey: /* @__PURE__ */ __name(function onArrowLeftKey3(event2) {
      var pressedInInputText = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      pressedInInputText && (this.focusedOptionIndex = -1);
    }, "onArrowLeftKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey6(event2) {
      var pressedInInputText = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      if (pressedInInputText) {
        var target = event2.currentTarget;
        if (event2.shiftKey) {
          target.setSelectionRange(0, event2.target.selectionStart);
        } else {
          target.setSelectionRange(0, 0);
          this.focusedOptionIndex = -1;
        }
      } else {
        var metaKey = event2.metaKey || event2.ctrlKey;
        var optionIndex = this.findFirstOptionIndex();
        if (event2.shiftKey && metaKey) {
          this.onOptionSelectRange(event2, optionIndex, this.startRangeIndex);
        }
        this.changeFocusedOptionIndex(event2, optionIndex);
        !this.overlayVisible && this.show();
      }
      event2.preventDefault();
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey6(event2) {
      var pressedInInputText = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      if (pressedInInputText) {
        var target = event2.currentTarget;
        if (event2.shiftKey) {
          target.setSelectionRange(event2.target.selectionStart, target.value.length);
        } else {
          var len = target.value.length;
          target.setSelectionRange(len, len);
          this.focusedOptionIndex = -1;
        }
      } else {
        var metaKey = event2.metaKey || event2.ctrlKey;
        var optionIndex = this.findLastOptionIndex();
        if (event2.shiftKey && metaKey) {
          this.onOptionSelectRange(event2, this.startRangeIndex, optionIndex);
        }
        this.changeFocusedOptionIndex(event2, optionIndex);
        !this.overlayVisible && this.show();
      }
      event2.preventDefault();
    }, "onEndKey"),
    onPageUpKey: /* @__PURE__ */ __name(function onPageUpKey(event2) {
      this.scrollInView(0);
      event2.preventDefault();
    }, "onPageUpKey"),
    onPageDownKey: /* @__PURE__ */ __name(function onPageDownKey(event2) {
      this.scrollInView(this.visibleOptions.length - 1);
      event2.preventDefault();
    }, "onPageDownKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey5(event2) {
      if (!this.overlayVisible) {
        this.focusedOptionIndex = -1;
        this.onArrowDownKey(event2);
      } else {
        if (this.focusedOptionIndex !== -1) {
          if (event2.shiftKey) this.onOptionSelectRange(event2, this.focusedOptionIndex);
          else this.onOptionSelect(event2, this.visibleOptions[this.focusedOptionIndex]);
        }
      }
      event2.preventDefault();
    }, "onEnterKey"),
    onEscapeKey: /* @__PURE__ */ __name(function onEscapeKey3(event2) {
      this.overlayVisible && this.hide(true);
      event2.preventDefault();
    }, "onEscapeKey"),
    onTabKey: /* @__PURE__ */ __name(function onTabKey3(event2) {
      var pressedInInputText = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      if (!pressedInInputText) {
        if (this.overlayVisible && this.hasFocusableElements()) {
          focus(event2.shiftKey ? this.$refs.lastHiddenFocusableElementOnOverlay : this.$refs.firstHiddenFocusableElementOnOverlay);
          event2.preventDefault();
        } else {
          if (this.focusedOptionIndex !== -1) {
            this.onOptionSelect(event2, this.visibleOptions[this.focusedOptionIndex]);
          }
          this.overlayVisible && this.hide(this.filter);
        }
      }
    }, "onTabKey"),
    onShiftKey: /* @__PURE__ */ __name(function onShiftKey() {
      this.startRangeIndex = this.focusedOptionIndex;
    }, "onShiftKey"),
    onOverlayEnter: /* @__PURE__ */ __name(function onOverlayEnter3(el) {
      ZIndex.set("overlay", el, this.$primevue.config.zIndex.overlay);
      addStyle(el, {
        position: "absolute",
        top: "0",
        left: "0"
      });
      this.alignOverlay();
      this.scrollInView();
      this.autoFilterFocus && focus(this.$refs.filterInput.$el);
    }, "onOverlayEnter"),
    onOverlayAfterEnter: /* @__PURE__ */ __name(function onOverlayAfterEnter2() {
      this.bindOutsideClickListener();
      this.bindScrollListener();
      this.bindResizeListener();
      this.$emit("show");
    }, "onOverlayAfterEnter"),
    onOverlayLeave: /* @__PURE__ */ __name(function onOverlayLeave3() {
      this.unbindOutsideClickListener();
      this.unbindScrollListener();
      this.unbindResizeListener();
      this.$emit("hide");
      this.overlay = null;
    }, "onOverlayLeave"),
    onOverlayAfterLeave: /* @__PURE__ */ __name(function onOverlayAfterLeave3(el) {
      ZIndex.clear(el);
    }, "onOverlayAfterLeave"),
    alignOverlay: /* @__PURE__ */ __name(function alignOverlay4() {
      if (this.appendTo === "self") {
        relativePosition(this.overlay, this.$el);
      } else {
        this.overlay.style.minWidth = getOuterWidth(this.$el) + "px";
        absolutePosition(this.overlay, this.$el);
      }
    }, "alignOverlay"),
    bindOutsideClickListener: /* @__PURE__ */ __name(function bindOutsideClickListener6() {
      var _this6 = this;
      if (!this.outsideClickListener) {
        this.outsideClickListener = function(event2) {
          if (_this6.overlayVisible && _this6.isOutsideClicked(event2)) {
            _this6.hide();
          }
        };
        document.addEventListener("click", this.outsideClickListener);
      }
    }, "bindOutsideClickListener"),
    unbindOutsideClickListener: /* @__PURE__ */ __name(function unbindOutsideClickListener6() {
      if (this.outsideClickListener) {
        document.removeEventListener("click", this.outsideClickListener);
        this.outsideClickListener = null;
      }
    }, "unbindOutsideClickListener"),
    bindScrollListener: /* @__PURE__ */ __name(function bindScrollListener5() {
      var _this7 = this;
      if (!this.scrollHandler) {
        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, function() {
          if (_this7.overlayVisible) {
            _this7.hide();
          }
        });
      }
      this.scrollHandler.bindScrollListener();
    }, "bindScrollListener"),
    unbindScrollListener: /* @__PURE__ */ __name(function unbindScrollListener5() {
      if (this.scrollHandler) {
        this.scrollHandler.unbindScrollListener();
      }
    }, "unbindScrollListener"),
    bindResizeListener: /* @__PURE__ */ __name(function bindResizeListener5() {
      var _this8 = this;
      if (!this.resizeListener) {
        this.resizeListener = function() {
          if (_this8.overlayVisible && !isTouchDevice()) {
            _this8.hide();
          }
        };
        window.addEventListener("resize", this.resizeListener);
      }
    }, "bindResizeListener"),
    unbindResizeListener: /* @__PURE__ */ __name(function unbindResizeListener5() {
      if (this.resizeListener) {
        window.removeEventListener("resize", this.resizeListener);
        this.resizeListener = null;
      }
    }, "unbindResizeListener"),
    isOutsideClicked: /* @__PURE__ */ __name(function isOutsideClicked3(event2) {
      return !(this.$el.isSameNode(event2.target) || this.$el.contains(event2.target) || this.overlay && this.overlay.contains(event2.target));
    }, "isOutsideClicked"),
    getLabelByValue: /* @__PURE__ */ __name(function getLabelByValue(value2) {
      var _this9 = this;
      var options4 = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];
      var matchedOption = options4.find(function(option4) {
        return !_this9.isOptionGroup(option4) && equals(_this9.getOptionValue(option4), value2, _this9.equalityKey);
      });
      return matchedOption ? this.getOptionLabel(matchedOption) : null;
    }, "getLabelByValue"),
    getSelectedItemsLabel: /* @__PURE__ */ __name(function getSelectedItemsLabel() {
      var pattern = /{(.*?)}/;
      var selectedItemsLabel = this.selectedItemsLabel || this.$primevue.config.locale.selectionMessage;
      if (pattern.test(selectedItemsLabel)) {
        return selectedItemsLabel.replace(selectedItemsLabel.match(pattern)[0], this.d_value.length + "");
      }
      return selectedItemsLabel;
    }, "getSelectedItemsLabel"),
    onToggleAll: /* @__PURE__ */ __name(function onToggleAll(event2) {
      var _this10 = this;
      if (this.selectAll !== null) {
        this.$emit("selectall-change", {
          originalEvent: event2,
          checked: !this.allSelected
        });
      } else {
        var value2 = this.allSelected ? [] : this.visibleOptions.filter(function(option4) {
          return _this10.isValidOption(option4);
        }).map(function(option4) {
          return _this10.getOptionValue(option4);
        });
        this.updateModel(event2, value2);
      }
    }, "onToggleAll"),
    removeOption: /* @__PURE__ */ __name(function removeOption(event2, optionValue) {
      var _this11 = this;
      event2.stopPropagation();
      var value2 = this.d_value.filter(function(val) {
        return !equals(val, optionValue, _this11.equalityKey);
      });
      this.updateModel(event2, value2);
    }, "removeOption"),
    clearFilter: /* @__PURE__ */ __name(function clearFilter() {
      this.filterValue = null;
    }, "clearFilter"),
    hasFocusableElements: /* @__PURE__ */ __name(function hasFocusableElements() {
      return getFocusableElements(this.overlay, ':not([data-p-hidden-focusable="true"])').length > 0;
    }, "hasFocusableElements"),
    isOptionMatched: /* @__PURE__ */ __name(function isOptionMatched2(option4) {
      var _this$getOptionLabel;
      return this.isValidOption(option4) && typeof this.getOptionLabel(option4) === "string" && ((_this$getOptionLabel = this.getOptionLabel(option4)) === null || _this$getOptionLabel === void 0 ? void 0 : _this$getOptionLabel.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)));
    }, "isOptionMatched"),
    isValidOption: /* @__PURE__ */ __name(function isValidOption2(option4) {
      return isNotEmpty(option4) && !(this.isOptionDisabled(option4) || this.isOptionGroup(option4));
    }, "isValidOption"),
    isValidSelectedOption: /* @__PURE__ */ __name(function isValidSelectedOption2(option4) {
      return this.isValidOption(option4) && this.isSelected(option4);
    }, "isValidSelectedOption"),
    isEquals: /* @__PURE__ */ __name(function isEquals(value1, value2) {
      return equals(value1, value2, this.equalityKey);
    }, "isEquals"),
    isSelected: /* @__PURE__ */ __name(function isSelected4(option4) {
      var _this12 = this;
      var optionValue = this.getOptionValue(option4);
      return (this.d_value || []).some(function(value2) {
        return _this12.isEquals(value2, optionValue);
      });
    }, "isSelected"),
    findFirstOptionIndex: /* @__PURE__ */ __name(function findFirstOptionIndex2() {
      var _this13 = this;
      return this.visibleOptions.findIndex(function(option4) {
        return _this13.isValidOption(option4);
      });
    }, "findFirstOptionIndex"),
    findLastOptionIndex: /* @__PURE__ */ __name(function findLastOptionIndex2() {
      var _this14 = this;
      return findLastIndex(this.visibleOptions, function(option4) {
        return _this14.isValidOption(option4);
      });
    }, "findLastOptionIndex"),
    findNextOptionIndex: /* @__PURE__ */ __name(function findNextOptionIndex4(index) {
      var _this15 = this;
      var matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex(function(option4) {
        return _this15.isValidOption(option4);
      }) : -1;
      return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;
    }, "findNextOptionIndex"),
    findPrevOptionIndex: /* @__PURE__ */ __name(function findPrevOptionIndex4(index) {
      var _this16 = this;
      var matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), function(option4) {
        return _this16.isValidOption(option4);
      }) : -1;
      return matchedOptionIndex > -1 ? matchedOptionIndex : index;
    }, "findPrevOptionIndex"),
    findSelectedOptionIndex: /* @__PURE__ */ __name(function findSelectedOptionIndex2() {
      var _this17 = this;
      if (this.$filled) {
        var _loop = /* @__PURE__ */ __name(function _loop2() {
          var value2 = _this17.d_value[index];
          var matchedOptionIndex = _this17.visibleOptions.findIndex(function(option4) {
            return _this17.isValidSelectedOption(option4) && _this17.isEquals(value2, _this17.getOptionValue(option4));
          });
          if (matchedOptionIndex > -1) return {
            v: matchedOptionIndex
          };
        }, "_loop"), _ret;
        for (var index = this.d_value.length - 1; index >= 0; index--) {
          _ret = _loop();
          if (_ret) return _ret.v;
        }
      }
      return -1;
    }, "findSelectedOptionIndex"),
    findFirstSelectedOptionIndex: /* @__PURE__ */ __name(function findFirstSelectedOptionIndex() {
      var _this18 = this;
      return this.$filled ? this.visibleOptions.findIndex(function(option4) {
        return _this18.isValidSelectedOption(option4);
      }) : -1;
    }, "findFirstSelectedOptionIndex"),
    findLastSelectedOptionIndex: /* @__PURE__ */ __name(function findLastSelectedOptionIndex() {
      var _this19 = this;
      return this.$filled ? findLastIndex(this.visibleOptions, function(option4) {
        return _this19.isValidSelectedOption(option4);
      }) : -1;
    }, "findLastSelectedOptionIndex"),
    findNextSelectedOptionIndex: /* @__PURE__ */ __name(function findNextSelectedOptionIndex(index) {
      var _this20 = this;
      var matchedOptionIndex = this.$filled && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex(function(option4) {
        return _this20.isValidSelectedOption(option4);
      }) : -1;
      return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;
    }, "findNextSelectedOptionIndex"),
    findPrevSelectedOptionIndex: /* @__PURE__ */ __name(function findPrevSelectedOptionIndex(index) {
      var _this21 = this;
      var matchedOptionIndex = this.$filled && index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), function(option4) {
        return _this21.isValidSelectedOption(option4);
      }) : -1;
      return matchedOptionIndex > -1 ? matchedOptionIndex : -1;
    }, "findPrevSelectedOptionIndex"),
    findNearestSelectedOptionIndex: /* @__PURE__ */ __name(function findNearestSelectedOptionIndex(index) {
      var firstCheckUp = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var matchedOptionIndex = -1;
      if (this.$filled) {
        if (firstCheckUp) {
          matchedOptionIndex = this.findPrevSelectedOptionIndex(index);
          matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;
        } else {
          matchedOptionIndex = this.findNextSelectedOptionIndex(index);
          matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;
        }
      }
      return matchedOptionIndex > -1 ? matchedOptionIndex : index;
    }, "findNearestSelectedOptionIndex"),
    findFirstFocusedOptionIndex: /* @__PURE__ */ __name(function findFirstFocusedOptionIndex2() {
      var selectedIndex = this.findSelectedOptionIndex();
      return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;
    }, "findFirstFocusedOptionIndex"),
    findLastFocusedOptionIndex: /* @__PURE__ */ __name(function findLastFocusedOptionIndex2() {
      var selectedIndex = this.findSelectedOptionIndex();
      return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;
    }, "findLastFocusedOptionIndex"),
    searchOptions: /* @__PURE__ */ __name(function searchOptions2(event2) {
      var _this22 = this;
      this.searchValue = (this.searchValue || "") + event2.key;
      var optionIndex = -1;
      if (isNotEmpty(this.searchValue)) {
        if (this.focusedOptionIndex !== -1) {
          optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex(function(option4) {
            return _this22.isOptionMatched(option4);
          });
          optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex(function(option4) {
            return _this22.isOptionMatched(option4);
          }) : optionIndex + this.focusedOptionIndex;
        } else {
          optionIndex = this.visibleOptions.findIndex(function(option4) {
            return _this22.isOptionMatched(option4);
          });
        }
        if (optionIndex === -1 && this.focusedOptionIndex === -1) {
          optionIndex = this.findFirstFocusedOptionIndex();
        }
        if (optionIndex !== -1) {
          this.changeFocusedOptionIndex(event2, optionIndex);
        }
      }
      if (this.searchTimeout) {
        clearTimeout(this.searchTimeout);
      }
      this.searchTimeout = setTimeout(function() {
        _this22.searchValue = "";
        _this22.searchTimeout = null;
      }, 500);
    }, "searchOptions"),
    changeFocusedOptionIndex: /* @__PURE__ */ __name(function changeFocusedOptionIndex4(event2, index) {
      if (this.focusedOptionIndex !== index) {
        this.focusedOptionIndex = index;
        this.scrollInView();
        if (this.selectOnFocus) {
          this.onOptionSelect(event2, this.visibleOptions[index]);
        }
      }
    }, "changeFocusedOptionIndex"),
    scrollInView: /* @__PURE__ */ __name(function scrollInView4() {
      var _this23 = this;
      var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : -1;
      this.$nextTick(function() {
        var id4 = index !== -1 ? "".concat(_this23.id, "_").concat(index) : _this23.focusedOptionId;
        var element = findSingle(_this23.list, 'li[id="'.concat(id4, '"]'));
        if (element) {
          element.scrollIntoView && element.scrollIntoView({
            block: "nearest",
            inline: "nearest"
          });
        } else if (!_this23.virtualScrollerDisabled) {
          _this23.virtualScroller && _this23.virtualScroller.scrollToIndex(index !== -1 ? index : _this23.focusedOptionIndex);
        }
      });
    }, "scrollInView"),
    autoUpdateModel: /* @__PURE__ */ __name(function autoUpdateModel2() {
      if (this.selectOnFocus && this.autoOptionFocus && !this.$filled) {
        this.focusedOptionIndex = this.findFirstFocusedOptionIndex();
        var value2 = this.getOptionValue(this.visibleOptions[this.focusedOptionIndex]);
        this.updateModel(null, [value2]);
      }
    }, "autoUpdateModel"),
    updateModel: /* @__PURE__ */ __name(function updateModel6(event2, value2) {
      this.writeValue(value2, event2);
      this.$emit("change", {
        originalEvent: event2,
        value: value2
      });
    }, "updateModel"),
    flatOptions: /* @__PURE__ */ __name(function flatOptions(options4) {
      var _this24 = this;
      return (options4 || []).reduce(function(result, option4, index) {
        result.push({
          optionGroup: option4,
          group: true,
          index
        });
        var optionGroupChildren = _this24.getOptionGroupChildren(option4);
        optionGroupChildren && optionGroupChildren.forEach(function(o) {
          return result.push(o);
        });
        return result;
      }, []);
    }, "flatOptions"),
    overlayRef: /* @__PURE__ */ __name(function overlayRef3(el) {
      this.overlay = el;
    }, "overlayRef"),
    listRef: /* @__PURE__ */ __name(function listRef2(el, contentRef2) {
      this.list = el;
      contentRef2 && contentRef2(el);
    }, "listRef"),
    virtualScrollerRef: /* @__PURE__ */ __name(function virtualScrollerRef(el) {
      this.virtualScroller = el;
    }, "virtualScrollerRef")
  },
  computed: {
    visibleOptions: /* @__PURE__ */ __name(function visibleOptions2() {
      var _this25 = this;
      var options4 = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];
      if (this.filterValue) {
        var filteredOptions = FilterService.filter(options4, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);
        if (this.optionGroupLabel) {
          var optionGroups = this.options || [];
          var filtered = [];
          optionGroups.forEach(function(group) {
            var groupChildren = _this25.getOptionGroupChildren(group);
            var filteredItems = groupChildren.filter(function(item8) {
              return filteredOptions.includes(item8);
            });
            if (filteredItems.length > 0) filtered.push(_objectSpread$d(_objectSpread$d({}, group), {}, _defineProperty$1$2({}, typeof _this25.optionGroupChildren === "string" ? _this25.optionGroupChildren : "items", _toConsumableArray$6(filteredItems))));
          });
          return this.flatOptions(filtered);
        }
        return filteredOptions;
      }
      return options4;
    }, "visibleOptions"),
    label: /* @__PURE__ */ __name(function label7() {
      var label12;
      if (this.d_value && this.d_value.length) {
        if (isNotEmpty(this.maxSelectedLabels) && this.d_value.length > this.maxSelectedLabels) {
          return this.getSelectedItemsLabel();
        } else {
          label12 = "";
          for (var i = 0; i < this.d_value.length; i++) {
            if (i !== 0) {
              label12 += ", ";
            }
            label12 += this.getLabelByValue(this.d_value[i]);
          }
        }
      } else {
        label12 = this.placeholder;
      }
      return label12;
    }, "label"),
    chipSelectedItems: /* @__PURE__ */ __name(function chipSelectedItems() {
      return isNotEmpty(this.maxSelectedLabels) && this.d_value && this.d_value.length > this.maxSelectedLabels;
    }, "chipSelectedItems"),
    allSelected: /* @__PURE__ */ __name(function allSelected() {
      var _this26 = this;
      return this.selectAll !== null ? this.selectAll : isNotEmpty(this.visibleOptions) && this.visibleOptions.every(function(option4) {
        return _this26.isOptionGroup(option4) || _this26.isOptionDisabled(option4) || _this26.isSelected(option4);
      });
    }, "allSelected"),
    // @deprecated use $filled instead.
    hasSelectedOption: /* @__PURE__ */ __name(function hasSelectedOption2() {
      return this.$filled;
    }, "hasSelectedOption"),
    equalityKey: /* @__PURE__ */ __name(function equalityKey2() {
      return this.optionValue ? null : this.dataKey;
    }, "equalityKey"),
    searchFields: /* @__PURE__ */ __name(function searchFields() {
      return this.filterFields || [this.optionLabel];
    }, "searchFields"),
    maxSelectionLimitReached: /* @__PURE__ */ __name(function maxSelectionLimitReached() {
      return this.selectionLimit && this.d_value && this.d_value.length === this.selectionLimit;
    }, "maxSelectionLimitReached"),
    filterResultMessageText: /* @__PURE__ */ __name(function filterResultMessageText() {
      return isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll("{0}", this.visibleOptions.length) : this.emptyFilterMessageText;
    }, "filterResultMessageText"),
    filterMessageText: /* @__PURE__ */ __name(function filterMessageText() {
      return this.filterMessage || this.$primevue.config.locale.searchMessage || "";
    }, "filterMessageText"),
    emptyFilterMessageText: /* @__PURE__ */ __name(function emptyFilterMessageText() {
      return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || "";
    }, "emptyFilterMessageText"),
    emptyMessageText: /* @__PURE__ */ __name(function emptyMessageText3() {
      return this.emptyMessage || this.$primevue.config.locale.emptyMessage || "";
    }, "emptyMessageText"),
    selectionMessageText: /* @__PURE__ */ __name(function selectionMessageText2() {
      return this.selectionMessage || this.$primevue.config.locale.selectionMessage || "";
    }, "selectionMessageText"),
    emptySelectionMessageText: /* @__PURE__ */ __name(function emptySelectionMessageText2() {
      return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || "";
    }, "emptySelectionMessageText"),
    selectedMessageText: /* @__PURE__ */ __name(function selectedMessageText2() {
      return this.$filled ? this.selectionMessageText.replaceAll("{0}", this.d_value.length) : this.emptySelectionMessageText;
    }, "selectedMessageText"),
    focusedOptionId: /* @__PURE__ */ __name(function focusedOptionId5() {
      return this.focusedOptionIndex !== -1 ? "".concat(this.id, "_").concat(this.focusedOptionIndex) : null;
    }, "focusedOptionId"),
    ariaSetSize: /* @__PURE__ */ __name(function ariaSetSize() {
      var _this27 = this;
      return this.visibleOptions.filter(function(option4) {
        return !_this27.isOptionGroup(option4);
      }).length;
    }, "ariaSetSize"),
    toggleAllAriaLabel: /* @__PURE__ */ __name(function toggleAllAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria[this.allSelected ? "selectAll" : "unselectAll"] : void 0;
    }, "toggleAllAriaLabel"),
    listAriaLabel: /* @__PURE__ */ __name(function listAriaLabel2() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.listLabel : void 0;
    }, "listAriaLabel"),
    virtualScrollerDisabled: /* @__PURE__ */ __name(function virtualScrollerDisabled() {
      return !this.virtualScrollerOptions;
    }, "virtualScrollerDisabled"),
    hasFluid: /* @__PURE__ */ __name(function hasFluid() {
      return isEmpty(this.fluid) ? !!this.$pcFluid : this.fluid;
    }, "hasFluid"),
    isClearIconVisible: /* @__PURE__ */ __name(function isClearIconVisible2() {
      return this.showClear && this.d_value != null && isNotEmpty(this.options);
    }, "isClearIconVisible")
  },
  directives: {
    ripple: Ripple
  },
  components: {
    InputText: script$1o,
    Checkbox: script$1J,
    VirtualScroller: script$1K,
    Portal: script$1f,
    Chip: script$1t,
    IconField: script$1L,
    InputIcon: script$1M,
    TimesIcon: script$1g,
    SearchIcon: script$1N,
    ChevronDownIcon: script$1k,
    SpinnerIcon: script$1r,
    CheckIcon: script$1D
  }
};
function _typeof$e(o) {
  "@babel/helpers - typeof";
  return _typeof$e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$e(o);
}
__name(_typeof$e, "_typeof$e");
function _defineProperty$e(e, r, t2) {
  return (r = _toPropertyKey$e(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$e, "_defineProperty$e");
function _toPropertyKey$e(t2) {
  var i = _toPrimitive$e(t2, "string");
  return "symbol" == _typeof$e(i) ? i : i + "";
}
__name(_toPropertyKey$e, "_toPropertyKey$e");
function _toPrimitive$e(t2, r) {
  if ("object" != _typeof$e(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$e(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$e, "_toPrimitive$e");
var _hoisted_1$f = ["id", "disabled", "placeholder", "tabindex", "aria-label", "aria-labelledby", "aria-expanded", "aria-controls", "aria-activedescendant", "aria-invalid"];
var _hoisted_2$b = {
  key: 0
};
var _hoisted_3$8 = ["id", "aria-label"];
var _hoisted_4$5 = ["id"];
var _hoisted_5$1 = ["id", "aria-label", "aria-selected", "aria-disabled", "aria-setsize", "aria-posinset", "onClick", "onMousemove", "data-p-selected", "data-p-focused", "data-p-disabled"];
function render$r(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Chip = resolveComponent("Chip");
  var _component_SpinnerIcon = resolveComponent("SpinnerIcon");
  var _component_Checkbox = resolveComponent("Checkbox");
  var _component_InputText = resolveComponent("InputText");
  var _component_SearchIcon = resolveComponent("SearchIcon");
  var _component_InputIcon = resolveComponent("InputIcon");
  var _component_IconField = resolveComponent("IconField");
  var _component_VirtualScroller = resolveComponent("VirtualScroller");
  var _component_Portal = resolveComponent("Portal");
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("div", mergeProps({
    ref: "container",
    "class": _ctx.cx("root"),
    style: _ctx.sx("root"),
    onClick: _cache[7] || (_cache[7] = function() {
      return $options.onContainerClick && $options.onContainerClick.apply($options, arguments);
    })
  }, _ctx.ptmi("root")), [createBaseVNode("div", mergeProps({
    "class": "p-hidden-accessible"
  }, _ctx.ptm("hiddenInputContainer"), {
    "data-p-hidden-accessible": true
  }), [createBaseVNode("input", mergeProps({
    ref: "focusInput",
    id: _ctx.inputId,
    type: "text",
    readonly: "",
    disabled: _ctx.disabled,
    placeholder: _ctx.placeholder,
    tabindex: !_ctx.disabled ? _ctx.tabindex : -1,
    role: "combobox",
    "aria-label": _ctx.ariaLabel,
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-haspopup": "listbox",
    "aria-expanded": $data.overlayVisible,
    "aria-controls": $data.id + "_list",
    "aria-activedescendant": $data.focused ? $options.focusedOptionId : void 0,
    "aria-invalid": _ctx.invalid || void 0,
    onFocus: _cache[0] || (_cache[0] = function() {
      return $options.onFocus && $options.onFocus.apply($options, arguments);
    }),
    onBlur: _cache[1] || (_cache[1] = function() {
      return $options.onBlur && $options.onBlur.apply($options, arguments);
    }),
    onKeydown: _cache[2] || (_cache[2] = function() {
      return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);
    })
  }, _ctx.ptm("hiddenInput")), null, 16, _hoisted_1$f)], 16), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("labelContainer")
  }, _ctx.ptm("labelContainer")), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("label")
  }, _ctx.ptm("label")), [renderSlot(_ctx.$slots, "value", {
    value: _ctx.d_value,
    placeholder: _ctx.placeholder
  }, function() {
    return [_ctx.display === "comma" ? (openBlock(), createElementBlock(Fragment, {
      key: 0
    }, [createTextVNode(toDisplayString($options.label || "empty"), 1)], 64)) : _ctx.display === "chip" ? (openBlock(), createElementBlock(Fragment, {
      key: 1
    }, [$options.chipSelectedItems ? (openBlock(), createElementBlock("span", _hoisted_2$b, toDisplayString($options.label), 1)) : (openBlock(true), createElementBlock(Fragment, {
      key: 1
    }, renderList(_ctx.d_value, function(item8) {
      return openBlock(), createElementBlock("span", mergeProps({
        key: $options.getLabelByValue(item8),
        "class": _ctx.cx("chipItem"),
        ref_for: true
      }, _ctx.ptm("chipItem")), [renderSlot(_ctx.$slots, "chip", {
        value: item8,
        removeCallback: /* @__PURE__ */ __name(function removeCallback(event2) {
          return $options.removeOption(event2, item8);
        }, "removeCallback")
      }, function() {
        return [createVNode(_component_Chip, {
          "class": normalizeClass(_ctx.cx("pcChip")),
          label: $options.getLabelByValue(item8),
          removeIcon: _ctx.chipIcon || _ctx.removeTokenIcon,
          removable: "",
          unstyled: _ctx.unstyled,
          onRemove: /* @__PURE__ */ __name(function onRemove($event) {
            return $options.removeOption($event, item8);
          }, "onRemove"),
          pt: _ctx.ptm("pcChip")
        }, {
          removeicon: withCtx(function() {
            return [renderSlot(_ctx.$slots, _ctx.$slots.chipicon ? "chipicon" : "removetokenicon", {
              "class": normalizeClass(_ctx.cx("chipIcon")),
              item: item8,
              removeCallback: /* @__PURE__ */ __name(function removeCallback(event2) {
                return $options.removeOption(event2, item8);
              }, "removeCallback")
            })];
          }),
          _: 2
        }, 1032, ["class", "label", "removeIcon", "unstyled", "onRemove", "pt"])];
      })], 16);
    }), 128)), !_ctx.d_value || _ctx.d_value.length === 0 ? (openBlock(), createElementBlock(Fragment, {
      key: 2
    }, [createTextVNode(toDisplayString(_ctx.placeholder || "empty"), 1)], 64)) : createCommentVNode("", true)], 64)) : createCommentVNode("", true)];
  })], 16)], 16), $options.isClearIconVisible ? renderSlot(_ctx.$slots, "clearicon", {
    key: 0,
    "class": normalizeClass(_ctx.cx("clearIcon")),
    clearCallback: $options.onClearClick
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon ? "i" : "TimesIcon"), mergeProps({
      ref: "clearIcon",
      "class": [_ctx.cx("clearIcon"), _ctx.clearIcon],
      onClick: $options.onClearClick
    }, _ctx.ptm("clearIcon"), {
      "data-pc-section": "clearicon"
    }), null, 16, ["class", "onClick"]))];
  }) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("dropdown")
  }, _ctx.ptm("dropdown")), [_ctx.loading ? renderSlot(_ctx.$slots, "loadingicon", {
    key: 0,
    "class": normalizeClass(_ctx.cx("loadingIcon"))
  }, function() {
    return [_ctx.loadingIcon ? (openBlock(), createElementBlock("span", mergeProps({
      key: 0,
      "class": [_ctx.cx("loadingIcon"), "pi-spin", _ctx.loadingIcon],
      "aria-hidden": "true"
    }, _ctx.ptm("loadingIcon")), null, 16)) : (openBlock(), createBlock(_component_SpinnerIcon, mergeProps({
      key: 1,
      "class": _ctx.cx("loadingIcon"),
      spin: "",
      "aria-hidden": "true"
    }, _ctx.ptm("loadingIcon")), null, 16, ["class"]))];
  }) : renderSlot(_ctx.$slots, "dropdownicon", {
    key: 1,
    "class": normalizeClass(_ctx.cx("dropdownIcon"))
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.dropdownIcon ? "span" : "ChevronDownIcon"), mergeProps({
      "class": [_ctx.cx("dropdownIcon"), _ctx.dropdownIcon],
      "aria-hidden": "true"
    }, _ctx.ptm("dropdownIcon")), null, 16, ["class"]))];
  })], 16), createVNode(_component_Portal, {
    appendTo: _ctx.appendTo
  }, {
    "default": withCtx(function() {
      return [createVNode(Transition, mergeProps({
        name: "p-connected-overlay",
        onEnter: $options.onOverlayEnter,
        onAfterEnter: $options.onOverlayAfterEnter,
        onLeave: $options.onOverlayLeave,
        onAfterLeave: $options.onOverlayAfterLeave
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [$data.overlayVisible ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.overlayRef,
            style: [_ctx.panelStyle, _ctx.overlayStyle],
            "class": [_ctx.cx("overlay"), _ctx.panelClass, _ctx.overlayClass],
            onClick: _cache[5] || (_cache[5] = function() {
              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);
            }),
            onKeydown: _cache[6] || (_cache[6] = function() {
              return $options.onOverlayKeyDown && $options.onOverlayKeyDown.apply($options, arguments);
            })
          }, _ctx.ptm("overlay")), [createBaseVNode("span", mergeProps({
            ref: "firstHiddenFocusableElementOnOverlay",
            role: "presentation",
            "aria-hidden": "true",
            "class": "p-hidden-accessible p-hidden-focusable",
            tabindex: 0,
            onFocus: _cache[3] || (_cache[3] = function() {
              return $options.onFirstHiddenFocus && $options.onFirstHiddenFocus.apply($options, arguments);
            })
          }, _ctx.ptm("hiddenFirstFocusableEl"), {
            "data-p-hidden-accessible": true,
            "data-p-hidden-focusable": true
          }), null, 16), renderSlot(_ctx.$slots, "header", {
            value: _ctx.d_value,
            options: $options.visibleOptions
          }), _ctx.showToggleAll && _ctx.selectionLimit == null || _ctx.filter ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            "class": _ctx.cx("header")
          }, _ctx.ptm("header")), [_ctx.showToggleAll && _ctx.selectionLimit == null ? (openBlock(), createBlock(_component_Checkbox, {
            key: 0,
            modelValue: $options.allSelected,
            binary: true,
            disabled: _ctx.disabled,
            variant: _ctx.variant,
            "aria-label": $options.toggleAllAriaLabel,
            onChange: $options.onToggleAll,
            unstyled: _ctx.unstyled,
            pt: $options.getHeaderCheckboxPTOptions("pcHeaderCheckbox")
          }, {
            icon: withCtx(function(slotProps) {
              return [_ctx.$slots.headercheckboxicon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.headercheckboxicon), {
                key: 0,
                checked: slotProps.checked,
                "class": normalizeClass(slotProps["class"])
              }, null, 8, ["checked", "class"])) : slotProps.checked ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.checkboxIcon ? "span" : "CheckIcon"), mergeProps({
                key: 1,
                "class": [slotProps["class"], _defineProperty$e({}, _ctx.checkboxIcon, slotProps.checked)]
              }, $options.getHeaderCheckboxPTOptions("pcHeaderCheckbox.icon")), null, 16, ["class"])) : createCommentVNode("", true)];
            }),
            _: 1
          }, 8, ["modelValue", "disabled", "variant", "aria-label", "onChange", "unstyled", "pt"])) : createCommentVNode("", true), _ctx.filter ? (openBlock(), createBlock(_component_IconField, {
            key: 1,
            "class": normalizeClass(_ctx.cx("pcFilterContainer")),
            unstyled: _ctx.unstyled,
            pt: _ctx.ptm("pcFilterContainer")
          }, {
            "default": withCtx(function() {
              return [createVNode(_component_InputText, {
                ref: "filterInput",
                value: $data.filterValue,
                onVnodeMounted: $options.onFilterUpdated,
                onVnodeUpdated: $options.onFilterUpdated,
                "class": normalizeClass(_ctx.cx("pcFilter")),
                placeholder: _ctx.filterPlaceholder,
                disabled: _ctx.disabled,
                variant: _ctx.variant,
                unstyled: _ctx.unstyled,
                role: "searchbox",
                autocomplete: "off",
                "aria-owns": $data.id + "_list",
                "aria-activedescendant": $options.focusedOptionId,
                onKeydown: $options.onFilterKeyDown,
                onBlur: $options.onFilterBlur,
                onInput: $options.onFilterChange,
                pt: _ctx.ptm("pcFilter")
              }, null, 8, ["value", "onVnodeMounted", "onVnodeUpdated", "class", "placeholder", "disabled", "variant", "unstyled", "aria-owns", "aria-activedescendant", "onKeydown", "onBlur", "onInput", "pt"]), createVNode(_component_InputIcon, {
                unstyled: _ctx.unstyled,
                pt: _ctx.ptm("pcFilterIconContainer")
              }, {
                "default": withCtx(function() {
                  return [renderSlot(_ctx.$slots, "filtericon", {}, function() {
                    return [_ctx.filterIcon ? (openBlock(), createElementBlock("span", mergeProps({
                      key: 0,
                      "class": _ctx.filterIcon
                    }, _ctx.ptm("filterIcon")), null, 16)) : (openBlock(), createBlock(_component_SearchIcon, normalizeProps(mergeProps({
                      key: 1
                    }, _ctx.ptm("filterIcon"))), null, 16))];
                  })];
                }),
                _: 3
              }, 8, ["unstyled", "pt"])];
            }),
            _: 3
          }, 8, ["class", "unstyled", "pt"])) : createCommentVNode("", true), _ctx.filter ? (openBlock(), createElementBlock("span", mergeProps({
            key: 2,
            role: "status",
            "aria-live": "polite",
            "class": "p-hidden-accessible"
          }, _ctx.ptm("hiddenFilterResult"), {
            "data-p-hidden-accessible": true
          }), toDisplayString($options.filterResultMessageText), 17)) : createCommentVNode("", true)], 16)) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
            "class": _ctx.cx("listContainer"),
            style: {
              "max-height": $options.virtualScrollerDisabled ? _ctx.scrollHeight : ""
            }
          }, _ctx.ptm("listContainer")), [createVNode(_component_VirtualScroller, mergeProps({
            ref: $options.virtualScrollerRef
          }, _ctx.virtualScrollerOptions, {
            items: $options.visibleOptions,
            style: {
              height: _ctx.scrollHeight
            },
            tabindex: -1,
            disabled: $options.virtualScrollerDisabled,
            pt: _ctx.ptm("virtualScroller")
          }), createSlots({
            content: withCtx(function(_ref2) {
              var styleClass = _ref2.styleClass, contentRef2 = _ref2.contentRef, items2 = _ref2.items, getItemOptions = _ref2.getItemOptions, contentStyle = _ref2.contentStyle, itemSize = _ref2.itemSize;
              return [createBaseVNode("ul", mergeProps({
                ref: /* @__PURE__ */ __name(function ref2(el) {
                  return $options.listRef(el, contentRef2);
                }, "ref"),
                id: $data.id + "_list",
                "class": [_ctx.cx("list"), styleClass],
                style: contentStyle,
                role: "listbox",
                "aria-multiselectable": "true",
                "aria-label": $options.listAriaLabel
              }, _ctx.ptm("list")), [(openBlock(true), createElementBlock(Fragment, null, renderList(items2, function(option4, i) {
                return openBlock(), createElementBlock(Fragment, {
                  key: $options.getOptionRenderKey(option4, $options.getOptionIndex(i, getItemOptions))
                }, [$options.isOptionGroup(option4) ? (openBlock(), createElementBlock("li", mergeProps({
                  key: 0,
                  id: $data.id + "_" + $options.getOptionIndex(i, getItemOptions),
                  style: {
                    height: itemSize ? itemSize + "px" : void 0
                  },
                  "class": _ctx.cx("optionGroup"),
                  role: "option",
                  ref_for: true
                }, _ctx.ptm("optionGroup")), [renderSlot(_ctx.$slots, "optiongroup", {
                  option: option4.optionGroup,
                  index: $options.getOptionIndex(i, getItemOptions)
                }, function() {
                  return [createTextVNode(toDisplayString($options.getOptionGroupLabel(option4.optionGroup)), 1)];
                })], 16, _hoisted_4$5)) : withDirectives((openBlock(), createElementBlock("li", mergeProps({
                  key: 1,
                  id: $data.id + "_" + $options.getOptionIndex(i, getItemOptions),
                  style: {
                    height: itemSize ? itemSize + "px" : void 0
                  },
                  "class": _ctx.cx("option", {
                    option: option4,
                    index: i,
                    getItemOptions
                  }),
                  role: "option",
                  "aria-label": $options.getOptionLabel(option4),
                  "aria-selected": $options.isSelected(option4),
                  "aria-disabled": $options.isOptionDisabled(option4),
                  "aria-setsize": $options.ariaSetSize,
                  "aria-posinset": $options.getAriaPosInset($options.getOptionIndex(i, getItemOptions)),
                  onClick: /* @__PURE__ */ __name(function onClick11($event) {
                    return $options.onOptionSelect($event, option4, $options.getOptionIndex(i, getItemOptions), true);
                  }, "onClick"),
                  onMousemove: /* @__PURE__ */ __name(function onMousemove($event) {
                    return $options.onOptionMouseMove($event, $options.getOptionIndex(i, getItemOptions));
                  }, "onMousemove"),
                  ref_for: true
                }, $options.getCheckboxPTOptions(option4, getItemOptions, i, "option"), {
                  "data-p-selected": $options.isSelected(option4),
                  "data-p-focused": $data.focusedOptionIndex === $options.getOptionIndex(i, getItemOptions),
                  "data-p-disabled": $options.isOptionDisabled(option4)
                }), [createVNode(_component_Checkbox, {
                  defaultValue: $options.isSelected(option4),
                  binary: true,
                  tabindex: -1,
                  variant: _ctx.variant,
                  unstyled: _ctx.unstyled,
                  pt: $options.getCheckboxPTOptions(option4, getItemOptions, i, "pcOptionCheckbox")
                }, {
                  icon: withCtx(function(slotProps) {
                    return [_ctx.$slots.optioncheckboxicon || _ctx.$slots.itemcheckboxicon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.optioncheckboxicon || _ctx.$slots.itemcheckboxicon), {
                      key: 0,
                      checked: slotProps.checked,
                      "class": normalizeClass(slotProps["class"])
                    }, null, 8, ["checked", "class"])) : slotProps.checked ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.checkboxIcon ? "span" : "CheckIcon"), mergeProps({
                      key: 1,
                      "class": [slotProps["class"], _defineProperty$e({}, _ctx.checkboxIcon, slotProps.checked)],
                      ref_for: true
                    }, $options.getCheckboxPTOptions(option4, getItemOptions, i, "pcOptionCheckbox.icon")), null, 16, ["class"])) : createCommentVNode("", true)];
                  }),
                  _: 2
                }, 1032, ["defaultValue", "variant", "unstyled", "pt"]), renderSlot(_ctx.$slots, "option", {
                  option: option4,
                  selected: $options.isSelected(option4),
                  index: $options.getOptionIndex(i, getItemOptions)
                }, function() {
                  return [createBaseVNode("span", mergeProps({
                    ref_for: true
                  }, _ctx.ptm("optionLabel")), toDisplayString($options.getOptionLabel(option4)), 17)];
                })], 16, _hoisted_5$1)), [[_directive_ripple]])], 64);
              }), 128)), $data.filterValue && (!items2 || items2 && items2.length === 0) ? (openBlock(), createElementBlock("li", mergeProps({
                key: 0,
                "class": _ctx.cx("emptyMessage"),
                role: "option"
              }, _ctx.ptm("emptyMessage")), [renderSlot(_ctx.$slots, "emptyfilter", {}, function() {
                return [createTextVNode(toDisplayString($options.emptyFilterMessageText), 1)];
              })], 16)) : !_ctx.options || _ctx.options && _ctx.options.length === 0 ? (openBlock(), createElementBlock("li", mergeProps({
                key: 1,
                "class": _ctx.cx("emptyMessage"),
                role: "option"
              }, _ctx.ptm("emptyMessage")), [renderSlot(_ctx.$slots, "empty", {}, function() {
                return [createTextVNode(toDisplayString($options.emptyMessageText), 1)];
              })], 16)) : createCommentVNode("", true)], 16, _hoisted_3$8)];
            }),
            _: 2
          }, [_ctx.$slots.loader ? {
            name: "loader",
            fn: withCtx(function(_ref4) {
              var options4 = _ref4.options;
              return [renderSlot(_ctx.$slots, "loader", {
                options: options4
              })];
            }),
            key: "0"
          } : void 0]), 1040, ["items", "style", "disabled", "pt"])], 16), renderSlot(_ctx.$slots, "footer", {
            value: _ctx.d_value,
            options: $options.visibleOptions
          }), !_ctx.options || _ctx.options && _ctx.options.length === 0 ? (openBlock(), createElementBlock("span", mergeProps({
            key: 1,
            role: "status",
            "aria-live": "polite",
            "class": "p-hidden-accessible"
          }, _ctx.ptm("hiddenEmptyMessage"), {
            "data-p-hidden-accessible": true
          }), toDisplayString($options.emptyMessageText), 17)) : createCommentVNode("", true), createBaseVNode("span", mergeProps({
            role: "status",
            "aria-live": "polite",
            "class": "p-hidden-accessible"
          }, _ctx.ptm("hiddenSelectedMessage"), {
            "data-p-hidden-accessible": true
          }), toDisplayString($options.selectedMessageText), 17), createBaseVNode("span", mergeProps({
            ref: "lastHiddenFocusableElementOnOverlay",
            role: "presentation",
            "aria-hidden": "true",
            "class": "p-hidden-accessible p-hidden-focusable",
            tabindex: 0,
            onFocus: _cache[4] || (_cache[4] = function() {
              return $options.onLastHiddenFocus && $options.onLastHiddenFocus.apply($options, arguments);
            })
          }, _ctx.ptm("hiddenLastFocusableEl"), {
            "data-p-hidden-accessible": true,
            "data-p-hidden-focusable": true
          }), null, 16)], 16)) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onEnter", "onAfterEnter", "onLeave", "onAfterLeave"])];
    }),
    _: 3
  }, 8, ["appendTo"])], 16);
}
__name(render$r, "render$r");
script$v.render = render$r;
var script$u = {
  name: "AngleDoubleDownIcon",
  "extends": script$1m
};
function render$q(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M6.70786 6.59831C6.80043 6.63674 6.89974 6.65629 6.99997 6.65581C7.19621 6.64081 7.37877 6.54953 7.50853 6.40153L11.0685 2.8416C11.1364 2.69925 11.1586 2.53932 11.132 2.38384C11.1053 2.22837 11.0311 2.08498 10.9195 1.97343C10.808 1.86188 10.6646 1.78766 10.5091 1.76099C10.3536 1.73431 10.1937 1.75649 10.0513 1.82448L6.99997 4.87585L3.9486 1.82448C3.80625 1.75649 3.64632 1.73431 3.49084 1.76099C3.33536 1.78766 3.19197 1.86188 3.08043 1.97343C2.96888 2.08498 2.89466 2.22837 2.86798 2.38384C2.84131 2.53932 2.86349 2.69925 2.93147 2.8416L6.46089 6.43205C6.53132 6.50336 6.61528 6.55989 6.70786 6.59831ZM6.70786 12.1925C6.80043 12.2309 6.89974 12.2505 6.99997 12.25C7.10241 12.2465 7.20306 12.2222 7.29575 12.1785C7.38845 12.1348 7.47124 12.0726 7.53905 11.9957L11.0685 8.46629C11.1614 8.32292 11.2036 8.15249 11.1881 7.98233C11.1727 7.81216 11.1005 7.6521 10.9833 7.52781C10.866 7.40353 10.7104 7.3222 10.5415 7.29688C10.3725 7.27155 10.1999 7.30369 10.0513 7.38814L6.99997 10.4395L3.9486 7.38814C3.80006 7.30369 3.62747 7.27155 3.45849 7.29688C3.28951 7.3222 3.13393 7.40353 3.01667 7.52781C2.89942 7.6521 2.82729 7.81216 2.81184 7.98233C2.79639 8.15249 2.83852 8.32292 2.93148 8.46629L6.4609 12.0262C6.53133 12.0975 6.61529 12.1541 6.70786 12.1925Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$q, "render$q");
script$u.render = render$q;
var script$t = {
  name: "AngleDoubleUpIcon",
  "extends": script$1m
};
function render$p(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M10.1504 6.67719C10.2417 6.71508 10.3396 6.73436 10.4385 6.73389C10.6338 6.74289 10.8249 6.67441 10.97 6.54334C11.1109 6.4023 11.19 6.21112 11.19 6.01178C11.19 5.81245 11.1109 5.62127 10.97 5.48023L7.45977 1.96998C7.31873 1.82912 7.12755 1.75 6.92821 1.75C6.72888 1.75 6.5377 1.82912 6.39666 1.96998L2.9165 5.45014C2.83353 5.58905 2.79755 5.751 2.81392 5.91196C2.83028 6.07293 2.89811 6.22433 3.00734 6.34369C3.11656 6.46306 3.26137 6.54402 3.42025 6.57456C3.57914 6.60511 3.74364 6.5836 3.88934 6.51325L6.89813 3.50446L9.90691 6.51325C9.97636 6.58357 10.0592 6.6393 10.1504 6.67719ZM9.93702 11.9993C10.065 12.1452 10.245 12.2352 10.4385 12.25C10.632 12.2352 10.812 12.1452 10.9399 11.9993C11.0633 11.8614 11.1315 11.6828 11.1315 11.4978C11.1315 11.3128 11.0633 11.1342 10.9399 10.9963L7.48987 7.48609C7.34883 7.34523 7.15765 7.26611 6.95832 7.26611C6.75899 7.26611 6.5678 7.34523 6.42677 7.48609L2.91652 10.9963C2.84948 11.1367 2.82761 11.2944 2.85391 11.4477C2.88022 11.601 2.9534 11.7424 3.06339 11.8524C3.17338 11.9624 3.31477 12.0356 3.46808 12.0619C3.62139 12.0882 3.77908 12.0663 3.91945 11.9993L6.92823 8.99048L9.93702 11.9993Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$p, "render$p");
script$t.render = render$p;
var theme$f = /* @__PURE__ */ __name(function theme25(_ref) {
  var dt = _ref.dt;
  return "\n.p-orderlist {\n    display: flex;\n    gap: ".concat(dt("orderlist.gap"), ";\n}\n\n.p-orderlist-controls {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: ").concat(dt("orderlist.controls.gap"), ";\n}\n");
}, "theme");
var classes$g = {
  root: "p-orderlist p-component",
  controls: "p-orderlist-controls"
};
var OrderListStyle = BaseStyle.extend({
  name: "orderlist",
  theme: theme$f,
  classes: classes$g
});
var script$1$g = {
  name: "BaseOrderList",
  "extends": script$1d,
  props: {
    modelValue: {
      type: Array,
      "default": null
    },
    selection: {
      type: Array,
      "default": null
    },
    dataKey: {
      type: String,
      "default": null
    },
    listStyle: {
      type: null,
      "default": null
    },
    metaKeySelection: {
      type: Boolean,
      "default": false
    },
    autoOptionFocus: {
      type: Boolean,
      "default": true
    },
    focusOnHover: {
      type: Boolean,
      "default": true
    },
    responsive: {
      type: Boolean,
      "default": true
    },
    breakpoint: {
      type: String,
      "default": "960px"
    },
    striped: {
      type: Boolean,
      "default": false
    },
    scrollHeight: {
      type: String,
      "default": "14rem"
    },
    buttonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default13() {
        return {
          severity: "secondary"
        };
      }, "_default")
    },
    moveUpButtonProps: {
      type: null,
      "default": null
    },
    moveTopButtonProps: {
      type: null,
      "default": null
    },
    moveDownButtonProps: {
      type: null,
      "default": null
    },
    moveBottomButtonProps: {
      type: null,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: OrderListStyle,
  provide: /* @__PURE__ */ __name(function provide35() {
    return {
      $pcOrderList: this,
      $parentInstance: this
    };
  }, "provide")
};
function _toConsumableArray$5(r) {
  return _arrayWithoutHoles$5(r) || _iterableToArray$5(r) || _unsupportedIterableToArray$6(r) || _nonIterableSpread$5();
}
__name(_toConsumableArray$5, "_toConsumableArray$5");
function _nonIterableSpread$5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$5, "_nonIterableSpread$5");
function _unsupportedIterableToArray$6(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$6(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$6(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$6, "_unsupportedIterableToArray$6");
function _iterableToArray$5(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$5, "_iterableToArray$5");
function _arrayWithoutHoles$5(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$6(r);
}
__name(_arrayWithoutHoles$5, "_arrayWithoutHoles$5");
function _arrayLikeToArray$6(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$6, "_arrayLikeToArray$6");
var script$s = {
  name: "OrderList",
  "extends": script$1$g,
  inheritAttrs: false,
  emits: ["update:modelValue", "reorder", "update:selection", "selection-change", "focus", "blur"],
  itemTouched: false,
  reorderDirection: null,
  styleElement: null,
  list: null,
  data: /* @__PURE__ */ __name(function data23() {
    return {
      id: this.$attrs.id,
      d_selection: this.selection
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId8(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId")
  },
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount11() {
    this.destroyStyle();
  }, "beforeUnmount"),
  updated: /* @__PURE__ */ __name(function updated6() {
    if (this.reorderDirection) {
      this.updateListScroll();
      this.reorderDirection = null;
    }
  }, "updated"),
  mounted: /* @__PURE__ */ __name(function mounted24() {
    this.id = this.id || UniqueComponentId();
    if (this.responsive) {
      this.createStyle();
    }
  }, "mounted"),
  methods: {
    updateSelection: /* @__PURE__ */ __name(function updateSelection(event2) {
      this.$emit("update:selection", this.d_selection);
      this.$emit("selection-change", {
        originalEvent: event2,
        value: this.d_selection
      });
    }, "updateSelection"),
    onChangeSelection: /* @__PURE__ */ __name(function onChangeSelection(params) {
      this.d_selection = params.value;
      this.updateSelection(params.event);
    }, "onChangeSelection"),
    onListFocus: /* @__PURE__ */ __name(function onListFocus3(event2) {
      this.$emit("focus", event2);
    }, "onListFocus"),
    onListBlur: /* @__PURE__ */ __name(function onListBlur3(event2) {
      this.$emit("blur", event2);
    }, "onListBlur"),
    onReorderUpdate: /* @__PURE__ */ __name(function onReorderUpdate(event2, value2) {
      this.$emit("update:modelValue", value2);
      this.$emit("reorder", {
        originalEvent: event2,
        value: value2,
        direction: this.reorderDirection
      });
    }, "onReorderUpdate"),
    moveUp: /* @__PURE__ */ __name(function moveUp(event2) {
      if (this.d_selection) {
        var value2 = _toConsumableArray$5(this.modelValue);
        for (var i = 0; i < this.d_selection.length; i++) {
          var selectedItem = this.d_selection[i];
          var selectedItemIndex = findIndexInList(selectedItem, value2);
          if (selectedItemIndex !== 0) {
            var movedItem = value2[selectedItemIndex];
            var temp = value2[selectedItemIndex - 1];
            value2[selectedItemIndex - 1] = movedItem;
            value2[selectedItemIndex] = temp;
          } else {
            break;
          }
        }
        this.reorderDirection = "up";
        this.onReorderUpdate(event2, value2);
      }
    }, "moveUp"),
    moveTop: /* @__PURE__ */ __name(function moveTop(event2) {
      if (this.d_selection) {
        var value2 = _toConsumableArray$5(this.modelValue);
        for (var i = 0; i < this.d_selection.length; i++) {
          var selectedItem = this.d_selection[i];
          var selectedItemIndex = findIndexInList(selectedItem, value2);
          if (selectedItemIndex !== 0) {
            var movedItem = value2.splice(selectedItemIndex, 1)[0];
            value2.unshift(movedItem);
          } else {
            break;
          }
        }
        this.reorderDirection = "top";
        this.onReorderUpdate(event2, value2);
      }
    }, "moveTop"),
    moveDown: /* @__PURE__ */ __name(function moveDown(event2) {
      if (this.d_selection) {
        var value2 = _toConsumableArray$5(this.modelValue);
        for (var i = this.d_selection.length - 1; i >= 0; i--) {
          var selectedItem = this.d_selection[i];
          var selectedItemIndex = findIndexInList(selectedItem, value2);
          if (selectedItemIndex !== value2.length - 1) {
            var movedItem = value2[selectedItemIndex];
            var temp = value2[selectedItemIndex + 1];
            value2[selectedItemIndex + 1] = movedItem;
            value2[selectedItemIndex] = temp;
          } else {
            break;
          }
        }
        this.reorderDirection = "down";
        this.onReorderUpdate(event2, value2);
      }
    }, "moveDown"),
    moveBottom: /* @__PURE__ */ __name(function moveBottom(event2) {
      if (this.d_selection) {
        var value2 = _toConsumableArray$5(this.modelValue);
        for (var i = this.d_selection.length - 1; i >= 0; i--) {
          var selectedItem = this.d_selection[i];
          var selectedItemIndex = findIndexInList(selectedItem, value2);
          if (selectedItemIndex !== value2.length - 1) {
            var movedItem = value2.splice(selectedItemIndex, 1)[0];
            value2.push(movedItem);
          } else {
            break;
          }
        }
        this.reorderDirection = "bottom";
        this.onReorderUpdate(event2, value2);
      }
    }, "moveBottom"),
    updateListScroll: /* @__PURE__ */ __name(function updateListScroll() {
      this.list = findSingle(this.$refs.listbox.$el, '[data-pc-section="list"]');
      var listItems = find(this.list, '[data-pc-section="item"][data-p-selected="true"]');
      if (listItems && listItems.length) {
        switch (this.reorderDirection) {
          case "up":
            scrollInView(this.list, listItems[0]);
            break;
          case "top":
            this.list.scrollTop = 0;
            break;
          case "down":
            scrollInView(this.list, listItems[listItems.length - 1]);
            break;
          case "bottom":
            this.list.scrollTop = this.list.scrollHeight;
            break;
        }
      }
    }, "updateListScroll"),
    createStyle: /* @__PURE__ */ __name(function createStyle() {
      if (!this.styleElement && !this.isUnstyled) {
        var _this$$primevue;
        this.styleElement = document.createElement("style");
        this.styleElement.type = "text/css";
        setAttribute(this.styleElement, "nonce", (_this$$primevue = this.$primevue) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.config) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.csp) === null || _this$$primevue === void 0 ? void 0 : _this$$primevue.nonce);
        document.head.appendChild(this.styleElement);
        var innerHTML = "\n@media screen and (max-width: ".concat(this.breakpoint, ") {\n    .p-orderlist[").concat(this.$attrSelector, "] {\n        flex-direction: column;\n    }\n\n    .p-orderlist[").concat(this.$attrSelector, "] .p-orderlist-controls {\n        flex-direction: row;\n    }\n}\n");
        this.styleElement.innerHTML = innerHTML;
      }
    }, "createStyle"),
    destroyStyle: /* @__PURE__ */ __name(function destroyStyle() {
      if (this.styleElement) {
        document.head.removeChild(this.styleElement);
        this.styleElement = null;
      }
    }, "destroyStyle"),
    moveDisabled: /* @__PURE__ */ __name(function moveDisabled() {
      return this.disabled ? true : !this.d_selection || !this.d_selection.length ? true : false;
    }, "moveDisabled")
  },
  computed: {
    moveUpAriaLabel: /* @__PURE__ */ __name(function moveUpAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveUp : void 0;
    }, "moveUpAriaLabel"),
    moveTopAriaLabel: /* @__PURE__ */ __name(function moveTopAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveTop : void 0;
    }, "moveTopAriaLabel"),
    moveDownAriaLabel: /* @__PURE__ */ __name(function moveDownAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveDown : void 0;
    }, "moveDownAriaLabel"),
    moveBottomAriaLabel: /* @__PURE__ */ __name(function moveBottomAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveBottom : void 0;
    }, "moveBottomAriaLabel"),
    hasSelectedOption: /* @__PURE__ */ __name(function hasSelectedOption3() {
      return isNotEmpty(this.d_selection);
    }, "hasSelectedOption")
  },
  components: {
    Listbox: script$1O,
    Button: script$1e,
    AngleUpIcon: script$1P,
    AngleDownIcon: script$1H,
    AngleDoubleUpIcon: script$t,
    AngleDoubleDownIcon: script$u
  },
  directives: {
    ripple: Ripple
  }
};
function _typeof$d(o) {
  "@babel/helpers - typeof";
  return _typeof$d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$d(o);
}
__name(_typeof$d, "_typeof$d");
function ownKeys$c(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$c, "ownKeys$c");
function _objectSpread$c(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$c(Object(t2), true).forEach(function(r2) {
      _defineProperty$d(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$c(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$c, "_objectSpread$c");
function _defineProperty$d(e, r, t2) {
  return (r = _toPropertyKey$d(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$d, "_defineProperty$d");
function _toPropertyKey$d(t2) {
  var i = _toPrimitive$d(t2, "string");
  return "symbol" == _typeof$d(i) ? i : i + "";
}
__name(_toPropertyKey$d, "_toPropertyKey$d");
function _toPrimitive$d(t2, r) {
  if ("object" != _typeof$d(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$d(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$d, "_toPrimitive$d");
function render$o(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_AngleUpIcon = resolveComponent("AngleUpIcon");
  var _component_Button = resolveComponent("Button");
  var _component_AngleDoubleUpIcon = resolveComponent("AngleDoubleUpIcon");
  var _component_AngleDownIcon = resolveComponent("AngleDownIcon");
  var _component_AngleDoubleDownIcon = resolveComponent("AngleDoubleDownIcon");
  var _component_Listbox = resolveComponent("Listbox");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("controls")
  }, _ctx.ptm("controls")), [renderSlot(_ctx.$slots, "controlsstart"), createVNode(_component_Button, mergeProps({
    onClick: $options.moveUp,
    "aria-label": $options.moveUpAriaLabel,
    disabled: $options.moveDisabled()
  }, _objectSpread$c(_objectSpread$c({}, _ctx.buttonProps), _ctx.moveUpButtonProps), {
    pt: _ctx.ptm("pcMoveUpButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "moveupicon", {}, function() {
        return [createVNode(_component_AngleUpIcon, mergeProps(_ctx.ptm("pcMoveUpButton")["icon"], {
          "data-pc-section": "moveupicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["onClick", "aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    onClick: $options.moveTop,
    "aria-label": $options.moveTopAriaLabel,
    disabled: $options.moveDisabled()
  }, _objectSpread$c(_objectSpread$c({}, _ctx.buttonProps), _ctx.moveTopButtonProps), {
    pt: _ctx.ptm("pcMoveTopButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movetopicon", {}, function() {
        return [createVNode(_component_AngleDoubleUpIcon, mergeProps(_ctx.ptm("pcMoveTopButton")["icon"], {
          "data-pc-section": "movetopicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["onClick", "aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    onClick: $options.moveDown,
    "aria-label": $options.moveDownAriaLabel,
    disabled: $options.moveDisabled()
  }, _objectSpread$c(_objectSpread$c({}, _ctx.buttonProps), _ctx.moveDownButtonProps), {
    pt: _ctx.ptm("pcMoveDownButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movedownicon", {}, function() {
        return [createVNode(_component_AngleDownIcon, mergeProps(_ctx.ptm("pcMoveDownButton")["icon"], {
          "data-pc-section": "movedownicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["onClick", "aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    onClick: $options.moveBottom,
    "aria-label": $options.moveBottomAriaLabel,
    disabled: $options.moveDisabled()
  }, _objectSpread$c(_objectSpread$c({}, _ctx.buttonProps), _ctx.moveBottomButtonProps), {
    pt: _ctx.ptm("pcMoveBottomButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movebottomicon", {}, function() {
        return [createVNode(_component_AngleDoubleDownIcon, mergeProps(_ctx.ptm("pcMoveBottomButton")["icon"], {
          "data-pc-section": "movebottomicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["onClick", "aria-label", "disabled", "pt", "unstyled"]), renderSlot(_ctx.$slots, "controlsend")], 16), createVNode(_component_Listbox, {
    ref: "listbox",
    id: $data.id,
    modelValue: $data.d_selection,
    options: _ctx.modelValue,
    multiple: "",
    metaKeySelection: _ctx.metaKeySelection,
    listStyle: _ctx.listStyle,
    scrollHeight: _ctx.scrollHeight,
    tabindex: _ctx.tabindex,
    dataKey: _ctx.dataKey,
    autoOptionFocus: _ctx.autoOptionFocus,
    focusOnHover: _ctx.focusOnHover,
    striped: _ctx.striped,
    disabled: _ctx.disabled,
    ariaLabel: _ctx.ariaLabel,
    ariaLabelledby: _ctx.ariaLabelledby,
    pt: _ctx.ptm("pcListbox"),
    unstyled: _ctx.unstyled,
    onFocus: $options.onListFocus,
    onBlur: $options.onListBlur,
    onChange: $options.onChangeSelection
  }, createSlots({
    option: withCtx(function(_ref) {
      var option4 = _ref.option, selected3 = _ref.selected, index = _ref.index;
      return [renderSlot(_ctx.$slots, _ctx.$slots.option ? "option" : "item", {
        item: option4,
        option: option4,
        selected: selected3,
        index
      })];
    }),
    _: 2
  }, [_ctx.$slots.header ? {
    name: "header",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "header")];
    }),
    key: "0"
  } : void 0]), 1032, ["id", "modelValue", "options", "metaKeySelection", "listStyle", "scrollHeight", "tabindex", "dataKey", "autoOptionFocus", "focusOnHover", "striped", "disabled", "ariaLabel", "ariaLabelledby", "pt", "unstyled", "onFocus", "onBlur", "onChange"])], 16);
}
__name(render$o, "render$o");
script$s.render = render$o;
var theme$e = /* @__PURE__ */ __name(function theme26(_ref) {
  var dt = _ref.dt;
  return "\n.p-organizationchart-table {\n    border-spacing: 0;\n    border-collapse: separate;\n    margin: 0 auto;\n}\n\n.p-organizationchart-table > tbody > tr > td {\n    text-align: center;\n    vertical-align: top;\n    padding: 0 ".concat(dt("organizationchart.gutter"), ";\n}\n\n.p-organizationchart-node {\n    display: inline-block;\n    position: relative;\n    border: 1px solid ").concat(dt("organizationchart.node.border.color"), ";\n    background: ").concat(dt("organizationchart.node.background"), ";\n    color: ").concat(dt("organizationchart.node.color"), ";\n    padding: ").concat(dt("organizationchart.node.padding"), ";\n    border-radius: ").concat(dt("organizationchart.node.border.radius"), ";\n    transition: background ").concat(dt("organizationchart.transition.duration"), ", border-color ").concat(dt("organizationchart.transition.duration"), ", color ").concat(dt("organizationchart.transition.duration"), ", box-shadow ").concat(dt("organizationchart.transition.duration"), ";\n}\n\n.p-organizationchart-node:has(.p-organizationchart-node-toggle-button) {\n    padding: ").concat(dt("organizationchart.node.toggleable.padding"), ";\n}\n\n.p-organizationchart-node.p-organizationchart-node-selectable:not(.p-organizationchart-node-selected):hover {\n    background: ").concat(dt("organizationchart.node.hover.background"), ";\n    color: ").concat(dt("organizationchart.node.hover.color"), ";\n}\n\n.p-organizationchart-node-selected {\n    background: ").concat(dt("organizationchart.node.selected.background"), ";\n    color: ").concat(dt("organizationchart.node.selected.color"), ";\n}\n\n.p-organizationchart-node-toggle-button {\n    position: absolute;\n    inset-block-end: calc(-1 * calc(").concat(dt("organizationchart.node.toggle.button.size"), " / 2));\n    margin-inline-start: calc(-1 * calc(").concat(dt("organizationchart.node.toggle.button.size"), " / 2));\n    z-index: 2;\n    inset-inline-start: 50%;\n    user-select: none;\n    cursor: pointer;\n    width: ").concat(dt("organizationchart.node.toggle.button.size"), ";\n    height: ").concat(dt("organizationchart.node.toggle.button.size"), ";\n    text-decoration: none;\n    background: ").concat(dt("organizationchart.node.toggle.button.background"), ";\n    color: ").concat(dt("organizationchart.node.toggle.button.color"), ";\n    border-radius: ").concat(dt("organizationchart.node.toggle.button.border.radius"), ";\n    border: 1px solid ").concat(dt("organizationchart.node.toggle.button.border.color"), ";\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    outline-color: transparent;\n    transition: background ").concat(dt("organizationchart.transition.duration"), ", color ").concat(dt("organizationchart.transition.duration"), ", border-color ").concat(dt("organizationchart.transition.duration"), ", outline-color ").concat(dt("organizationchart.transition.duration"), ", box-shadow ").concat(dt("organizationchart.transition.duration"), ";\n}\n\n.p-organizationchart-node-toggle-button:hover {\n    background: ").concat(dt("organizationchart.node.toggle.button.hover.background"), ";\n    color: ").concat(dt("organizationchart.node.toggle.button.hover.color"), ";\n}\n\n.p-organizationchart-node-toggle-button:focus-visible {\n    box-shadow: ").concat(dt("breadcrumb.item.focus.ring.shadow"), ";\n    outline: ").concat(dt("breadcrumb.item.focus.ring.width"), " ").concat(dt("breadcrumb.item.focus.ring.style"), " ").concat(dt("breadcrumb.item.focus.ring.color"), ";\n    outline-offset: ").concat(dt("breadcrumb.item.focus.ring.offset"), ";\n}\n\n.p-organizationchart-node-toggle-button-icon {\n    position: relative;\n    inset-block-start: 1px;\n}\n\n.p-organizationchart-connector-down {\n    margin: 0 auto;\n    height: ").concat(dt("organizationchart.connector.height"), ";\n    width: 1px;\n    background: ").concat(dt("organizationchart.connector.color"), ";\n}\n\n.p-organizationchart-connector-right {\n    border-radius: 0;\n}\n\n.p-organizationchart-connector-left {\n    border-radius: 0;\n    border-inline-end: 1px solid ").concat(dt("organizationchart.connector.color"), ";\n}\n\n.p-organizationchart-connector-top {\n    border-block-start: 1px solid ").concat(dt("organizationchart.connector.color"), ";\n}\n\n.p-organizationchart-node-selectable {\n    cursor: pointer;\n}\n\n.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-left) {\n    border-inline-end: 0 none;\n}\n\n.p-organizationchart-connectors :nth-last-child(1 of .p-organizationchart-connector-left) {\n    border-start-end-radius: ").concat(dt("organizationchart.connector.border.radius"), ";\n}\n\n.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-right) {\n    border-inline-start: 1px solid ").concat(dt("organizationchart.connector.color"), ";\n    border-start-start-radius: ").concat(dt("organizationchart.connector.border.radius"), ";\n}\n");
}, "theme");
var classes$f = {
  root: "p-organizationchart p-component",
  table: "p-organizationchart-table",
  node: /* @__PURE__ */ __name(function node(_ref2) {
    var instance = _ref2.instance;
    return ["p-organizationchart-node", {
      "p-organizationchart-node-selectable": instance.selectable,
      "p-organizationchart-node-selected": instance.selected
    }];
  }, "node"),
  nodeToggleButton: "p-organizationchart-node-toggle-button",
  nodeToggleButtonIcon: "p-organizationchart-node-toggle-button-icon",
  connectors: "p-organizationchart-connectors",
  connectorDown: "p-organizationchart-connector-down",
  connectorLeft: /* @__PURE__ */ __name(function connectorLeft(_ref3) {
    var index = _ref3.index;
    return ["p-organizationchart-connector-left", {
      "p-organizationchart-connector-top": !(index === 0)
    }];
  }, "connectorLeft"),
  connectorRight: /* @__PURE__ */ __name(function connectorRight(_ref4) {
    var props = _ref4.props, index = _ref4.index;
    return ["p-organizationchart-connector-right", {
      "p-organizationchart-connector-top": !(index === props.node.children.length - 1)
    }];
  }, "connectorRight"),
  nodeChildren: "p-organizationchart-node-children"
};
var OrganizationChartStyle = BaseStyle.extend({
  name: "organizationchart",
  theme: theme$e,
  classes: classes$f
});
var script$2$2 = {
  name: "BaseOrganizationChart",
  "extends": script$1d,
  props: {
    value: {
      type: null,
      "default": null
    },
    selectionKeys: {
      type: null,
      "default": null
    },
    selectionMode: {
      type: String,
      "default": null
    },
    collapsible: {
      type: Boolean,
      "default": false
    },
    collapsedKeys: {
      type: null,
      "default": null
    }
  },
  style: OrganizationChartStyle,
  provide: /* @__PURE__ */ __name(function provide36() {
    return {
      $pcOrganizationChart: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$1$f = {
  name: "OrganizationChartNode",
  hostName: "OrganizationChart",
  "extends": script$1d,
  emits: ["node-click", "node-toggle"],
  props: {
    node: {
      type: null,
      "default": null
    },
    templates: {
      type: null,
      "default": null
    },
    collapsible: {
      type: Boolean,
      "default": false
    },
    collapsedKeys: {
      type: null,
      "default": null
    },
    selectionKeys: {
      type: null,
      "default": null
    },
    selectionMode: {
      type: String,
      "default": null
    }
  },
  methods: {
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions6(key) {
      return this.ptm(key, {
        context: {
          expanded: this.expanded,
          selectable: this.selectable,
          selected: this.selected,
          toggleable: this.toggleable,
          active: this.selected
        }
      });
    }, "getPTOptions"),
    getNodeOptions: /* @__PURE__ */ __name(function getNodeOptions(lineTop, key) {
      return this.ptm(key, {
        context: {
          lineTop
        }
      });
    }, "getNodeOptions"),
    onNodeClick: /* @__PURE__ */ __name(function onNodeClick(event2) {
      if (isAttributeEquals(event2.target, "data-pc-section", "nodetogglebutton") || isAttributeEquals(event2.target, "data-pc-section", "nodetogglebuttonicon")) {
        return;
      }
      if (this.selectionMode) {
        this.$emit("node-click", this.node);
      }
    }, "onNodeClick"),
    onChildNodeClick: /* @__PURE__ */ __name(function onChildNodeClick(node2) {
      this.$emit("node-click", node2);
    }, "onChildNodeClick"),
    toggleNode: /* @__PURE__ */ __name(function toggleNode() {
      this.$emit("node-toggle", this.node);
    }, "toggleNode"),
    onChildNodeToggle: /* @__PURE__ */ __name(function onChildNodeToggle(node2) {
      this.$emit("node-toggle", node2);
    }, "onChildNodeToggle"),
    onKeydown: /* @__PURE__ */ __name(function onKeydown4(event2) {
      if (event2.code === "Enter" || event2.code === "NumpadEnter" || event2.code === "Space") {
        this.toggleNode();
        event2.preventDefault();
      }
    }, "onKeydown")
  },
  computed: {
    leaf: /* @__PURE__ */ __name(function leaf() {
      return this.node.leaf === false ? false : !(this.node.children && this.node.children.length);
    }, "leaf"),
    colspan: /* @__PURE__ */ __name(function colspan() {
      return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;
    }, "colspan"),
    childStyle: /* @__PURE__ */ __name(function childStyle() {
      return {
        visibility: !this.leaf && this.expanded ? "inherit" : "hidden"
      };
    }, "childStyle"),
    expanded: /* @__PURE__ */ __name(function expanded() {
      return this.collapsedKeys[this.node.key] === void 0;
    }, "expanded"),
    selectable: /* @__PURE__ */ __name(function selectable() {
      return this.selectionMode && this.node.selectable !== false;
    }, "selectable"),
    selected: /* @__PURE__ */ __name(function selected() {
      return this.selectable && this.selectionKeys && this.selectionKeys[this.node.key] === true;
    }, "selected"),
    toggleable: /* @__PURE__ */ __name(function toggleable() {
      return this.collapsible && this.node.collapsible !== false && !this.leaf;
    }, "toggleable")
  },
  components: {
    ChevronDownIcon: script$1k,
    ChevronUpIcon: script$1j
  }
};
var _hoisted_1$e = ["colspan"];
var _hoisted_2$a = ["colspan"];
var _hoisted_3$7 = ["colspan"];
function render$1$2(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_OrganizationChartNode = resolveComponent("OrganizationChartNode", true);
  return openBlock(), createElementBlock("table", mergeProps({
    "class": _ctx.cx("table")
  }, _ctx.ptm("table")), [createBaseVNode("tbody", normalizeProps(guardReactiveProps(_ctx.ptm("body"))), [$props.node ? (openBlock(), createElementBlock("tr", normalizeProps(mergeProps({
    key: 0
  }, _ctx.ptm("row"))), [createBaseVNode("td", mergeProps({
    colspan: $options.colspan
  }, _ctx.ptm("cell")), [createBaseVNode("div", mergeProps({
    "class": [_ctx.cx("node"), $props.node.styleClass],
    onClick: _cache[2] || (_cache[2] = function() {
      return $options.onNodeClick && $options.onNodeClick.apply($options, arguments);
    })
  }, $options.getPTOptions("node")), [(openBlock(), createBlock(resolveDynamicComponent($props.templates[$props.node.type] || $props.templates["default"]), {
    node: $props.node
  }, null, 8, ["node"])), $options.toggleable ? (openBlock(), createElementBlock("a", mergeProps({
    key: 0,
    tabindex: "0",
    "class": _ctx.cx("nodeToggleButton"),
    onClick: _cache[0] || (_cache[0] = function() {
      return $options.toggleNode && $options.toggleNode.apply($options, arguments);
    }),
    onKeydown: _cache[1] || (_cache[1] = function() {
      return $options.onKeydown && $options.onKeydown.apply($options, arguments);
    })
  }, $options.getPTOptions("nodeToggleButton")), [$props.templates.toggleicon || $props.templates.togglericon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.toggleicon || $props.templates.togglericon), mergeProps({
    key: 0,
    expanded: $options.expanded,
    "class": _ctx.cx("nodeToggleButtonIcon")
  }, $options.getPTOptions("nodeToggleButtonIcon")), null, 16, ["expanded", "class"])) : (openBlock(), createBlock(resolveDynamicComponent($options.expanded ? "ChevronDownIcon" : "ChevronUpIcon"), mergeProps({
    key: 1,
    "class": _ctx.cx("nodeToggleButtonIcon")
  }, $options.getPTOptions("nodeToggleButtonIcon")), null, 16, ["class"]))], 16)) : createCommentVNode("", true)], 16)], 16, _hoisted_1$e)], 16)) : createCommentVNode("", true), createBaseVNode("tr", mergeProps({
    style: $options.childStyle,
    "class": _ctx.cx("connectors")
  }, _ctx.ptm("connectors")), [createBaseVNode("td", mergeProps({
    colspan: $options.colspan
  }, _ctx.ptm("lineCell")), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("connectorDown")
  }, _ctx.ptm("connectorDown")), null, 16)], 16, _hoisted_2$a)], 16), createBaseVNode("tr", mergeProps({
    style: $options.childStyle,
    "class": _ctx.cx("connectors")
  }, _ctx.ptm("connectors")), [$props.node.children && $props.node.children.length === 1 ? (openBlock(), createElementBlock("td", mergeProps({
    key: 0,
    colspan: $options.colspan
  }, _ctx.ptm("lineCell")), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("connectorDown")
  }, _ctx.ptm("connectorDown")), null, 16)], 16, _hoisted_3$7)) : createCommentVNode("", true), $props.node.children && $props.node.children.length > 1 ? (openBlock(true), createElementBlock(Fragment, {
    key: 1
  }, renderList($props.node.children, function(child, i) {
    return openBlock(), createElementBlock(Fragment, {
      key: child.key
    }, [createBaseVNode("td", mergeProps({
      "class": _ctx.cx("connectorLeft", {
        index: i
      }),
      ref_for: true
    }, $options.getNodeOptions(!(i === 0), "connectorLeft")), " ", 16), createBaseVNode("td", mergeProps({
      "class": _ctx.cx("connectorRight", {
        index: i
      }),
      ref_for: true
    }, $options.getNodeOptions(!(i === $props.node.children.length - 1), "connectorRight")), " ", 16)], 64);
  }), 128)) : createCommentVNode("", true)], 16), createBaseVNode("tr", mergeProps({
    style: $options.childStyle,
    "class": _ctx.cx("nodeChildren")
  }, _ctx.ptm("nodeChildren")), [(openBlock(true), createElementBlock(Fragment, null, renderList($props.node.children, function(child) {
    return openBlock(), createElementBlock("td", mergeProps({
      key: child.key,
      colspan: "2",
      ref_for: true
    }, _ctx.ptm("nodeCell")), [createVNode(_component_OrganizationChartNode, {
      node: child,
      templates: $props.templates,
      collapsedKeys: $props.collapsedKeys,
      onNodeToggle: $options.onChildNodeToggle,
      collapsible: $props.collapsible,
      selectionMode: $props.selectionMode,
      selectionKeys: $props.selectionKeys,
      onNodeClick: $options.onChildNodeClick,
      pt: _ctx.pt,
      unstyled: _ctx.unstyled
    }, null, 8, ["node", "templates", "collapsedKeys", "onNodeToggle", "collapsible", "selectionMode", "selectionKeys", "onNodeClick", "pt", "unstyled"])], 16);
  }), 128))], 16)], 16)], 16);
}
__name(render$1$2, "render$1$2");
script$1$f.render = render$1$2;
function _typeof$c(o) {
  "@babel/helpers - typeof";
  return _typeof$c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$c(o);
}
__name(_typeof$c, "_typeof$c");
function ownKeys$b(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$b, "ownKeys$b");
function _objectSpread$b(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$b(Object(t2), true).forEach(function(r2) {
      _defineProperty$c(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$b(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$b, "_objectSpread$b");
function _defineProperty$c(e, r, t2) {
  return (r = _toPropertyKey$c(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$c, "_defineProperty$c");
function _toPropertyKey$c(t2) {
  var i = _toPrimitive$c(t2, "string");
  return "symbol" == _typeof$c(i) ? i : i + "";
}
__name(_toPropertyKey$c, "_toPropertyKey$c");
function _toPrimitive$c(t2, r) {
  if ("object" != _typeof$c(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$c(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$c, "_toPrimitive$c");
var script$r = {
  name: "OrganizationChart",
  "extends": script$2$2,
  inheritAttrs: false,
  emits: ["node-unselect", "node-select", "update:selectionKeys", "node-expand", "node-collapse", "update:collapsedKeys"],
  data: /* @__PURE__ */ __name(function data24() {
    return {
      d_collapsedKeys: this.collapsedKeys || {}
    };
  }, "data"),
  watch: {
    collapsedKeys: /* @__PURE__ */ __name(function collapsedKeys(newValue) {
      this.d_collapsedKeys = newValue;
    }, "collapsedKeys")
  },
  methods: {
    onNodeClick: /* @__PURE__ */ __name(function onNodeClick2(node2) {
      var key = node2.key;
      if (this.selectionMode) {
        var _selectionKeys = this.selectionKeys ? _objectSpread$b({}, this.selectionKeys) : {};
        if (_selectionKeys[key]) {
          delete _selectionKeys[key];
          this.$emit("node-unselect", node2);
        } else {
          if (this.selectionMode === "single") {
            _selectionKeys = {};
          }
          _selectionKeys[key] = true;
          this.$emit("node-select", node2);
        }
        this.$emit("update:selectionKeys", _selectionKeys);
      }
    }, "onNodeClick"),
    onNodeToggle: /* @__PURE__ */ __name(function onNodeToggle(node2) {
      var key = node2.key;
      if (this.d_collapsedKeys[key]) {
        delete this.d_collapsedKeys[key];
        this.$emit("node-expand", node2);
      } else {
        this.d_collapsedKeys[key] = true;
        this.$emit("node-collapse", node2);
      }
      this.d_collapsedKeys = _objectSpread$b({}, this.d_collapsedKeys);
      this.$emit("update:collapsedKeys", this.d_collapsedKeys);
    }, "onNodeToggle")
  },
  components: {
    OrganizationChartNode: script$1$f
  }
};
function render$n(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_OrganizationChartNode = resolveComponent("OrganizationChartNode");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createVNode(_component_OrganizationChartNode, {
    node: _ctx.value,
    templates: _ctx.$slots,
    onNodeToggle: $options.onNodeToggle,
    collapsedKeys: $data.d_collapsedKeys,
    collapsible: _ctx.collapsible,
    onNodeClick: $options.onNodeClick,
    selectionMode: _ctx.selectionMode,
    selectionKeys: _ctx.selectionKeys,
    pt: _ctx.pt,
    unstyled: _ctx.unstyled
  }, null, 8, ["node", "templates", "onNodeToggle", "collapsedKeys", "collapsible", "onNodeClick", "selectionMode", "selectionKeys", "pt", "unstyled"])], 16);
}
__name(render$n, "render$n");
script$r.render = render$n;
var script$q = {
  name: "OverlayPanel",
  "extends": script$1Q,
  mounted: /* @__PURE__ */ __name(function mounted25() {
    console.warn("Deprecated since v4. Use Popover component instead.");
  }, "mounted")
};
var OverlayPanelStyle = BaseStyle.extend({
  name: "overlaypanel"
});
var theme$d = /* @__PURE__ */ __name(function theme27(_ref) {
  var dt = _ref.dt;
  return "\n.p-panelmenu {\n    display: flex;\n    flex-direction: column;\n    gap: ".concat(dt("panelmenu.gap"), ";\n}\n\n.p-panelmenu-panel {\n    background: ").concat(dt("panelmenu.panel.background"), ";\n    border-width: ").concat(dt("panelmenu.panel.border.width"), ";\n    border-style: solid;\n    border-color: ").concat(dt("panelmenu.panel.border.color"), ";\n    color: ").concat(dt("panelmenu.panel.color"), ";\n    border-radius: ").concat(dt("panelmenu.panel.border.radius"), ";\n    padding: ").concat(dt("panelmenu.panel.padding"), ";\n}\n\n.p-panelmenu-panel:first-child {\n    border-width: ").concat(dt("panelmenu.panel.first.border.width"), ";\n    border-start-start-radius: ").concat(dt("panelmenu.panel.first.top.border.radius"), ";\n    border-start-end-radius: ").concat(dt("panelmenu.panel.first.top.border.radius"), ";\n}\n\n.p-panelmenu-panel:last-child {\n    border-width: ").concat(dt("panelmenu.panel.last.border.width"), ";\n    border-end-start-radius: ").concat(dt("panelmenu.panel.last.bottom.border.radius"), ";\n    border-end-end-radius: ").concat(dt("panelmenu.panel.last.bottom.border.radius"), ";\n}\n\n.p-panelmenu-header {\n    outline: 0 none;\n}\n\n.p-panelmenu-header-content {\n    border-radius: ").concat(dt("panelmenu.item.border.radius"), ";\n    transition: background ").concat(dt("panelmenu.transition.duration"), ", color ").concat(dt("panelmenu.transition.duration"), ", outline-color ").concat(dt("panelmenu.transition.duration"), ", box-shadow ").concat(dt("panelmenu.transition.duration"), ";\n    outline-color: transparent;\n    color: ").concat(dt("panelmenu.item.color"), ";\n}\n\n.p-panelmenu-header-link {\n    display: flex;\n    gap: ").concat(dt("panelmenu.item.gap"), ";\n    padding: ").concat(dt("panelmenu.item.padding"), ";\n    align-items: center;\n    user-select: none;\n    cursor: pointer;\n    position: relative;\n    text-decoration: none;\n    color: inherit;\n}\n\n.p-panelmenu-header-icon,\n.p-panelmenu-item-icon {\n    color: ").concat(dt("panelmenu.item.icon.color"), ";\n}\n\n.p-panelmenu-submenu-icon {\n    color: ").concat(dt("panelmenu.submenu.icon.color"), ";\n}\n\n.p-panelmenu-submenu-icon:dir(rtl) {\n    transform: rotate(180deg);\n}\n\n.p-panelmenu-header:not(.p-disabled):focus-visible .p-panelmenu-header-content {\n    background: ").concat(dt("panelmenu.item.focus.background"), ";\n    color: ").concat(dt("panelmenu.item.focus.color"), ";\n}\n\n.p-panelmenu-header:not(.p-disabled):focus-visible .p-panelmenu-header-content .p-panelmenu-header-icon {\n    color: ").concat(dt("panelmenu.item.icon.focus.color"), ";\n}\n\n.p-panelmenu-header:not(.p-disabled):focus-visible .p-panelmenu-header-content .p-panelmenu-submenu-icon {\n    color: ").concat(dt("panelmenu.submenu.icon.focus.color"), ";\n}\n\n.p-panelmenu-header:not(.p-disabled) .p-panelmenu-header-content:hover {\n    background: ").concat(dt("panelmenu.item.focus.background"), ";\n    color: ").concat(dt("panelmenu.item.focus.color"), ";\n}\n\n.p-panelmenu-header:not(.p-disabled) .p-panelmenu-header-content:hover .p-panelmenu-header-icon {\n    color: ").concat(dt("panelmenu.item.icon.focus.color"), ";\n}\n\n.p-panelmenu-header:not(.p-disabled) .p-panelmenu-header-content:hover .p-panelmenu-submenu-icon {\n    color: ").concat(dt("panelmenu.submenu.icon.focus.color"), ";\n}\n\n.p-panelmenu-submenu {\n    margin: 0;\n    padding: 0 0 0 ").concat(dt("panelmenu.submenu.indent"), ";\n    outline: 0;\n    list-style: none;\n}\n\n.p-panelmenu-submenu:dir(rtl) {\n    padding: 0 ").concat(dt("panelmenu.submenu.indent"), " 0 0;\n}\n\n.p-panelmenu-item-link {\n    display: flex;\n    gap: ").concat(dt("panelmenu.item.gap"), ";\n    padding: ").concat(dt("panelmenu.item.padding"), ";\n    align-items: center;\n    user-select: none;\n    cursor: pointer;\n    text-decoration: none;\n    color: inherit;\n    position: relative;\n    overflow: hidden;\n}\n\n.p-panelmenu-item-label {\n    line-height: 1;\n}\n\n.p-panelmenu-item-content {\n    border-radius: ").concat(dt("panelmenu.item.border.radius"), ";\n    transition: background ").concat(dt("panelmenu.transition.duration"), ", color ").concat(dt("panelmenu.transition.duration"), ", outline-color ").concat(dt("panelmenu.transition.duration"), ", box-shadow ").concat(dt("panelmenu.transition.duration"), ";\n    color: ").concat(dt("panelmenu.item.color"), ";\n    outline-color: transparent;\n}\n\n.p-panelmenu-item.p-focus > .p-panelmenu-item-content {\n    background: ").concat(dt("panelmenu.item.focus.background"), ";\n    color: ").concat(dt("panelmenu.item.focus.color"), ";\n}\n\n.p-panelmenu-item.p-focus > .p-panelmenu-item-content .p-panelmenu-item-icon {\n    color: ").concat(dt("panelmenu.item.focus.color"), ";\n}\n\n.p-panelmenu-item.p-focus > .p-panelmenu-item-content .p-panelmenu-submenu-icon {\n    color: ").concat(dt("panelmenu.submenu.icon.focus.color"), ";\n}\n\n.p-panelmenu-item:not(.p-disabled) > .p-panelmenu-item-content:hover {\n    background: ").concat(dt("panelmenu.item.focus.background"), ";\n    color: ").concat(dt("panelmenu.item.focus.color"), ";\n}\n\n.p-panelmenu-item:not(.p-disabled) > .p-panelmenu-item-content:hover .p-panelmenu-item-icon {\n    color: ").concat(dt("panelmenu.item.icon.focus.color"), ";\n}\n\n.p-panelmenu-item:not(.p-disabled) > .p-panelmenu-item-content:hover .p-panelmenu-submenu-icon {\n    color: ").concat(dt("panelmenu.submenu.icon.focus.color"), ";\n}\n");
}, "theme");
var classes$e = {
  root: "p-panelmenu p-component",
  panel: "p-panelmenu-panel",
  header: /* @__PURE__ */ __name(function header(_ref2) {
    var instance = _ref2.instance, item8 = _ref2.item;
    return ["p-panelmenu-header", {
      "p-panelmenu-header-active": instance.isItemActive(item8) && !!item8.items,
      "p-disabled": instance.isItemDisabled(item8)
    }];
  }, "header"),
  headerContent: "p-panelmenu-header-content",
  headerLink: "p-panelmenu-header-link",
  headerIcon: "p-panelmenu-header-icon",
  headerLabel: "p-panelmenu-header-label",
  contentContainer: "p-panelmenu-content-container",
  content: "p-panelmenu-content",
  rootList: "p-panelmenu-root-list",
  item: /* @__PURE__ */ __name(function item5(_ref3) {
    var instance = _ref3.instance, processedItem = _ref3.processedItem;
    return ["p-panelmenu-item", {
      "p-focus": instance.isItemFocused(processedItem),
      "p-disabled": instance.isItemDisabled(processedItem)
    }];
  }, "item"),
  itemContent: "p-panelmenu-item-content",
  itemLink: "p-panelmenu-item-link",
  itemIcon: "p-panelmenu-item-icon",
  itemLabel: "p-panelmenu-item-label",
  submenuIcon: "p-panelmenu-submenu-icon",
  submenu: "p-panelmenu-submenu",
  separator: "p-menuitem-separator"
};
var PanelMenuStyle = BaseStyle.extend({
  name: "panelmenu",
  theme: theme$d,
  classes: classes$e
});
var script$3$1 = {
  name: "BasePanelMenu",
  "extends": script$1d,
  props: {
    model: {
      type: Array,
      "default": null
    },
    expandedKeys: {
      type: Object,
      "default": null
    },
    multiple: {
      type: Boolean,
      "default": false
    },
    tabindex: {
      type: Number,
      "default": 0
    }
  },
  style: PanelMenuStyle,
  provide: /* @__PURE__ */ __name(function provide37() {
    return {
      $pcPanelMenu: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$2$1 = {
  name: "PanelMenuSub",
  hostName: "PanelMenu",
  "extends": script$1d,
  emits: ["item-toggle", "item-mousemove"],
  props: {
    panelId: {
      type: String,
      "default": null
    },
    focusedItemId: {
      type: String,
      "default": null
    },
    items: {
      type: Array,
      "default": null
    },
    level: {
      type: Number,
      "default": 0
    },
    templates: {
      type: Object,
      "default": null
    },
    activeItemPath: {
      type: Object,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": -1
    }
  },
  methods: {
    getItemId: /* @__PURE__ */ __name(function getItemId3(processedItem) {
      return "".concat(this.panelId, "_").concat(processedItem.key);
    }, "getItemId"),
    getItemKey: /* @__PURE__ */ __name(function getItemKey2(processedItem) {
      return this.getItemId(processedItem);
    }, "getItemKey"),
    getItemProp: /* @__PURE__ */ __name(function getItemProp5(processedItem, name4, params) {
      return processedItem && processedItem.item ? resolve(processedItem.item[name4], params) : void 0;
    }, "getItemProp"),
    getItemLabel: /* @__PURE__ */ __name(function getItemLabel3(processedItem) {
      return this.getItemProp(processedItem, "label");
    }, "getItemLabel"),
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions7(key, processedItem, index) {
      return this.ptm(key, {
        context: {
          item: processedItem.item,
          index,
          active: this.isItemActive(processedItem),
          focused: this.isItemFocused(processedItem),
          disabled: this.isItemDisabled(processedItem)
        }
      });
    }, "getPTOptions"),
    isItemActive: /* @__PURE__ */ __name(function isItemActive4(processedItem) {
      return this.activeItemPath.some(function(path) {
        return path.key === processedItem.key;
      });
    }, "isItemActive"),
    isItemVisible: /* @__PURE__ */ __name(function isItemVisible3(processedItem) {
      return this.getItemProp(processedItem, "visible") !== false;
    }, "isItemVisible"),
    isItemDisabled: /* @__PURE__ */ __name(function isItemDisabled3(processedItem) {
      return this.getItemProp(processedItem, "disabled");
    }, "isItemDisabled"),
    isItemFocused: /* @__PURE__ */ __name(function isItemFocused3(processedItem) {
      return this.focusedItemId === this.getItemId(processedItem);
    }, "isItemFocused"),
    isItemGroup: /* @__PURE__ */ __name(function isItemGroup3(processedItem) {
      return isNotEmpty(processedItem.items);
    }, "isItemGroup"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick5(event2, processedItem) {
      this.getItemProp(processedItem, "command", {
        originalEvent: event2,
        item: processedItem.item
      });
      this.$emit("item-toggle", {
        processedItem,
        expanded: !this.isItemActive(processedItem)
      });
    }, "onItemClick"),
    onItemToggle: /* @__PURE__ */ __name(function onItemToggle(event2) {
      this.$emit("item-toggle", event2);
    }, "onItemToggle"),
    onItemMouseMove: /* @__PURE__ */ __name(function onItemMouseMove2(event2, processedItem) {
      this.$emit("item-mousemove", {
        originalEvent: event2,
        processedItem
      });
    }, "onItemMouseMove"),
    getAriaSetSize: /* @__PURE__ */ __name(function getAriaSetSize2() {
      var _this = this;
      return this.items.filter(function(processedItem) {
        return _this.isItemVisible(processedItem) && !_this.getItemProp(processedItem, "separator");
      }).length;
    }, "getAriaSetSize"),
    getAriaPosInset: /* @__PURE__ */ __name(function getAriaPosInset3(index) {
      var _this2 = this;
      return index - this.items.slice(0, index).filter(function(processedItem) {
        return _this2.isItemVisible(processedItem) && _this2.getItemProp(processedItem, "separator");
      }).length + 1;
    }, "getAriaPosInset"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps5(processedItem, index) {
      return {
        action: mergeProps({
          "class": this.cx("itemLink"),
          tabindex: -1
        }, this.getPTOptions("itemLink", processedItem, index)),
        icon: mergeProps({
          "class": [this.cx("itemIcon"), this.getItemProp(processedItem, "icon")]
        }, this.getPTOptions("itemIcon", processedItem, index)),
        label: mergeProps({
          "class": this.cx("itemLabel")
        }, this.getPTOptions("itemLabel", processedItem, index)),
        submenuicon: mergeProps({
          "class": this.cx("submenuIcon")
        }, this.getPTOptions("submenuicon", processedItem, index))
      };
    }, "getMenuItemProps")
  },
  components: {
    ChevronRightIcon: script$1l,
    ChevronDownIcon: script$1k
  },
  directives: {
    ripple: Ripple
  }
};
var _hoisted_1$1$2 = ["tabindex"];
var _hoisted_2$1$1 = ["id", "aria-label", "aria-expanded", "aria-level", "aria-setsize", "aria-posinset", "data-p-focused", "data-p-disabled"];
var _hoisted_3$1$1 = ["onClick", "onMousemove"];
var _hoisted_4$1$1 = ["href", "target"];
function render$2$1(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_PanelMenuSub = resolveComponent("PanelMenuSub", true);
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("ul", {
    "class": normalizeClass(_ctx.cx("submenu")),
    tabindex: $props.tabindex
  }, [(openBlock(true), createElementBlock(Fragment, null, renderList($props.items, function(processedItem, index) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.getItemKey(processedItem)
    }, [$options.isItemVisible(processedItem) && !$options.getItemProp(processedItem, "separator") ? (openBlock(), createElementBlock("li", mergeProps({
      key: 0,
      id: $options.getItemId(processedItem),
      "class": [_ctx.cx("item", {
        processedItem
      }), $options.getItemProp(processedItem, "class")],
      style: $options.getItemProp(processedItem, "style"),
      role: "treeitem",
      "aria-label": $options.getItemLabel(processedItem),
      "aria-expanded": $options.isItemGroup(processedItem) ? $options.isItemActive(processedItem) : void 0,
      "aria-level": $props.level + 1,
      "aria-setsize": $options.getAriaSetSize(),
      "aria-posinset": $options.getAriaPosInset(index),
      ref_for: true
    }, $options.getPTOptions("item", processedItem, index), {
      "data-p-focused": $options.isItemFocused(processedItem),
      "data-p-disabled": $options.isItemDisabled(processedItem)
    }), [createBaseVNode("div", mergeProps({
      "class": _ctx.cx("itemContent"),
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onItemClick($event, processedItem);
      }, "onClick"),
      onMousemove: /* @__PURE__ */ __name(function onMousemove($event) {
        return $options.onItemMouseMove($event, processedItem);
      }, "onMousemove"),
      ref_for: true
    }, $options.getPTOptions("itemContent", processedItem, index)), [!$props.templates.item ? withDirectives((openBlock(), createElementBlock("a", mergeProps({
      key: 0,
      href: $options.getItemProp(processedItem, "url"),
      "class": _ctx.cx("itemLink"),
      target: $options.getItemProp(processedItem, "target"),
      tabindex: "-1",
      ref_for: true
    }, $options.getPTOptions("itemLink", processedItem, index)), [$options.isItemGroup(processedItem) ? (openBlock(), createElementBlock(Fragment, {
      key: 0
    }, [$props.templates.submenuicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.submenuicon), mergeProps({
      key: 0,
      "class": _ctx.cx("submenuIcon"),
      active: $options.isItemActive(processedItem),
      ref_for: true
    }, $options.getPTOptions("submenuIcon", processedItem, index)), null, 16, ["class", "active"])) : (openBlock(), createBlock(resolveDynamicComponent($options.isItemActive(processedItem) ? "ChevronDownIcon" : "ChevronRightIcon"), mergeProps({
      key: 1,
      "class": _ctx.cx("submenuIcon"),
      ref_for: true
    }, $options.getPTOptions("submenuIcon", processedItem, index)), null, 16, ["class"]))], 64)) : createCommentVNode("", true), $props.templates.itemicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.itemicon), {
      key: 1,
      item: processedItem.item,
      "class": normalizeClass(_ctx.cx("itemIcon"))
    }, null, 8, ["item", "class"])) : $options.getItemProp(processedItem, "icon") ? (openBlock(), createElementBlock("span", mergeProps({
      key: 2,
      "class": [_ctx.cx("itemIcon"), $options.getItemProp(processedItem, "icon")],
      ref_for: true
    }, $options.getPTOptions("itemIcon", processedItem, index)), null, 16)) : createCommentVNode("", true), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("itemLabel"),
      ref_for: true
    }, $options.getPTOptions("itemLabel", processedItem, index)), toDisplayString($options.getItemLabel(processedItem)), 17)], 16, _hoisted_4$1$1)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent($props.templates.item), {
      key: 1,
      item: processedItem.item,
      root: false,
      active: $options.isItemActive(processedItem),
      hasSubmenu: $options.isItemGroup(processedItem),
      label: $options.getItemLabel(processedItem),
      props: $options.getMenuItemProps(processedItem, index)
    }, null, 8, ["item", "active", "hasSubmenu", "label", "props"]))], 16, _hoisted_3$1$1), createVNode(Transition, mergeProps({
      name: "p-toggleable-content",
      ref_for: true
    }, _ctx.ptm("transition")), {
      "default": withCtx(function() {
        return [withDirectives(createBaseVNode("div", mergeProps({
          "class": _ctx.cx("contentContainer"),
          ref_for: true
        }, _ctx.ptm("contentContainer")), [$options.isItemVisible(processedItem) && $options.isItemGroup(processedItem) ? (openBlock(), createBlock(_component_PanelMenuSub, mergeProps({
          key: 0,
          id: $options.getItemId(processedItem) + "_list",
          role: "group",
          panelId: $props.panelId,
          focusedItemId: $props.focusedItemId,
          items: processedItem.items,
          level: $props.level + 1,
          templates: $props.templates,
          activeItemPath: $props.activeItemPath,
          onItemToggle: $options.onItemToggle,
          onItemMousemove: _cache[0] || (_cache[0] = function($event) {
            return _ctx.$emit("item-mousemove", $event);
          }),
          pt: _ctx.pt,
          unstyled: _ctx.unstyled,
          ref_for: true
        }, _ctx.ptm("submenu")), null, 16, ["id", "panelId", "focusedItemId", "items", "level", "templates", "activeItemPath", "onItemToggle", "pt", "unstyled"])) : createCommentVNode("", true)], 16), [[vShow, $options.isItemActive(processedItem)]])];
      }),
      _: 2
    }, 1040)], 16, _hoisted_2$1$1)) : createCommentVNode("", true), $options.isItemVisible(processedItem) && $options.getItemProp(processedItem, "separator") ? (openBlock(), createElementBlock("li", mergeProps({
      key: 1,
      style: $options.getItemProp(processedItem, "style"),
      "class": [_ctx.cx("separator"), $options.getItemProp(processedItem, "class")],
      role: "separator",
      ref_for: true
    }, _ctx.ptm("separator")), null, 16)) : createCommentVNode("", true)], 64);
  }), 128))], 10, _hoisted_1$1$2);
}
__name(render$2$1, "render$2$1");
script$2$1.render = render$2$1;
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray$5(r, e) || _nonIterableRest();
}
__name(_slicedToArray, "_slicedToArray");
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableRest, "_nonIterableRest");
function _unsupportedIterableToArray$5(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$5(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$5(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$5, "_unsupportedIterableToArray$5");
function _arrayLikeToArray$5(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$5, "_arrayLikeToArray$5");
function _iterableToArrayLimit(r, l) {
  var t2 = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t2) {
    var e, n, i, u, a = [], f = true, o = false;
    try {
      if (i = (t2 = t2.call(r)).next, 0 === l) ;
      else for (; !(f = (e = i.call(t2)).done) && (a.push(e.value), a.length !== l); f = true) ;
    } catch (r2) {
      o = true, n = r2;
    } finally {
      try {
        if (!f && null != t2["return"] && (u = t2["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
__name(_iterableToArrayLimit, "_iterableToArrayLimit");
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
__name(_arrayWithHoles, "_arrayWithHoles");
var script$1$e = {
  name: "PanelMenuList",
  hostName: "PanelMenu",
  "extends": script$1d,
  emits: ["item-toggle", "header-focus"],
  props: {
    panelId: {
      type: String,
      "default": null
    },
    items: {
      type: Array,
      "default": null
    },
    templates: {
      type: Object,
      "default": null
    },
    expandedKeys: {
      type: Object,
      "default": null
    }
  },
  searchTimeout: null,
  searchValue: null,
  data: /* @__PURE__ */ __name(function data25() {
    return {
      focused: false,
      focusedItem: null,
      activeItemPath: []
    };
  }, "data"),
  watch: {
    expandedKeys: /* @__PURE__ */ __name(function expandedKeys(newValue) {
      this.autoUpdateActiveItemPath(newValue);
    }, "expandedKeys")
  },
  mounted: /* @__PURE__ */ __name(function mounted26() {
    this.autoUpdateActiveItemPath(this.expandedKeys);
  }, "mounted"),
  methods: {
    getItemProp: /* @__PURE__ */ __name(function getItemProp6(processedItem, name4) {
      return processedItem && processedItem.item ? resolve(processedItem.item[name4]) : void 0;
    }, "getItemProp"),
    getItemLabel: /* @__PURE__ */ __name(function getItemLabel4(processedItem) {
      return this.getItemProp(processedItem, "label");
    }, "getItemLabel"),
    isItemVisible: /* @__PURE__ */ __name(function isItemVisible4(processedItem) {
      return this.getItemProp(processedItem, "visible") !== false;
    }, "isItemVisible"),
    isItemDisabled: /* @__PURE__ */ __name(function isItemDisabled4(processedItem) {
      return this.getItemProp(processedItem, "disabled");
    }, "isItemDisabled"),
    isItemActive: /* @__PURE__ */ __name(function isItemActive5(processedItem) {
      return this.activeItemPath.some(function(path) {
        return path.key === processedItem.parentKey;
      });
    }, "isItemActive"),
    isItemGroup: /* @__PURE__ */ __name(function isItemGroup4(processedItem) {
      return isNotEmpty(processedItem.items);
    }, "isItemGroup"),
    onFocus: /* @__PURE__ */ __name(function onFocus10(event2) {
      this.focused = true;
      this.focusedItem = this.focusedItem || (this.isElementInPanel(event2, event2.relatedTarget) ? this.findFirstItem() : this.findLastItem());
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur10() {
      this.focused = false;
      this.focusedItem = null;
      this.searchValue = "";
    }, "onBlur"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown10(event2) {
      var metaKey = event2.metaKey || event2.ctrlKey;
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2);
          break;
        case "ArrowLeft":
          this.onArrowLeftKey(event2);
          break;
        case "ArrowRight":
          this.onArrowRightKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
        case "Space":
          this.onSpaceKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(event2);
          break;
        case "Escape":
        case "Tab":
        case "PageDown":
        case "PageUp":
        case "Backspace":
        case "ShiftLeft":
        case "ShiftRight":
          break;
        default:
          if (!metaKey && isPrintableCharacter(event2.key)) {
            this.searchItems(event2, event2.key);
          }
          break;
      }
    }, "onKeyDown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey7(event2) {
      var processedItem = isNotEmpty(this.focusedItem) ? this.findNextItem(this.focusedItem) : this.findFirstItem();
      this.changeFocusedItem({
        originalEvent: event2,
        processedItem,
        focusOnNext: true
      });
      event2.preventDefault();
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey7(event2) {
      var processedItem = isNotEmpty(this.focusedItem) ? this.findPrevItem(this.focusedItem) : this.findLastItem();
      this.changeFocusedItem({
        originalEvent: event2,
        processedItem,
        selfCheck: true
      });
      event2.preventDefault();
    }, "onArrowUpKey"),
    onArrowLeftKey: /* @__PURE__ */ __name(function onArrowLeftKey4(event2) {
      var _this = this;
      if (isNotEmpty(this.focusedItem)) {
        var matched = this.activeItemPath.some(function(p) {
          return p.key === _this.focusedItem.key;
        });
        if (matched) {
          this.activeItemPath = this.activeItemPath.filter(function(p) {
            return p.key !== _this.focusedItem.key;
          });
        } else {
          this.focusedItem = isNotEmpty(this.focusedItem.parent) ? this.focusedItem.parent : this.focusedItem;
        }
        event2.preventDefault();
      }
    }, "onArrowLeftKey"),
    onArrowRightKey: /* @__PURE__ */ __name(function onArrowRightKey3(event2) {
      var _this2 = this;
      if (isNotEmpty(this.focusedItem)) {
        var grouped = this.isItemGroup(this.focusedItem);
        if (grouped) {
          var matched = this.activeItemPath.some(function(p) {
            return p.key === _this2.focusedItem.key;
          });
          if (matched) {
            this.onArrowDownKey(event2);
          } else {
            this.activeItemPath = this.activeItemPath.filter(function(p) {
              return p.parentKey !== _this2.focusedItem.parentKey;
            });
            this.activeItemPath.push(this.focusedItem);
          }
        }
        event2.preventDefault();
      }
    }, "onArrowRightKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey7(event2) {
      this.changeFocusedItem({
        originalEvent: event2,
        processedItem: this.findFirstItem(),
        allowHeaderFocus: false
      });
      event2.preventDefault();
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey7(event2) {
      this.changeFocusedItem({
        originalEvent: event2,
        processedItem: this.findLastItem(),
        focusOnNext: true,
        allowHeaderFocus: false
      });
      event2.preventDefault();
    }, "onEndKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey6(event2) {
      if (isNotEmpty(this.focusedItem)) {
        var element = findSingle(this.$el, 'li[id="'.concat("".concat(this.focusedItemId), '"]'));
        var anchorElement = element && (findSingle(element, '[data-pc-section="itemlink"]') || findSingle(element, "a,button"));
        anchorElement ? anchorElement.click() : element && element.click();
      }
      event2.preventDefault();
    }, "onEnterKey"),
    onSpaceKey: /* @__PURE__ */ __name(function onSpaceKey5(event2) {
      this.onEnterKey(event2);
    }, "onSpaceKey"),
    onItemToggle: /* @__PURE__ */ __name(function onItemToggle2(event2) {
      var processedItem = event2.processedItem, expanded3 = event2.expanded;
      if (this.expandedKeys) {
        this.$emit("item-toggle", {
          item: processedItem.item,
          expanded: expanded3
        });
      } else {
        this.activeItemPath = this.activeItemPath.filter(function(p) {
          return p.parentKey !== processedItem.parentKey;
        });
        expanded3 && this.activeItemPath.push(processedItem);
      }
      this.focusedItem = processedItem;
      focus(this.$el);
    }, "onItemToggle"),
    onItemMouseMove: /* @__PURE__ */ __name(function onItemMouseMove3(event2) {
      if (this.focused) {
        this.focusedItem = event2.processedItem;
      }
    }, "onItemMouseMove"),
    isElementInPanel: /* @__PURE__ */ __name(function isElementInPanel(event2, element) {
      var panel2 = event2.currentTarget.closest('[data-pc-section="panel"]');
      return panel2 && panel2.contains(element);
    }, "isElementInPanel"),
    isItemMatched: /* @__PURE__ */ __name(function isItemMatched2(processedItem) {
      var _this$getItemLabel;
      return this.isValidItem(processedItem) && ((_this$getItemLabel = this.getItemLabel(processedItem)) === null || _this$getItemLabel === void 0 ? void 0 : _this$getItemLabel.toLocaleLowerCase(this.searchLocale).startsWith(this.searchValue.toLocaleLowerCase(this.searchLocale)));
    }, "isItemMatched"),
    isVisibleItem: /* @__PURE__ */ __name(function isVisibleItem(processedItem) {
      return !!processedItem && (processedItem.level === 0 || this.isItemActive(processedItem)) && this.isItemVisible(processedItem);
    }, "isVisibleItem"),
    isValidItem: /* @__PURE__ */ __name(function isValidItem2(processedItem) {
      return !!processedItem && !this.isItemDisabled(processedItem) && !this.getItemProp(processedItem, "separator");
    }, "isValidItem"),
    findFirstItem: /* @__PURE__ */ __name(function findFirstItem() {
      var _this3 = this;
      return this.visibleItems.find(function(processedItem) {
        return _this3.isValidItem(processedItem);
      });
    }, "findFirstItem"),
    findLastItem: /* @__PURE__ */ __name(function findLastItem() {
      var _this4 = this;
      return findLast(this.visibleItems, function(processedItem) {
        return _this4.isValidItem(processedItem);
      });
    }, "findLastItem"),
    findNextItem: /* @__PURE__ */ __name(function findNextItem(processedItem) {
      var _this5 = this;
      var index = this.visibleItems.findIndex(function(item8) {
        return item8.key === processedItem.key;
      });
      var matchedItem = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).find(function(pItem) {
        return _this5.isValidItem(pItem);
      }) : void 0;
      return matchedItem || processedItem;
    }, "findNextItem"),
    findPrevItem: /* @__PURE__ */ __name(function findPrevItem(processedItem) {
      var _this6 = this;
      var index = this.visibleItems.findIndex(function(item8) {
        return item8.key === processedItem.key;
      });
      var matchedItem = index > 0 ? findLast(this.visibleItems.slice(0, index), function(pItem) {
        return _this6.isValidItem(pItem);
      }) : void 0;
      return matchedItem || processedItem;
    }, "findPrevItem"),
    searchItems: /* @__PURE__ */ __name(function searchItems2(event2, _char) {
      var _this7 = this;
      this.searchValue = (this.searchValue || "") + _char;
      var matchedItem = null;
      var matched = false;
      if (isNotEmpty(this.focusedItem)) {
        var focusedItemIndex = this.visibleItems.findIndex(function(processedItem) {
          return processedItem.key === _this7.focusedItem.key;
        });
        matchedItem = this.visibleItems.slice(focusedItemIndex).find(function(processedItem) {
          return _this7.isItemMatched(processedItem);
        });
        matchedItem = isEmpty(matchedItem) ? this.visibleItems.slice(0, focusedItemIndex).find(function(processedItem) {
          return _this7.isItemMatched(processedItem);
        }) : matchedItem;
      } else {
        matchedItem = this.visibleItems.find(function(processedItem) {
          return _this7.isItemMatched(processedItem);
        });
      }
      if (isNotEmpty(matchedItem)) {
        matched = true;
      }
      if (isEmpty(matchedItem) && isEmpty(this.focusedItem)) {
        matchedItem = this.findFirstItem();
      }
      if (isNotEmpty(matchedItem)) {
        this.changeFocusedItem({
          originalEvent: event2,
          processedItem: matchedItem,
          allowHeaderFocus: false
        });
      }
      if (this.searchTimeout) {
        clearTimeout(this.searchTimeout);
      }
      this.searchTimeout = setTimeout(function() {
        _this7.searchValue = "";
        _this7.searchTimeout = null;
      }, 500);
      return matched;
    }, "searchItems"),
    changeFocusedItem: /* @__PURE__ */ __name(function changeFocusedItem(event2) {
      var originalEvent = event2.originalEvent, processedItem = event2.processedItem, focusOnNext = event2.focusOnNext, selfCheck = event2.selfCheck, _event$allowHeaderFoc = event2.allowHeaderFocus, allowHeaderFocus = _event$allowHeaderFoc === void 0 ? true : _event$allowHeaderFoc;
      if (isNotEmpty(this.focusedItem) && this.focusedItem.key !== processedItem.key) {
        this.focusedItem = processedItem;
        this.scrollInView();
      } else if (allowHeaderFocus) {
        this.$emit("header-focus", {
          originalEvent,
          focusOnNext,
          selfCheck
        });
      }
    }, "changeFocusedItem"),
    scrollInView: /* @__PURE__ */ __name(function scrollInView5() {
      var element = findSingle(this.$el, 'li[id="'.concat("".concat(this.focusedItemId), '"]'));
      if (element) {
        element.scrollIntoView && element.scrollIntoView({
          block: "nearest",
          inline: "start"
        });
      }
    }, "scrollInView"),
    autoUpdateActiveItemPath: /* @__PURE__ */ __name(function autoUpdateActiveItemPath(expandedKeys4) {
      var _this8 = this;
      this.activeItemPath = Object.entries(expandedKeys4 || {}).reduce(function(acc, _ref) {
        var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], val = _ref2[1];
        if (val) {
          var processedItem = _this8.findProcessedItemByItemKey(key);
          processedItem && acc.push(processedItem);
        }
        return acc;
      }, []);
    }, "autoUpdateActiveItemPath"),
    findProcessedItemByItemKey: /* @__PURE__ */ __name(function findProcessedItemByItemKey(key, processedItems3) {
      var level = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      processedItems3 = processedItems3 || level === 0 && this.processedItems;
      if (!processedItems3) return null;
      for (var i = 0; i < processedItems3.length; i++) {
        var processedItem = processedItems3[i];
        if (this.getItemProp(processedItem, "key") === key) return processedItem;
        var matchedItem = this.findProcessedItemByItemKey(key, processedItem.items, level + 1);
        if (matchedItem) return matchedItem;
      }
    }, "findProcessedItemByItemKey"),
    createProcessedItems: /* @__PURE__ */ __name(function createProcessedItems2(items2) {
      var _this9 = this;
      var level = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var parent = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var parentKey = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "";
      var processedItems3 = [];
      items2 && items2.forEach(function(item8, index) {
        var key = (parentKey !== "" ? parentKey + "_" : "") + index;
        var newItem = {
          item: item8,
          index,
          level,
          key,
          parent,
          parentKey
        };
        newItem["items"] = _this9.createProcessedItems(item8.items, level + 1, newItem, key);
        processedItems3.push(newItem);
      });
      return processedItems3;
    }, "createProcessedItems"),
    flatItems: /* @__PURE__ */ __name(function flatItems(processedItems3) {
      var _this10 = this;
      var processedFlattenItems = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      processedItems3 && processedItems3.forEach(function(processedItem) {
        if (_this10.isVisibleItem(processedItem)) {
          processedFlattenItems.push(processedItem);
          _this10.flatItems(processedItem.items, processedFlattenItems);
        }
      });
      return processedFlattenItems;
    }, "flatItems")
  },
  computed: {
    processedItems: /* @__PURE__ */ __name(function processedItems2() {
      return this.createProcessedItems(this.items || []);
    }, "processedItems"),
    visibleItems: /* @__PURE__ */ __name(function visibleItems2() {
      return this.flatItems(this.processedItems);
    }, "visibleItems"),
    focusedItemId: /* @__PURE__ */ __name(function focusedItemId2() {
      return isNotEmpty(this.focusedItem) ? "".concat(this.panelId, "_").concat(this.focusedItem.key) : null;
    }, "focusedItemId")
  },
  components: {
    PanelMenuSub: script$2$1
  }
};
function render$1$1(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_PanelMenuSub = resolveComponent("PanelMenuSub");
  return openBlock(), createBlock(_component_PanelMenuSub, mergeProps({
    id: $props.panelId + "_list",
    "class": _ctx.cx("rootList"),
    role: "tree",
    tabindex: -1,
    "aria-activedescendant": $data.focused ? $options.focusedItemId : void 0,
    panelId: $props.panelId,
    focusedItemId: $data.focused ? $options.focusedItemId : void 0,
    items: $options.processedItems,
    templates: $props.templates,
    activeItemPath: $data.activeItemPath,
    onFocus: $options.onFocus,
    onBlur: $options.onBlur,
    onKeydown: $options.onKeyDown,
    onItemToggle: $options.onItemToggle,
    onItemMousemove: $options.onItemMouseMove,
    pt: _ctx.pt,
    unstyled: _ctx.unstyled
  }, _ctx.ptm("rootList")), null, 16, ["id", "class", "aria-activedescendant", "panelId", "focusedItemId", "items", "templates", "activeItemPath", "onFocus", "onBlur", "onKeydown", "onItemToggle", "onItemMousemove", "pt", "unstyled"]);
}
__name(render$1$1, "render$1$1");
script$1$e.render = render$1$1;
function _typeof$b(o) {
  "@babel/helpers - typeof";
  return _typeof$b = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$b(o);
}
__name(_typeof$b, "_typeof$b");
function ownKeys$a(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$a, "ownKeys$a");
function _objectSpread$a(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$a(Object(t2), true).forEach(function(r2) {
      _defineProperty$b(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$a(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$a, "_objectSpread$a");
function _defineProperty$b(e, r, t2) {
  return (r = _toPropertyKey$b(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$b, "_defineProperty$b");
function _toPropertyKey$b(t2) {
  var i = _toPrimitive$b(t2, "string");
  return "symbol" == _typeof$b(i) ? i : i + "";
}
__name(_toPropertyKey$b, "_toPropertyKey$b");
function _toPrimitive$b(t2, r) {
  if ("object" != _typeof$b(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$b(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$b, "_toPrimitive$b");
var script$p = {
  name: "PanelMenu",
  "extends": script$3$1,
  inheritAttrs: false,
  emits: ["update:expandedKeys", "panel-open", "panel-close"],
  data: /* @__PURE__ */ __name(function data26() {
    return {
      id: this.$attrs.id,
      activeItem: null,
      activeItems: []
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId9(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId")
  },
  mounted: /* @__PURE__ */ __name(function mounted27() {
    this.id = this.id || UniqueComponentId();
  }, "mounted"),
  methods: {
    getItemProp: /* @__PURE__ */ __name(function getItemProp7(item8, name4) {
      return item8 ? resolve(item8[name4]) : void 0;
    }, "getItemProp"),
    getItemLabel: /* @__PURE__ */ __name(function getItemLabel5(item8) {
      return this.getItemProp(item8, "label");
    }, "getItemLabel"),
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions8(key, item8, index) {
      return this.ptm(key, {
        context: {
          index,
          active: this.isItemActive(item8),
          focused: this.isItemFocused(item8),
          disabled: this.isItemDisabled(item8)
        }
      });
    }, "getPTOptions"),
    isItemActive: /* @__PURE__ */ __name(function isItemActive6(item8) {
      return this.expandedKeys ? this.expandedKeys[this.getItemProp(item8, "key")] : this.multiple ? this.activeItems.some(function(subItem) {
        return equals(item8, subItem);
      }) : equals(item8, this.activeItem);
    }, "isItemActive"),
    isItemVisible: /* @__PURE__ */ __name(function isItemVisible5(item8) {
      return this.getItemProp(item8, "visible") !== false;
    }, "isItemVisible"),
    isItemDisabled: /* @__PURE__ */ __name(function isItemDisabled5(item8) {
      return this.getItemProp(item8, "disabled");
    }, "isItemDisabled"),
    isItemFocused: /* @__PURE__ */ __name(function isItemFocused4(item8) {
      return equals(item8, this.activeItem);
    }, "isItemFocused"),
    isItemGroup: /* @__PURE__ */ __name(function isItemGroup5(item8) {
      return isNotEmpty(item8.items);
    }, "isItemGroup"),
    getPanelId: /* @__PURE__ */ __name(function getPanelId(index) {
      return "".concat(this.id, "_").concat(index);
    }, "getPanelId"),
    getPanelKey: /* @__PURE__ */ __name(function getPanelKey(index) {
      return this.getPanelId(index);
    }, "getPanelKey"),
    getHeaderId: /* @__PURE__ */ __name(function getHeaderId(index) {
      return "".concat(this.getPanelId(index), "_header");
    }, "getHeaderId"),
    getContentId: /* @__PURE__ */ __name(function getContentId(index) {
      return "".concat(this.getPanelId(index), "_content");
    }, "getContentId"),
    onHeaderClick: /* @__PURE__ */ __name(function onHeaderClick(event2, item8) {
      if (this.isItemDisabled(item8)) {
        event2.preventDefault();
        return;
      }
      if (item8.command) {
        item8.command({
          originalEvent: event2,
          item: item8
        });
      }
      this.changeActiveItem(event2, item8);
      focus(event2.currentTarget);
    }, "onHeaderClick"),
    onHeaderKeyDown: /* @__PURE__ */ __name(function onHeaderKeyDown(event2, item8) {
      switch (event2.code) {
        case "ArrowDown":
          this.onHeaderArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onHeaderArrowUpKey(event2);
          break;
        case "Home":
          this.onHeaderHomeKey(event2);
          break;
        case "End":
          this.onHeaderEndKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
        case "Space":
          this.onHeaderEnterKey(event2, item8);
          break;
      }
    }, "onHeaderKeyDown"),
    onHeaderArrowDownKey: /* @__PURE__ */ __name(function onHeaderArrowDownKey(event2) {
      var rootList2 = getAttribute(event2.currentTarget, "data-p-active") === true ? findSingle(event2.currentTarget.nextElementSibling, '[data-pc-section="rootlist"]') : null;
      rootList2 ? focus(rootList2) : this.updateFocusedHeader({
        originalEvent: event2,
        focusOnNext: true
      });
      event2.preventDefault();
    }, "onHeaderArrowDownKey"),
    onHeaderArrowUpKey: /* @__PURE__ */ __name(function onHeaderArrowUpKey(event2) {
      var prevHeader = this.findPrevHeader(event2.currentTarget.parentElement) || this.findLastHeader();
      var rootList2 = getAttribute(prevHeader, "data-p-active") === true ? findSingle(prevHeader.nextElementSibling, '[data-pc-section="rootlist"]') : null;
      rootList2 ? focus(rootList2) : this.updateFocusedHeader({
        originalEvent: event2,
        focusOnNext: false
      });
      event2.preventDefault();
    }, "onHeaderArrowUpKey"),
    onHeaderHomeKey: /* @__PURE__ */ __name(function onHeaderHomeKey(event2) {
      this.changeFocusedHeader(event2, this.findFirstHeader());
      event2.preventDefault();
    }, "onHeaderHomeKey"),
    onHeaderEndKey: /* @__PURE__ */ __name(function onHeaderEndKey(event2) {
      this.changeFocusedHeader(event2, this.findLastHeader());
      event2.preventDefault();
    }, "onHeaderEndKey"),
    onHeaderEnterKey: /* @__PURE__ */ __name(function onHeaderEnterKey(event2, item8) {
      var headerAction = findSingle(event2.currentTarget, '[data-pc-section="headerlink"]');
      headerAction ? headerAction.click() : this.onHeaderClick(event2, item8);
      event2.preventDefault();
    }, "onHeaderEnterKey"),
    findNextHeader: /* @__PURE__ */ __name(function findNextHeader(panelElement) {
      var selfCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var nextPanelElement = selfCheck ? panelElement : panelElement.nextElementSibling;
      var headerElement = findSingle(nextPanelElement, '[data-pc-section="header"]');
      return headerElement ? getAttribute(headerElement, "data-p-disabled") ? this.findNextHeader(headerElement.parentElement) : headerElement : null;
    }, "findNextHeader"),
    findPrevHeader: /* @__PURE__ */ __name(function findPrevHeader(panelElement) {
      var selfCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var prevPanelElement = selfCheck ? panelElement : panelElement.previousElementSibling;
      var headerElement = findSingle(prevPanelElement, '[data-pc-section="header"]');
      return headerElement ? getAttribute(headerElement, "data-p-disabled") ? this.findPrevHeader(headerElement.parentElement) : headerElement : null;
    }, "findPrevHeader"),
    findFirstHeader: /* @__PURE__ */ __name(function findFirstHeader() {
      return this.findNextHeader(this.$el.firstElementChild, true);
    }, "findFirstHeader"),
    findLastHeader: /* @__PURE__ */ __name(function findLastHeader() {
      return this.findPrevHeader(this.$el.lastElementChild, true);
    }, "findLastHeader"),
    updateFocusedHeader: /* @__PURE__ */ __name(function updateFocusedHeader(event2) {
      var originalEvent = event2.originalEvent, focusOnNext = event2.focusOnNext, selfCheck = event2.selfCheck;
      var panelElement = originalEvent.currentTarget.closest('[data-pc-section="panel"]');
      var header2 = selfCheck ? findSingle(panelElement, '[data-pc-section="header"]') : focusOnNext ? this.findNextHeader(panelElement) : this.findPrevHeader(panelElement);
      header2 ? this.changeFocusedHeader(originalEvent, header2) : focusOnNext ? this.onHeaderHomeKey(originalEvent) : this.onHeaderEndKey(originalEvent);
    }, "updateFocusedHeader"),
    changeActiveItem: /* @__PURE__ */ __name(function changeActiveItem(event2, item8) {
      var selfActive = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
      if (!this.isItemDisabled(item8)) {
        var active3 = this.isItemActive(item8);
        var eventName = !active3 ? "panel-open" : "panel-close";
        this.activeItem = selfActive ? item8 : this.activeItem && equals(item8, this.activeItem) ? null : item8;
        if (this.multiple) {
          if (this.activeItems.some(function(subItem) {
            return equals(item8, subItem);
          })) {
            this.activeItems = this.activeItems.filter(function(subItem) {
              return !equals(item8, subItem);
            });
          } else {
            this.activeItems.push(item8);
          }
        }
        this.changeExpandedKeys({
          item: item8,
          expanded: !active3
        });
        this.$emit(eventName, {
          originalEvent: event2,
          item: item8
        });
      }
    }, "changeActiveItem"),
    changeExpandedKeys: /* @__PURE__ */ __name(function changeExpandedKeys(_ref) {
      var item8 = _ref.item, _ref$expanded = _ref.expanded, expanded3 = _ref$expanded === void 0 ? false : _ref$expanded;
      if (this.expandedKeys) {
        var _keys = _objectSpread$a({}, this.expandedKeys);
        if (expanded3) _keys[item8.key] = true;
        else delete _keys[item8.key];
        this.$emit("update:expandedKeys", _keys);
      }
    }, "changeExpandedKeys"),
    changeFocusedHeader: /* @__PURE__ */ __name(function changeFocusedHeader(event2, element) {
      element && focus(element);
    }, "changeFocusedHeader"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps6(item8, index) {
      return {
        icon: mergeProps({
          "class": [this.cx("headerIcon"), this.getItemProp(item8, "icon")]
        }, this.getPTOptions("headerIcon", item8, index)),
        label: mergeProps({
          "class": this.cx("headerLabel")
        }, this.getPTOptions("headerLabel", item8, index))
      };
    }, "getMenuItemProps")
  },
  components: {
    PanelMenuList: script$1$e,
    ChevronRightIcon: script$1l,
    ChevronDownIcon: script$1k
  }
};
var _hoisted_1$d = ["id"];
var _hoisted_2$9 = ["id", "tabindex", "aria-label", "aria-expanded", "aria-controls", "aria-disabled", "onClick", "onKeydown", "data-p-active", "data-p-disabled"];
var _hoisted_3$6 = ["href"];
var _hoisted_4$4 = ["id", "aria-labelledby"];
function render$m(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_PanelMenuList = resolveComponent("PanelMenuList");
  return openBlock(), createElementBlock("div", mergeProps({
    id: $data.id,
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function(item8, index) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.getPanelKey(index)
    }, [$options.isItemVisible(item8) ? (openBlock(), createElementBlock("div", mergeProps({
      key: 0,
      style: $options.getItemProp(item8, "style"),
      "class": [_ctx.cx("panel"), $options.getItemProp(item8, "class")],
      ref_for: true
    }, _ctx.ptm("panel")), [createBaseVNode("div", mergeProps({
      id: $options.getHeaderId(index),
      "class": [_ctx.cx("header", {
        item: item8
      }), $options.getItemProp(item8, "headerClass")],
      tabindex: $options.isItemDisabled(item8) ? -1 : _ctx.tabindex,
      role: "button",
      "aria-label": $options.getItemLabel(item8),
      "aria-expanded": $options.isItemActive(item8),
      "aria-controls": $options.getContentId(index),
      "aria-disabled": $options.isItemDisabled(item8),
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onHeaderClick($event, item8);
      }, "onClick"),
      onKeydown: /* @__PURE__ */ __name(function onKeydown6($event) {
        return $options.onHeaderKeyDown($event, item8);
      }, "onKeydown"),
      ref_for: true
    }, $options.getPTOptions("header", item8, index), {
      "data-p-active": $options.isItemActive(item8),
      "data-p-disabled": $options.isItemDisabled(item8)
    }), [createBaseVNode("div", mergeProps({
      "class": _ctx.cx("headerContent"),
      ref_for: true
    }, $options.getPTOptions("headerContent", item8, index)), [!_ctx.$slots.item ? (openBlock(), createElementBlock("a", mergeProps({
      key: 0,
      href: $options.getItemProp(item8, "url"),
      "class": _ctx.cx("headerLink"),
      tabindex: -1,
      ref_for: true
    }, $options.getPTOptions("headerLink", item8, index)), [$options.getItemProp(item8, "items") ? renderSlot(_ctx.$slots, "submenuicon", {
      key: 0,
      active: $options.isItemActive(item8)
    }, function() {
      return [(openBlock(), createBlock(resolveDynamicComponent($options.isItemActive(item8) ? "ChevronDownIcon" : "ChevronRightIcon"), mergeProps({
        "class": _ctx.cx("submenuIcon"),
        ref_for: true
      }, $options.getPTOptions("submenuIcon", item8, index)), null, 16, ["class"]))];
    }) : createCommentVNode("", true), _ctx.$slots.headericon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.headericon), {
      key: 1,
      item: item8,
      "class": normalizeClass([_ctx.cx("headerIcon"), $options.getItemProp(item8, "icon")])
    }, null, 8, ["item", "class"])) : $options.getItemProp(item8, "icon") ? (openBlock(), createElementBlock("span", mergeProps({
      key: 2,
      "class": [_ctx.cx("headerIcon"), $options.getItemProp(item8, "icon")],
      ref_for: true
    }, $options.getPTOptions("headerIcon", item8, index)), null, 16)) : createCommentVNode("", true), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("headerLabel"),
      ref_for: true
    }, $options.getPTOptions("headerLabel", item8, index)), toDisplayString($options.getItemLabel(item8)), 17)], 16, _hoisted_3$6)) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.item), {
      key: 1,
      item: item8,
      root: true,
      active: $options.isItemActive(item8),
      hasSubmenu: $options.isItemGroup(item8),
      label: $options.getItemLabel(item8),
      props: $options.getMenuItemProps(item8, index)
    }, null, 8, ["item", "active", "hasSubmenu", "label", "props"]))], 16)], 16, _hoisted_2$9), createVNode(Transition, mergeProps({
      name: "p-toggleable-content",
      ref_for: true
    }, _ctx.ptm("transition")), {
      "default": withCtx(function() {
        return [withDirectives(createBaseVNode("div", mergeProps({
          id: $options.getContentId(index),
          "class": _ctx.cx("contentContainer"),
          role: "region",
          "aria-labelledby": $options.getHeaderId(index),
          ref_for: true
        }, _ctx.ptm("contentContainer")), [$options.getItemProp(item8, "items") ? (openBlock(), createElementBlock("div", mergeProps({
          key: 0,
          "class": _ctx.cx("content"),
          ref_for: true
        }, _ctx.ptm("content")), [createVNode(_component_PanelMenuList, {
          panelId: $options.getPanelId(index),
          items: $options.getItemProp(item8, "items"),
          templates: _ctx.$slots,
          expandedKeys: _ctx.expandedKeys,
          onItemToggle: $options.changeExpandedKeys,
          onHeaderFocus: $options.updateFocusedHeader,
          pt: _ctx.pt,
          unstyled: _ctx.unstyled
        }, null, 8, ["panelId", "items", "templates", "expandedKeys", "onItemToggle", "onHeaderFocus", "pt", "unstyled"])], 16)) : createCommentVNode("", true)], 16, _hoisted_4$4), [[vShow, $options.isItemActive(item8)]])];
      }),
      _: 2
    }, 1040)], 16)) : createCommentVNode("", true)], 64);
  }), 128))], 16, _hoisted_1$d);
}
__name(render$m, "render$m");
script$p.render = render$m;
var script$o = {
  name: "EyeSlashIcon",
  "extends": script$1m
};
function render$l(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M13.9414 6.74792C13.9437 6.75295 13.9455 6.757 13.9469 6.76003C13.982 6.8394 14.0001 6.9252 14.0001 7.01195C14.0001 7.0987 13.982 7.1845 13.9469 7.26386C13.6004 8.00059 13.1711 8.69549 12.6674 9.33515C12.6115 9.4071 12.54 9.46538 12.4582 9.50556C12.3765 9.54574 12.2866 9.56678 12.1955 9.56707C12.0834 9.56671 11.9737 9.53496 11.8788 9.47541C11.7838 9.41586 11.7074 9.3309 11.6583 9.23015C11.6092 9.12941 11.5893 9.01691 11.6008 8.90543C11.6124 8.79394 11.6549 8.68793 11.7237 8.5994C12.1065 8.09726 12.4437 7.56199 12.7313 6.99995C12.2595 6.08027 10.3402 2.8014 6.99732 2.8014C6.63723 2.80218 6.27816 2.83969 5.92569 2.91336C5.77666 2.93304 5.62568 2.89606 5.50263 2.80972C5.37958 2.72337 5.29344 2.59398 5.26125 2.44714C5.22907 2.30031 5.2532 2.14674 5.32885 2.01685C5.40451 1.88696 5.52618 1.79021 5.66978 1.74576C6.10574 1.64961 6.55089 1.60134 6.99732 1.60181C11.5916 1.60181 13.7864 6.40856 13.9414 6.74792ZM2.20333 1.61685C2.35871 1.61411 2.5091 1.67179 2.6228 1.77774L12.2195 11.3744C12.3318 11.4869 12.3949 11.6393 12.3949 11.7983C12.3949 11.9572 12.3318 12.1097 12.2195 12.2221C12.107 12.3345 11.9546 12.3976 11.7956 12.3976C11.6367 12.3976 11.4842 12.3345 11.3718 12.2221L10.5081 11.3584C9.46549 12.0426 8.24432 12.4042 6.99729 12.3981C2.403 12.3981 0.208197 7.59135 0.0532336 7.25198C0.0509364 7.24694 0.0490875 7.2429 0.0476856 7.23986C0.0162332 7.16518 3.05176e-05 7.08497 3.05176e-05 7.00394C3.05176e-05 6.92291 0.0162332 6.8427 0.0476856 6.76802C0.631261 5.47831 1.46902 4.31959 2.51084 3.36119L1.77509 2.62545C1.66914 2.51175 1.61146 2.36136 1.61421 2.20597C1.61695 2.05059 1.6799 1.90233 1.78979 1.79244C1.89968 1.68254 2.04794 1.6196 2.20333 1.61685ZM7.45314 8.35147L5.68574 6.57609V6.5361C5.5872 6.78938 5.56498 7.06597 5.62183 7.33173C5.67868 7.59749 5.8121 7.84078 6.00563 8.03158C6.19567 8.21043 6.43052 8.33458 6.68533 8.39089C6.94014 8.44721 7.20543 8.43359 7.45314 8.35147ZM1.26327 6.99994C1.7351 7.91163 3.64645 11.1985 6.99729 11.1985C7.9267 11.2048 8.8408 10.9618 9.64438 10.4947L8.35682 9.20718C7.86027 9.51441 7.27449 9.64491 6.69448 9.57752C6.11446 9.51014 5.57421 9.24881 5.16131 8.83592C4.74842 8.42303 4.4871 7.88277 4.41971 7.30276C4.35232 6.72274 4.48282 6.13697 4.79005 5.64041L3.35855 4.2089C2.4954 5.00336 1.78523 5.94935 1.26327 6.99994Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$l, "render$l");
script$o.render = render$l;
var theme$c = /* @__PURE__ */ __name(function theme28(_ref) {
  var dt = _ref.dt;
  return "\n.p-password {\n    display: inline-flex;\n    position: relative;\n}\n\n.p-password .p-password-overlay {\n    min-width: 100%;\n}\n\n.p-password-meter {\n    height: ".concat(dt("password.meter.height"), ";\n    background: ").concat(dt("password.meter.background"), ";\n    border-radius: ").concat(dt("password.meter.border.radius"), ";\n}\n\n.p-password-meter-label {\n    height: 100%;\n    width: 0;\n    transition: width 1s ease-in-out;\n    border-radius: ").concat(dt("password.meter.border.radius"), ";\n}\n\n.p-password-meter-weak {\n    background: ").concat(dt("password.strength.weak.background"), ";\n}\n\n.p-password-meter-medium {\n    background: ").concat(dt("password.strength.medium.background"), ";\n}\n\n.p-password-meter-strong {\n    background: ").concat(dt("password.strength.strong.background"), ";\n}\n\n.p-password-fluid {\n    display: flex;\n}\n\n.p-password-fluid .p-password-input {\n    width: 100%;\n}\n\n.p-password-input::-ms-reveal,\n.p-password-input::-ms-clear {\n    display: none;\n}\n\n.p-password-overlay {\n    padding: ").concat(dt("password.overlay.padding"), ";\n    background: ").concat(dt("password.overlay.background"), ";\n    color: ").concat(dt("password.overlay.color"), ";\n    border: 1px solid ").concat(dt("password.overlay.border.color"), ";\n    box-shadow: ").concat(dt("password.overlay.shadow"), ";\n    border-radius: ").concat(dt("password.overlay.border.radius"), ";\n}\n\n.p-password-content {\n    display: flex;\n    flex-direction: column;\n    gap: ").concat(dt("password.content.gap"), ";\n}\n\n.p-password-toggle-mask-icon {\n    inset-inline-end: ").concat(dt("form.field.padding.x"), ";\n    color: ").concat(dt("password.icon.color"), ";\n    position: absolute;\n    top: 50%;\n    margin-top: calc(-1 * calc(").concat(dt("icon.size"), " / 2));\n    width: ").concat(dt("icon.size"), ";\n    height: ").concat(dt("icon.size"), ";\n}\n\n.p-password:has(.p-password-toggle-mask-icon) .p-password-input {\n    padding-inline-end: calc((").concat(dt("form.field.padding.x"), " * 2) + ").concat(dt("icon.size"), ");\n}\n");
}, "theme");
var inlineStyles$4 = {
  root: /* @__PURE__ */ __name(function root22(_ref2) {
    var props = _ref2.props;
    return {
      position: props.appendTo === "self" ? "relative" : void 0
    };
  }, "root")
};
var classes$d = {
  root: /* @__PURE__ */ __name(function root23(_ref3) {
    var instance = _ref3.instance;
    return ["p-password p-component p-inputwrapper", {
      "p-inputwrapper-filled": instance.$filled,
      "p-inputwrapper-focus": instance.focused,
      "p-password-fluid": instance.$fluid
    }];
  }, "root"),
  pcInputText: "p-password-input",
  maskIcon: "p-password-toggle-mask-icon p-password-mask-icon",
  unmaskIcon: "p-password-toggle-mask-icon p-password-unmask-icon",
  overlay: "p-password-overlay p-component",
  content: "p-password-content",
  meter: "p-password-meter",
  meterLabel: /* @__PURE__ */ __name(function meterLabel(_ref4) {
    var instance = _ref4.instance;
    return "p-password-meter-label ".concat(instance.meter ? "p-password-meter-" + instance.meter.strength : "");
  }, "meterLabel"),
  meterText: "p-password-meter-text"
};
var PasswordStyle = BaseStyle.extend({
  name: "password",
  theme: theme$c,
  classes: classes$d,
  inlineStyles: inlineStyles$4
});
var script$1$d = {
  name: "BasePassword",
  "extends": script$1n,
  props: {
    promptLabel: {
      type: String,
      "default": null
    },
    mediumRegex: {
      type: [String, RegExp],
      "default": "^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})"
      // eslint-disable-line
    },
    strongRegex: {
      type: [String, RegExp],
      "default": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})"
      // eslint-disable-line
    },
    weakLabel: {
      type: String,
      "default": null
    },
    mediumLabel: {
      type: String,
      "default": null
    },
    strongLabel: {
      type: String,
      "default": null
    },
    feedback: {
      type: Boolean,
      "default": true
    },
    appendTo: {
      type: [String, Object],
      "default": "body"
    },
    toggleMask: {
      type: Boolean,
      "default": false
    },
    hideIcon: {
      type: String,
      "default": void 0
    },
    maskIcon: {
      type: String,
      "default": void 0
    },
    showIcon: {
      type: String,
      "default": void 0
    },
    unmaskIcon: {
      type: String,
      "default": void 0
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    placeholder: {
      type: String,
      "default": null
    },
    required: {
      type: Boolean,
      "default": false
    },
    inputId: {
      type: String,
      "default": null
    },
    inputClass: {
      type: [String, Object],
      "default": null
    },
    inputStyle: {
      type: Object,
      "default": null
    },
    inputProps: {
      type: null,
      "default": null
    },
    panelId: {
      type: String,
      "default": null
    },
    panelClass: {
      type: [String, Object],
      "default": null
    },
    panelStyle: {
      type: Object,
      "default": null
    },
    panelProps: {
      type: null,
      "default": null
    },
    overlayId: {
      type: String,
      "default": null
    },
    overlayClass: {
      type: [String, Object],
      "default": null
    },
    overlayStyle: {
      type: Object,
      "default": null
    },
    overlayProps: {
      type: null,
      "default": null
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    },
    autofocus: {
      type: Boolean,
      "default": null
    }
  },
  style: PasswordStyle,
  provide: /* @__PURE__ */ __name(function provide38() {
    return {
      $pcPassword: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$n = {
  name: "Password",
  "extends": script$1$d,
  inheritAttrs: false,
  emits: ["change", "focus", "blur", "invalid"],
  inject: {
    $pcFluid: {
      "default": null
    }
  },
  data: /* @__PURE__ */ __name(function data27() {
    return {
      id: this.$attrs.id,
      overlayVisible: false,
      meter: null,
      infoText: null,
      focused: false,
      unmasked: false
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId10(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId")
  },
  mediumCheckRegExp: null,
  strongCheckRegExp: null,
  resizeListener: null,
  scrollHandler: null,
  overlay: null,
  mounted: /* @__PURE__ */ __name(function mounted28() {
    this.id = this.id || UniqueComponentId();
    this.infoText = this.promptText;
    this.mediumCheckRegExp = new RegExp(this.mediumRegex);
    this.strongCheckRegExp = new RegExp(this.strongRegex);
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount12() {
    this.unbindResizeListener();
    if (this.scrollHandler) {
      this.scrollHandler.destroy();
      this.scrollHandler = null;
    }
    if (this.overlay) {
      ZIndex.clear(this.overlay);
      this.overlay = null;
    }
  }, "beforeUnmount"),
  methods: {
    onOverlayEnter: /* @__PURE__ */ __name(function onOverlayEnter4(el) {
      ZIndex.set("overlay", el, this.$primevue.config.zIndex.overlay);
      addStyle(el, {
        position: "absolute",
        top: "0",
        left: "0"
      });
      this.alignOverlay();
      this.bindScrollListener();
      this.bindResizeListener();
    }, "onOverlayEnter"),
    onOverlayLeave: /* @__PURE__ */ __name(function onOverlayLeave4() {
      this.unbindScrollListener();
      this.unbindResizeListener();
      this.overlay = null;
    }, "onOverlayLeave"),
    onOverlayAfterLeave: /* @__PURE__ */ __name(function onOverlayAfterLeave4(el) {
      ZIndex.clear(el);
    }, "onOverlayAfterLeave"),
    alignOverlay: /* @__PURE__ */ __name(function alignOverlay5() {
      if (this.appendTo === "self") {
        relativePosition(this.overlay, this.$refs.input.$el);
      } else {
        this.overlay.style.minWidth = getOuterWidth(this.$refs.input.$el) + "px";
        absolutePosition(this.overlay, this.$refs.input.$el);
      }
    }, "alignOverlay"),
    testStrength: /* @__PURE__ */ __name(function testStrength(str) {
      var level = 0;
      if (this.strongCheckRegExp.test(str)) level = 3;
      else if (this.mediumCheckRegExp.test(str)) level = 2;
      else if (str.length) level = 1;
      return level;
    }, "testStrength"),
    onInput: /* @__PURE__ */ __name(function onInput5(event2) {
      this.writeValue(event2.target.value, event2);
      this.$emit("change", event2);
    }, "onInput"),
    onFocus: /* @__PURE__ */ __name(function onFocus11(event2) {
      this.focused = true;
      if (this.feedback) {
        this.setPasswordMeter(this.d_value);
        this.overlayVisible = true;
      }
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur11(event2) {
      this.focused = false;
      if (this.feedback) {
        this.overlayVisible = false;
      }
      this.$emit("blur", event2);
    }, "onBlur"),
    onKeyUp: /* @__PURE__ */ __name(function onKeyUp(event2) {
      if (this.feedback) {
        var value2 = event2.target.value;
        var _this$checkPasswordSt = this.checkPasswordStrength(value2), meter = _this$checkPasswordSt.meter, label12 = _this$checkPasswordSt.label;
        this.meter = meter;
        this.infoText = label12;
        if (event2.code === "Escape") {
          this.overlayVisible && (this.overlayVisible = false);
          return;
        }
        if (!this.overlayVisible) {
          this.overlayVisible = true;
        }
      }
    }, "onKeyUp"),
    setPasswordMeter: /* @__PURE__ */ __name(function setPasswordMeter() {
      if (!this.d_value) {
        this.meter = null;
        this.infoText = this.promptText;
        return;
      }
      var _this$checkPasswordSt2 = this.checkPasswordStrength(this.d_value), meter = _this$checkPasswordSt2.meter, label12 = _this$checkPasswordSt2.label;
      this.meter = meter;
      this.infoText = label12;
      if (!this.overlayVisible) {
        this.overlayVisible = true;
      }
    }, "setPasswordMeter"),
    checkPasswordStrength: /* @__PURE__ */ __name(function checkPasswordStrength(value2) {
      var label12 = null;
      var meter = null;
      switch (this.testStrength(value2)) {
        case 1:
          label12 = this.weakText;
          meter = {
            strength: "weak",
            width: "33.33%"
          };
          break;
        case 2:
          label12 = this.mediumText;
          meter = {
            strength: "medium",
            width: "66.66%"
          };
          break;
        case 3:
          label12 = this.strongText;
          meter = {
            strength: "strong",
            width: "100%"
          };
          break;
        default:
          label12 = this.promptText;
          meter = null;
          break;
      }
      return {
        label: label12,
        meter
      };
    }, "checkPasswordStrength"),
    onInvalid: /* @__PURE__ */ __name(function onInvalid(event2) {
      this.$emit("invalid", event2);
    }, "onInvalid"),
    bindScrollListener: /* @__PURE__ */ __name(function bindScrollListener6() {
      var _this = this;
      if (!this.scrollHandler) {
        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.input.$el, function() {
          if (_this.overlayVisible) {
            _this.overlayVisible = false;
          }
        });
      }
      this.scrollHandler.bindScrollListener();
    }, "bindScrollListener"),
    unbindScrollListener: /* @__PURE__ */ __name(function unbindScrollListener6() {
      if (this.scrollHandler) {
        this.scrollHandler.unbindScrollListener();
      }
    }, "unbindScrollListener"),
    bindResizeListener: /* @__PURE__ */ __name(function bindResizeListener6() {
      var _this2 = this;
      if (!this.resizeListener) {
        this.resizeListener = function() {
          if (_this2.overlayVisible && !isTouchDevice()) {
            _this2.overlayVisible = false;
          }
        };
        window.addEventListener("resize", this.resizeListener);
      }
    }, "bindResizeListener"),
    unbindResizeListener: /* @__PURE__ */ __name(function unbindResizeListener6() {
      if (this.resizeListener) {
        window.removeEventListener("resize", this.resizeListener);
        this.resizeListener = null;
      }
    }, "unbindResizeListener"),
    overlayRef: /* @__PURE__ */ __name(function overlayRef4(el) {
      this.overlay = el;
    }, "overlayRef"),
    onMaskToggle: /* @__PURE__ */ __name(function onMaskToggle() {
      this.unmasked = !this.unmasked;
    }, "onMaskToggle"),
    onOverlayClick: /* @__PURE__ */ __name(function onOverlayClick5(event2) {
      OverlayEventBus.emit("overlay-click", {
        originalEvent: event2,
        target: this.$el
      });
    }, "onOverlayClick")
  },
  computed: {
    inputType: /* @__PURE__ */ __name(function inputType2() {
      return this.unmasked ? "text" : "password";
    }, "inputType"),
    weakText: /* @__PURE__ */ __name(function weakText() {
      return this.weakLabel || this.$primevue.config.locale.weak;
    }, "weakText"),
    mediumText: /* @__PURE__ */ __name(function mediumText() {
      return this.mediumLabel || this.$primevue.config.locale.medium;
    }, "mediumText"),
    strongText: /* @__PURE__ */ __name(function strongText() {
      return this.strongLabel || this.$primevue.config.locale.strong;
    }, "strongText"),
    promptText: /* @__PURE__ */ __name(function promptText() {
      return this.promptLabel || this.$primevue.config.locale.passwordPrompt;
    }, "promptText"),
    overlayUniqueId: /* @__PURE__ */ __name(function overlayUniqueId() {
      return this.id + "_overlay";
    }, "overlayUniqueId")
  },
  components: {
    InputText: script$1o,
    Portal: script$1f,
    EyeSlashIcon: script$o,
    EyeIcon: script$N
  }
};
function _typeof$a(o) {
  "@babel/helpers - typeof";
  return _typeof$a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$a(o);
}
__name(_typeof$a, "_typeof$a");
function ownKeys$9(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$9, "ownKeys$9");
function _objectSpread$9(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$9(Object(t2), true).forEach(function(r2) {
      _defineProperty$a(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$9(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$9, "_objectSpread$9");
function _defineProperty$a(e, r, t2) {
  return (r = _toPropertyKey$a(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$a, "_defineProperty$a");
function _toPropertyKey$a(t2) {
  var i = _toPrimitive$a(t2, "string");
  return "symbol" == _typeof$a(i) ? i : i + "";
}
__name(_toPropertyKey$a, "_toPropertyKey$a");
function _toPrimitive$a(t2, r) {
  if ("object" != _typeof$a(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$a(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$a, "_toPrimitive$a");
var _hoisted_1$c = ["id"];
function render$k(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_InputText = resolveComponent("InputText");
  var _component_Portal = resolveComponent("Portal");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    style: _ctx.sx("root")
  }, _ctx.ptmi("root")), [createVNode(_component_InputText, mergeProps({
    ref: "input",
    id: _ctx.inputId,
    type: $options.inputType,
    "class": [_ctx.cx("pcInputText"), _ctx.inputClass],
    style: _ctx.inputStyle,
    value: _ctx.d_value,
    name: _ctx.$formName,
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel,
    "aria-controls": _ctx.overlayProps && _ctx.overlayProps.id || _ctx.overlayId || _ctx.panelProps && _ctx.panelProps.id || _ctx.panelId || $options.overlayUniqueId,
    "aria-expanded": $data.overlayVisible,
    "aria-haspopup": true,
    placeholder: _ctx.placeholder,
    required: _ctx.required,
    fluid: _ctx.fluid,
    disabled: _ctx.disabled,
    variant: _ctx.variant,
    invalid: _ctx.invalid,
    size: _ctx.size,
    autofocus: _ctx.autofocus,
    onInput: $options.onInput,
    onFocus: $options.onFocus,
    onBlur: $options.onBlur,
    onKeyup: $options.onKeyUp,
    onInvalid: $options.onInvalid
  }, _ctx.inputProps, {
    pt: _ctx.ptm("pcInputText"),
    unstyled: _ctx.unstyled
  }), null, 16, ["id", "type", "class", "style", "value", "name", "aria-labelledby", "aria-label", "aria-controls", "aria-expanded", "placeholder", "required", "fluid", "disabled", "variant", "invalid", "size", "autofocus", "onInput", "onFocus", "onBlur", "onKeyup", "onInvalid", "pt", "unstyled"]), _ctx.toggleMask && $data.unmasked ? renderSlot(_ctx.$slots, _ctx.$slots.maskicon ? "maskicon" : "hideicon", {
    key: 0,
    toggleCallback: $options.onMaskToggle
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.maskIcon ? "i" : "EyeSlashIcon"), mergeProps({
      "class": [_ctx.cx("maskIcon"), _ctx.maskIcon],
      onClick: $options.onMaskToggle
    }, _ctx.ptm("maskIcon")), null, 16, ["class", "onClick"]))];
  }) : createCommentVNode("", true), _ctx.toggleMask && !$data.unmasked ? renderSlot(_ctx.$slots, _ctx.$slots.unmaskicon ? "unmaskicon" : "showicon", {
    key: 1,
    toggleCallback: $options.onMaskToggle
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.unmaskIcon ? "i" : "EyeIcon"), mergeProps({
      "class": [_ctx.cx("unmaskIcon"), _ctx.unmaskIcon],
      onClick: $options.onMaskToggle
    }, _ctx.ptm("unmaskIcon")), null, 16, ["class", "onClick"]))];
  }) : createCommentVNode("", true), createBaseVNode("span", mergeProps({
    "class": "p-hidden-accessible",
    "aria-live": "polite"
  }, _ctx.ptm("hiddenAccesible"), {
    "data-p-hidden-accessible": true
  }), toDisplayString($data.infoText), 17), createVNode(_component_Portal, {
    appendTo: _ctx.appendTo
  }, {
    "default": withCtx(function() {
      return [createVNode(Transition, mergeProps({
        name: "p-connected-overlay",
        onEnter: $options.onOverlayEnter,
        onLeave: $options.onOverlayLeave,
        onAfterLeave: $options.onOverlayAfterLeave
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [$data.overlayVisible ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.overlayRef,
            id: _ctx.overlayId || _ctx.panelId || $options.overlayUniqueId,
            "class": [_ctx.cx("overlay"), _ctx.panelClass, _ctx.overlayClass],
            style: [_ctx.overlayStyle, _ctx.panelStyle],
            onClick: _cache[0] || (_cache[0] = function() {
              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);
            })
          }, _objectSpread$9(_objectSpread$9(_objectSpread$9({}, _ctx.panelProps), _ctx.overlayProps), _ctx.ptm("overlay"))), [renderSlot(_ctx.$slots, "header"), renderSlot(_ctx.$slots, "content", {}, function() {
            return [createBaseVNode("div", mergeProps({
              "class": _ctx.cx("content")
            }, _ctx.ptm("content")), [createBaseVNode("div", mergeProps({
              "class": _ctx.cx("meter")
            }, _ctx.ptm("meter")), [createBaseVNode("div", mergeProps({
              "class": _ctx.cx("meterLabel"),
              style: {
                width: $data.meter ? $data.meter.width : ""
              }
            }, _ctx.ptm("meterLabel")), null, 16)], 16), createBaseVNode("div", mergeProps({
              "class": _ctx.cx("meterText")
            }, _ctx.ptm("meterText")), toDisplayString($data.infoText), 17)], 16)];
          }), renderSlot(_ctx.$slots, "footer")], 16, _hoisted_1$c)) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onEnter", "onLeave", "onAfterLeave"])];
    }),
    _: 3
  }, 8, ["appendTo"])], 16);
}
__name(render$k, "render$k");
script$n.render = render$k;
var theme$b = /* @__PURE__ */ __name(function theme29(_ref) {
  var dt = _ref.dt;
  return "\n.p-picklist {\n    display: flex;\n    gap: ".concat(dt("picklist.gap"), ";\n}\n\n.p-picklist-controls {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: ").concat(dt("picklist.controls.gap"), ";\n}\n\n.p-picklist-list-container {\n    flex: 1 1 50%;\n}\n\n.p-picklist .p-listbox {\n    height: 100%;\n}\n");
}, "theme");
var classes$c = {
  root: "p-picklist p-component",
  sourceControls: "p-picklist-controls p-picklist-source-controls",
  sourceListContainer: "p-picklist-list-container p-picklist-source-list-container",
  transferControls: "p-picklist-controls p-picklist-transfer-controls",
  targetListContainer: "p-picklist-list-container p-picklist-target-list-container",
  targetControls: "p-picklist-controls p-picklist-target-controls"
};
var PickListStyle = BaseStyle.extend({
  name: "picklist",
  theme: theme$b,
  classes: classes$c
});
var script$1$c = {
  name: "BasePickList",
  "extends": script$1d,
  props: {
    modelValue: {
      type: Array,
      "default": /* @__PURE__ */ __name(function _default14() {
        return [[], []];
      }, "_default")
    },
    selection: {
      type: Array,
      "default": /* @__PURE__ */ __name(function _default15() {
        return [[], []];
      }, "_default")
    },
    dataKey: {
      type: String,
      "default": null
    },
    listStyle: {
      type: null,
      "default": null
    },
    metaKeySelection: {
      type: Boolean,
      "default": false
    },
    autoOptionFocus: {
      type: Boolean,
      "default": true
    },
    focusOnHover: {
      type: Boolean,
      "default": true
    },
    responsive: {
      type: Boolean,
      "default": true
    },
    breakpoint: {
      type: String,
      "default": "960px"
    },
    striped: {
      type: Boolean,
      "default": false
    },
    scrollHeight: {
      type: String,
      "default": "14rem"
    },
    showSourceControls: {
      type: Boolean,
      "default": true
    },
    showTargetControls: {
      type: Boolean,
      "default": true
    },
    buttonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default16() {
        return {
          severity: "secondary"
        };
      }, "_default")
    },
    moveUpButtonProps: {
      type: null,
      "default": null
    },
    moveTopButtonProps: {
      type: null,
      "default": null
    },
    moveDownButtonProps: {
      type: null,
      "default": null
    },
    moveBottomButtonProps: {
      type: null,
      "default": null
    },
    moveToTargetProps: {
      type: null,
      "default": null
    },
    moveAllToTargetProps: {
      type: null,
      "default": null
    },
    moveToSourceProps: {
      type: null,
      "default": null
    },
    moveAllToSourceProps: {
      type: null,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": 0
    },
    disabled: {
      type: Boolean,
      "default": false
    }
  },
  style: PickListStyle,
  provide: /* @__PURE__ */ __name(function provide39() {
    return {
      $pcPickList: this,
      $parentInstance: this
    };
  }, "provide")
};
function _toConsumableArray$4(r) {
  return _arrayWithoutHoles$4(r) || _iterableToArray$4(r) || _unsupportedIterableToArray$4(r) || _nonIterableSpread$4();
}
__name(_toConsumableArray$4, "_toConsumableArray$4");
function _nonIterableSpread$4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$4, "_nonIterableSpread$4");
function _unsupportedIterableToArray$4(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$4(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$4(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$4, "_unsupportedIterableToArray$4");
function _iterableToArray$4(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$4, "_iterableToArray$4");
function _arrayWithoutHoles$4(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$4(r);
}
__name(_arrayWithoutHoles$4, "_arrayWithoutHoles$4");
function _arrayLikeToArray$4(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$4, "_arrayLikeToArray$4");
var script$m = {
  name: "PickList",
  "extends": script$1$c,
  inheritAttrs: false,
  emits: ["update:modelValue", "reorder", "update:selection", "selection-change", "move-to-target", "move-to-source", "move-all-to-target", "move-all-to-source", "focus", "blur"],
  itemTouched: false,
  reorderDirection: null,
  styleElement: null,
  media: null,
  mediaChangeListener: null,
  data: /* @__PURE__ */ __name(function data28() {
    return {
      id: this.$attrs.id,
      d_selection: this.selection,
      viewChanged: false
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId11(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    selection: /* @__PURE__ */ __name(function selection(newValue) {
      this.d_selection = newValue;
    }, "selection"),
    breakpoint: /* @__PURE__ */ __name(function breakpoint() {
      this.destroyMedia();
      this.initMedia();
    }, "breakpoint")
  },
  updated: /* @__PURE__ */ __name(function updated7() {
    if (this.reorderDirection) {
      this.updateListScroll(this.$refs.sourceList.$el);
      this.updateListScroll(this.$refs.targetList.$el);
      this.reorderDirection = null;
    }
  }, "updated"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount13() {
    this.destroyStyle();
    this.destroyMedia();
  }, "beforeUnmount"),
  mounted: /* @__PURE__ */ __name(function mounted29() {
    this.id = this.id || UniqueComponentId();
    if (this.responsive) {
      this.createStyle();
      this.initMedia();
    }
  }, "mounted"),
  methods: {
    updateSelection: /* @__PURE__ */ __name(function updateSelection2(event2) {
      this.$emit("update:selection", this.d_selection);
      this.$emit("selection-change", {
        originalEvent: event2,
        value: this.d_selection
      });
    }, "updateSelection"),
    onChangeSelection: /* @__PURE__ */ __name(function onChangeSelection2(params, listIndex) {
      this.d_selection[listIndex] = params.value;
      this.updateSelection(params.event);
    }, "onChangeSelection"),
    onListFocus: /* @__PURE__ */ __name(function onListFocus4(event2, listType) {
      this.$emit("focus", event2, listType);
    }, "onListFocus"),
    onListBlur: /* @__PURE__ */ __name(function onListBlur4(event2, listType) {
      this.$emit("blur", event2, listType);
    }, "onListBlur"),
    onReorderUpdate: /* @__PURE__ */ __name(function onReorderUpdate2(event2, value2, listIndex) {
      this.$emit("update:modelValue", value2);
      this.$emit("reorder", {
        originalEvent: event2,
        value: value2,
        direction: this.reorderDirection,
        listIndex
      });
    }, "onReorderUpdate"),
    onItemDblClick: /* @__PURE__ */ __name(function onItemDblClick(event2, listIndex) {
      if (listIndex === 0) this.moveToTarget({
        event: event2.originalEvent
      });
      else if (listIndex === 1) this.moveToSource({
        event: event2.originalEvent
      });
    }, "onItemDblClick"),
    moveUp: /* @__PURE__ */ __name(function moveUp2(event2, listIndex) {
      if (this.d_selection && this.d_selection[listIndex]) {
        var valueList = _toConsumableArray$4(this.modelValue[listIndex]);
        var selectionList = this.d_selection[listIndex];
        for (var i = 0; i < selectionList.length; i++) {
          var selectedItem = selectionList[i];
          var selectedItemIndex = findIndexInList(selectedItem, valueList);
          if (selectedItemIndex !== 0) {
            var movedItem = valueList[selectedItemIndex];
            var temp = valueList[selectedItemIndex - 1];
            valueList[selectedItemIndex - 1] = movedItem;
            valueList[selectedItemIndex] = temp;
          } else {
            break;
          }
        }
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[listIndex] = valueList;
        this.reorderDirection = "up";
        this.onReorderUpdate(event2, value2, listIndex);
      }
    }, "moveUp"),
    moveTop: /* @__PURE__ */ __name(function moveTop2(event2, listIndex) {
      if (this.d_selection) {
        var valueList = _toConsumableArray$4(this.modelValue[listIndex]);
        var selectionList = this.d_selection[listIndex];
        for (var i = 0; i < selectionList.length; i++) {
          var selectedItem = selectionList[i];
          var selectedItemIndex = findIndexInList(selectedItem, valueList);
          if (selectedItemIndex !== 0) {
            var movedItem = valueList.splice(selectedItemIndex, 1)[0];
            valueList.unshift(movedItem);
          } else {
            break;
          }
        }
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[listIndex] = valueList;
        this.reorderDirection = "top";
        this.onReorderUpdate(event2, value2, listIndex);
      }
    }, "moveTop"),
    moveDown: /* @__PURE__ */ __name(function moveDown2(event2, listIndex) {
      if (this.d_selection) {
        var valueList = _toConsumableArray$4(this.modelValue[listIndex]);
        var selectionList = this.d_selection[listIndex];
        for (var i = selectionList.length - 1; i >= 0; i--) {
          var selectedItem = selectionList[i];
          var selectedItemIndex = findIndexInList(selectedItem, valueList);
          if (selectedItemIndex !== valueList.length - 1) {
            var movedItem = valueList[selectedItemIndex];
            var temp = valueList[selectedItemIndex + 1];
            valueList[selectedItemIndex + 1] = movedItem;
            valueList[selectedItemIndex] = temp;
          } else {
            break;
          }
        }
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[listIndex] = valueList;
        this.reorderDirection = "down";
        this.onReorderUpdate(event2, value2, listIndex);
      }
    }, "moveDown"),
    moveBottom: /* @__PURE__ */ __name(function moveBottom2(event2, listIndex) {
      if (this.d_selection) {
        var valueList = _toConsumableArray$4(this.modelValue[listIndex]);
        var selectionList = this.d_selection[listIndex];
        for (var i = selectionList.length - 1; i >= 0; i--) {
          var selectedItem = selectionList[i];
          var selectedItemIndex = findIndexInList(selectedItem, valueList);
          if (selectedItemIndex !== valueList.length - 1) {
            var movedItem = valueList.splice(selectedItemIndex, 1)[0];
            valueList.push(movedItem);
          } else {
            break;
          }
        }
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[listIndex] = valueList;
        this.reorderDirection = "bottom";
        this.onReorderUpdate(event2, value2, listIndex);
      }
    }, "moveBottom"),
    moveToTarget: /* @__PURE__ */ __name(function moveToTarget(event2) {
      var selection2 = this.d_selection && this.d_selection[0] ? this.d_selection[0] : null;
      var sourceList2 = _toConsumableArray$4(this.modelValue[0]);
      var targetList2 = _toConsumableArray$4(this.modelValue[1]);
      if (selection2) {
        for (var i = 0; i < selection2.length; i++) {
          var selectedItem = selection2[i];
          if (findIndexInList(selectedItem, targetList2) == -1) {
            targetList2.push(sourceList2.splice(findIndexInList(selectedItem, sourceList2), 1)[0]);
          }
        }
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[0] = sourceList2;
        value2[1] = targetList2;
        this.$emit("update:modelValue", value2);
        this.$emit("move-to-target", {
          originalEvent: event2,
          items: _toConsumableArray$4(new Set(selection2))
        });
        this.d_selection[0] = [];
        this.updateSelection(event2);
      }
    }, "moveToTarget"),
    moveAllToTarget: /* @__PURE__ */ __name(function moveAllToTarget(event2) {
      if (this.modelValue[0]) {
        var sourceList2 = _toConsumableArray$4(this.modelValue[0]);
        var targetList2 = _toConsumableArray$4(this.modelValue[1]);
        this.$emit("move-all-to-target", {
          originalEvent: event2,
          items: sourceList2
        });
        targetList2 = [].concat(_toConsumableArray$4(targetList2), _toConsumableArray$4(sourceList2));
        sourceList2 = [];
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[0] = sourceList2;
        value2[1] = targetList2;
        this.$emit("update:modelValue", value2);
        this.d_selection = [[], []];
        this.updateSelection(event2);
      }
    }, "moveAllToTarget"),
    moveToSource: /* @__PURE__ */ __name(function moveToSource(event2) {
      var selection2 = this.d_selection && this.d_selection[1] ? this.d_selection[1] : null;
      var sourceList2 = _toConsumableArray$4(this.modelValue[0]);
      var targetList2 = _toConsumableArray$4(this.modelValue[1]);
      if (selection2) {
        for (var i = 0; i < selection2.length; i++) {
          var selectedItem = selection2[i];
          if (findIndexInList(selectedItem, sourceList2) == -1) {
            sourceList2.push(targetList2.splice(findIndexInList(selectedItem, targetList2), 1)[0]);
          }
        }
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[0] = sourceList2;
        value2[1] = targetList2;
        this.$emit("update:modelValue", value2);
        this.$emit("move-to-source", {
          originalEvent: event2,
          items: _toConsumableArray$4(new Set(selection2))
        });
        this.d_selection[1] = [];
        this.updateSelection(event2);
      }
    }, "moveToSource"),
    moveAllToSource: /* @__PURE__ */ __name(function moveAllToSource(event2) {
      if (this.modelValue[1]) {
        var sourceList2 = _toConsumableArray$4(this.modelValue[0]);
        var targetList2 = _toConsumableArray$4(this.modelValue[1]);
        this.$emit("move-all-to-source", {
          originalEvent: event2,
          items: targetList2
        });
        sourceList2 = [].concat(_toConsumableArray$4(sourceList2), _toConsumableArray$4(targetList2));
        targetList2 = [];
        var value2 = _toConsumableArray$4(this.modelValue);
        value2[0] = sourceList2;
        value2[1] = targetList2;
        this.$emit("update:modelValue", value2);
        this.d_selection = [[], []];
        this.updateSelection(event2);
      }
    }, "moveAllToSource"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick6(event2, item8, index, listIndex) {
      var listType = listIndex === 0 ? "sourceList" : "targetList";
      this.itemTouched = false;
      var selectionList = this.d_selection[listIndex];
      var selectedIndex = findIndexInList(item8, selectionList);
      var selected3 = selectedIndex != -1;
      var metaSelection = this.itemTouched ? false : this.metaKeySelection;
      var selectedId = find(this.$refs[listType].$el, '[data-pc-section="item"]')[index].getAttribute("id");
      this.focusedOptionIndex = selectedId;
      var _selection;
      if (metaSelection) {
        var metaKey = event2.metaKey || event2.ctrlKey;
        if (selected3 && metaKey) {
          _selection = selectionList.filter(function(val, index2) {
            return index2 !== selectedIndex;
          });
        } else {
          _selection = metaKey ? selectionList ? _toConsumableArray$4(selectionList) : [] : [];
          _selection.push(item8);
        }
      } else {
        if (selected3) {
          _selection = selectionList.filter(function(val, index2) {
            return index2 !== selectedIndex;
          });
        } else {
          _selection = selectionList ? _toConsumableArray$4(selectionList) : [];
          _selection.push(item8);
        }
      }
      var newSelection = _toConsumableArray$4(this.d_selection);
      newSelection[listIndex] = _selection;
      this.d_selection = newSelection;
      this.updateSelection(event2);
    }, "onItemClick"),
    updateListScroll: /* @__PURE__ */ __name(function updateListScroll2(listElement) {
      var listItems = find(listElement, '[data-pc-section="item"][data-p-selected="true"]');
      if (listItems && listItems.length) {
        switch (this.reorderDirection) {
          case "up":
            scrollInView(listElement, listItems[0]);
            break;
          case "top":
            listElement.scrollTop = 0;
            break;
          case "down":
            scrollInView(listElement, listItems[listItems.length - 1]);
            break;
          case "bottom":
            listElement.scrollTop = listElement.scrollHeight;
            break;
        }
      }
    }, "updateListScroll"),
    initMedia: /* @__PURE__ */ __name(function initMedia() {
      this.media = window.matchMedia("(max-width: ".concat(this.breakpoint, ")"));
      this.viewChanged = this.media.matches;
      this.bindMediaChangeListener();
    }, "initMedia"),
    destroyMedia: /* @__PURE__ */ __name(function destroyMedia() {
      this.unbindMediaChangeListener();
    }, "destroyMedia"),
    bindMediaChangeListener: /* @__PURE__ */ __name(function bindMediaChangeListener() {
      var _this = this;
      if (this.media && !this.mediaChangeListener) {
        this.mediaChangeListener = function(event2) {
          _this.viewChanged = event2.matches;
        };
        this.media.addEventListener("change", this.mediaChangeListener);
      }
    }, "bindMediaChangeListener"),
    unbindMediaChangeListener: /* @__PURE__ */ __name(function unbindMediaChangeListener() {
      if (this.media && this.mediaChangeListener) {
        this.media.removeEventListener("change", this.mediaChangeListener);
        this.mediaChangeListener = null;
      }
    }, "unbindMediaChangeListener"),
    createStyle: /* @__PURE__ */ __name(function createStyle2() {
      if (!this.styleElement && !this.isUnstyled) {
        var _this$$primevue;
        this.styleElement = document.createElement("style");
        this.styleElement.type = "text/css";
        setAttribute(this.styleElement, "nonce", (_this$$primevue = this.$primevue) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.config) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.csp) === null || _this$$primevue === void 0 ? void 0 : _this$$primevue.nonce);
        document.head.appendChild(this.styleElement);
        var innerHTML = "\n@media screen and (max-width: ".concat(this.breakpoint, ") {\n    .p-picklist[").concat(this.$attrSelector, "] {\n        flex-direction: column;\n    }\n\n    .p-picklist[").concat(this.$attrSelector, "] .p-picklist-controls {\n        flex-direction: row;\n    }\n}\n");
        this.styleElement.innerHTML = innerHTML;
      }
    }, "createStyle"),
    destroyStyle: /* @__PURE__ */ __name(function destroyStyle2() {
      if (this.styleElement) {
        document.head.removeChild(this.styleElement);
        this.styleElement = null;
      }
    }, "destroyStyle"),
    moveDisabled: /* @__PURE__ */ __name(function moveDisabled2(index) {
      return this.disabled ? true : this.d_selection && (!this.d_selection[index] || !this.d_selection[index].length) ? true : false;
    }, "moveDisabled"),
    moveAllDisabled: /* @__PURE__ */ __name(function moveAllDisabled(list2) {
      return this.disabled ? true : isEmpty(this[list2]);
    }, "moveAllDisabled")
  },
  computed: {
    idSource: /* @__PURE__ */ __name(function idSource() {
      return "".concat(this.id, "_source");
    }, "idSource"),
    idTarget: /* @__PURE__ */ __name(function idTarget() {
      return "".concat(this.id, "_target");
    }, "idTarget"),
    sourceList: /* @__PURE__ */ __name(function sourceList() {
      return this.modelValue && this.modelValue[0] ? this.modelValue[0] : null;
    }, "sourceList"),
    targetList: /* @__PURE__ */ __name(function targetList() {
      return this.modelValue && this.modelValue[1] ? this.modelValue[1] : null;
    }, "targetList"),
    moveUpAriaLabel: /* @__PURE__ */ __name(function moveUpAriaLabel2() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveUp : void 0;
    }, "moveUpAriaLabel"),
    moveTopAriaLabel: /* @__PURE__ */ __name(function moveTopAriaLabel2() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveTop : void 0;
    }, "moveTopAriaLabel"),
    moveDownAriaLabel: /* @__PURE__ */ __name(function moveDownAriaLabel2() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveDown : void 0;
    }, "moveDownAriaLabel"),
    moveBottomAriaLabel: /* @__PURE__ */ __name(function moveBottomAriaLabel2() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveBottom : void 0;
    }, "moveBottomAriaLabel"),
    moveToTargetAriaLabel: /* @__PURE__ */ __name(function moveToTargetAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveToTarget : void 0;
    }, "moveToTargetAriaLabel"),
    moveAllToTargetAriaLabel: /* @__PURE__ */ __name(function moveAllToTargetAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveAllToTarget : void 0;
    }, "moveAllToTargetAriaLabel"),
    moveToSourceAriaLabel: /* @__PURE__ */ __name(function moveToSourceAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveToSource : void 0;
    }, "moveToSourceAriaLabel"),
    moveAllToSourceAriaLabel: /* @__PURE__ */ __name(function moveAllToSourceAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.moveAllToSource : void 0;
    }, "moveAllToSourceAriaLabel")
  },
  components: {
    Listbox: script$1O,
    Button: script$1e,
    AngleRightIcon: script$1q,
    AngleLeftIcon: script$1R,
    AngleDownIcon: script$1H,
    AngleUpIcon: script$1P,
    AngleDoubleRightIcon: script$1S,
    AngleDoubleLeftIcon: script$1T,
    AngleDoubleDownIcon: script$u,
    AngleDoubleUpIcon: script$t
  },
  directives: {
    ripple: Ripple
  }
};
function _typeof$9(o) {
  "@babel/helpers - typeof";
  return _typeof$9 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$9(o);
}
__name(_typeof$9, "_typeof$9");
function ownKeys$8(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$8, "ownKeys$8");
function _objectSpread$8(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$8(Object(t2), true).forEach(function(r2) {
      _defineProperty$9(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$8(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$8, "_objectSpread$8");
function _defineProperty$9(e, r, t2) {
  return (r = _toPropertyKey$9(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$9, "_defineProperty$9");
function _toPropertyKey$9(t2) {
  var i = _toPrimitive$9(t2, "string");
  return "symbol" == _typeof$9(i) ? i : i + "";
}
__name(_toPropertyKey$9, "_toPropertyKey$9");
function _toPrimitive$9(t2, r) {
  if ("object" != _typeof$9(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$9(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$9, "_toPrimitive$9");
function render$j(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_AngleUpIcon = resolveComponent("AngleUpIcon");
  var _component_Button = resolveComponent("Button");
  var _component_AngleDoubleUpIcon = resolveComponent("AngleDoubleUpIcon");
  var _component_AngleDownIcon = resolveComponent("AngleDownIcon");
  var _component_AngleDoubleDownIcon = resolveComponent("AngleDoubleDownIcon");
  var _component_Listbox = resolveComponent("Listbox");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [_ctx.showSourceControls ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": _ctx.cx("sourceControls")
  }, _ctx.ptm("sourceControls"), {
    "data-pc-group-section": "controls"
  }), [renderSlot(_ctx.$slots, "sourcecontrolsstart"), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveUpAriaLabel,
    disabled: $options.moveDisabled(0),
    onClick: _cache[0] || (_cache[0] = function($event) {
      return $options.moveUp($event, 0);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveUpButtonProps), {
    pt: _ctx.ptm("pcSourceMoveUpButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "moveupicon", {}, function() {
        return [createVNode(_component_AngleUpIcon, mergeProps(_ctx.ptm("pcSourceMoveUpButton")["icon"], {
          "data-pc-section": "moveupicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveTopAriaLabel,
    disabled: $options.moveDisabled(0),
    onClick: _cache[1] || (_cache[1] = function($event) {
      return $options.moveTop($event, 0);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveTopButtonProps), {
    pt: _ctx.ptm("pcSourceMoveTopButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movetopicon", {}, function() {
        return [createVNode(_component_AngleDoubleUpIcon, mergeProps(_ctx.ptm("pcSourceMoveTopButton")["icon"], {
          "data-pc-section": "movetopicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveDownAriaLabel,
    disabled: $options.moveDisabled(0),
    onClick: _cache[2] || (_cache[2] = function($event) {
      return $options.moveDown($event, 0);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveDownButtonProps), {
    pt: _ctx.ptm("pcSourceMoveDownButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movedownicon", {}, function() {
        return [createVNode(_component_AngleDownIcon, mergeProps(_ctx.ptm("pcSourceMoveDownButton")["icon"], {
          "data-pc-section": "movedownicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveBottomAriaLabel,
    disabled: $options.moveDisabled(0),
    onClick: _cache[3] || (_cache[3] = function($event) {
      return $options.moveBottom($event, 0);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveBottomButtonProps), {
    pt: _ctx.ptm("pcSourceMoveBottomButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movebottomicon", {}, function() {
        return [createVNode(_component_AngleDoubleDownIcon, mergeProps(_ctx.ptm("pcSourceMoveBottomButton")["icon"], {
          "data-pc-section": "movebottomicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), renderSlot(_ctx.$slots, "sourcecontrolsend")], 16)) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("sourceListContainer")
  }, _ctx.ptm("sourceListContainer"), {
    "data-pc-group-section": "listcontainer"
  }), [createVNode(_component_Listbox, {
    ref: "sourceList",
    id: $options.idSource + "_list",
    modelValue: $data.d_selection[0],
    options: $options.sourceList,
    multiple: "",
    metaKeySelection: _ctx.metaKeySelection,
    listStyle: _ctx.listStyle,
    scrollHeight: _ctx.scrollHeight,
    tabindex: $options.sourceList && $options.sourceList.length > 0 ? _ctx.tabindex : -1,
    dataKey: _ctx.dataKey,
    autoOptionFocus: _ctx.autoOptionFocus,
    focusOnHover: _ctx.focusOnHover,
    striped: _ctx.striped,
    disabled: _ctx.disabled,
    pt: _ctx.ptm("pcListbox"),
    unstyled: _ctx.unstyled,
    onFocus: _cache[4] || (_cache[4] = function($event) {
      return $options.onListFocus($event, "sourceList");
    }),
    onBlur: _cache[5] || (_cache[5] = function($event) {
      return $options.onListBlur($event, "sourceList");
    }),
    onChange: _cache[6] || (_cache[6] = function($event) {
      return $options.onChangeSelection($event, 0);
    }),
    onItemDblclick: _cache[7] || (_cache[7] = function($event) {
      return $options.onItemDblClick($event, 0);
    }),
    "data-pc-group-section": "list"
  }, createSlots({
    option: withCtx(function(_ref) {
      var option4 = _ref.option, selected3 = _ref.selected, index = _ref.index;
      return [renderSlot(_ctx.$slots, _ctx.$slots.option ? "option" : "item", {
        item: option4,
        option: option4,
        selected: selected3,
        index
      })];
    }),
    _: 2
  }, [_ctx.$slots.sourceheader ? {
    name: "header",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "sourceheader")];
    }),
    key: "0"
  } : void 0]), 1032, ["id", "modelValue", "options", "metaKeySelection", "listStyle", "scrollHeight", "tabindex", "dataKey", "autoOptionFocus", "focusOnHover", "striped", "disabled", "pt", "unstyled"])], 16), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("transferControls")
  }, _ctx.ptm("transferControls"), {
    "data-pc-group-section": "controls"
  }), [renderSlot(_ctx.$slots, "movecontrolsstart"), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveToTargetAriaLabel,
    onClick: $options.moveToTarget,
    disabled: $options.moveDisabled(0)
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveToTargetProps), {
    pt: _ctx.ptm("pcMoveToTargetButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movetotargeticon", {
        viewChanged: $data.viewChanged
      }, function() {
        return [(openBlock(), createBlock(resolveDynamicComponent($data.viewChanged ? "AngleDownIcon" : "AngleRightIcon"), mergeProps(_ctx.ptm("pcMoveToTargetButton")["icon"], {
          "data-pc-section": "movetotargeticon"
        }), null, 16))];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "onClick", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveAllToTargetAriaLabel,
    onClick: $options.moveAllToTarget,
    disabled: $options.moveAllDisabled("sourceList")
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveAllToTargetProps), {
    pt: _ctx.ptm("pcMoveAllToTargetButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movealltotargeticon", {
        viewChanged: $data.viewChanged
      }, function() {
        return [(openBlock(), createBlock(resolveDynamicComponent($data.viewChanged ? "AngleDoubleDownIcon" : "AngleDoubleRightIcon"), mergeProps(_ctx.ptm("pcMoveAllToTargetButton")["icon"], {
          "data-pc-section": "movealltotargeticon"
        }), null, 16))];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "onClick", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveToSourceAriaLabel,
    onClick: $options.moveToSource,
    disabled: $options.moveDisabled(1)
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveToSourceProps), {
    pt: _ctx.ptm("pcMoveToSourceButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movetosourceicon", {
        viewChanged: $data.viewChanged
      }, function() {
        return [(openBlock(), createBlock(resolveDynamicComponent($data.viewChanged ? "AngleUpIcon" : "AngleLeftIcon"), mergeProps(_ctx.ptm("pcMoveToSourceButton")["icon"], {
          "data-pc-section": "movetosourceicon"
        }), null, 16))];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "onClick", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveAllToSourceAriaLabel,
    onClick: $options.moveAllToSource,
    disabled: $options.moveAllDisabled("targetList")
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveAllToSourceProps), {
    pt: _ctx.ptm("pcMoveAllToSourceButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movealltosourceicon", {
        viewChanged: $data.viewChanged
      }, function() {
        return [(openBlock(), createBlock(resolveDynamicComponent($data.viewChanged ? "AngleDoubleUpIcon" : "AngleDoubleLeftIcon"), mergeProps(_ctx.ptm("pcMoveAllToSourceButton")["icon"], {
          "data-pc-section": "movealltosourceicon"
        }), null, 16))];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "onClick", "disabled", "pt", "unstyled"]), renderSlot(_ctx.$slots, "movecontrolsend")], 16), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("targetListContainer")
  }, _ctx.ptm("targetListContainer"), {
    "data-pc-group-section": "listcontainer"
  }), [createVNode(_component_Listbox, {
    ref: "targetList",
    id: $options.idTarget + "_list",
    modelValue: $data.d_selection[1],
    options: $options.targetList,
    multiple: "",
    metaKeySelection: _ctx.metaKeySelection,
    listStyle: _ctx.listStyle,
    scrollHeight: _ctx.scrollHeight,
    tabindex: $options.targetList && $options.targetList.length > 0 ? _ctx.tabindex : -1,
    dataKey: _ctx.dataKey,
    autoOptionFocus: _ctx.autoOptionFocus,
    focusOnHover: _ctx.focusOnHover,
    striped: _ctx.striped,
    disabled: _ctx.disabled,
    pt: _ctx.ptm("pcListbox"),
    unstyled: _ctx.unstyled,
    onFocus: _cache[8] || (_cache[8] = function($event) {
      return $options.onListFocus($event, "targetList");
    }),
    onBlur: _cache[9] || (_cache[9] = function($event) {
      return $options.onListBlur($event, "targetList");
    }),
    onChange: _cache[10] || (_cache[10] = function($event) {
      return $options.onChangeSelection($event, 1);
    }),
    onItemDblclick: _cache[11] || (_cache[11] = function($event) {
      return $options.onItemDblClick($event, 1);
    }),
    "data-pc-group-section": "list"
  }, createSlots({
    option: withCtx(function(_ref2) {
      var option4 = _ref2.option, selected3 = _ref2.selected, index = _ref2.index;
      return [renderSlot(_ctx.$slots, _ctx.$slots.option ? "option" : "item", {
        item: option4,
        option: option4,
        selected: selected3,
        index
      })];
    }),
    _: 2
  }, [_ctx.$slots.targetheader ? {
    name: "header",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "targetheader")];
    }),
    key: "0"
  } : void 0]), 1032, ["id", "modelValue", "options", "metaKeySelection", "listStyle", "scrollHeight", "tabindex", "dataKey", "autoOptionFocus", "focusOnHover", "striped", "disabled", "pt", "unstyled"])], 16), _ctx.showTargetControls ? (openBlock(), createElementBlock("div", mergeProps({
    key: 1,
    "class": _ctx.cx("targetControls")
  }, _ctx.ptm("targetControls"), {
    "data-pc-group-section": "controls"
  }), [renderSlot(_ctx.$slots, "targetcontrolsstart"), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveUpAriaLabel,
    disabled: $options.moveDisabled(1),
    onClick: _cache[12] || (_cache[12] = function($event) {
      return $options.moveUp($event, 1);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveUpButtonProps), {
    pt: _ctx.ptm("pcTargetMoveUpButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "moveupicon", {}, function() {
        return [createVNode(_component_AngleUpIcon, mergeProps(_ctx.ptm("pcTargetMoveUpButton")["icon"], {
          "data-pc-section": "moveupicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveTopAriaLabel,
    disabled: $options.moveDisabled(1),
    onClick: _cache[13] || (_cache[13] = function($event) {
      return $options.moveTop($event, 1);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveTopButtonProps), {
    pt: _ctx.ptm("pcTargetMoveTopButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movetopicon", {}, function() {
        return [createVNode(_component_AngleDoubleUpIcon, mergeProps(_ctx.ptm("pcTargetMoveTopButton")["icon"], {
          "data-pc-section": "movetopicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveDownAriaLabel,
    disabled: $options.moveDisabled(1),
    onClick: _cache[14] || (_cache[14] = function($event) {
      return $options.moveDown($event, 1);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveDownButtonProps), {
    pt: _ctx.ptm("pcTargetMoveDownButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movedownicon", {}, function() {
        return [createVNode(_component_AngleDownIcon, mergeProps(_ctx.ptm("pcTargetMoveDownButton")["icon"], {
          "data-pc-section": "movedownicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), createVNode(_component_Button, mergeProps({
    "aria-label": $options.moveBottomAriaLabel,
    disabled: $options.moveDisabled(1),
    onClick: _cache[15] || (_cache[15] = function($event) {
      return $options.moveBottom($event, 1);
    })
  }, _objectSpread$8(_objectSpread$8({}, _ctx.buttonProps), _ctx.moveBottomButtonProps), {
    pt: _ctx.ptm("pcTargetMoveBottomButton"),
    unstyled: _ctx.unstyled
  }), {
    icon: withCtx(function() {
      return [renderSlot(_ctx.$slots, "movebottomicon", {}, function() {
        return [createVNode(_component_AngleDoubleDownIcon, mergeProps(_ctx.ptm("pcTargetMoveBottomButton")["icon"], {
          "data-pc-section": "movebottomicon"
        }), null, 16)];
      })];
    }),
    _: 3
  }, 16, ["aria-label", "disabled", "pt", "unstyled"]), renderSlot(_ctx.$slots, "targetcontrolsend")], 16)) : createCommentVNode("", true)], 16);
}
__name(render$j, "render$j");
script$m.render = render$j;
var PortalStyle = BaseStyle.extend({
  name: "portal"
});
var theme$a = /* @__PURE__ */ __name(function theme30(_ref) {
  _ref.dt;
  return "\n.p-radiobutton-group {\n    display: inline-flex;\n}\n";
}, "theme");
var classes$b = {
  root: "p-radiobutton-group p-component"
};
var RadioButtonGroupStyle = BaseStyle.extend({
  name: "radiobuttongroup",
  theme: theme$a,
  classes: classes$b
});
var script$1$b = {
  name: "BaseRadioButtonGroup",
  "extends": script$1s,
  style: RadioButtonGroupStyle,
  provide: /* @__PURE__ */ __name(function provide40() {
    return {
      $pcRadioButtonGroup: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$l = {
  name: "RadioButtonGroup",
  "extends": script$1$b,
  inheritAttrs: false,
  data: /* @__PURE__ */ __name(function data29() {
    return {
      groupName: this.name
    };
  }, "data"),
  watch: {
    name: /* @__PURE__ */ __name(function name2(newValue) {
      this.groupName = newValue || uuid("radiobutton-group-");
    }, "name")
  },
  mounted: /* @__PURE__ */ __name(function mounted30() {
    this.groupName = this.groupName || uuid("radiobutton-group-");
  }, "mounted")
};
function render$i(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16);
}
__name(render$i, "render$i");
script$l.render = render$i;
var script$k = {
  name: "BanIcon",
  "extends": script$1m
};
function render$h(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    d: "M7 0C5.61553 0 4.26215 0.410543 3.11101 1.17971C1.95987 1.94888 1.06266 3.04213 0.532846 4.32122C0.00303296 5.6003 -0.13559 7.00776 0.134506 8.36563C0.404603 9.7235 1.07129 10.9708 2.05026 11.9497C3.02922 12.9287 4.2765 13.5954 5.63437 13.8655C6.99224 14.1356 8.3997 13.997 9.67879 13.4672C10.9579 12.9373 12.0511 12.0401 12.8203 10.889C13.5895 9.73785 14 8.38447 14 7C14 5.14348 13.2625 3.36301 11.9497 2.05025C10.637 0.737498 8.85652 0 7 0ZM1.16667 7C1.16549 5.65478 1.63303 4.35118 2.48889 3.31333L10.6867 11.5111C9.83309 12.2112 8.79816 12.6544 7.70243 12.789C6.60669 12.9236 5.49527 12.744 4.49764 12.2713C3.50001 11.7986 2.65724 11.0521 2.06751 10.1188C1.47778 9.18558 1.16537 8.10397 1.16667 7ZM11.5111 10.6867L3.31334 2.48889C4.43144 1.57388 5.84966 1.10701 7.29265 1.1789C8.73565 1.2508 10.1004 1.85633 11.1221 2.87795C12.1437 3.89956 12.7492 5.26435 12.8211 6.70735C12.893 8.15034 12.4261 9.56856 11.5111 10.6867Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$h, "render$h");
script$k.render = render$h;
var script$j = {
  name: "StarIcon",
  "extends": script$1m
};
function render$g(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    d: "M10.9741 13.6721C10.8806 13.6719 10.7886 13.6483 10.7066 13.6033L7.00002 11.6545L3.29345 13.6033C3.19926 13.6539 3.09281 13.6771 2.98612 13.6703C2.87943 13.6636 2.77676 13.6271 2.6897 13.5651C2.60277 13.5014 2.53529 13.4147 2.4948 13.3148C2.45431 13.215 2.44241 13.1058 2.46042 12.9995L3.17881 8.87264L0.167699 5.95324C0.0922333 5.8777 0.039368 5.78258 0.0150625 5.67861C-0.00924303 5.57463 -0.00402231 5.46594 0.030136 5.36477C0.0621323 5.26323 0.122141 5.17278 0.203259 5.10383C0.284377 5.03488 0.383311 4.99023 0.488681 4.97501L4.63087 4.37126L6.48797 0.618832C6.54083 0.530159 6.61581 0.456732 6.70556 0.405741C6.79532 0.35475 6.89678 0.327942 7.00002 0.327942C7.10325 0.327942 7.20471 0.35475 7.29447 0.405741C7.38422 0.456732 7.4592 0.530159 7.51206 0.618832L9.36916 4.37126L13.5114 4.97501C13.6167 4.99023 13.7157 5.03488 13.7968 5.10383C13.8779 5.17278 13.9379 5.26323 13.9699 5.36477C14.0041 5.46594 14.0093 5.57463 13.985 5.67861C13.9607 5.78258 13.9078 5.8777 13.8323 5.95324L10.8212 8.87264L11.532 12.9995C11.55 13.1058 11.5381 13.215 11.4976 13.3148C11.4571 13.4147 11.3896 13.5014 11.3027 13.5651C11.2059 13.632 11.0917 13.6692 10.9741 13.6721ZM7.00002 10.4393C7.09251 10.4404 7.18371 10.4613 7.2675 10.5005L10.2098 12.029L9.65193 8.75036C9.6368 8.6584 9.64343 8.56418 9.6713 8.47526C9.69918 8.38633 9.74751 8.30518 9.81242 8.23832L12.1969 5.94559L8.90298 5.45648C8.81188 5.44198 8.72555 5.406 8.65113 5.35152C8.57671 5.29703 8.51633 5.2256 8.475 5.14314L7.00002 2.1626L5.52503 5.15078C5.4837 5.23324 5.42332 5.30467 5.3489 5.35916C5.27448 5.41365 5.18815 5.44963 5.09705 5.46412L1.80318 5.94559L4.18761 8.23832C4.25252 8.30518 4.30085 8.38633 4.32873 8.47526C4.3566 8.56418 4.36323 8.6584 4.3481 8.75036L3.7902 12.0519L6.73253 10.5234C6.81451 10.4762 6.9058 10.4475 7.00002 10.4393Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$g, "render$g");
script$j.render = render$g;
var script$i = {
  name: "StarFillIcon",
  "extends": script$1m
};
function render$f(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", mergeProps({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _ctx.pti()), _cache[0] || (_cache[0] = [createBaseVNode("path", {
    d: "M13.9718 5.36453C13.9398 5.26298 13.8798 5.17252 13.7986 5.10356C13.7175 5.0346 13.6186 4.98994 13.5132 4.97472L9.37043 4.37088L7.51307 0.617955C7.46021 0.529271 7.38522 0.455834 7.29545 0.404836C7.20568 0.353838 7.1042 0.327026 7.00096 0.327026C6.89771 0.327026 6.79624 0.353838 6.70647 0.404836C6.6167 0.455834 6.54171 0.529271 6.48885 0.617955L4.63149 4.37088L0.488746 4.97472C0.383363 4.98994 0.284416 5.0346 0.203286 5.10356C0.122157 5.17252 0.0621407 5.26298 0.03014 5.36453C-0.00402286 5.46571 -0.00924428 5.57442 0.0150645 5.67841C0.0393733 5.7824 0.0922457 5.87753 0.167722 5.95308L3.17924 8.87287L2.4684 13.0003C2.45038 13.1066 2.46229 13.2158 2.50278 13.3157C2.54328 13.4156 2.61077 13.5022 2.6977 13.5659C2.78477 13.628 2.88746 13.6644 2.99416 13.6712C3.10087 13.678 3.20733 13.6547 3.30153 13.6042L7.00096 11.6551L10.708 13.6042C10.79 13.6491 10.882 13.6728 10.9755 13.673C11.0958 13.6716 11.2129 13.6343 11.3119 13.5659C11.3988 13.5022 11.4663 13.4156 11.5068 13.3157C11.5473 13.2158 11.5592 13.1066 11.5412 13.0003L10.8227 8.87287L13.8266 5.95308C13.9033 5.87835 13.9577 5.7836 13.9833 5.67957C14.009 5.57554 14.005 5.4664 13.9718 5.36453Z",
    fill: "currentColor"
  }, null, -1)]), 16);
}
__name(render$f, "render$f");
script$i.render = render$f;
var theme$9 = /* @__PURE__ */ __name(function theme31(_ref) {
  var dt = _ref.dt;
  return "\n.p-rating {\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: ".concat(dt("rating.gap"), ";\n}\n\n.p-rating-option {\n    display: inline-flex;\n    align-items: center;\n    cursor: pointer;\n    outline-color: transparent;\n    border-radius: 50%;\n    transition: background ").concat(dt("rating.transition.duration"), ", color ").concat(dt("rating.transition.duration"), ", border-color ").concat(dt("rating.transition.duration"), ", outline-color ").concat(dt("rating.transition.duration"), ", box-shadow ").concat(dt("rating.transition.duration"), ";\n}\n\n.p-rating-option.p-focus-visible {\n    box-shadow: ").concat(dt("rating.focus.ring.shadow"), ";\n    outline: ").concat(dt("rating.focus.ring.width"), " ").concat(dt("rating.focus.ring.style"), " ").concat(dt("rating.focus.ring.color"), ";\n    outline-offset: ").concat(dt("rating.focus.ring.offset"), ";\n}\n\n.p-rating-icon {\n    color: ").concat(dt("rating.icon.color"), ";\n    transition: background ").concat(dt("rating.transition.duration"), ", color ").concat(dt("rating.transition.duration"), ", border-color ").concat(dt("rating.transition.duration"), ", outline-color ").concat(dt("rating.transition.duration"), ", box-shadow ").concat(dt("rating.transition.duration"), ";\n    font-size: ").concat(dt("rating.icon.size"), ";\n    width: ").concat(dt("rating.icon.size"), ";\n    height: ").concat(dt("rating.icon.size"), ";\n}\n\n.p-rating:not(.p-disabled):not(.p-readonly) .p-rating-option:hover .p-rating-icon {\n    color: ").concat(dt("rating.icon.hover.color"), ";\n}\n\n.p-rating-option-active .p-rating-icon {\n    color: ").concat(dt("rating.icon.active.color"), ";\n}\n\n.p-rating-icon.p-invalid { /* @todo */\n    stroke: ").concat(dt("rating.invalid.icon.color"), ";\n}\n");
}, "theme");
var classes$a = {
  root: /* @__PURE__ */ __name(function root24(_ref2) {
    var props = _ref2.props;
    return ["p-rating", {
      "p-readonly": props.readonly,
      "p-disabled": props.disabled
    }];
  }, "root"),
  option: /* @__PURE__ */ __name(function option3(_ref3) {
    var instance = _ref3.instance, value2 = _ref3.value;
    return ["p-rating-option", {
      "p-rating-option-active": value2 <= instance.d_value,
      "p-focus-visible": value2 === instance.focusedOptionIndex && instance.isFocusVisibleItem
    }];
  }, "option"),
  onIcon: /* @__PURE__ */ __name(function onIcon(_ref4) {
    var instance = _ref4.instance;
    return ["p-rating-icon p-rating-on-icon", {
      "p-invalid": instance.$invalid
    }];
  }, "onIcon"),
  offIcon: /* @__PURE__ */ __name(function offIcon(_ref5) {
    var instance = _ref5.instance;
    return ["p-rating-icon p-rating-off-icon", {
      "p-invalid": instance.$invalid
    }];
  }, "offIcon")
};
var RatingStyle = BaseStyle.extend({
  name: "rating",
  theme: theme$9,
  classes: classes$a
});
var script$1$a = {
  name: "BaseRating",
  "extends": script$1s,
  props: {
    readonly: {
      type: Boolean,
      "default": false
    },
    stars: {
      type: Number,
      "default": 5
    },
    onIcon: {
      type: String,
      "default": void 0
    },
    offIcon: {
      type: String,
      "default": void 0
    }
  },
  style: RatingStyle,
  provide: /* @__PURE__ */ __name(function provide41() {
    return {
      $pcRating: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$h = {
  name: "Rating",
  "extends": script$1$a,
  inheritAttrs: false,
  emits: ["change", "focus", "blur"],
  data: /* @__PURE__ */ __name(function data30() {
    return {
      d_name: this.name,
      focusedOptionIndex: -1,
      isFocusVisibleItem: true
    };
  }, "data"),
  watch: {
    name: /* @__PURE__ */ __name(function name3(newValue) {
      this.d_name = newValue || UniqueComponentId();
    }, "name")
  },
  mounted: /* @__PURE__ */ __name(function mounted31() {
    this.d_name = this.d_name || UniqueComponentId();
  }, "mounted"),
  methods: {
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions9(key, value2) {
      return this.ptm(key, {
        context: {
          active: value2 <= this.d_value,
          focused: value2 === this.focusedOptionIndex
        }
      });
    }, "getPTOptions"),
    onOptionClick: /* @__PURE__ */ __name(function onOptionClick3(event2, value2) {
      if (!this.readonly && !this.disabled) {
        this.onOptionSelect(event2, value2);
        this.isFocusVisibleItem = false;
        var firstFocusableEl = getFirstFocusableElement(event2.currentTarget);
        firstFocusableEl && focus(firstFocusableEl);
      }
    }, "onOptionClick"),
    onFocus: /* @__PURE__ */ __name(function onFocus12(event2, value2) {
      this.focusedOptionIndex = value2;
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur12(event2) {
      var _this$formField$onBlu, _this$formField;
      this.focusedOptionIndex = -1;
      this.$emit("blur", event2);
      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField);
    }, "onBlur"),
    onChange: /* @__PURE__ */ __name(function onChange(event2, value2) {
      this.onOptionSelect(event2, value2);
      this.isFocusVisibleItem = true;
    }, "onChange"),
    onOptionSelect: /* @__PURE__ */ __name(function onOptionSelect3(event2, value2) {
      if (this.focusedOptionIndex === value2 || this.d_value === value2) {
        this.focusedOptionIndex = -1;
        this.updateModel(event2, null);
      } else {
        this.focusedOptionIndex = value2;
        this.updateModel(event2, value2 || null);
      }
    }, "onOptionSelect"),
    updateModel: /* @__PURE__ */ __name(function updateModel7(event2, value2) {
      this.writeValue(value2, event2);
      this.$emit("change", {
        originalEvent: event2,
        value: value2
      });
    }, "updateModel"),
    starAriaLabel: /* @__PURE__ */ __name(function starAriaLabel(value2) {
      return value2 === 1 ? this.$primevue.config.locale.aria.star : this.$primevue.config.locale.aria.stars.replace(/{star}/g, value2);
    }, "starAriaLabel")
  },
  components: {
    StarFillIcon: script$i,
    StarIcon: script$j,
    BanIcon: script$k
  }
};
var _hoisted_1$b = ["onClick", "data-p-active", "data-p-focused"];
var _hoisted_2$8 = ["value", "name", "checked", "disabled", "readonly", "aria-label", "onFocus", "onChange"];
function render$e(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.stars, function(value2) {
    return openBlock(), createElementBlock("div", mergeProps({
      key: value2,
      "class": _ctx.cx("option", {
        value: value2
      }),
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onOptionClick($event, value2);
      }, "onClick"),
      ref_for: true
    }, $options.getPTOptions("option", value2), {
      "data-p-active": value2 <= _ctx.d_value,
      "data-p-focused": value2 === $data.focusedOptionIndex
    }), [createBaseVNode("span", mergeProps({
      "class": "p-hidden-accessible",
      ref_for: true
    }, _ctx.ptm("hiddenOptionInputContainer"), {
      "data-p-hidden-accessible": true
    }), [createBaseVNode("input", mergeProps({
      type: "radio",
      value: value2,
      name: $data.d_name,
      checked: _ctx.d_value === value2,
      disabled: _ctx.disabled,
      readonly: _ctx.readonly,
      "aria-label": $options.starAriaLabel(value2),
      onFocus: /* @__PURE__ */ __name(function onFocus15($event) {
        return $options.onFocus($event, value2);
      }, "onFocus"),
      onBlur: _cache[0] || (_cache[0] = function() {
        return $options.onBlur && $options.onBlur.apply($options, arguments);
      }),
      onChange: /* @__PURE__ */ __name(function onChange2($event) {
        return $options.onChange($event, value2);
      }, "onChange"),
      ref_for: true
    }, _ctx.ptm("hiddenOptionInput")), null, 16, _hoisted_2$8)], 16), value2 <= _ctx.d_value ? renderSlot(_ctx.$slots, "onicon", {
      key: 0,
      value: value2,
      "class": normalizeClass(_ctx.cx("onIcon"))
    }, function() {
      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.onIcon ? "span" : "StarFillIcon"), mergeProps({
        "class": [_ctx.cx("onIcon"), _ctx.onIcon],
        ref_for: true
      }, _ctx.ptm("onIcon")), null, 16, ["class"]))];
    }) : renderSlot(_ctx.$slots, "officon", {
      key: 1,
      value: value2,
      "class": normalizeClass(_ctx.cx("offIcon"))
    }, function() {
      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.offIcon ? "span" : "StarIcon"), mergeProps({
        "class": [_ctx.cx("offIcon"), _ctx.offIcon],
        ref_for: true
      }, _ctx.ptm("offIcon")), null, 16, ["class"]))];
    })], 16, _hoisted_1$b);
  }), 128))], 16);
}
__name(render$e, "render$e");
script$h.render = render$e;
var script$g = {
  name: "Row",
  "extends": script$1d,
  inject: ["$rows"],
  mounted: /* @__PURE__ */ __name(function mounted32() {
    var _this$$rows;
    (_this$$rows = this.$rows) === null || _this$$rows === void 0 || _this$$rows.add(this.$);
  }, "mounted"),
  unmounted: /* @__PURE__ */ __name(function unmounted4() {
    var _this$$rows2;
    (_this$$rows2 = this.$rows) === null || _this$$rows2 === void 0 || _this$$rows2["delete"](this.$);
  }, "unmounted"),
  render: /* @__PURE__ */ __name(function render2() {
    return null;
  }, "render")
};
var RowStyle = BaseStyle.extend({
  name: "row"
});
var theme$8 = /* @__PURE__ */ __name(function theme32(_ref) {
  _ref.dt;
  return "\n.p-scrolltop.p-button {\n    position: fixed !important;\n    inset-block-end: 20px;\n    inset-inline-end: 20px;\n}\n\n.p-scrolltop-sticky.p-button {\n    position: sticky !important;\n    display: flex;\n    margin-inline-start: auto;\n}\n\n.p-scrolltop-enter-from {\n    opacity: 0;\n}\n\n.p-scrolltop-enter-active {\n    transition: opacity 0.15s;\n}\n\n.p-scrolltop.p-scrolltop-leave-to {\n    opacity: 0;\n}\n\n.p-scrolltop-leave-active {\n    transition: opacity 0.15s;\n}\n";
}, "theme");
var classes$9 = {
  root: /* @__PURE__ */ __name(function root25(_ref2) {
    var props = _ref2.props;
    return ["p-scrolltop", {
      "p-scrolltop-sticky": props.target !== "window"
    }];
  }, "root"),
  icon: "p-scrolltop-icon"
};
var ScrollTopStyle = BaseStyle.extend({
  name: "scrolltop",
  theme: theme$8,
  classes: classes$9
});
var script$1$9 = {
  name: "BaseScrollTop",
  "extends": script$1d,
  props: {
    target: {
      type: String,
      "default": "window"
    },
    threshold: {
      type: Number,
      "default": 400
    },
    icon: {
      type: String,
      "default": void 0
    },
    behavior: {
      type: String,
      "default": "smooth"
    },
    buttonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default17() {
        return {
          rounded: true
        };
      }, "_default")
    }
  },
  style: ScrollTopStyle,
  provide: /* @__PURE__ */ __name(function provide42() {
    return {
      $pcScrollTop: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$f = {
  name: "ScrollTop",
  "extends": script$1$9,
  inheritAttrs: false,
  scrollListener: null,
  container: null,
  data: /* @__PURE__ */ __name(function data31() {
    return {
      visible: false
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted33() {
    if (this.target === "window") this.bindDocumentScrollListener();
    else if (this.target === "parent") this.bindParentScrollListener();
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount14() {
    if (this.target === "window") this.unbindDocumentScrollListener();
    else if (this.target === "parent") this.unbindParentScrollListener();
    if (this.container) {
      ZIndex.clear(this.container);
      this.overlay = null;
    }
  }, "beforeUnmount"),
  methods: {
    onClick: /* @__PURE__ */ __name(function onClick5() {
      var scrollElement = this.target === "window" ? window : this.$el.parentElement;
      scrollElement.scroll({
        top: 0,
        behavior: this.behavior
      });
    }, "onClick"),
    checkVisibility: /* @__PURE__ */ __name(function checkVisibility(scrollY) {
      if (scrollY > this.threshold) this.visible = true;
      else this.visible = false;
    }, "checkVisibility"),
    bindParentScrollListener: /* @__PURE__ */ __name(function bindParentScrollListener() {
      var _this = this;
      this.scrollListener = function() {
        _this.checkVisibility(_this.$el.parentElement.scrollTop);
      };
      this.$el.parentElement.addEventListener("scroll", this.scrollListener);
    }, "bindParentScrollListener"),
    bindDocumentScrollListener: /* @__PURE__ */ __name(function bindDocumentScrollListener() {
      var _this2 = this;
      this.scrollListener = function() {
        _this2.checkVisibility(getWindowScrollTop());
      };
      window.addEventListener("scroll", this.scrollListener);
    }, "bindDocumentScrollListener"),
    unbindParentScrollListener: /* @__PURE__ */ __name(function unbindParentScrollListener() {
      if (this.scrollListener) {
        this.$el.parentElement.removeEventListener("scroll", this.scrollListener);
        this.scrollListener = null;
      }
    }, "unbindParentScrollListener"),
    unbindDocumentScrollListener: /* @__PURE__ */ __name(function unbindDocumentScrollListener() {
      if (this.scrollListener) {
        window.removeEventListener("scroll", this.scrollListener);
        this.scrollListener = null;
      }
    }, "unbindDocumentScrollListener"),
    onEnter: /* @__PURE__ */ __name(function onEnter4(el) {
      ZIndex.set("overlay", el, this.$primevue.config.zIndex.overlay);
    }, "onEnter"),
    onAfterLeave: /* @__PURE__ */ __name(function onAfterLeave4(el) {
      ZIndex.clear(el);
    }, "onAfterLeave"),
    containerRef: /* @__PURE__ */ __name(function containerRef5(el) {
      this.container = el ? el.$el : void 0;
    }, "containerRef")
  },
  computed: {
    scrollTopAriaLabel: /* @__PURE__ */ __name(function scrollTopAriaLabel() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.scrollTop : void 0;
    }, "scrollTopAriaLabel")
  },
  components: {
    ChevronUpIcon: script$1j,
    Button: script$1e
  }
};
function render$d(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Button = resolveComponent("Button");
  return openBlock(), createBlock(Transition, mergeProps({
    name: "p-scrolltop",
    appear: "",
    onEnter: $options.onEnter,
    onAfterLeave: $options.onAfterLeave
  }, _ctx.ptm("transition")), {
    "default": withCtx(function() {
      return [$data.visible ? (openBlock(), createBlock(_component_Button, mergeProps({
        key: 0,
        ref: $options.containerRef,
        "class": _ctx.cx("root"),
        onClick: $options.onClick,
        "aria-label": $options.scrollTopAriaLabel,
        unstyled: _ctx.unstyled
      }, _ctx.buttonProps, {
        pt: _ctx.pt
      }), {
        icon: withCtx(function(slotProps) {
          return [renderSlot(_ctx.$slots, "icon", {
            "class": normalizeClass(_ctx.cx("icon"))
          }, function() {
            return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon ? "span" : "ChevronUpIcon"), mergeProps({
              "class": [_ctx.cx("icon"), _ctx.icon, slotProps["class"]]
            }, _ctx.ptm("icon")), null, 16, ["class"]))];
          })];
        }),
        _: 3
      }, 16, ["class", "onClick", "aria-label", "unstyled", "pt"])) : createCommentVNode("", true)];
    }),
    _: 3
  }, 16, ["onEnter", "onAfterLeave"]);
}
__name(render$d, "render$d");
script$f.render = render$d;
var script$e = {
  name: "Sidebar",
  "extends": script$1c,
  mounted: /* @__PURE__ */ __name(function mounted34() {
    console.warn("Deprecated since v4. Use Drawer component instead.");
  }, "mounted")
};
var SidebarStyle = BaseStyle.extend({
  name: "sidebar"
});
var theme$7 = /* @__PURE__ */ __name(function theme33(_ref) {
  var dt = _ref.dt;
  return "\n.p-skeleton {\n    overflow: hidden;\n    background: ".concat(dt("skeleton.background"), ";\n    border-radius: ").concat(dt("skeleton.border.radius"), ';\n}\n\n.p-skeleton::after {\n    content: "";\n    animation: p-skeleton-animation 1.2s infinite;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transform: translateX(-100%);\n    z-index: 1;\n    background: linear-gradient(90deg, rgba(255, 255, 255, 0), ').concat(dt("skeleton.animation.background"), ", rgba(255, 255, 255, 0));\n}\n\n[dir='rtl'] .p-skeleton::after {\n    animation-name: p-skeleton-animation-rtl;\n}\n\n.p-skeleton-circle {\n    border-radius: 50%;\n}\n\n.p-skeleton-animation-none::after {\n    animation: none;\n}\n\n@keyframes p-skeleton-animation {\n    from {\n        transform: translateX(-100%);\n    }\n    to {\n        transform: translateX(100%);\n    }\n}\n\n@keyframes p-skeleton-animation-rtl {\n    from {\n        transform: translateX(100%);\n    }\n    to {\n        transform: translateX(-100%);\n    }\n}\n");
}, "theme");
var inlineStyles$3 = {
  root: {
    position: "relative"
  }
};
var classes$8 = {
  root: /* @__PURE__ */ __name(function root26(_ref2) {
    var props = _ref2.props;
    return ["p-skeleton p-component", {
      "p-skeleton-circle": props.shape === "circle",
      "p-skeleton-animation-none": props.animation === "none"
    }];
  }, "root")
};
var SkeletonStyle = BaseStyle.extend({
  name: "skeleton",
  theme: theme$7,
  classes: classes$8,
  inlineStyles: inlineStyles$3
});
var script$1$8 = {
  name: "BaseSkeleton",
  "extends": script$1d,
  props: {
    shape: {
      type: String,
      "default": "rectangle"
    },
    size: {
      type: String,
      "default": null
    },
    width: {
      type: String,
      "default": "100%"
    },
    height: {
      type: String,
      "default": "1rem"
    },
    borderRadius: {
      type: String,
      "default": null
    },
    animation: {
      type: String,
      "default": "wave"
    }
  },
  style: SkeletonStyle,
  provide: /* @__PURE__ */ __name(function provide43() {
    return {
      $pcSkeleton: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$d = {
  name: "Skeleton",
  "extends": script$1$8,
  inheritAttrs: false,
  computed: {
    containerStyle: /* @__PURE__ */ __name(function containerStyle() {
      if (this.size) return {
        width: this.size,
        height: this.size,
        borderRadius: this.borderRadius
      };
      else return {
        width: this.width,
        height: this.height,
        borderRadius: this.borderRadius
      };
    }, "containerStyle")
  }
};
function render$c(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    style: [_ctx.sx("root"), $options.containerStyle],
    "aria-hidden": "true"
  }, _ctx.ptmi("root")), null, 16);
}
__name(render$c, "render$c");
script$d.render = render$c;
function _typeof$8(o) {
  "@babel/helpers - typeof";
  return _typeof$8 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$8(o);
}
__name(_typeof$8, "_typeof$8");
function _defineProperty$8(e, r, t2) {
  return (r = _toPropertyKey$8(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$8, "_defineProperty$8");
function _toPropertyKey$8(t2) {
  var i = _toPrimitive$8(t2, "string");
  return "symbol" == _typeof$8(i) ? i : i + "";
}
__name(_toPropertyKey$8, "_toPropertyKey$8");
function _toPrimitive$8(t2, r) {
  if ("object" != _typeof$8(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$8(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$8, "_toPrimitive$8");
var theme$6 = /* @__PURE__ */ __name(function theme34(_ref) {
  var dt = _ref.dt;
  return "\n.p-speeddial {\n    position: static;\n    display: flex;\n    gap: ".concat(dt("speeddial.gap"), ";\n}\n\n.p-speeddial-button {\n    z-index: 1;\n}\n\n.p-speeddial-button.p-speeddial-rotate {\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, background ").concat(dt("speeddial.transition.duration"), ", color ").concat(dt("speeddial.transition.duration"), ", border-color ").concat(dt("speeddial.transition.duration"), ",\n    box-shadow ").concat(dt("speeddial.transition.duration"), ", outline-color ").concat(dt("speeddial.transition.duration"), ";\n    will-change: transform;\n}\n\n.p-speeddial-list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: inset-block-start 0s linear ").concat(dt("speeddial.transition.duration"), ";\n    pointer-events: none;\n    outline: 0 none;\n    z-index: 2;\n    gap: ").concat(dt("speeddial.gap"), ";\n}\n\n.p-speeddial-item {\n    transform: scale(0);\n    opacity: 0;\n    transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, opacity 0.8s;\n    will-change: transform;\n}\n\n.p-speeddial-circle .p-speeddial-item,\n.p-speeddial-semi-circle .p-speeddial-item,\n.p-speeddial-quarter-circle .p-speeddial-item {\n    position: absolute;\n}\n\n.p-speeddial-mask {\n    position: absolute;\n    inset-inline-start: 0;\n    inset-block-start: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background: ").concat(dt("mask.background"), ";\n    border-radius: 6px;\n    transition: opacity 150ms;\n}\n\n.p-speeddial-mask-visible {\n    pointer-events: none;\n    opacity: 1;\n    transition: opacity 150ms;\n}\n\n.p-speeddial-open .p-speeddial-list {\n    pointer-events: auto;\n}\n\n.p-speeddial-open .p-speeddial-item {\n    transform: scale(1);\n    opacity: 1;\n}\n\n.p-speeddial-open .p-speeddial-rotate {\n    transform: rotate(45deg);\n}\n");
}, "theme");
var inlineStyles$2 = {
  root: /* @__PURE__ */ __name(function root27(_ref2) {
    var props = _ref2.props;
    return {
      alignItems: (props.direction === "up" || props.direction === "down") && "center",
      justifyContent: (props.direction === "left" || props.direction === "right") && "center",
      flexDirection: props.direction === "up" ? "column-reverse" : props.direction === "down" ? "column" : props.direction === "left" ? "row-reverse" : props.direction === "right" ? "row" : null
    };
  }, "root"),
  list: /* @__PURE__ */ __name(function list(_ref3) {
    var props = _ref3.props;
    return {
      flexDirection: props.direction === "up" ? "column-reverse" : props.direction === "down" ? "column" : props.direction === "left" ? "row-reverse" : props.direction === "right" ? "row" : null
    };
  }, "list")
};
var classes$7 = {
  root: /* @__PURE__ */ __name(function root28(_ref4) {
    var instance = _ref4.instance, props = _ref4.props;
    return ["p-speeddial p-component p-speeddial-".concat(props.type), _defineProperty$8(_defineProperty$8(_defineProperty$8({}, "p-speeddial-direction-".concat(props.direction), props.type !== "circle"), "p-speeddial-open", instance.d_visible), "p-disabled", props.disabled)];
  }, "root"),
  pcButton: /* @__PURE__ */ __name(function pcButton(_ref6) {
    var props = _ref6.props;
    return ["p-speeddial-button", {
      "p-speeddial-rotate": props.rotateAnimation && !props.hideIcon
    }];
  }, "pcButton"),
  list: "p-speeddial-list",
  item: "p-speeddial-item",
  action: "p-speeddial-action",
  actionIcon: "p-speeddial-action-icon",
  mask: /* @__PURE__ */ __name(function mask4(_ref7) {
    var instance = _ref7.instance;
    return ["p-speeddial-mask", {
      "p-speeddial-mask-visible": instance.d_visible
    }];
  }, "mask")
};
var SpeedDialStyle = BaseStyle.extend({
  name: "speeddial",
  theme: theme$6,
  classes: classes$7,
  inlineStyles: inlineStyles$2
});
var script$1$7 = {
  name: "BaseSpeedDial",
  "extends": script$1d,
  props: {
    model: null,
    visible: {
      type: Boolean,
      "default": false
    },
    direction: {
      type: String,
      "default": "up"
    },
    transitionDelay: {
      type: Number,
      "default": 30
    },
    type: {
      type: String,
      "default": "linear"
    },
    radius: {
      type: Number,
      "default": 0
    },
    mask: {
      type: Boolean,
      "default": false
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    hideOnClickOutside: {
      type: Boolean,
      "default": true
    },
    buttonClass: null,
    maskStyle: null,
    maskClass: null,
    showIcon: {
      type: String,
      "default": void 0
    },
    hideIcon: {
      type: String,
      "default": void 0
    },
    rotateAnimation: {
      type: Boolean,
      "default": true
    },
    tooltipOptions: null,
    style: null,
    "class": null,
    buttonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default18() {
        return {
          rounded: true
        };
      }, "_default")
    },
    actionButtonProps: {
      type: Object,
      "default": /* @__PURE__ */ __name(function _default19() {
        return {
          severity: "secondary",
          rounded: true,
          size: "small"
        };
      }, "_default")
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: SpeedDialStyle,
  provide: /* @__PURE__ */ __name(function provide44() {
    return {
      $pcSpeedDial: this,
      $parentInstance: this
    };
  }, "provide")
};
function _typeof$7(o) {
  "@babel/helpers - typeof";
  return _typeof$7 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$7(o);
}
__name(_typeof$7, "_typeof$7");
function ownKeys$7(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$7, "ownKeys$7");
function _objectSpread$7(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$7(Object(t2), true).forEach(function(r2) {
      _defineProperty$7(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$7(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$7, "_objectSpread$7");
function _defineProperty$7(e, r, t2) {
  return (r = _toPropertyKey$7(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$7, "_defineProperty$7");
function _toPropertyKey$7(t2) {
  var i = _toPrimitive$7(t2, "string");
  return "symbol" == _typeof$7(i) ? i : i + "";
}
__name(_toPropertyKey$7, "_toPropertyKey$7");
function _toPrimitive$7(t2, r) {
  if ("object" != _typeof$7(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$7(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$7, "_toPrimitive$7");
function _toConsumableArray$3(r) {
  return _arrayWithoutHoles$3(r) || _iterableToArray$3(r) || _unsupportedIterableToArray$3(r) || _nonIterableSpread$3();
}
__name(_toConsumableArray$3, "_toConsumableArray$3");
function _nonIterableSpread$3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$3, "_nonIterableSpread$3");
function _unsupportedIterableToArray$3(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$3(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$3(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$3, "_unsupportedIterableToArray$3");
function _iterableToArray$3(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$3, "_iterableToArray$3");
function _arrayWithoutHoles$3(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$3(r);
}
__name(_arrayWithoutHoles$3, "_arrayWithoutHoles$3");
function _arrayLikeToArray$3(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$3, "_arrayLikeToArray$3");
var Math_PI = 3.14159265358979;
var script$c = {
  name: "SpeedDial",
  "extends": script$1$7,
  inheritAttrs: false,
  emits: ["click", "show", "hide", "focus", "blur"],
  documentClickListener: null,
  container: null,
  list: null,
  data: /* @__PURE__ */ __name(function data32() {
    return {
      id: this.$attrs.id,
      d_visible: this.visible,
      isItemClicked: false,
      focused: false,
      focusedOptionIndex: -1
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId12(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    visible: /* @__PURE__ */ __name(function visible4(newValue) {
      this.d_visible = newValue;
    }, "visible")
  },
  mounted: /* @__PURE__ */ __name(function mounted35() {
    this.id = this.id || UniqueComponentId();
    if (this.type !== "linear") {
      var button = findSingle(this.container, '[data-pc-name="pcbutton"]');
      var firstItem = findSingle(this.list, '[data-pc-section="item"]');
      if (button && firstItem) {
        var wDiff = Math.abs(button.offsetWidth - firstItem.offsetWidth);
        var hDiff = Math.abs(button.offsetHeight - firstItem.offsetHeight);
        this.list.style.setProperty($dt("item.diff.x").name, "".concat(wDiff / 2, "px"));
        this.list.style.setProperty($dt("item.diff.y").name, "".concat(hDiff / 2, "px"));
      }
    }
    if (this.hideOnClickOutside) {
      this.bindDocumentClickListener();
    }
  }, "mounted"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount15() {
    this.unbindDocumentClickListener();
  }, "beforeUnmount"),
  methods: {
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions10(id4, key) {
      return this.ptm(key, {
        context: {
          active: this.isItemActive(id4),
          hidden: !this.d_visible
        }
      });
    }, "getPTOptions"),
    onFocus: /* @__PURE__ */ __name(function onFocus13(event2) {
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur13(event2) {
      this.focusedOptionIndex = -1;
      this.$emit("blur", event2);
    }, "onBlur"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick7(e, item8) {
      if (item8.command) {
        item8.command({
          originalEvent: e,
          item: item8
        });
      }
      this.hide();
      this.isItemClicked = true;
      e.preventDefault();
    }, "onItemClick"),
    onClick: /* @__PURE__ */ __name(function onClick6(event2) {
      this.d_visible ? this.hide() : this.show();
      this.isItemClicked = true;
      this.$emit("click", event2);
    }, "onClick"),
    show: /* @__PURE__ */ __name(function show5() {
      this.d_visible = true;
      this.$emit("show");
    }, "show"),
    hide: /* @__PURE__ */ __name(function hide6() {
      this.d_visible = false;
      this.$emit("hide");
    }, "hide"),
    calculateTransitionDelay: /* @__PURE__ */ __name(function calculateTransitionDelay(index) {
      var length = this.model.length;
      var visible7 = this.d_visible;
      return (visible7 ? index : length - index - 1) * this.transitionDelay;
    }, "calculateTransitionDelay"),
    onTogglerKeydown: /* @__PURE__ */ __name(function onTogglerKeydown(event2) {
      switch (event2.code) {
        case "ArrowDown":
        case "ArrowLeft":
          this.onTogglerArrowDown(event2);
          break;
        case "ArrowUp":
        case "ArrowRight":
          this.onTogglerArrowUp(event2);
          break;
        case "Escape":
          this.onEscapeKey();
          break;
      }
    }, "onTogglerKeydown"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown11(event2) {
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDown(event2);
          break;
        case "ArrowUp":
          this.onArrowUp(event2);
          break;
        case "ArrowLeft":
          this.onArrowLeft(event2);
          break;
        case "ArrowRight":
          this.onArrowRight(event2);
          break;
        case "Enter":
        case "NumpadEnter":
        case "Space":
          this.onEnterKey(event2);
          break;
        case "Escape":
          this.onEscapeKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
      }
    }, "onKeyDown"),
    onTogglerArrowUp: /* @__PURE__ */ __name(function onTogglerArrowUp(event2) {
      this.show();
      this.navigatePrevItem(event2);
      event2.preventDefault();
    }, "onTogglerArrowUp"),
    onTogglerArrowDown: /* @__PURE__ */ __name(function onTogglerArrowDown(event2) {
      this.show();
      this.navigateNextItem(event2);
      event2.preventDefault();
    }, "onTogglerArrowDown"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey7(event2) {
      var _this = this;
      var items2 = find(this.container, '[data-pc-section="item"]');
      var itemIndex = _toConsumableArray$3(items2).findIndex(function(item8) {
        return item8.id === _this.focusedOptionIndex;
      });
      var buttonEl = findSingle(this.container, "button");
      this.onItemClick(event2, this.model[itemIndex]);
      this.onBlur(event2);
      buttonEl && focus(buttonEl);
    }, "onEnterKey"),
    onEscapeKey: /* @__PURE__ */ __name(function onEscapeKey4() {
      this.hide();
      var buttonEl = findSingle(this.container, "button");
      buttonEl && focus(buttonEl);
    }, "onEscapeKey"),
    onArrowUp: /* @__PURE__ */ __name(function onArrowUp(event2) {
      if (this.direction === "down") {
        this.navigatePrevItem(event2);
      } else {
        this.navigateNextItem(event2);
      }
    }, "onArrowUp"),
    onArrowDown: /* @__PURE__ */ __name(function onArrowDown(event2) {
      if (this.direction === "down") {
        this.navigateNextItem(event2);
      } else {
        this.navigatePrevItem(event2);
      }
    }, "onArrowDown"),
    onArrowLeft: /* @__PURE__ */ __name(function onArrowLeft(event2) {
      var leftValidDirections = ["left", "up-right", "down-left"];
      var rightValidDirections = ["right", "up-left", "down-right"];
      if (leftValidDirections.includes(this.direction)) {
        this.navigateNextItem(event2);
      } else if (rightValidDirections.includes(this.direction)) {
        this.navigatePrevItem(event2);
      } else {
        this.navigatePrevItem(event2);
      }
    }, "onArrowLeft"),
    onArrowRight: /* @__PURE__ */ __name(function onArrowRight(event2) {
      var leftValidDirections = ["left", "up-right", "down-left"];
      var rightValidDirections = ["right", "up-left", "down-right"];
      if (leftValidDirections.includes(this.direction)) {
        this.navigatePrevItem(event2);
      } else if (rightValidDirections.includes(this.direction)) {
        this.navigateNextItem(event2);
      } else {
        this.navigateNextItem(event2);
      }
    }, "onArrowRight"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey8(event2) {
      event2.preventDefault();
      this.focusedOptionIndex = -1;
      this.navigatePrevItem(event2);
    }, "onEndKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey8(event2) {
      event2.preventDefault();
      this.focusedOptionIndex = -1;
      this.navigateNextItem(event2);
    }, "onHomeKey"),
    navigateNextItem: /* @__PURE__ */ __name(function navigateNextItem(event2) {
      var optionIndex = this.findNextOptionIndex(this.focusedOptionIndex);
      this.changeFocusedOptionIndex(optionIndex);
      event2.preventDefault();
    }, "navigateNextItem"),
    navigatePrevItem: /* @__PURE__ */ __name(function navigatePrevItem(event2) {
      var optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex);
      this.changeFocusedOptionIndex(optionIndex);
      event2.preventDefault();
    }, "navigatePrevItem"),
    changeFocusedOptionIndex: /* @__PURE__ */ __name(function changeFocusedOptionIndex5(index) {
      var items2 = find(this.container, '[data-pc-section="item"]');
      var filteredItems = _toConsumableArray$3(items2).filter(function(item8) {
        return !hasClass(findSingle(item8, "a"), "p-disabled");
      });
      if (filteredItems[index]) {
        this.focusedOptionIndex = filteredItems[index].getAttribute("id");
        var buttonEl = findSingle(filteredItems[index], '[type="button"]');
        buttonEl && focus(buttonEl);
      }
    }, "changeFocusedOptionIndex"),
    findPrevOptionIndex: /* @__PURE__ */ __name(function findPrevOptionIndex5(index) {
      var items2 = find(this.container, '[data-pc-section="item"]');
      var filteredItems = _toConsumableArray$3(items2).filter(function(item8) {
        return !hasClass(findSingle(item8, "a"), "p-disabled");
      });
      var newIndex = index === -1 ? filteredItems[filteredItems.length - 1].id : index;
      var matchedOptionIndex = filteredItems.findIndex(function(link) {
        return link.getAttribute("id") === newIndex;
      });
      matchedOptionIndex = index === -1 ? filteredItems.length - 1 : matchedOptionIndex - 1;
      return matchedOptionIndex;
    }, "findPrevOptionIndex"),
    findNextOptionIndex: /* @__PURE__ */ __name(function findNextOptionIndex5(index) {
      var items2 = find(this.container, '[data-pc-section="item"]');
      var filteredItems = _toConsumableArray$3(items2).filter(function(item8) {
        return !hasClass(findSingle(item8, "a"), "p-disabled");
      });
      var newIndex = index === -1 ? filteredItems[0].id : index;
      var matchedOptionIndex = filteredItems.findIndex(function(link) {
        return link.getAttribute("id") === newIndex;
      });
      matchedOptionIndex = index === -1 ? 0 : matchedOptionIndex + 1;
      return matchedOptionIndex;
    }, "findNextOptionIndex"),
    calculatePointStyle: /* @__PURE__ */ __name(function calculatePointStyle(index) {
      var type = this.type;
      if (type !== "linear") {
        var length = this.model.length;
        var radius = this.radius || length * 20;
        if (type === "circle") {
          var step = 2 * Math_PI / length;
          return {
            left: "calc(".concat(radius * Math.cos(step * index), "px + ").concat($dt("item.diff.x", "0px").variable, ")"),
            top: "calc(".concat(radius * Math.sin(step * index), "px + ").concat($dt("item.diff.y", "0px").variable, ")")
          };
        } else if (type === "semi-circle") {
          var direction = this.direction;
          var _step = Math_PI / (length - 1);
          var x = "calc(".concat(radius * Math.cos(_step * index), "px + ").concat($dt("item.diff.x", "0px").variable, ")");
          var y = "calc(".concat(radius * Math.sin(_step * index), "px + ").concat($dt("item.diff.y", "0px").variable, ")");
          if (direction === "up") {
            return {
              left: x,
              bottom: y
            };
          } else if (direction === "down") {
            return {
              left: x,
              top: y
            };
          } else if (direction === "left") {
            return {
              right: y,
              top: x
            };
          } else if (direction === "right") {
            return {
              left: y,
              top: x
            };
          }
        } else if (type === "quarter-circle") {
          var _direction = this.direction;
          var _step2 = Math_PI / (2 * (length - 1));
          var _x = "calc(".concat(radius * Math.cos(_step2 * index), "px + ").concat($dt("item.diff.x", "0px").variable, ")");
          var _y = "calc(".concat(radius * Math.sin(_step2 * index), "px + ").concat($dt("item.diff.y", "0px").variable, ")");
          if (_direction === "up-left") {
            return {
              right: _x,
              bottom: _y
            };
          } else if (_direction === "up-right") {
            return {
              left: _x,
              bottom: _y
            };
          } else if (_direction === "down-left") {
            return {
              right: _y,
              top: _x
            };
          } else if (_direction === "down-right") {
            return {
              left: _y,
              top: _x
            };
          }
        }
      }
      return {};
    }, "calculatePointStyle"),
    getItemStyle: /* @__PURE__ */ __name(function getItemStyle(index) {
      var transitionDelay = this.calculateTransitionDelay(index);
      var pointStyle = this.calculatePointStyle(index);
      return _objectSpread$7({
        transitionDelay: "".concat(transitionDelay, "ms")
      }, pointStyle);
    }, "getItemStyle"),
    bindDocumentClickListener: /* @__PURE__ */ __name(function bindDocumentClickListener() {
      var _this2 = this;
      if (!this.documentClickListener) {
        this.documentClickListener = function(event2) {
          if (_this2.d_visible && _this2.isOutsideClicked(event2)) {
            _this2.hide();
          }
          _this2.isItemClicked = false;
        };
        document.addEventListener("click", this.documentClickListener);
      }
    }, "bindDocumentClickListener"),
    unbindDocumentClickListener: /* @__PURE__ */ __name(function unbindDocumentClickListener() {
      if (this.documentClickListener) {
        document.removeEventListener("click", this.documentClickListener);
        this.documentClickListener = null;
      }
    }, "unbindDocumentClickListener"),
    isOutsideClicked: /* @__PURE__ */ __name(function isOutsideClicked4(event2) {
      return this.container && !(this.container.isSameNode(event2.target) || this.container.contains(event2.target) || this.isItemClicked);
    }, "isOutsideClicked"),
    isItemVisible: /* @__PURE__ */ __name(function isItemVisible6(item8) {
      return typeof item8.visible === "function" ? item8.visible() : item8.visible !== false;
    }, "isItemVisible"),
    isItemActive: /* @__PURE__ */ __name(function isItemActive7(id4) {
      return id4 === this.focusedOptionId;
    }, "isItemActive"),
    containerRef: /* @__PURE__ */ __name(function containerRef6(el) {
      this.container = el;
    }, "containerRef"),
    listRef: /* @__PURE__ */ __name(function listRef3(el) {
      this.list = el;
    }, "listRef")
  },
  computed: {
    containerClass: /* @__PURE__ */ __name(function containerClass3() {
      return [this.cx("root"), this["class"]];
    }, "containerClass"),
    focusedOptionId: /* @__PURE__ */ __name(function focusedOptionId6() {
      return this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : null;
    }, "focusedOptionId")
  },
  components: {
    Button: script$1e,
    PlusIcon: script$1x
  },
  directives: {
    ripple: Ripple,
    tooltip: Tooltip
  }
};
var _hoisted_1$a = ["id"];
var _hoisted_2$7 = ["id", "data-p-active"];
function render$b(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Button = resolveComponent("Button");
  var _directive_tooltip = resolveDirective("tooltip");
  return openBlock(), createElementBlock(Fragment, null, [createBaseVNode("div", mergeProps({
    ref: $options.containerRef,
    "class": $options.containerClass,
    style: [_ctx.style, _ctx.sx("root")]
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "button", {
    visible: $data.d_visible,
    toggleCallback: $options.onClick
  }, function() {
    return [createVNode(_component_Button, mergeProps({
      "class": [_ctx.cx("pcButton"), _ctx.buttonClass],
      disabled: _ctx.disabled,
      "aria-expanded": $data.d_visible,
      "aria-haspopup": true,
      "aria-controls": $data.id + "_list",
      "aria-label": _ctx.ariaLabel,
      "aria-labelledby": _ctx.ariaLabelledby,
      unstyled: _ctx.unstyled,
      onClick: _cache[0] || (_cache[0] = function($event) {
        return $options.onClick($event);
      }),
      onKeydown: $options.onTogglerKeydown
    }, _ctx.buttonProps, {
      pt: _ctx.ptm("pcButton")
    }), {
      icon: withCtx(function(slotProps) {
        return [renderSlot(_ctx.$slots, "icon", {
          visible: $data.d_visible
        }, function() {
          return [$data.d_visible && !!_ctx.hideIcon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.hideIcon ? "span" : "PlusIcon"), mergeProps({
            key: 0,
            "class": [_ctx.hideIcon, slotProps["class"]]
          }, _ctx.ptm("pcButton")["icon"], {
            "data-pc-section": "icon"
          }), null, 16, ["class"])) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.showIcon ? "span" : "PlusIcon"), mergeProps({
            key: 1,
            "class": [$data.d_visible && !!_ctx.hideIcon ? _ctx.hideIcon : _ctx.showIcon, slotProps["class"]]
          }, _ctx.ptm("pcButton")["icon"], {
            "data-pc-section": "icon"
          }), null, 16, ["class"]))];
        })];
      }),
      _: 3
    }, 16, ["class", "disabled", "aria-expanded", "aria-controls", "aria-label", "aria-labelledby", "unstyled", "onKeydown", "pt"])];
  }), createBaseVNode("ul", mergeProps({
    ref: $options.listRef,
    id: $data.id + "_list",
    "class": _ctx.cx("list"),
    style: _ctx.sx("list"),
    role: "menu",
    tabindex: "-1",
    onFocus: _cache[1] || (_cache[1] = function() {
      return $options.onFocus && $options.onFocus.apply($options, arguments);
    }),
    onBlur: _cache[2] || (_cache[2] = function() {
      return $options.onBlur && $options.onBlur.apply($options, arguments);
    }),
    onKeydown: _cache[3] || (_cache[3] = function() {
      return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);
    })
  }, _ctx.ptm("list")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function(item8, index) {
    return openBlock(), createElementBlock(Fragment, {
      key: index
    }, [$options.isItemVisible(item8) ? (openBlock(), createElementBlock("li", mergeProps({
      key: 0,
      id: "".concat($data.id, "_").concat(index),
      "class": _ctx.cx("item", {
        id: "".concat($data.id, "_").concat(index)
      }),
      style: $options.getItemStyle(index),
      role: "none",
      "data-p-active": $options.isItemActive("".concat($data.id, "_").concat(index)),
      ref_for: true
    }, $options.getPTOptions("".concat($data.id, "_").concat(index), "item")), [!_ctx.$slots.item ? withDirectives((openBlock(), createBlock(_component_Button, mergeProps({
      key: 0,
      tabindex: -1,
      role: "menuitem",
      "class": _ctx.cx("pcAction", {
        item: item8
      }),
      "aria-label": item8.label,
      disabled: _ctx.disabled,
      unstyled: _ctx.unstyled,
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onItemClick($event, item8);
      }, "onClick"),
      ref_for: true
    }, _ctx.actionButtonProps, {
      pt: $options.getPTOptions("".concat($data.id, "_").concat(index), "pcAction")
    }), createSlots({
      _: 2
    }, [item8.icon ? {
      name: "icon",
      fn: withCtx(function(slotProps) {
        return [renderSlot(_ctx.$slots, "itemicon", {
          item: item8,
          "class": normalizeClass(slotProps["class"])
        }, function() {
          return [createBaseVNode("span", mergeProps({
            "class": [item8.icon, slotProps["class"]],
            ref_for: true
          }, $options.getPTOptions("".concat($data.id, "_").concat(index), "actionIcon")), null, 16)];
        })];
      }),
      key: "0"
    } : void 0]), 1040, ["class", "aria-label", "disabled", "unstyled", "onClick", "pt"])), [[_directive_tooltip, {
      value: item8.label,
      disabled: !_ctx.tooltipOptions
    }, _ctx.tooltipOptions]]) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.item), {
      key: 1,
      item: item8,
      onClick: /* @__PURE__ */ __name(function onClick11(event2) {
        return $options.onItemClick(event2, item8);
      }, "onClick"),
      toggleCallback: /* @__PURE__ */ __name(function toggleCallback(event2) {
        return $options.onItemClick(event2, item8);
      }, "toggleCallback")
    }, null, 8, ["item", "onClick", "toggleCallback"]))], 16, _hoisted_2$7)) : createCommentVNode("", true)], 64);
  }), 128))], 16, _hoisted_1$a)], 16), _ctx.mask ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": [_ctx.cx("mask"), _ctx.maskClass],
    style: _ctx.maskStyle
  }, _ctx.ptm("mask")), null, 16)) : createCommentVNode("", true)], 64);
}
__name(render$b, "render$b");
script$c.render = render$b;
var classes$6 = {
  root: /* @__PURE__ */ __name(function root29(_ref) {
    var instance = _ref.instance;
    return ["p-stepitem", {
      "p-stepitem-active": instance.isActive
    }];
  }, "root")
};
var StepItemStyle = BaseStyle.extend({
  name: "stepitem",
  classes: classes$6
});
var script$1$6 = {
  name: "BaseStepItem",
  "extends": script$1d,
  props: {
    value: {
      type: [String, Number],
      "default": void 0
    }
  },
  style: StepItemStyle,
  provide: /* @__PURE__ */ __name(function provide45() {
    return {
      $pcStepItem: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$b = {
  name: "StepItem",
  "extends": script$1$6,
  inheritAttrs: false,
  inject: ["$pcStepper"],
  computed: {
    isActive: /* @__PURE__ */ __name(function isActive() {
      var _this$$pcStepper;
      return ((_this$$pcStepper = this.$pcStepper) === null || _this$$pcStepper === void 0 ? void 0 : _this$$pcStepper.d_value) === this.value;
    }, "isActive")
  }
};
var _hoisted_1$9 = ["data-p-active"];
function render$a(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    "data-p-active": $options.isActive
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default")], 16, _hoisted_1$9);
}
__name(render$a, "render$a");
script$b.render = render$a;
var theme$5 = /* @__PURE__ */ __name(function theme35(_ref) {
  var dt = _ref.dt;
  return '\n.p-steps {\n    position: relative;\n}\n\n.p-steps-list {\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    display: flex;\n}\n\n.p-steps-item {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    flex: 1 1 auto;\n}\n\n.p-steps-item.p-disabled,\n.p-steps-item.p-disabled * {\n    opacity: 1;\n    pointer-events: auto;\n    user-select: auto;\n    cursor: auto;\n}\n\n.p-steps-item:before {\n    content: " ";\n    border-top: 2px solid '.concat(dt("steps.separator.background"), ";\n    width: 100%;\n    top: 50%;\n    left: 0;\n    display: block;\n    position: absolute;\n    margin-top: calc(-1rem + 1px);\n}\n\n.p-steps-item:first-child::before {\n    width: calc(50% + 1rem);\n    transform: translateX(100%);\n}\n\n.p-steps-item:last-child::before {\n    width: 50%;\n}\n\n.p-steps-item-link {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: hidden;\n    text-decoration: none;\n    transition: outline-color ").concat(dt("steps.transition.duration"), ", box-shadow ").concat(dt("steps.transition.duration"), ";\n    border-radius: ").concat(dt("steps.item.link.border.radius"), ";\n    outline-color: transparent;\n    gap: ").concat(dt("steps.item.link.gap"), ";\n}\n\n.p-steps-item-link:not(.p-disabled):focus-visible {\n    box-shadow: ").concat(dt("steps.item.link.focus.ring.shadow"), ";\n    outline: ").concat(dt("steps.item.link.focus.ring.width"), " ").concat(dt("steps.item.link.focus.ring.style"), " ").concat(dt("steps.item.link.focus.ring.color"), ";\n    outline-offset: ").concat(dt("steps.item.link.focus.ring.offset"), ";\n}\n\n.p-steps-item-label {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 100%;\n    color: ").concat(dt("steps.item.label.color"), ";\n    display: block;\n    font-weight: ").concat(dt("steps.item.label.font.weight"), ";\n}\n\n.p-steps-item-number {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ").concat(dt("steps.item.number.color"), ";\n    border: 2px solid ").concat(dt("steps.item.number.border.color"), ";\n    background: ").concat(dt("steps.item.number.background"), ";\n    min-width: ").concat(dt("steps.item.number.size"), ";\n    height: ").concat(dt("steps.item.number.size"), ";\n    line-height: ").concat(dt("steps.item.number.size"), ";\n    font-size: ").concat(dt("steps.item.number.font.size"), ";\n    z-index: 1;\n    border-radius: ").concat(dt("steps.item.number.border.radius"), ";\n    position: relative;\n    font-weight: ").concat(dt("steps.item.number.font.weight"), ';\n}\n\n.p-steps-item-number::after {\n    content: " ";\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: ').concat(dt("steps.item.number.border.radius"), ";\n    box-shadow: ").concat(dt("steps.item.number.shadow"), ";\n}\n\n.p-steps:not(.p-readonly) .p-steps-item {\n    cursor: pointer;\n}\n\n.p-steps-item-active .p-steps-item-number {\n    background: ").concat(dt("steps.item.number.active.background"), ";\n    border-color: ").concat(dt("steps.item.number.active.border.color"), ";\n    color: ").concat(dt("steps.item.number.active.color"), ";\n}\n\n.p-steps-item-active .p-steps-item-label {\n    color: ").concat(dt("steps.item.label.active.color"), ";\n}\n");
}, "theme");
var classes$5 = {
  root: /* @__PURE__ */ __name(function root30(_ref2) {
    var props = _ref2.props;
    return ["p-steps p-component", {
      "p-readonly": props.readonly
    }];
  }, "root"),
  list: "p-steps-list",
  item: /* @__PURE__ */ __name(function item6(_ref3) {
    var instance = _ref3.instance, _item = _ref3.item, index = _ref3.index;
    return ["p-steps-item", {
      "p-steps-item-active": instance.isActive(index),
      "p-disabled": instance.isItemDisabled(_item, index)
    }];
  }, "item"),
  itemLink: "p-steps-item-link",
  itemNumber: "p-steps-item-number",
  itemLabel: "p-steps-item-label"
};
var StepsStyle = BaseStyle.extend({
  name: "steps",
  theme: theme$5,
  classes: classes$5
});
var script$1$5 = {
  name: "BaseSteps",
  "extends": script$1d,
  props: {
    id: {
      type: String
    },
    model: {
      type: Array,
      "default": null
    },
    readonly: {
      type: Boolean,
      "default": true
    },
    activeStep: {
      type: Number,
      "default": 0
    }
  },
  style: StepsStyle,
  provide: /* @__PURE__ */ __name(function provide46() {
    return {
      $pcSteps: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$a = {
  name: "Steps",
  "extends": script$1$5,
  inheritAttrs: false,
  emits: ["update:activeStep", "step-change"],
  data: /* @__PURE__ */ __name(function data33() {
    return {
      d_activeStep: this.activeStep
    };
  }, "data"),
  watch: {
    activeStep: /* @__PURE__ */ __name(function activeStep(newValue) {
      this.d_activeStep = newValue;
    }, "activeStep")
  },
  mounted: /* @__PURE__ */ __name(function mounted36() {
    var firstItem = this.findFirstItem();
    firstItem && (firstItem.tabIndex = "0");
  }, "mounted"),
  methods: {
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions11(key, item8, index) {
      return this.ptm(key, {
        context: {
          item: item8,
          index,
          active: this.isActive(index),
          disabled: this.isItemDisabled(item8, index)
        }
      });
    }, "getPTOptions"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick8(event2, item8, index) {
      if (this.disabled(item8) || this.readonly) {
        event2.preventDefault();
        return;
      }
      if (item8.command) {
        item8.command({
          originalEvent: event2,
          item: item8
        });
      }
      if (index !== this.d_activeStep) {
        this.d_activeStep = index;
        this.$emit("update:activeStep", this.d_activeStep);
      }
      this.$emit("step-change", {
        originalEvent: event2,
        index
      });
    }, "onItemClick"),
    onItemKeydown: /* @__PURE__ */ __name(function onItemKeydown(event2, item8) {
      switch (event2.code) {
        case "ArrowRight": {
          this.navigateToNextItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "ArrowLeft": {
          this.navigateToPrevItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "Home": {
          this.navigateToFirstItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "End": {
          this.navigateToLastItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "Tab":
          break;
        case "Enter":
        case "NumpadEnter":
        case "Space": {
          this.onItemClick(event2, item8);
          event2.preventDefault();
          break;
        }
      }
    }, "onItemKeydown"),
    navigateToNextItem: /* @__PURE__ */ __name(function navigateToNextItem(target) {
      var nextItem = this.findNextItem(target);
      nextItem && this.setFocusToMenuitem(target, nextItem);
    }, "navigateToNextItem"),
    navigateToPrevItem: /* @__PURE__ */ __name(function navigateToPrevItem(target) {
      var prevItem = this.findPrevItem(target);
      prevItem && this.setFocusToMenuitem(target, prevItem);
    }, "navigateToPrevItem"),
    navigateToFirstItem: /* @__PURE__ */ __name(function navigateToFirstItem(target) {
      var firstItem = this.findFirstItem(target);
      firstItem && this.setFocusToMenuitem(target, firstItem);
    }, "navigateToFirstItem"),
    navigateToLastItem: /* @__PURE__ */ __name(function navigateToLastItem(target) {
      var lastItem = this.findLastItem(target);
      lastItem && this.setFocusToMenuitem(target, lastItem);
    }, "navigateToLastItem"),
    findNextItem: /* @__PURE__ */ __name(function findNextItem2(item8) {
      var nextItem = item8.parentElement.nextElementSibling;
      return nextItem ? nextItem.children[0] : null;
    }, "findNextItem"),
    findPrevItem: /* @__PURE__ */ __name(function findPrevItem2(item8) {
      var prevItem = item8.parentElement.previousElementSibling;
      return prevItem ? prevItem.children[0] : null;
    }, "findPrevItem"),
    findFirstItem: /* @__PURE__ */ __name(function findFirstItem2() {
      var firstSibling = findSingle(this.$refs.list, '[data-pc-section="item"]');
      return firstSibling ? firstSibling.children[0] : null;
    }, "findFirstItem"),
    findLastItem: /* @__PURE__ */ __name(function findLastItem2() {
      var siblings = find(this.$refs.list, '[data-pc-section="item"]');
      return siblings ? siblings[siblings.length - 1].children[0] : null;
    }, "findLastItem"),
    setFocusToMenuitem: /* @__PURE__ */ __name(function setFocusToMenuitem(target, focusableItem) {
      target.tabIndex = "-1";
      focusableItem.tabIndex = "0";
      focusableItem.focus();
    }, "setFocusToMenuitem"),
    isActive: /* @__PURE__ */ __name(function isActive2(index) {
      return index === this.d_activeStep;
    }, "isActive"),
    isItemDisabled: /* @__PURE__ */ __name(function isItemDisabled6(item8, index) {
      return this.disabled(item8) || this.readonly && !this.isActive(index);
    }, "isItemDisabled"),
    visible: /* @__PURE__ */ __name(function visible5(item8) {
      return typeof item8.visible === "function" ? item8.visible() : item8.visible !== false;
    }, "visible"),
    disabled: /* @__PURE__ */ __name(function disabled5(item8) {
      return typeof item8.disabled === "function" ? item8.disabled() : item8.disabled;
    }, "disabled"),
    label: /* @__PURE__ */ __name(function label8(item8) {
      return typeof item8.label === "function" ? item8.label() : item8.label;
    }, "label"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps7(item8, index) {
      var _this = this;
      return {
        action: mergeProps({
          "class": this.cx("itemLink"),
          onClick: /* @__PURE__ */ __name(function onClick11($event) {
            return _this.onItemClick($event, item8);
          }, "onClick"),
          onKeyDown: /* @__PURE__ */ __name(function onKeyDown15($event) {
            return _this.onItemKeydown($event, item8);
          }, "onKeyDown")
        }, this.getPTOptions("itemLink", item8, index)),
        step: mergeProps({
          "class": this.cx("itemNumber")
        }, this.getPTOptions("itemNumber", item8, index)),
        label: mergeProps({
          "class": this.cx("itemLabel")
        }, this.getPTOptions("itemLabel", item8, index))
      };
    }, "getMenuItemProps")
  }
};
var _hoisted_1$8 = ["id"];
var _hoisted_2$6 = ["aria-current", "onClick", "onKeydown", "data-p-active", "data-p-disabled"];
function render$9(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("nav", mergeProps({
    id: _ctx.id,
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createBaseVNode("ol", mergeProps({
    ref: "list",
    "class": _ctx.cx("list")
  }, _ctx.ptm("list")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function(item8, index) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.label(item8) + "_" + index.toString()
    }, [$options.visible(item8) ? (openBlock(), createElementBlock("li", mergeProps({
      key: 0,
      "class": [_ctx.cx("item", {
        item: item8,
        index
      }), item8["class"]],
      style: item8.style,
      "aria-current": $options.isActive(index) ? "step" : void 0,
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onItemClick($event, item8, index);
      }, "onClick"),
      onKeydown: /* @__PURE__ */ __name(function onKeydown6($event) {
        return $options.onItemKeydown($event, item8, index);
      }, "onKeydown"),
      ref_for: true
    }, $options.getPTOptions("item", item8, index), {
      "data-p-active": $options.isActive(index),
      "data-p-disabled": $options.isItemDisabled(item8, index)
    }), [!_ctx.$slots.item ? (openBlock(), createElementBlock("span", mergeProps({
      key: 0,
      "class": _ctx.cx("itemLink"),
      ref_for: true
    }, $options.getPTOptions("itemLink", item8, index)), [createBaseVNode("span", mergeProps({
      "class": _ctx.cx("itemNumber"),
      ref_for: true
    }, $options.getPTOptions("itemNumber", item8, index)), toDisplayString(index + 1), 17), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("itemLabel"),
      ref_for: true
    }, $options.getPTOptions("itemLabel", item8, index)), toDisplayString($options.label(item8)), 17)], 16)) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.item), {
      key: 1,
      item: item8,
      index,
      active: index === $data.d_activeStep,
      label: $options.label(item8),
      props: $options.getMenuItemProps(item8, index)
    }, null, 8, ["item", "index", "active", "label", "props"]))], 16, _hoisted_2$6)) : createCommentVNode("", true)], 64);
  }), 128))], 16)], 16, _hoisted_1$8);
}
__name(render$9, "render$9");
script$a.render = render$9;
var StyleClassStyle = BaseStyle.extend({
  name: "styleclass-directive"
});
var BaseStyleClass = BaseDirective.extend({
  style: StyleClassStyle
});
var StyleClass = BaseStyleClass.extend("styleclass", {
  mounted: /* @__PURE__ */ __name(function mounted37(el, binding) {
    el.setAttribute("data-pd-styleclass", true);
    this.bind(el, binding);
  }, "mounted"),
  unmounted: /* @__PURE__ */ __name(function unmounted5(el) {
    this.unbind(el);
  }, "unmounted"),
  methods: {
    bind: /* @__PURE__ */ __name(function bind(el, binding) {
      var _this = this;
      var target = this.resolveTarget(el, binding);
      this.$el = target;
      el.$_pstyleclass_clicklistener = function() {
        if (binding.value.toggleClass) {
          if (hasClass(target, binding.value.toggleClass)) removeClass(target, binding.value.toggleClass);
          else addClass(target, binding.value.toggleClass);
        } else {
          if (target.offsetParent === null) _this.enter(target, el, binding);
          else _this.leave(target, binding);
        }
      };
      el.addEventListener("click", el.$_pstyleclass_clicklistener);
    }, "bind"),
    unbind: /* @__PURE__ */ __name(function unbind(el) {
      if (el.$_pstyleclass_clicklistener) {
        el.removeEventListener("click", el.$_pstyleclass_clicklistener);
        el.$_pstyleclass_clicklistener = null;
      }
      this.unbindDocumentListener(el);
    }, "unbind"),
    enter: /* @__PURE__ */ __name(function enter2(target, el, binding) {
      if (binding.value.enterActiveClass) {
        if (!target.$_pstyleclass_animating) {
          target.$_pstyleclass_animating = true;
          if (binding.value.enterActiveClass.includes("slidedown")) {
            target.style.height = "0px";
            removeClass(target, binding.value.hiddenClass || binding.value.enterFromClass);
            target.style.maxHeight = target.scrollHeight + "px";
            addClass(target, binding.value.hiddenClass || binding.value.enterActiveClass);
            target.style.height = "";
          }
          addClass(target, binding.value.enterActiveClass);
          if (binding.value.enterFromClass) {
            removeClass(target, binding.value.enterFromClass);
          }
          target.$p_styleclass_enterlistener = function() {
            removeClass(target, binding.value.enterActiveClass);
            if (binding.value.enterToClass) {
              addClass(target, binding.value.enterToClass);
            }
            target.removeEventListener("animationend", target.$p_styleclass_enterlistener);
            if (binding.value.enterActiveClass.includes("slidedown")) {
              target.style.maxHeight = "";
            }
            target.$_pstyleclass_animating = false;
          };
          target.addEventListener("animationend", target.$p_styleclass_enterlistener);
        }
      } else {
        if (binding.value.enterFromClass) {
          removeClass(target, binding.value.enterFromClass);
        }
        if (binding.value.enterToClass) {
          addClass(target, binding.value.enterToClass);
        }
      }
      if (binding.value.hideOnOutsideClick) {
        this.bindDocumentListener(target, el, binding);
      }
    }, "enter"),
    leave: /* @__PURE__ */ __name(function leave2(target, binding) {
      if (binding.value.leaveActiveClass) {
        if (!target.$_pstyleclass_animating) {
          target.$_pstyleclass_animating = true;
          addClass(target, binding.value.leaveActiveClass);
          if (binding.value.leaveFromClass) {
            removeClass(target, binding.value.leaveFromClass);
          }
          target.$p_styleclass_leavelistener = function() {
            removeClass(target, binding.value.leaveActiveClass);
            if (binding.value.leaveToClass) {
              addClass(target, binding.value.leaveToClass);
            }
            target.removeEventListener("animationend", target.$p_styleclass_leavelistener);
            target.$_pstyleclass_animating = false;
          };
          target.addEventListener("animationend", target.$p_styleclass_leavelistener);
        }
      } else {
        if (binding.value.leaveFromClass) {
          removeClass(target, binding.value.leaveFromClass);
        }
        if (binding.value.leaveToClass) {
          addClass(target, binding.value.leaveToClass);
        }
      }
      if (binding.value.hideOnOutsideClick) {
        this.unbindDocumentListener(target);
      }
    }, "leave"),
    resolveTarget: /* @__PURE__ */ __name(function resolveTarget(el, binding) {
      switch (binding.value.selector) {
        case "@next":
          return el.nextElementSibling;
        case "@prev":
          return el.previousElementSibling;
        case "@parent":
          return el.parentElement;
        case "@grandparent":
          return el.parentElement.parentElement;
        default:
          return document.querySelector(binding.value.selector);
      }
    }, "resolveTarget"),
    bindDocumentListener: /* @__PURE__ */ __name(function bindDocumentListener(target, el, binding) {
      var _this2 = this;
      if (!target.$p_styleclass_documentlistener) {
        target.$p_styleclass_documentlistener = function(event2) {
          if (!_this2.isVisible(target) || getComputedStyle(target).getPropertyValue("position") === "static") {
            _this2.unbindDocumentListener(target);
          } else if (_this2.isOutsideClick(event2, target, el)) {
            _this2.leave(target, binding);
          }
        };
        target.ownerDocument.addEventListener("click", target.$p_styleclass_documentlistener);
      }
    }, "bindDocumentListener"),
    unbindDocumentListener: /* @__PURE__ */ __name(function unbindDocumentListener(target) {
      if (target.$p_styleclass_documentlistener) {
        target.ownerDocument.removeEventListener("click", target.$p_styleclass_documentlistener);
        target.$p_styleclass_documentlistener = null;
      }
    }, "unbindDocumentListener"),
    isVisible: /* @__PURE__ */ __name(function isVisible(target) {
      return target.offsetParent !== null;
    }, "isVisible"),
    isOutsideClick: /* @__PURE__ */ __name(function isOutsideClick(event2, target, el) {
      return !el.isSameNode(event2.target) && !el.contains(event2.target) && !target.contains(event2.target);
    }, "isOutsideClick")
  }
});
var theme$4 = /* @__PURE__ */ __name(function theme36(_ref) {
  var dt = _ref.dt;
  return "\n.p-tabmenu {\n    overflow-x: auto;\n}\n\n.p-tabmenu-tablist {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    background: ".concat(dt("tabmenu.tablist.background"), ";\n    border-style: solid;\n    border-color: ").concat(dt("tabmenu.tablist.border.color"), ";\n    border-width: ").concat(dt("tabmenu.tablist.border.width"), ";\n    position: relative;\n}\n\n.p-tabmenu-item-link {\n    cursor: pointer;\n    user-select: none;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    position: relative;\n    overflow: hidden;\n    background: ").concat(dt("tabmenu.item.background"), ";\n    border-style: solid;\n    border-width: ").concat(dt("tabmenu.item.border.width"), ";\n    border-color: ").concat(dt("tabmenu.item.border.color"), ";\n    color: ").concat(dt("tabmenu.item.color"), ";\n    padding: ").concat(dt("tabmenu.item.padding"), ";\n    font-weight: ").concat(dt("tabmenu.item.font.weight"), ";\n    transition: background ").concat(dt("tabmenu.transition.duration"), ", border-color ").concat(dt("tabmenu.transition.duration"), ", color ").concat(dt("tabmenu.transition.duration"), ", outline-color ").concat(dt("tabmenu.transition.duration"), ", box-shadow ").concat(dt("tabmenu.transition.duration"), ";\n    margin: ").concat(dt("tabmenu.item.margin"), ";\n    outline-color: transparent;\n    gap: ").concat(dt("tabmenu.item.gap"), ";\n}\n\n.p-tabmenu-item-link:focus-visible {\n    z-index: 1;\n    box-shadow: ").concat(dt("tabmenu.item.focus.ring.shadow"), ";\n    outline: ").concat(dt("tabmenu.item.focus.ring.width"), " ").concat(dt("tabmenu.item.focus.ring.style"), " ").concat(dt("tabmenu.item.focus.ring.color"), ";\n    outline-offset: ").concat(dt("tabmenu.item.focus.ring.offset"), ";\n}\n\n.p-tabmenu-item-icon {\n    color: ").concat(dt("tabmenu.item.icon.color"), ";\n    transition: background ").concat(dt("tabmenu.transition.duration"), ", border-color ").concat(dt("tabmenu.transition.duration"), ", color ").concat(dt("tabmenu.transition.duration"), ", outline-color ").concat(dt("tabmenu.transition.duration"), ", box-shadow ").concat(dt("tabmenu.transition.duration"), ";\n}\n\n.p-tabmenu-item-label {\n    line-height: 1;\n}\n\n.p-tabmenu-item:not(.p-tabmenu-item-active):not(.p-disabled):hover .p-tabmenu-item-link {\n    background: ").concat(dt("tabmenu.item.hover.background"), ";\n    border-color: ").concat(dt("tabmenu.item.hover.border.color"), ";\n    color: ").concat(dt("tabmenu.item.hover.color"), ";\n}\n\n.p-tabmenu-item:not(.p-tabmenu-item-active):not(.p-disabled):hover .p-tabmenu-item-icon {\n    color: ").concat(dt("tabmenu.item.icon.hover.color"), ";\n}\n\n.p-tabmenu-item-active .p-tabmenu-item-link {\n    background: ").concat(dt("tabmenu.item.active.background"), ";\n    border-color: ").concat(dt("tabmenu.item.active.border.color"), ";\n    color: ").concat(dt("tabmenu.item.active.color"), ";\n}\n\n.p-tabmenu-item-active .p-tabmenu-item-icon {\n    color: ").concat(dt("tabmenu.item.icon.active.color"), ";\n}\n\n.p-tabmenu-active-bar {\n    z-index: 1;\n    display: block;\n    position: absolute;\n    bottom: ").concat(dt("tabmenu.active.bar.bottom"), ";\n    height: ").concat(dt("tabmenu.active.bar.height"), ";\n    background: ").concat(dt("tabmenu.active.bar.background"), ";\n    transition: 250ms cubic-bezier(0.35, 0, 0.25, 1);\n}\n\n.p-tabmenu::-webkit-scrollbar {\n    display: none;\n}\n");
}, "theme");
var classes$4 = {
  root: "p-tabmenu p-component",
  tablist: "p-tabmenu-tablist",
  item: /* @__PURE__ */ __name(function item7(_ref2) {
    var instance = _ref2.instance, index = _ref2.index, _item = _ref2.item;
    return ["p-tabmenu-item", {
      "p-tabmenu-item-active": instance.d_activeIndex === index,
      "p-disabled": instance.disabled(_item)
    }];
  }, "item"),
  itemLink: "p-tabmenu-item-link",
  itemIcon: "p-tabmenu-item-icon",
  itemLabel: "p-tabmenu-item-label",
  activeBar: "p-tabmenu-active-bar"
};
var TabMenuStyle = BaseStyle.extend({
  name: "tabmenu",
  theme: theme$4,
  classes: classes$4
});
var script$1$4 = {
  name: "BaseTabMenu",
  "extends": script$1d,
  props: {
    model: {
      type: Array,
      "default": null
    },
    activeIndex: {
      type: Number,
      "default": 0
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: TabMenuStyle,
  provide: /* @__PURE__ */ __name(function provide47() {
    return {
      $pcTabMenu: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$9 = {
  name: "TabMenu",
  "extends": script$1$4,
  inheritAttrs: false,
  emits: ["update:activeIndex", "tab-change"],
  data: /* @__PURE__ */ __name(function data34() {
    return {
      d_activeIndex: this.activeIndex
    };
  }, "data"),
  watch: {
    activeIndex: {
      flush: "post",
      handler: /* @__PURE__ */ __name(function handler3(newValue) {
        this.d_activeIndex = newValue;
        this.updateInkBar();
      }, "handler")
    }
  },
  mounted: /* @__PURE__ */ __name(function mounted38() {
    var _this = this;
    this.$nextTick(function() {
      _this.updateInkBar();
    });
    var activeItem2 = this.findActiveItem();
    activeItem2 && (activeItem2.tabIndex = "0");
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated8() {
    this.updateInkBar();
  }, "updated"),
  methods: {
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions12(key, item8, index) {
      return this.ptm(key, {
        context: {
          item: item8,
          index
        }
      });
    }, "getPTOptions"),
    onItemClick: /* @__PURE__ */ __name(function onItemClick9(event2, item8, index) {
      if (this.disabled(item8)) {
        event2.preventDefault();
        return;
      }
      if (item8.command) {
        item8.command({
          originalEvent: event2,
          item: item8
        });
      }
      if (index !== this.d_activeIndex) {
        this.d_activeIndex = index;
        this.$emit("update:activeIndex", this.d_activeIndex);
      }
      this.$emit("tab-change", {
        originalEvent: event2,
        index
      });
    }, "onItemClick"),
    onKeydownItem: /* @__PURE__ */ __name(function onKeydownItem(event2, item8, index) {
      switch (event2.code) {
        case "ArrowRight": {
          this.navigateToNextItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "ArrowLeft": {
          this.navigateToPrevItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "Home": {
          this.navigateToFirstItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "End": {
          this.navigateToLastItem(event2.target);
          event2.preventDefault();
          break;
        }
        case "Space":
        case "NumpadEnter":
        case "Enter": {
          this.onItemClick(event2, item8, index);
          event2.preventDefault();
          break;
        }
        case "Tab": {
          this.onTabKey();
          break;
        }
      }
    }, "onKeydownItem"),
    navigateToNextItem: /* @__PURE__ */ __name(function navigateToNextItem2(target) {
      var nextItem = this.findNextItem(target);
      nextItem && this.setFocusToMenuitem(target, nextItem);
    }, "navigateToNextItem"),
    navigateToPrevItem: /* @__PURE__ */ __name(function navigateToPrevItem2(target) {
      var prevItem = this.findPrevItem(target);
      prevItem && this.setFocusToMenuitem(target, prevItem);
    }, "navigateToPrevItem"),
    navigateToFirstItem: /* @__PURE__ */ __name(function navigateToFirstItem2(target) {
      var firstItem = this.findFirstItem(target);
      firstItem && this.setFocusToMenuitem(target, firstItem);
    }, "navigateToFirstItem"),
    navigateToLastItem: /* @__PURE__ */ __name(function navigateToLastItem2(target) {
      var lastItem = this.findLastItem(target);
      lastItem && this.setFocusToMenuitem(target, lastItem);
    }, "navigateToLastItem"),
    findNextItem: /* @__PURE__ */ __name(function findNextItem3(item8) {
      var nextItem = item8.parentElement.nextElementSibling;
      return nextItem ? getAttribute(nextItem, "data-p-disabled") === true ? this.findNextItem(nextItem.children[0]) : nextItem.children[0] : null;
    }, "findNextItem"),
    findPrevItem: /* @__PURE__ */ __name(function findPrevItem3(item8) {
      var prevItem = item8.parentElement.previousElementSibling;
      return prevItem ? getAttribute(prevItem, "data-p-disabled") === true ? this.findPrevItem(prevItem.children[0]) : prevItem.children[0] : null;
    }, "findPrevItem"),
    findFirstItem: /* @__PURE__ */ __name(function findFirstItem3() {
      var firstSibling = findSingle(this.$refs.nav, '[data-pc-section="item"][data-p-disabled="false"]');
      return firstSibling ? firstSibling.children[0] : null;
    }, "findFirstItem"),
    findLastItem: /* @__PURE__ */ __name(function findLastItem3() {
      var siblings = find(this.$refs.nav, '[data-pc-section="item"][data-p-disabled="false"]');
      return siblings ? siblings[siblings.length - 1].children[0] : null;
    }, "findLastItem"),
    findActiveItem: /* @__PURE__ */ __name(function findActiveItem() {
      var activeItem2 = findSingle(this.$refs.nav, '[data-pc-section="item"][data-p-disabled="false"][data-p-active="true"]');
      return activeItem2 ? activeItem2.children[0] : null;
    }, "findActiveItem"),
    setFocusToMenuitem: /* @__PURE__ */ __name(function setFocusToMenuitem2(target, focusableItem) {
      target.tabIndex = "-1";
      focusableItem.tabIndex = "0";
      focusableItem.focus();
    }, "setFocusToMenuitem"),
    onTabKey: /* @__PURE__ */ __name(function onTabKey4() {
      var activeItem2 = findSingle(this.$refs.nav, '[data-pc-section="item"][data-p-disabled="false"][data-p-active="true"]');
      var focusedItem = findSingle(this.$refs.nav, '[data-pc-section="itemlink"][tabindex="0"]');
      if (focusedItem !== activeItem2.children[0]) {
        activeItem2 && (activeItem2.children[0].tabIndex = "0");
        focusedItem.tabIndex = "-1";
      }
    }, "onTabKey"),
    visible: /* @__PURE__ */ __name(function visible6(item8) {
      return typeof item8.visible === "function" ? item8.visible() : item8.visible !== false;
    }, "visible"),
    disabled: /* @__PURE__ */ __name(function disabled6(item8) {
      return typeof item8.disabled === "function" ? item8.disabled() : item8.disabled === true;
    }, "disabled"),
    label: /* @__PURE__ */ __name(function label9(item8) {
      return typeof item8.label === "function" ? item8.label() : item8.label;
    }, "label"),
    updateInkBar: /* @__PURE__ */ __name(function updateInkBar() {
      var tabs2 = this.$refs.nav.children;
      var inkHighlighted = false;
      for (var i = 0; i < tabs2.length; i++) {
        var tab = tabs2[i];
        if (getAttribute(tab, "data-p-active")) {
          this.$refs.inkbar.style.width = getWidth(tab) + "px";
          this.$refs.inkbar.style.left = getOffset(tab).left - getOffset(this.$refs.nav).left + "px";
          inkHighlighted = true;
        }
      }
      if (!inkHighlighted) {
        this.$refs.inkbar.style.width = "0px";
        this.$refs.inkbar.style.left = "0px";
      }
    }, "updateInkBar"),
    getMenuItemProps: /* @__PURE__ */ __name(function getMenuItemProps8(item8, index) {
      var _this2 = this;
      return {
        action: mergeProps({
          "class": this.cx("itemLink"),
          tabindex: -1,
          onClick: /* @__PURE__ */ __name(function onClick11($event) {
            return _this2.onItemClick($event, item8, index);
          }, "onClick"),
          onKeyDown: /* @__PURE__ */ __name(function onKeyDown15($event) {
            return _this2.onKeydownItem($event, item8, index);
          }, "onKeyDown")
        }, this.getPTOptions("itemLink", item8, index)),
        icon: mergeProps({
          "class": [this.cx("itemIcon"), item8.icon]
        }, this.getPTOptions("itemIcon", item8, index)),
        label: mergeProps({
          "class": this.cx("itemLabel")
        }, this.getPTOptions("itemLabel", item8, index))
      };
    }, "getMenuItemProps")
  },
  directives: {
    ripple: Ripple
  }
};
var _hoisted_1$7 = ["aria-labelledby", "aria-label"];
var _hoisted_2$5 = ["onClick", "onKeydown", "data-p-active", "data-p-disabled"];
var _hoisted_3$5 = ["href", "target", "aria-label", "aria-disabled"];
function render$8(_ctx, _cache, $props, $setup, $data, $options) {
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [createBaseVNode("ul", mergeProps({
    ref: "nav",
    "class": _ctx.cx("tablist"),
    role: "menubar",
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel
  }, _ctx.ptm("tablist")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.model, function(item8, i) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.label(item8) + "_" + i.toString()
    }, [$options.visible(item8) ? (openBlock(), createElementBlock("li", mergeProps({
      key: 0,
      ref_for: true,
      ref: "tab",
      "class": [_ctx.cx("item", {
        item: item8,
        index: i
      }), item8["class"]],
      role: "presentation",
      onClick: /* @__PURE__ */ __name(function onClick11($event) {
        return $options.onItemClick($event, item8, i);
      }, "onClick"),
      onKeydown: /* @__PURE__ */ __name(function onKeydown6($event) {
        return $options.onKeydownItem($event, item8, i);
      }, "onKeydown")
    }, $options.getPTOptions("item", item8, i), {
      "data-p-active": $data.d_activeIndex === i,
      "data-p-disabled": $options.disabled(item8)
    }), [!_ctx.$slots.item ? withDirectives((openBlock(), createElementBlock("a", mergeProps({
      key: 0,
      ref_for: true,
      ref: "tabLink",
      role: "menuitem",
      href: item8.url,
      "class": _ctx.cx("itemLink"),
      target: item8.target,
      "aria-label": $options.label(item8),
      "aria-disabled": $options.disabled(item8),
      tabindex: -1
    }, $options.getPTOptions("itemLink", item8, i)), [_ctx.$slots.itemicon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.itemicon), {
      key: 0,
      item: item8,
      "class": normalizeClass(_ctx.cx("itemIcon"))
    }, null, 8, ["item", "class"])) : item8.icon ? (openBlock(), createElementBlock("span", mergeProps({
      key: 1,
      "class": [_ctx.cx("itemIcon"), item8.icon],
      ref_for: true
    }, $options.getPTOptions("itemIcon", item8, i)), null, 16)) : createCommentVNode("", true), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("itemLabel"),
      ref_for: true
    }, $options.getPTOptions("itemLabel", item8, i)), toDisplayString($options.label(item8)), 17)], 16, _hoisted_3$5)), [[_directive_ripple]]) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.$slots.item), {
      key: 1,
      item: item8,
      index: i,
      active: i === $data.d_activeIndex,
      label: $options.label(item8),
      props: $options.getMenuItemProps(item8, i)
    }, null, 8, ["item", "index", "active", "label", "props"]))], 16, _hoisted_2$5)) : createCommentVNode("", true)], 64);
  }), 128)), createBaseVNode("li", mergeProps({
    ref: "inkbar",
    role: "none",
    "class": _ctx.cx("activeBar")
  }, _ctx.ptm("activeBar")), null, 16)], 16, _hoisted_1$7)], 16);
}
__name(render$8, "render$8");
script$9.render = render$8;
var TerminalService = EventBus();
var theme$3 = /* @__PURE__ */ __name(function theme37(_ref) {
  var dt = _ref.dt;
  return "\n.p-terminal {\n    height: ".concat(dt("terminal.height"), ";\n    overflow: auto;\n    background: ").concat(dt("terminal.background"), ";\n    color: ").concat(dt("terminal.color"), ";\n    border: 1px solid ").concat(dt("terminal.border.color"), ";\n    padding: ").concat(dt("terminal.padding"), ";\n    border-radius: ").concat(dt("terminal.border.radius"), ";\n}\n\n.p-terminal-prompt {\n    display: flex;\n    align-items: center;\n}\n\n.p-terminal-prompt-value {\n    flex: 1 1 auto;\n    border: 0 none;\n    background: transparent;\n    color: inherit;\n    padding: 0;\n    outline: 0 none;\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n}\n\n.p-terminal-prompt-label {\n    margin-inline-end: ").concat(dt("terminal.prompt.gap"), ";\n}\n\n.p-terminal-input::-ms-clear {\n    display: none;\n}\n\n.p-terminal-command-response {\n    margin: ").concat(dt("terminal.command.response.margin"), ";\n}\n");
}, "theme");
var classes$3 = {
  root: "p-terminal p-component",
  welcomeMessage: "p-terminal-welcome-message",
  commandList: "p-terminal-command-list",
  command: "p-terminal-command",
  commandValue: "p-terminal-command-value",
  commandResponse: "p-terminal-command-response",
  prompt: "p-terminal-prompt",
  promptLabel: "p-terminal-prompt-label",
  promptValue: "p-terminal-prompt-value"
};
var TerminalStyle = BaseStyle.extend({
  name: "terminal",
  theme: theme$3,
  classes: classes$3
});
var script$1$3 = {
  name: "BaseTerminal",
  "extends": script$1d,
  props: {
    welcomeMessage: {
      type: String,
      "default": null
    },
    prompt: {
      type: String,
      "default": null
    }
  },
  style: TerminalStyle,
  provide: /* @__PURE__ */ __name(function provide48() {
    return {
      $pcTerminal: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$8 = {
  name: "Terminal",
  "extends": script$1$3,
  inheritAttrs: false,
  data: /* @__PURE__ */ __name(function data35() {
    return {
      commandText: null,
      commands: []
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted39() {
    TerminalService.on("response", this.responseListener);
    this.$refs.input.focus();
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated9() {
    this.$el.scrollTop = this.$el.scrollHeight;
  }, "updated"),
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount16() {
    TerminalService.off("response", this.responseListener);
  }, "beforeUnmount"),
  methods: {
    onClick: /* @__PURE__ */ __name(function onClick7() {
      this.$refs.input.focus();
    }, "onClick"),
    onKeydown: /* @__PURE__ */ __name(function onKeydown5(event2) {
      if (event2.key === "Enter" && this.commandText) {
        this.commands.push({
          text: this.commandText
        });
        TerminalService.emit("command", this.commandText);
        this.commandText = "";
      }
    }, "onKeydown"),
    responseListener: /* @__PURE__ */ __name(function responseListener(response) {
      this.commands[this.commands.length - 1].response = response;
    }, "responseListener")
  }
};
function render$7(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    onClick: _cache[2] || (_cache[2] = function() {
      return $options.onClick && $options.onClick.apply($options, arguments);
    })
  }, _ctx.ptmi("root")), [_ctx.welcomeMessage ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": _ctx.cx("welcomeMessage")
  }, _ctx.ptm("welcomeMessage")), toDisplayString(_ctx.welcomeMessage), 17)) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("commandList")
  }, _ctx.ptm("content")), [(openBlock(true), createElementBlock(Fragment, null, renderList($data.commands, function(command, i) {
    return openBlock(), createElementBlock("div", mergeProps({
      key: command.text + i.toString(),
      "class": _ctx.cx("command"),
      ref_for: true
    }, _ctx.ptm("commands")), [createBaseVNode("span", mergeProps({
      "class": _ctx.cx("promptLabel"),
      ref_for: true
    }, _ctx.ptm("prompt")), toDisplayString(_ctx.prompt), 17), createBaseVNode("span", mergeProps({
      "class": _ctx.cx("commandValue"),
      ref_for: true
    }, _ctx.ptm("command")), toDisplayString(command.text), 17), createBaseVNode("div", mergeProps({
      "class": _ctx.cx("commandResponse"),
      "aria-live": "polite",
      ref_for: true
    }, _ctx.ptm("response")), toDisplayString(command.response), 17)], 16);
  }), 128))], 16), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("prompt")
  }, _ctx.ptm("container")), [createBaseVNode("span", mergeProps({
    "class": _ctx.cx("promptLabel")
  }, _ctx.ptm("prompt")), toDisplayString(_ctx.prompt), 17), withDirectives(createBaseVNode("input", mergeProps({
    ref: "input",
    "onUpdate:modelValue": _cache[0] || (_cache[0] = function($event) {
      return $data.commandText = $event;
    }),
    "class": _ctx.cx("promptValue"),
    type: "text",
    autocomplete: "off",
    onKeydown: _cache[1] || (_cache[1] = function() {
      return $options.onKeydown && $options.onKeydown.apply($options, arguments);
    })
  }, _ctx.ptm("commandText")), null, 16), [[vModelText, $data.commandText]])], 16)], 16);
}
__name(render$7, "render$7");
script$8.render = render$7;
var theme$2 = /* @__PURE__ */ __name(function theme38(_ref) {
  var dt = _ref.dt;
  return "\n.p-timeline {\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    direction: ltr;\n}\n\n.p-timeline-left .p-timeline-event-opposite {\n    text-align: right;\n}\n\n.p-timeline-left .p-timeline-event-content {\n    text-align: left;\n}\n\n.p-timeline-right .p-timeline-event {\n    flex-direction: row-reverse;\n}\n\n.p-timeline-right .p-timeline-event-opposite {\n    text-align: left;\n}\n\n.p-timeline-right .p-timeline-event-content {\n    text-align: right;\n}\n\n.p-timeline-vertical.p-timeline-alternate .p-timeline-event:nth-child(even) {\n    flex-direction: row-reverse;\n}\n\n.p-timeline-vertical.p-timeline-alternate .p-timeline-event:nth-child(odd) .p-timeline-event-opposite {\n    text-align: right;\n}\n\n.p-timeline-vertical.p-timeline-alternate .p-timeline-event:nth-child(odd) .p-timeline-event-content {\n    text-align: left;\n}\n\n.p-timeline-vertical.p-timeline-alternate .p-timeline-event:nth-child(even) .p-timeline-event-opposite {\n    text-align: left;\n}\n\n.p-timeline-vertical.p-timeline-alternate .p-timeline-event:nth-child(even) .p-timeline-event-content {\n    text-align: right;\n}\n\n.p-timeline-vertical .p-timeline-event-opposite,\n.p-timeline-vertical .p-timeline-event-content {\n    padding: ".concat(dt("timeline.vertical.event.content.padding"), ";\n}\n\n.p-timeline-vertical .p-timeline-event-connector {\n    width: ").concat(dt("timeline.event.connector.size"), ";\n}\n\n.p-timeline-event {\n    display: flex;\n    position: relative;\n    min-height: ").concat(dt("timeline.event.min.height"), ";\n}\n\n.p-timeline-event:last-child {\n    min-height: 0;\n}\n\n.p-timeline-event-opposite {\n    flex: 1;\n}\n\n.p-timeline-event-content {\n    flex: 1;\n}\n\n.p-timeline-event-separator {\n    flex: 0;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\n.p-timeline-event-marker {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    align-self: baseline;\n    border-width: ").concat(dt("timeline.event.marker.border.width"), ";\n    border-style: solid;\n    border-color: ").concat(dt("timeline.event.marker.border.color"), ";\n    border-radius: ").concat(dt("timeline.event.marker.border.radius"), ";\n    width: ").concat(dt("timeline.event.marker.size"), ";\n    height: ").concat(dt("timeline.event.marker.size"), ";\n    background: ").concat(dt("timeline.event.marker.background"), ';\n}\n\n.p-timeline-event-marker::before {\n    content: " ";\n    border-radius: ').concat(dt("timeline.event.marker.content.border.radius"), ";\n    width: ").concat(dt("timeline.event.marker.content.size"), ";\n    height:").concat(dt("timeline.event.marker.content.size"), ";\n    background: ").concat(dt("timeline.event.marker.content.background"), ';\n}\n\n.p-timeline-event-marker::after {\n    content: " ";\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: ').concat(dt("timeline.event.marker.border.radius"), ";\n    box-shadow: ").concat(dt("timeline.event.marker.content.inset.shadow"), ";\n}\n\n.p-timeline-event-connector {\n    flex-grow: 1;\n    background: ").concat(dt("timeline.event.connector.color"), ";\n}\n\n.p-timeline-horizontal {\n    flex-direction: row;\n}\n\n.p-timeline-horizontal .p-timeline-event {\n    flex-direction: column;\n    flex: 1;\n}\n\n.p-timeline-horizontal .p-timeline-event:last-child {\n    flex: 0;\n}\n\n.p-timeline-horizontal .p-timeline-event-separator {\n    flex-direction: row;\n}\n\n.p-timeline-horizontal .p-timeline-event-connector {\n    width: 100%;\n    height: ").concat(dt("timeline.event.connector.size"), ";\n}\n\n.p-timeline-horizontal .p-timeline-event-opposite,\n.p-timeline-horizontal .p-timeline-event-content {\n    padding: ").concat(dt("timeline.horizontal.event.content.padding"), ";\n}\n\n.p-timeline-horizontal.p-timeline-alternate .p-timeline-event:nth-child(even) {\n    flex-direction: column-reverse;\n}\n\n.p-timeline-bottom .p-timeline-event {\n    flex-direction: column-reverse;\n}\n");
}, "theme");
var classes$2 = {
  root: /* @__PURE__ */ __name(function root31(_ref2) {
    var props = _ref2.props;
    return ["p-timeline p-component", "p-timeline-" + props.align, "p-timeline-" + props.layout];
  }, "root"),
  event: "p-timeline-event",
  eventOpposite: "p-timeline-event-opposite",
  eventSeparator: "p-timeline-event-separator",
  eventMarker: "p-timeline-event-marker",
  eventConnector: "p-timeline-event-connector",
  eventContent: "p-timeline-event-content"
};
var TimelineStyle = BaseStyle.extend({
  name: "timeline",
  theme: theme$2,
  classes: classes$2
});
var script$1$2 = {
  name: "BaseTimeline",
  "extends": script$1d,
  props: {
    value: null,
    align: {
      mode: String,
      "default": "left"
    },
    layout: {
      mode: String,
      "default": "vertical"
    },
    dataKey: null
  },
  style: TimelineStyle,
  provide: /* @__PURE__ */ __name(function provide49() {
    return {
      $pcTimeline: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$7 = {
  name: "Timeline",
  "extends": script$1$2,
  inheritAttrs: false,
  methods: {
    getKey: /* @__PURE__ */ __name(function getKey3(item8, index) {
      return this.dataKey ? resolveFieldData(item8, this.dataKey) : index;
    }, "getKey"),
    getPTOptions: /* @__PURE__ */ __name(function getPTOptions13(key, index) {
      return this.ptm(key, {
        context: {
          index,
          count: this.value.length
        }
      });
    }, "getPTOptions")
  }
};
function render$6(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root")
  }, _ctx.ptmi("root")), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.value, function(item8, index) {
    return openBlock(), createElementBlock("div", mergeProps({
      key: $options.getKey(item8, index),
      "class": _ctx.cx("event"),
      ref_for: true
    }, $options.getPTOptions("event", index)), [createBaseVNode("div", mergeProps({
      "class": _ctx.cx("eventOpposite", {
        index
      }),
      ref_for: true
    }, $options.getPTOptions("eventOpposite", index)), [renderSlot(_ctx.$slots, "opposite", {
      item: item8,
      index
    })], 16), createBaseVNode("div", mergeProps({
      "class": _ctx.cx("eventSeparator"),
      ref_for: true
    }, $options.getPTOptions("eventSeparator", index)), [renderSlot(_ctx.$slots, "marker", {
      item: item8,
      index
    }, function() {
      return [createBaseVNode("div", mergeProps({
        "class": _ctx.cx("eventMarker"),
        ref_for: true
      }, $options.getPTOptions("eventMarker", index)), null, 16)];
    }), index !== _ctx.value.length - 1 ? renderSlot(_ctx.$slots, "connector", {
      key: 0,
      item: item8,
      index
    }, function() {
      return [createBaseVNode("div", mergeProps({
        "class": _ctx.cx("eventConnector"),
        ref_for: true
      }, $options.getPTOptions("eventConnector", index)), null, 16)];
    }) : createCommentVNode("", true)], 16), createBaseVNode("div", mergeProps({
      "class": _ctx.cx("eventContent"),
      ref_for: true
    }, $options.getPTOptions("eventContent", index)), [renderSlot(_ctx.$slots, "content", {
      item: item8,
      index
    })], 16)], 16);
  }), 128))], 16);
}
__name(render$6, "render$6");
script$7.render = render$6;
var theme$1 = /* @__PURE__ */ __name(function theme39(_ref) {
  var dt = _ref.dt;
  return "\n.p-treeselect {\n    display: inline-flex;\n    cursor: pointer;\n    position: relative;\n    user-select: none;\n    background: ".concat(dt("treeselect.background"), ";\n    border: 1px solid ").concat(dt("treeselect.border.color"), ";\n    transition: background ").concat(dt("treeselect.transition.duration"), ", color ").concat(dt("treeselect.transition.duration"), ", border-color ").concat(dt("treeselect.transition.duration"), ", outline-color ").concat(dt("treeselect.transition.duration"), ", box-shadow ").concat(dt("treeselect.transition.duration"), ";\n    border-radius: ").concat(dt("treeselect.border.radius"), ";\n    outline-color: transparent;\n    box-shadow: ").concat(dt("treeselect.shadow"), ";\n}\n\n.p-treeselect:not(.p-disabled):hover {\n    border-color: ").concat(dt("treeselect.hover.border.color"), ";\n}\n\n.p-treeselect:not(.p-disabled).p-focus {\n    border-color: ").concat(dt("treeselect.focus.border.color"), ";\n    box-shadow: ").concat(dt("treeselect.focus.ring.shadow"), ";\n    outline: ").concat(dt("treeselect.focus.ring.width"), " ").concat(dt("treeselect.focus.ring.style"), " ").concat(dt("treeselect.focus.ring.color"), ";\n    outline-offset: ").concat(dt("treeselect.focus.ring.offset"), ";\n}\n\n.p-treeselect.p-variant-filled {\n    background: ").concat(dt("treeselect.filled.background"), ";\n}\n\n.p-treeselect.p-variant-filled:not(.p-disabled):hover {\n    background: ").concat(dt("treeselect.filled.hover.background"), ";\n}\n\n.p-treeselect.p-variant-filled.p-focus {\n    background: ").concat(dt("treeselect.filled.focus.background"), ";\n}\n\n.p-treeselect.p-invalid {\n    border-color: ").concat(dt("treeselect.invalid.border.color"), ";\n}\n\n.p-treeselect.p-disabled {\n    opacity: 1;\n    background: ").concat(dt("treeselect.disabled.background"), ";\n}\n\n.p-treeselect-clear-icon {\n    position: absolute;\n    top: 50%;\n    margin-top: -0.5rem;\n    color: ").concat(dt("treeselect.clear.icon.color"), ";\n    inset-inline-end: ").concat(dt("treeselect.dropdown.width"), ";\n}\n\n.p-treeselect-dropdown {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n    background: transparent;\n    color: ").concat(dt("treeselect.dropdown.color"), ";\n    width: ").concat(dt("treeselect.dropdown.width"), ";\n    border-start-end-radius: ").concat(dt("border.radius.md"), ";\n    border-end-end-radius: ").concat(dt("border.radius.md"), ";\n}\n\n.p-treeselect-label-container {\n    overflow: hidden;\n    flex: 1 1 auto;\n    cursor: pointer;\n}\n\n.p-treeselect-label {\n    display: flex;\n    align-items: center;\n    gap: calc(").concat(dt("treeselect.padding.y"), " / 2);\n    white-space: nowrap;\n    cursor: pointer;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding: ").concat(dt("treeselect.padding.y"), " ").concat(dt("treeselect.padding.x"), ";\n    color: ").concat(dt("treeselect.color"), ";\n}\n\n.p-treeselect-label.p-placeholder {\n    color: ").concat(dt("treeselect.placeholder.color"), ";\n}\n\n.p-treeselect.p-invalid .p-treeselect-label.p-placeholder {\n    color: ").concat(dt("treeselect.invalid.placeholder.color"), ";\n}\n\n.p-treeselect.p-disabled .p-treeselect-label {\n    color: ").concat(dt("treeselect.disabled.color"), ";\n}\n\n.p-treeselect-label-empty {\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.p-treeselect .p-treeselect-overlay {\n    min-width: 100%;\n}\n\n.p-treeselect-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: ").concat(dt("treeselect.overlay.background"), ";\n    color: ").concat(dt("treeselect.overlay.color"), ";\n    border: 1px solid ").concat(dt("treeselect.overlay.border.color"), ";\n    border-radius: ").concat(dt("treeselect.overlay.border.radius"), ";\n    box-shadow: ").concat(dt("treeselect.overlay.shadow"), ";\n    overflow: hidden;\n}\n\n.p-treeselect-tree-container {\n    overflow: auto;\n}\n\n.p-treeselect-empty-message {\n    padding: ").concat(dt("treeselect.empty.message.padding"), ";\n    background: transparent;\n}\n\n.p-treeselect-fluid {\n    display: flex;\n}\n\n.p-treeselect-overlay .p-tree {\n    padding: ").concat(dt("treeselect.tree.padding"), ";\n}\n\n.p-treeselect-overlay .p-tree-loading {\n    min-height: 3rem;\n}\n\n.p-treeselect-label .p-chip {\n    padding-block-start: calc(").concat(dt("treeselect.padding.y"), " / 2);\n    padding-block-end: calc(").concat(dt("treeselect.padding.y"), " / 2);\n    border-radius: ").concat(dt("treeselect.chip.border.radius"), ";\n}\n\n.p-treeselect-label:has(.p-chip) {\n    padding: calc(").concat(dt("treeselect.padding.y"), " / 2) calc(").concat(dt("treeselect.padding.x"), " / 2);\n}\n\n.p-treeselect-sm .p-treeselect-label {\n    font-size: ").concat(dt("treeselect.sm.font.size"), ";\n    padding-block: ").concat(dt("treeselect.sm.padding.y"), ";\n    padding-inline: ").concat(dt("treeselect.sm.padding.x"), ";\n}\n\n.p-treeselect-sm .p-treeselect-dropdown .p-icon {\n    font-size: ").concat(dt("treeselect.sm.font.size"), ";\n    width: ").concat(dt("treeselect.sm.font.size"), ";\n    height: ").concat(dt("treeselect.sm.font.size"), ";\n}\n\n.p-treeselect-lg .p-treeselect-label {\n    font-size: ").concat(dt("treeselect.lg.font.size"), ";\n    padding-block: ").concat(dt("treeselect.lg.padding.y"), ";\n    padding-inline: ").concat(dt("treeselect.lg.padding.x"), ";\n}\n\n.p-treeselect-lg .p-treeselect-dropdown .p-icon {\n    font-size: ").concat(dt("treeselect.lg.font.size"), ";\n    width: ").concat(dt("treeselect.lg.font.size"), ";\n    height: ").concat(dt("treeselect.lg.font.size"), ";\n}\n");
}, "theme");
var inlineStyles$1 = {
  root: /* @__PURE__ */ __name(function root32(_ref2) {
    var props = _ref2.props;
    return {
      position: props.appendTo === "self" ? "relative" : void 0
    };
  }, "root")
};
var classes$1 = {
  root: /* @__PURE__ */ __name(function root33(_ref3) {
    var instance = _ref3.instance, props = _ref3.props;
    return ["p-treeselect p-component p-inputwrapper", {
      "p-treeselect-display-chip": props.display === "chip",
      "p-disabled": props.disabled,
      "p-invalid": instance.$invalid,
      "p-focus": instance.focused,
      "p-variant-filled": instance.$variant === "filled",
      "p-inputwrapper-filled": instance.$filled,
      "p-inputwrapper-focus": instance.focused || instance.overlayVisible,
      "p-treeselect-open": instance.overlayVisible,
      "p-treeselect-fluid": instance.$fluid,
      "p-treeselect-sm p-inputfield-sm": props.size === "small",
      "p-treeselect-lg p-inputfield-lg": props.size === "large"
    }];
  }, "root"),
  labelContainer: "p-treeselect-label-container",
  label: /* @__PURE__ */ __name(function label10(_ref4) {
    var instance = _ref4.instance, props = _ref4.props;
    return ["p-treeselect-label", {
      "p-placeholder": instance.label === props.placeholder,
      "p-treeselect-label-empty": !props.placeholder && instance.emptyValue
    }];
  }, "label"),
  clearIcon: "p-treeselect-clear-icon",
  chip: "p-treeselect-chip-item",
  pcChip: "p-treeselect-chip",
  dropdown: "p-treeselect-dropdown",
  dropdownIcon: "p-treeselect-dropdown-icon",
  panel: "p-treeselect-overlay p-component",
  treeContainer: "p-treeselect-tree-container",
  emptyMessage: "p-treeselect-empty-message"
};
var TreeSelectStyle = BaseStyle.extend({
  name: "treeselect",
  theme: theme$1,
  classes: classes$1,
  inlineStyles: inlineStyles$1
});
var script$1$1 = {
  name: "BaseTreeSelect",
  "extends": script$1n,
  props: {
    options: Array,
    scrollHeight: {
      type: String,
      "default": "20rem"
    },
    placeholder: {
      type: String,
      "default": null
    },
    tabindex: {
      type: Number,
      "default": null
    },
    selectionMode: {
      type: String,
      "default": "single"
    },
    selectedItemsLabel: {
      type: String,
      "default": null
    },
    maxSelectedLabels: {
      type: Number,
      "default": null
    },
    appendTo: {
      type: [String, Object],
      "default": "body"
    },
    emptyMessage: {
      type: String,
      "default": null
    },
    display: {
      type: String,
      "default": "comma"
    },
    metaKeySelection: {
      type: Boolean,
      "default": false
    },
    loading: {
      type: Boolean,
      "default": false
    },
    loadingIcon: {
      type: String,
      "default": void 0
    },
    loadingMode: {
      type: String,
      "default": "mask"
    },
    showClear: {
      type: Boolean,
      "default": false
    },
    clearIcon: {
      type: String,
      "default": void 0
    },
    filter: {
      type: Boolean,
      "default": false
    },
    filterBy: {
      type: [String, Function],
      "default": "label"
    },
    filterMode: {
      type: String,
      "default": "lenient"
    },
    filterPlaceholder: {
      type: String,
      "default": null
    },
    filterLocale: {
      type: String,
      "default": void 0
    },
    inputId: {
      type: String,
      "default": null
    },
    inputClass: {
      type: [String, Object],
      "default": null
    },
    inputStyle: {
      type: Object,
      "default": null
    },
    inputProps: {
      type: null,
      "default": null
    },
    panelClass: {
      type: [String, Object],
      "default": null
    },
    panelProps: {
      type: null,
      "default": null
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    },
    expandedKeys: {
      type: null,
      "default": null
    }
  },
  style: TreeSelectStyle,
  provide: /* @__PURE__ */ __name(function provide50() {
    return {
      $pcTreeSelect: this,
      $parentInstance: this
    };
  }, "provide")
};
function _typeof$1$1(o) {
  "@babel/helpers - typeof";
  return _typeof$1$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$1$1(o);
}
__name(_typeof$1$1, "_typeof$1$1");
function ownKeys$1$1(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$1$1, "ownKeys$1$1");
function _objectSpread$1$1(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$1$1(Object(t2), true).forEach(function(r2) {
      _defineProperty$1$1(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$1$1(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$1$1, "_objectSpread$1$1");
function _defineProperty$1$1(e, r, t2) {
  return (r = _toPropertyKey$1$1(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$1$1, "_defineProperty$1$1");
function _toPropertyKey$1$1(t2) {
  var i = _toPrimitive$1$1(t2, "string");
  return "symbol" == _typeof$1$1(i) ? i : i + "";
}
__name(_toPropertyKey$1$1, "_toPropertyKey$1$1");
function _toPrimitive$1$1(t2, r) {
  if ("object" != _typeof$1$1(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$1$1(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$1$1, "_toPrimitive$1$1");
function _createForOfIteratorHelper$2(r, e) {
  var t2 = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t2) {
    if (Array.isArray(r) || (t2 = _unsupportedIterableToArray$2(r)) || e) {
      t2 && (r = t2);
      var _n = 0, F = /* @__PURE__ */ __name(function F2() {
      }, "F");
      return { s: F, n: /* @__PURE__ */ __name(function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
        throw r2;
      }, "e"), f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: /* @__PURE__ */ __name(function s() {
    t2 = t2.call(r);
  }, "s"), n: /* @__PURE__ */ __name(function n() {
    var r2 = t2.next();
    return a = r2.done, r2;
  }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
    u = true, o = r2;
  }, "e"), f: /* @__PURE__ */ __name(function f() {
    try {
      a || null == t2["return"] || t2["return"]();
    } finally {
      if (u) throw o;
    }
  }, "f") };
}
__name(_createForOfIteratorHelper$2, "_createForOfIteratorHelper$2");
function _toConsumableArray$2(r) {
  return _arrayWithoutHoles$2(r) || _iterableToArray$2(r) || _unsupportedIterableToArray$2(r) || _nonIterableSpread$2();
}
__name(_toConsumableArray$2, "_toConsumableArray$2");
function _nonIterableSpread$2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$2, "_nonIterableSpread$2");
function _unsupportedIterableToArray$2(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$2(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$2(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$2, "_unsupportedIterableToArray$2");
function _iterableToArray$2(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$2, "_iterableToArray$2");
function _arrayWithoutHoles$2(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$2(r);
}
__name(_arrayWithoutHoles$2, "_arrayWithoutHoles$2");
function _arrayLikeToArray$2(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$2, "_arrayLikeToArray$2");
var script$6 = {
  name: "TreeSelect",
  "extends": script$1$1,
  inheritAttrs: false,
  emits: ["before-show", "before-hide", "change", "show", "hide", "node-select", "node-unselect", "node-expand", "node-collapse", "focus", "blur", "update:expandedKeys"],
  inject: {
    $pcFluid: {
      "default": null
    }
  },
  data: /* @__PURE__ */ __name(function data36() {
    return {
      id: this.$attrs.id,
      focused: false,
      overlayVisible: false,
      d_expandedKeys: this.expandedKeys || {}
    };
  }, "data"),
  watch: {
    "$attrs.id": /* @__PURE__ */ __name(function $attrsId13(newValue) {
      this.id = newValue || UniqueComponentId();
    }, "$attrsId"),
    modelValue: {
      handler: /* @__PURE__ */ __name(function handler4() {
        if (!this.selfChange) {
          this.updateTreeState();
        }
        this.selfChange = false;
      }, "handler"),
      immediate: true
    },
    options: /* @__PURE__ */ __name(function options3() {
      this.updateTreeState();
    }, "options"),
    expandedKeys: /* @__PURE__ */ __name(function expandedKeys2(value2) {
      this.d_expandedKeys = value2;
    }, "expandedKeys")
  },
  outsideClickListener: null,
  resizeListener: null,
  scrollHandler: null,
  overlay: null,
  selfChange: false,
  selfClick: false,
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount17() {
    this.unbindOutsideClickListener();
    this.unbindResizeListener();
    if (this.scrollHandler) {
      this.scrollHandler.destroy();
      this.scrollHandler = null;
    }
    if (this.overlay) {
      ZIndex.clear(this.overlay);
      this.overlay = null;
    }
  }, "beforeUnmount"),
  mounted: /* @__PURE__ */ __name(function mounted40() {
    this.id = this.id || UniqueComponentId();
    this.updateTreeState();
  }, "mounted"),
  methods: {
    show: /* @__PURE__ */ __name(function show6() {
      this.$emit("before-show");
      this.overlayVisible = true;
    }, "show"),
    hide: /* @__PURE__ */ __name(function hide7() {
      this.$emit("before-hide");
      this.overlayVisible = false;
      this.$refs.focusInput.focus();
    }, "hide"),
    onFocus: /* @__PURE__ */ __name(function onFocus14(event2) {
      this.focused = true;
      this.$emit("focus", event2);
    }, "onFocus"),
    onBlur: /* @__PURE__ */ __name(function onBlur14(event2) {
      var _this$formField$onBlu, _this$formField;
      this.focused = false;
      this.$emit("blur", event2);
      (_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField);
    }, "onBlur"),
    onClick: /* @__PURE__ */ __name(function onClick8(event2) {
      if (this.disabled) {
        return;
      }
      if (event2.target.tagName === "INPUT" || event2.target.getAttribute("data-pc-section") === "clearicon" || event2.target.closest('[data-pc-section="clearicon"]')) {
        return;
      } else if (!this.overlay || !this.overlay.contains(event2.target)) {
        if (this.overlayVisible) this.hide();
        else this.show();
        focus(this.$refs.focusInput);
      }
    }, "onClick"),
    onClearClick: /* @__PURE__ */ __name(function onClearClick3() {
      this.onSelectionChange(null);
    }, "onClearClick"),
    onSelectionChange: /* @__PURE__ */ __name(function onSelectionChange(keys) {
      this.selfChange = true;
      this.writeValue(keys);
      this.$emit("change", keys);
    }, "onSelectionChange"),
    onNodeSelect: /* @__PURE__ */ __name(function onNodeSelect(node2) {
      this.$emit("node-select", node2);
      if (this.selectionMode === "single") {
        this.hide();
      }
    }, "onNodeSelect"),
    onNodeUnselect: /* @__PURE__ */ __name(function onNodeUnselect(node2) {
      this.$emit("node-unselect", node2);
    }, "onNodeUnselect"),
    onNodeToggle: /* @__PURE__ */ __name(function onNodeToggle2(keys) {
      this.d_expandedKeys = keys;
      this.$emit("update:expandedKeys", this.d_expandedKeys);
    }, "onNodeToggle"),
    getSelectedItemsLabel: /* @__PURE__ */ __name(function getSelectedItemsLabel2() {
      var pattern = /{(.*?)}/;
      var selectedItemsLabel = this.selectedItemsLabel || this.$primevue.config.locale.selectionMessage;
      if (pattern.test(selectedItemsLabel)) {
        return selectedItemsLabel.replace(selectedItemsLabel.match(pattern)[0], Object.keys(this.d_value).length + "");
      }
      return selectedItemsLabel;
    }, "getSelectedItemsLabel"),
    onFirstHiddenFocus: /* @__PURE__ */ __name(function onFirstHiddenFocus2(event2) {
      var focusableEl = event2.relatedTarget === this.$refs.focusInput ? getFirstFocusableElement(this.overlay, ':not([data-p-hidden-focusable="true"])') : this.$refs.focusInput;
      focus(focusableEl);
    }, "onFirstHiddenFocus"),
    onLastHiddenFocus: /* @__PURE__ */ __name(function onLastHiddenFocus2(event2) {
      var focusableEl = event2.relatedTarget === this.$refs.focusInput ? getLastFocusableElement(this.overlay, ':not([data-p-hidden-focusable="true"])') : this.$refs.focusInput;
      focus(focusableEl);
    }, "onLastHiddenFocus"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown12(event2) {
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "Space":
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(event2);
          break;
        case "Escape":
          this.onEscapeKey(event2);
          break;
        case "Tab":
          this.onTabKey(event2);
          break;
      }
    }, "onKeyDown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey8(event2) {
      var _this = this;
      if (this.overlayVisible) return;
      this.show();
      this.$nextTick(function() {
        var treeNodeEl = find(_this.$refs.tree.$el, '[data-pc-section="treeitem"]');
        var focusedElement = _toConsumableArray$2(treeNodeEl).find(function(item8) {
          return item8.getAttribute("tabindex") === "0";
        });
        focus(focusedElement);
      });
      event2.preventDefault();
    }, "onArrowDownKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey8(event2) {
      if (this.overlayVisible) {
        this.hide();
      } else {
        this.onArrowDownKey(event2);
      }
      event2.preventDefault();
    }, "onEnterKey"),
    onEscapeKey: /* @__PURE__ */ __name(function onEscapeKey5(event2) {
      if (this.overlayVisible) {
        this.hide();
        event2.preventDefault();
      }
    }, "onEscapeKey"),
    onTabKey: /* @__PURE__ */ __name(function onTabKey5(event2) {
      var pressedInInputText = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      if (!pressedInInputText) {
        if (this.overlayVisible && this.hasFocusableElements()) {
          focus(this.$refs.firstHiddenFocusableElementOnOverlay);
          event2.preventDefault();
        }
      }
    }, "onTabKey"),
    hasFocusableElements: /* @__PURE__ */ __name(function hasFocusableElements2() {
      return getFocusableElements(this.overlay, ':not([data-p-hidden-focusable="true"])').length > 0;
    }, "hasFocusableElements"),
    onOverlayEnter: /* @__PURE__ */ __name(function onOverlayEnter5(el) {
      ZIndex.set("overlay", el, this.$primevue.config.zIndex.overlay);
      addStyle(el, {
        position: "absolute",
        top: "0",
        left: "0"
      });
      this.alignOverlay();
      this.focus();
    }, "onOverlayEnter"),
    onOverlayAfterEnter: /* @__PURE__ */ __name(function onOverlayAfterEnter3() {
      this.bindOutsideClickListener();
      this.bindScrollListener();
      this.bindResizeListener();
      this.scrollValueInView();
      this.$emit("show");
    }, "onOverlayAfterEnter"),
    onOverlayLeave: /* @__PURE__ */ __name(function onOverlayLeave5() {
      this.unbindOutsideClickListener();
      this.unbindScrollListener();
      this.unbindResizeListener();
      this.$emit("hide");
      this.overlay = null;
    }, "onOverlayLeave"),
    onOverlayAfterLeave: /* @__PURE__ */ __name(function onOverlayAfterLeave5(el) {
      ZIndex.clear(el);
    }, "onOverlayAfterLeave"),
    focus: /* @__PURE__ */ __name(function focus3() {
      var focusableElements = getFocusableElements(this.overlay);
      if (focusableElements && focusableElements.length > 0) {
        focusableElements[0].focus();
      }
    }, "focus"),
    alignOverlay: /* @__PURE__ */ __name(function alignOverlay6() {
      if (this.appendTo === "self") {
        relativePosition(this.overlay, this.$el);
      } else {
        this.overlay.style.minWidth = getOuterWidth(this.$el) + "px";
        absolutePosition(this.overlay, this.$el);
      }
    }, "alignOverlay"),
    bindOutsideClickListener: /* @__PURE__ */ __name(function bindOutsideClickListener7() {
      var _this2 = this;
      if (!this.outsideClickListener) {
        this.outsideClickListener = function(event2) {
          if (_this2.overlayVisible && !_this2.selfClick && _this2.isOutsideClicked(event2)) {
            _this2.hide();
          }
          _this2.selfClick = false;
        };
        document.addEventListener("click", this.outsideClickListener);
      }
    }, "bindOutsideClickListener"),
    unbindOutsideClickListener: /* @__PURE__ */ __name(function unbindOutsideClickListener7() {
      if (this.outsideClickListener) {
        document.removeEventListener("click", this.outsideClickListener);
        this.outsideClickListener = null;
      }
    }, "unbindOutsideClickListener"),
    bindScrollListener: /* @__PURE__ */ __name(function bindScrollListener7() {
      var _this3 = this;
      if (!this.scrollHandler) {
        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, function() {
          if (_this3.overlayVisible) {
            _this3.hide();
          }
        });
      }
      this.scrollHandler.bindScrollListener();
    }, "bindScrollListener"),
    unbindScrollListener: /* @__PURE__ */ __name(function unbindScrollListener7() {
      if (this.scrollHandler) {
        this.scrollHandler.unbindScrollListener();
      }
    }, "unbindScrollListener"),
    bindResizeListener: /* @__PURE__ */ __name(function bindResizeListener7() {
      var _this4 = this;
      if (!this.resizeListener) {
        this.resizeListener = function() {
          if (_this4.overlayVisible && !isTouchDevice()) {
            _this4.hide();
          }
        };
        window.addEventListener("resize", this.resizeListener);
      }
    }, "bindResizeListener"),
    unbindResizeListener: /* @__PURE__ */ __name(function unbindResizeListener7() {
      if (this.resizeListener) {
        window.removeEventListener("resize", this.resizeListener);
        this.resizeListener = null;
      }
    }, "unbindResizeListener"),
    isOutsideClicked: /* @__PURE__ */ __name(function isOutsideClicked5(event2) {
      return !(this.$el.isSameNode(event2.target) || this.$el.contains(event2.target) || this.overlay && this.overlay.contains(event2.target));
    }, "isOutsideClicked"),
    overlayRef: /* @__PURE__ */ __name(function overlayRef5(el) {
      this.overlay = el;
    }, "overlayRef"),
    onOverlayClick: /* @__PURE__ */ __name(function onOverlayClick6(event2) {
      OverlayEventBus.emit("overlay-click", {
        originalEvent: event2,
        target: this.$el
      });
      this.selfClick = true;
    }, "onOverlayClick"),
    onOverlayKeydown: /* @__PURE__ */ __name(function onOverlayKeydown(event2) {
      if (event2.code === "Escape") this.hide();
    }, "onOverlayKeydown"),
    findSelectedNodes: /* @__PURE__ */ __name(function findSelectedNodes(node2, keys, selectedNodes2) {
      if (node2) {
        if (this.isSelected(node2, keys)) {
          selectedNodes2.push(node2);
          delete keys[node2.key];
        }
        if (Object.keys(keys).length && node2.children) {
          var _iterator = _createForOfIteratorHelper$2(node2.children), _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var childNode = _step.value;
              this.findSelectedNodes(childNode, keys, selectedNodes2);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
      } else {
        var _iterator2 = _createForOfIteratorHelper$2(this.options), _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var _childNode = _step2.value;
            this.findSelectedNodes(_childNode, keys, selectedNodes2);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
    }, "findSelectedNodes"),
    isSelected: /* @__PURE__ */ __name(function isSelected5(node2, keys) {
      return this.selectionMode === "checkbox" ? keys[node2.key] && keys[node2.key].checked : keys[node2.key];
    }, "isSelected"),
    updateTreeState: /* @__PURE__ */ __name(function updateTreeState() {
      var keys = _objectSpread$1$1({}, this.d_value);
      if (keys && this.options) {
        this.updateTreeBranchState(null, null, keys);
      }
    }, "updateTreeState"),
    updateTreeBranchState: /* @__PURE__ */ __name(function updateTreeBranchState(node2, path, keys) {
      if (node2) {
        if (this.isSelected(node2, keys)) {
          this.expandPath(path);
          delete keys[node2.key];
        }
        if (Object.keys(keys).length && node2.children) {
          var _iterator3 = _createForOfIteratorHelper$2(node2.children), _step3;
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var childNode = _step3.value;
              path.push(node2.key);
              this.updateTreeBranchState(childNode, path, keys);
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }
      } else {
        var _iterator4 = _createForOfIteratorHelper$2(this.options), _step4;
        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
            var _childNode2 = _step4.value;
            this.updateTreeBranchState(_childNode2, [], keys);
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      }
    }, "updateTreeBranchState"),
    expandPath: /* @__PURE__ */ __name(function expandPath(path) {
      if (path.length > 0) {
        var _iterator5 = _createForOfIteratorHelper$2(path), _step5;
        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
            var key = _step5.value;
            this.d_expandedKeys[key] = true;
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
        this.d_expandedKeys = _objectSpread$1$1({}, this.d_expandedKeys);
        this.$emit("update:expandedKeys", this.d_expandedKeys);
      }
    }, "expandPath"),
    scrollValueInView: /* @__PURE__ */ __name(function scrollValueInView() {
      if (this.overlay) {
        var selectedItem = findSingle(this.overlay, '[data-p-selected="true"]');
        if (selectedItem) {
          selectedItem.scrollIntoView({
            block: "nearest",
            inline: "start"
          });
        }
      }
    }, "scrollValueInView")
  },
  computed: {
    selectedNodes: /* @__PURE__ */ __name(function selectedNodes() {
      var selectedNodes2 = [];
      if (this.d_value && this.options) {
        var keys = _objectSpread$1$1({}, this.d_value);
        this.findSelectedNodes(null, keys, selectedNodes2);
      }
      return selectedNodes2;
    }, "selectedNodes"),
    label: /* @__PURE__ */ __name(function label11() {
      var value2 = this.selectedNodes;
      var label12;
      if (value2.length) {
        if (isNotEmpty(this.maxSelectedLabels) && value2.length > this.maxSelectedLabels) {
          label12 = this.getSelectedItemsLabel();
        } else {
          label12 = value2.map(function(node2) {
            return node2.label;
          }).join(", ");
        }
      } else {
        label12 = this.placeholder;
      }
      return label12;
    }, "label"),
    chipSelectedItems: /* @__PURE__ */ __name(function chipSelectedItems2() {
      return isNotEmpty(this.maxSelectedLabels) && this.d_value && Object.keys(this.d_value).length > this.maxSelectedLabels;
    }, "chipSelectedItems"),
    emptyMessageText: /* @__PURE__ */ __name(function emptyMessageText4() {
      return this.emptyMessage || this.$primevue.config.locale.emptyMessage;
    }, "emptyMessageText"),
    emptyValue: /* @__PURE__ */ __name(function emptyValue() {
      return !this.$filled;
    }, "emptyValue"),
    emptyOptions: /* @__PURE__ */ __name(function emptyOptions() {
      return !this.options || this.options.length === 0;
    }, "emptyOptions"),
    listId: /* @__PURE__ */ __name(function listId() {
      return this.id + "_list";
    }, "listId"),
    hasFluid: /* @__PURE__ */ __name(function hasFluid2() {
      return isEmpty(this.fluid) ? !!this.$pcFluid : this.fluid;
    }, "hasFluid"),
    isClearIconVisible: /* @__PURE__ */ __name(function isClearIconVisible3() {
      return this.showClear && this.d_value != null && isNotEmpty(this.options);
    }, "isClearIconVisible")
  },
  components: {
    TSTree: script$1U,
    Chip: script$1t,
    Portal: script$1f,
    ChevronDownIcon: script$1k,
    TimesIcon: script$1g
  },
  directives: {
    ripple: Ripple
  }
};
function _typeof$6(o) {
  "@babel/helpers - typeof";
  return _typeof$6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$6(o);
}
__name(_typeof$6, "_typeof$6");
function ownKeys$6(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$6, "ownKeys$6");
function _objectSpread$6(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$6(Object(t2), true).forEach(function(r2) {
      _defineProperty$6(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$6(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$6, "_objectSpread$6");
function _defineProperty$6(e, r, t2) {
  return (r = _toPropertyKey$6(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$6, "_defineProperty$6");
function _toPropertyKey$6(t2) {
  var i = _toPrimitive$6(t2, "string");
  return "symbol" == _typeof$6(i) ? i : i + "";
}
__name(_toPropertyKey$6, "_toPropertyKey$6");
function _toPrimitive$6(t2, r) {
  if ("object" != _typeof$6(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$6(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$6, "_toPrimitive$6");
var _hoisted_1$6 = ["id", "disabled", "tabindex", "aria-labelledby", "aria-label", "aria-expanded", "aria-controls"];
var _hoisted_2$4 = {
  key: 0
};
var _hoisted_3$4 = ["aria-expanded"];
function render$5(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Chip = resolveComponent("Chip");
  var _component_TSTree = resolveComponent("TSTree");
  var _component_Portal = resolveComponent("Portal");
  return openBlock(), createElementBlock("div", mergeProps({
    ref: "container",
    "class": _ctx.cx("root"),
    style: _ctx.sx("root"),
    onClick: _cache[10] || (_cache[10] = function() {
      return $options.onClick && $options.onClick.apply($options, arguments);
    })
  }, _ctx.ptmi("root")), [createBaseVNode("div", mergeProps({
    "class": "p-hidden-accessible"
  }, _ctx.ptm("hiddenInputContainer"), {
    "data-p-hidden-accessible": true
  }), [createBaseVNode("input", mergeProps({
    ref: "focusInput",
    id: _ctx.inputId,
    type: "text",
    role: "combobox",
    "class": _ctx.inputClass,
    style: _ctx.inputStyle,
    readonly: "",
    disabled: _ctx.disabled,
    tabindex: !_ctx.disabled ? _ctx.tabindex : -1,
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel,
    "aria-haspopup": "tree",
    "aria-expanded": $data.overlayVisible,
    "aria-controls": $options.listId,
    onFocus: _cache[0] || (_cache[0] = function($event) {
      return $options.onFocus($event);
    }),
    onBlur: _cache[1] || (_cache[1] = function($event) {
      return $options.onBlur($event);
    }),
    onKeydown: _cache[2] || (_cache[2] = function($event) {
      return $options.onKeyDown($event);
    })
  }, _objectSpread$6(_objectSpread$6({}, _ctx.inputProps), _ctx.ptm("hiddenInput"))), null, 16, _hoisted_1$6)], 16), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("labelContainer")
  }, _ctx.ptm("labelContainer")), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("label")
  }, _ctx.ptm("label")), [renderSlot(_ctx.$slots, "value", {
    value: $options.selectedNodes,
    placeholder: _ctx.placeholder
  }, function() {
    return [_ctx.display === "comma" ? (openBlock(), createElementBlock(Fragment, {
      key: 0
    }, [createTextVNode(toDisplayString($options.label || "empty"), 1)], 64)) : _ctx.display === "chip" ? (openBlock(), createElementBlock(Fragment, {
      key: 1
    }, [$options.chipSelectedItems ? (openBlock(), createElementBlock("span", _hoisted_2$4, toDisplayString($options.label), 1)) : (openBlock(), createElementBlock(Fragment, {
      key: 1
    }, [(openBlock(true), createElementBlock(Fragment, null, renderList($options.selectedNodes, function(node2) {
      return openBlock(), createElementBlock("div", mergeProps({
        key: node2.key,
        "class": _ctx.cx("chipItem"),
        ref_for: true
      }, _ctx.ptm("chipItem")), [createVNode(_component_Chip, {
        "class": normalizeClass(_ctx.cx("pcChip")),
        label: node2.label,
        unstyled: _ctx.unstyled,
        pt: _ctx.ptm("pcChip")
      }, null, 8, ["class", "label", "unstyled", "pt"])], 16);
    }), 128)), $options.emptyValue ? (openBlock(), createElementBlock(Fragment, {
      key: 0
    }, [createTextVNode(toDisplayString(_ctx.placeholder || "empty"), 1)], 64)) : createCommentVNode("", true)], 64))], 64)) : createCommentVNode("", true)];
  })], 16)], 16), $options.isClearIconVisible ? renderSlot(_ctx.$slots, "clearicon", {
    key: 0,
    "class": normalizeClass(_ctx.cx("clearIcon")),
    clearCallback: $options.onClearClick
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon ? "i" : "TimesIcon"), mergeProps({
      ref: "clearIcon",
      "class": [_ctx.cx("clearIcon"), _ctx.clearIcon],
      onClick: $options.onClearClick
    }, _ctx.ptm("clearIcon"), {
      "data-pc-section": "clearicon"
    }), null, 16, ["class", "onClick"]))];
  }) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("dropdown"),
    role: "button",
    "aria-haspopup": "tree",
    "aria-expanded": $data.overlayVisible
  }, _ctx.ptm("dropdown")), [renderSlot(_ctx.$slots, _ctx.$slots.dropdownicon ? "dropdownicon" : "triggericon", {
    "class": normalizeClass(_ctx.cx("dropdownIcon"))
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent("ChevronDownIcon"), mergeProps({
      "class": _ctx.cx("dropdownIcon")
    }, _ctx.ptm("dropdownIcon")), null, 16, ["class"]))];
  })], 16, _hoisted_3$4), createVNode(_component_Portal, {
    appendTo: _ctx.appendTo
  }, {
    "default": withCtx(function() {
      return [createVNode(Transition, mergeProps({
        name: "p-connected-overlay",
        onEnter: $options.onOverlayEnter,
        onAfterEnter: $options.onOverlayAfterEnter,
        onLeave: $options.onOverlayLeave,
        onAfterLeave: $options.onOverlayAfterLeave
      }, _ctx.ptm("transition")), {
        "default": withCtx(function() {
          return [$data.overlayVisible ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            ref: $options.overlayRef,
            onClick: _cache[8] || (_cache[8] = function() {
              return $options.onOverlayClick && $options.onOverlayClick.apply($options, arguments);
            }),
            "class": [_ctx.cx("panel"), _ctx.panelClass],
            onKeydown: _cache[9] || (_cache[9] = function() {
              return $options.onOverlayKeydown && $options.onOverlayKeydown.apply($options, arguments);
            })
          }, _objectSpread$6(_objectSpread$6({}, _ctx.panelProps), _ctx.ptm("panel"))), [createBaseVNode("span", mergeProps({
            ref: "firstHiddenFocusableElementOnOverlay",
            role: "presentation",
            "class": "p-hidden-accessible p-hidden-focusable",
            tabindex: 0,
            onFocus: _cache[3] || (_cache[3] = function() {
              return $options.onFirstHiddenFocus && $options.onFirstHiddenFocus.apply($options, arguments);
            })
          }, _ctx.ptm("hiddenFirstFocusableEl"), {
            "data-p-hidden-accessible": true,
            "data-p-hidden-focusable": true
          }), null, 16), renderSlot(_ctx.$slots, "header", {
            value: _ctx.d_value,
            options: _ctx.options
          }), createBaseVNode("div", mergeProps({
            "class": _ctx.cx("treeContainer"),
            style: {
              "max-height": _ctx.scrollHeight
            }
          }, _ctx.ptm("treeContainer")), [createVNode(_component_TSTree, {
            ref: "tree",
            id: $options.listId,
            value: _ctx.options,
            selectionMode: _ctx.selectionMode,
            loading: _ctx.loading,
            loadingIcon: _ctx.loadingIcon,
            loadingMode: _ctx.loadingMode,
            filter: _ctx.filter,
            filterBy: _ctx.filterBy,
            filterMode: _ctx.filterMode,
            filterPlaceholder: _ctx.filterPlaceholder,
            filterLocale: _ctx.filterLocale,
            "onUpdate:selectionKeys": $options.onSelectionChange,
            selectionKeys: _ctx.d_value,
            expandedKeys: $data.d_expandedKeys,
            "onUpdate:expandedKeys": $options.onNodeToggle,
            metaKeySelection: _ctx.metaKeySelection,
            onNodeExpand: _cache[4] || (_cache[4] = function($event) {
              return _ctx.$emit("node-expand", $event);
            }),
            onNodeCollapse: _cache[5] || (_cache[5] = function($event) {
              return _ctx.$emit("node-collapse", $event);
            }),
            onNodeSelect: $options.onNodeSelect,
            onNodeUnselect: $options.onNodeUnselect,
            onClick: _cache[6] || (_cache[6] = withModifiers(function() {
            }, ["stop"])),
            level: 0,
            unstyled: _ctx.unstyled,
            pt: _ctx.ptm("pcTree")
          }, createSlots({
            _: 2
          }, [_ctx.$slots.option ? {
            name: "default",
            fn: withCtx(function(optionSlotProps) {
              return [renderSlot(_ctx.$slots, "option", {
                node: optionSlotProps.node,
                expanded: optionSlotProps.expanded,
                selected: optionSlotProps.selected
              })];
            }),
            key: "0"
          } : void 0, _ctx.$slots.itemtoggleicon ? {
            name: "toggleicon",
            fn: withCtx(function(iconSlotProps) {
              return [renderSlot(_ctx.$slots, "itemtoggleicon", {
                node: iconSlotProps.node,
                expanded: iconSlotProps.expanded,
                "class": normalizeClass(iconSlotProps["class"])
              })];
            }),
            key: "1"
          } : _ctx.$slots.itemtogglericon ? {
            name: "togglericon",
            fn: withCtx(function(iconSlotProps) {
              return [renderSlot(_ctx.$slots, "itemtogglericon", {
                node: iconSlotProps.node,
                expanded: iconSlotProps.expanded,
                "class": normalizeClass(iconSlotProps["class"])
              })];
            }),
            key: "2"
          } : void 0, _ctx.$slots.itemcheckboxicon ? {
            name: "checkboxicon",
            fn: withCtx(function(iconSlotProps) {
              return [renderSlot(_ctx.$slots, "itemcheckboxicon", {
                checked: iconSlotProps.checked,
                partialChecked: iconSlotProps.partialChecked,
                "class": normalizeClass(iconSlotProps["class"])
              })];
            }),
            key: "3"
          } : void 0]), 1032, ["id", "value", "selectionMode", "loading", "loadingIcon", "loadingMode", "filter", "filterBy", "filterMode", "filterPlaceholder", "filterLocale", "onUpdate:selectionKeys", "selectionKeys", "expandedKeys", "onUpdate:expandedKeys", "metaKeySelection", "onNodeSelect", "onNodeUnselect", "unstyled", "pt"]), $options.emptyOptions && !_ctx.loading ? (openBlock(), createElementBlock("div", mergeProps({
            key: 0,
            "class": _ctx.cx("emptyMessage")
          }, _ctx.ptm("emptyMessage")), [renderSlot(_ctx.$slots, "empty", {}, function() {
            return [createTextVNode(toDisplayString($options.emptyMessageText), 1)];
          })], 16)) : createCommentVNode("", true)], 16), renderSlot(_ctx.$slots, "footer", {
            value: _ctx.d_value,
            options: _ctx.options
          }), createBaseVNode("span", mergeProps({
            ref: "lastHiddenFocusableElementOnOverlay",
            role: "presentation",
            "class": "p-hidden-accessible p-hidden-focusable",
            tabindex: 0,
            onFocus: _cache[7] || (_cache[7] = function() {
              return $options.onLastHiddenFocus && $options.onLastHiddenFocus.apply($options, arguments);
            })
          }, _ctx.ptm("hiddenLastFocusableEl"), {
            "data-p-hidden-accessible": true,
            "data-p-hidden-focusable": true
          }), null, 16)], 16)) : createCommentVNode("", true)];
        }),
        _: 3
      }, 16, ["onEnter", "onAfterEnter", "onLeave", "onAfterLeave"])];
    }),
    _: 3
  }, 8, ["appendTo"])], 16);
}
__name(render$5, "render$5");
script$6.render = render$5;
var theme40 = /* @__PURE__ */ __name(function theme41(_ref) {
  var dt = _ref.dt;
  return "\n.p-treetable {\n    position: relative;\n}\n\n.p-treetable-table {\n    border-spacing: 0;\n    border-collapse: separate;\n    width: 100%;\n}\n\n.p-treetable-scrollable > .p-treetable-table-container {\n    position: relative;\n}\n\n.p-treetable-scrollable-table > .p-treetable-thead {\n    inset-block-start: 0;\n    z-index: 1;\n}\n\n.p-treetable-scrollable-table > .p-treetable-frozen-tbody {\n    position: sticky;\n    z-index: 1;\n}\n\n.p-treetable-scrollable-table > .p-treetable-tfoot {\n    inset-block-end: 0;\n    z-index: 1;\n}\n\n.p-treetable-scrollable .p-treetable-frozen-column {\n    position: sticky;\n    background: ".concat(dt("treetable.header.cell.background"), ";\n}\n\n.p-treetable-scrollable th.p-treetable-frozen-column {\n    z-index: 1;\n}\n\n.p-treetable-scrollable > .p-treetable-table-container > .p-treetable-table > .p-treetable-thead {\n    background: ").concat(dt("treetable.header.cell.background"), ";\n}\n\n.p-treetable-scrollable > .p-treetable-table-container > .p-treetable-table > .p-treetable-tfoot {\n    background: ").concat(dt("treetable.footer.cell.background"), ";\n}\n\n.p-treetable-flex-scrollable {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.p-treetable-flex-scrollable > .p-treetable-table-container {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n}\n\n.p-treetable-scrollable-table > .p-treetable-tbody > .p-treetable-row-group-header {\n    position: sticky;\n    z-index: 1;\n}\n\n.p-treetable-resizable-table > .p-treetable-thead > tr > th,\n.p-treetable-resizable-table > .p-treetable-tfoot > tr > td,\n.p-treetable-resizable-table > .p-treetable-tbody > tr > td {\n    overflow: hidden;\n    white-space: nowrap;\n}\n\n.p-treetable-resizable-table > .p-treetable-thead > tr > th.p-treetable-resizable-column:not(.p-treetable-frozen-column) {\n    background-clip: padding-box;\n    position: relative;\n}\n\n.p-treetable-resizable-table-fit > .p-treetable-thead > tr > th.p-treetable-resizable-column:last-child .p-treetable-column-resizer {\n    display: none;\n}\n\n.p-treetable-column-resizer {\n    display: block;\n    position: absolute;\n    inset-block-start: 0;\n    inset-inline-end: 0;\n    margin: 0;\n    width: ").concat(dt("treetable.column.resizer.width"), ";\n    height: 100%;\n    padding: 0;\n    cursor: col-resize;\n    border: 1px solid transparent;\n}\n\n.p-treetable-column-header-content {\n    display: flex;\n    align-items: center;\n    gap: ").concat(dt("treetable.header.cell.gap"), ";\n}\n\n.p-treetable-column-resize-indicator {\n    width: ").concat(dt("treetable.resize.indicator.width"), ";\n    position: absolute;\n    z-index: 10;\n    display: none;\n    background: ").concat(dt("treetable.resize.indicator.color"), ";\n}\n\n.p-treetable-mask {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 2;\n}\n\n.p-treetable-paginator-top {\n    border-color: ").concat(dt("treetable.paginator.top.border.color"), ";\n    border-style: solid;\n    border-width: ").concat(dt("treetable.paginator.top.border.width"), ";\n}\n\n.p-treetable-paginator-bottom {\n    border-color: ").concat(dt("treetable.paginator.bottom.border.color"), ";\n    border-style: solid;\n    border-width: ").concat(dt("treetable.paginator.bottom.border.width"), ";\n}\n\n.p-treetable-header {\n    background: ").concat(dt("treetable.header.background"), ";\n    color: ").concat(dt("treetable.header.color"), ";\n    border-color: ").concat(dt("treetable.header.border.color"), ";\n    border-style: solid;\n    border-width: ").concat(dt("treetable.header.border.width"), ";\n    padding: ").concat(dt("treetable.header.padding"), ";\n}\n\n.p-treetable-footer {\n    background: ").concat(dt("treetable.footer.background"), ";\n    color: ").concat(dt("treetable.footer.color"), ";\n    border-color: ").concat(dt("treetable.footer.border.color"), ";\n    border-style: solid;\n    border-width: ").concat(dt("treetable.footer.border.width"), ";\n    padding: ").concat(dt("treetable.footer.padding"), ";\n}\n\n.p-treetable-header-cell {\n    padding: ").concat(dt("treetable.header.cell.padding"), ";\n    background: ").concat(dt("treetable.header.cell.background"), ";\n    border-color: ").concat(dt("treetable.header.cell.border.color"), ";\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    color: ").concat(dt("treetable.header.cell.color"), ";\n    font-weight: normal;\n    text-align: start;\n    transition: background ").concat(dt("treetable.transition.duration"), ", color ").concat(dt("treetable.transition.duration"), ", border-color ").concat(dt("treetable.transition.duration"), ",\n            outline-color ").concat(dt("treetable.transition.duration"), ", box-shadow ").concat(dt("treetable.transition.duration"), ";\n}\n\n.p-treetable-column-title {\n    font-weight: ").concat(dt("treetable.column.title.font.weight"), ";\n}\n\n.p-treetable-tbody > tr {\n    outline-color: transparent;\n    background: ").concat(dt("treetable.row.background"), ";\n    color: ").concat(dt("treetable.row.color"), ";\n    transition: background ").concat(dt("treetable.transition.duration"), ", color ").concat(dt("treetable.transition.duration"), ", border-color ").concat(dt("treetable.transition.duration"), ",\n            outline-color ").concat(dt("treetable.transition.duration"), ", box-shadow ").concat(dt("treetable.transition.duration"), ";\n}\n\n.p-treetable-tbody > tr > td {\n    text-align: start;\n    border-color: ").concat(dt("treetable.body.cell.border.color"), ";\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    padding: ").concat(dt("treetable.body.cell.padding"), ";\n}\n\n.p-treetable-hoverable .p-treetable-tbody > tr:not(.p-treetable-row-selected):hover {\n    background: ").concat(dt("treetable.row.hover.background"), ";\n    color: ").concat(dt("treetable.row.hover.color"), ";\n}\n\n.p-treetable-tbody > tr.p-treetable-row-selected {\n    background: ").concat(dt("treetable.row.selected.background"), ";\n    color: ").concat(dt("treetable.row.selected.color"), ";\n}\n\n.p-treetable-tbody > tr:has(+ .p-treetable-row-selected) > td {\n    border-block-end-color: ").concat(dt("treetable.body.cell.selected.border.color"), ";\n}\n\n.p-treetable-tbody > tr.p-treetable-row-selected > td {\n    border-block-end-color: ").concat(dt("treetable.body.cell.selected.border.color"), ";\n}\n\n.p-treetable-tbody > tr:focus-visible,\n.p-treetable-tbody > tr.p-treetable-contextmenu-row-selected {\n    box-shadow: ").concat(dt("treetable.row.focus.ring.shadow"), ";\n    outline: ").concat(dt("treetable.row.focus.ring.width"), " ").concat(dt("treetable.row.focus.ring.style"), " ").concat(dt("treetable.row.focus.ring.color"), ";\n    outline-offset: ").concat(dt("treetable.row.focus.ring.offset"), ";\n}\n\n.p-treetable-tfoot > tr > td {\n    text-align: start;\n    padding: ").concat(dt("treetable.footer.cell.padding"), ";\n    border-color: ").concat(dt("treetable.footer.cell.border.color"), ";\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    color: ").concat(dt("treetable.footer.cell.color"), ";\n    background: ").concat(dt("treetable.footer.cell.background"), ";\n}\n\n.p-treetable-column-footer {\n    font-weight: ").concat(dt("treetable.column.footer.font.weight"), ";\n}\n\n.p-treetable-sortable-column {\n    cursor: pointer;\n    user-select: none;\n    outline-color: transparent;\n}\n\n.p-treetable-column-title,\n.p-treetable-sort-icon,\n.p-treetable-sort-badge {\n    vertical-align: middle;\n}\n\n.p-treetable-sort-icon {\n    color: ").concat(dt("treetable.sort.icon.color"), ";\n    font-size: ").concat(dt("treetable.sort.icon.size"), ";\n    width: ").concat(dt("treetable.sort.icon.size"), ";\n    height: ").concat(dt("treetable.sort.icon.size"), ";\n    transition: color ").concat(dt("treetable.transition.duration"), ";\n}\n\n.p-treetable-sortable-column:not(.p-treetable-column-sorted):hover {\n    background: ").concat(dt("treetable.header.cell.hover.background"), ";\n    color: ").concat(dt("treetable.header.cell.hover.color"), ";\n}\n\n.p-treetable-sortable-column:not(.p-treetable-column-sorted):hover .p-treetable-sort-icon {\n    color: ").concat(dt("treetable.sort.icon.hover.color"), ";\n}\n\n.p-treetable-column-sorted {\n    background: ").concat(dt("treetable.header.cell.selected.background"), ";\n    color: ").concat(dt("treetable.header.cell.selected.color"), ";\n}\n\n.p-treetable-column-sorted .p-treetable-sort-icon {\n    color: ").concat(dt("treetable.header.cell.selected.color"), ";\n}\n\n.p-treetable-sortable-column:focus-visible {\n    box-shadow: ").concat(dt("treetable.header.cell.focus.ring.shadow"), ";\n    outline: ").concat(dt("treetable.header.cell.focus.ring.width"), " ").concat(dt("treetable.header.cell.focus.ring.style"), " ").concat(dt("treetable.header.cell.focus.ring.color"), ";\n    outline-offset: ").concat(dt("treetable.header.cell.focus.ring.offset"), ";\n}\n\n.p-treetable-hoverable .p-treetable-selectable-row {\n    cursor: pointer;\n}\n\n.p-treetable-loading-icon {\n    font-size: ").concat(dt("treetable.loading.icon.size"), ";\n    width: ").concat(dt("treetable.loading.icon.size"), ";\n    height: ").concat(dt("treetable.loading.icon.size"), ";\n}\n\n.p-treetable-gridlines .p-treetable-header {\n    border-width: 1px 1px 0 1px;\n}\n\n.p-treetable-gridlines .p-treetable-footer {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable-gridlines .p-treetable-paginator-top {\n    border-width: 1px 1px 0 1px;\n}\n\n.p-treetable-gridlines .p-treetable-paginator-bottom {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable-gridlines .p-treetable-thead > tr > th {\n    border-width: 1px 0 1px 1px;\n}\n\n.p-treetable-gridlines .p-treetable-thead > tr > th:last-child {\n    border-width: 1px;\n}\n\n.p-treetable-gridlines .p-treetable-tbody > tr > td {\n    border-width: 1px 0 0 1px;\n}\n\n.p-treetable-gridlines .p-treetable-tbody > tr > td:last-child {\n    border-width: 1px 1px 0 1px;\n}\n\n.p-treetable-gridlines .p-treetable-tbody > tr:last-child > td {\n    border-width: 1px 0 1px 1px;\n}\n\n.p-treetable-gridlines .p-treetable-tbody > tr:last-child > td:last-child {\n    border-width: 1px;\n}\n\n.p-treetable-gridlines .p-treetable-tfoot > tr > td {\n    border-width: 1px 0 1px 1px;\n}\n\n.p-treetable-gridlines .p-treetable-tfoot > tr > td:last-child {\n    border-width: 1px 1px 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-thead + .p-treetable-tfoot > tr > td {\n    border-width: 0 0 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-thead + .p-treetable-tfoot > tr > td:last-child {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines:has(.p-treetable-thead):has(.p-treetable-tbody) .p-treetable-tbody > tr > td {\n    border-width: 0 0 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines:has(.p-treetable-thead):has(.p-treetable-tbody) .p-treetable-tbody > tr > td:last-child {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines:has(.p-treetable-tbody):has(.p-treetable-tfoot) .p-treetable-tbody > tr:last-child > td {\n    border-width: 0 0 0 1px;\n}\n\n.p-treetable.p-treetable-gridlines:has(.p-treetable-tbody):has(.p-treetable-tfoot) .p-treetable-tbody > tr:last-child > td:last-child {\n    border-width: 0 1px 0 1px;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-header {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-thead > tr > th {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-tbody > tr > td {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-tfoot > tr > td {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-footer {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-header {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-thead > tr > th {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-tbody > tr > td {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-tfoot > tr > td {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-footer {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable-body-cell-content {\n    display: flex;\n    align-items: center;\n    gap: ").concat(dt("treetable.body.cell.gap"), ";\n}\n\n.p-treetable-tbody > tr.p-treetable-row-selected .p-treetable-node-toggle-button {\n    color: inherit;\n}\n\n.p-treetable-node-toggle-button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    width: ").concat(dt("treetable.node.toggle.button.size"), ";\n    height: ").concat(dt("treetable.node.toggle.button.size"), ";\n    color: ").concat(dt("treetable.node.toggle.button.color"), ";\n    border: 0 none;\n    background: transparent;\n    cursor: pointer;\n    border-radius: ").concat(dt("treetable.node.toggle.button.border.radius"), ";\n    transition: background ").concat(dt("treetable.transition.duration"), ", color ").concat(dt("treetable.transition.duration"), ", border-color ").concat(dt("treetable.transition.duration"), ",\n            outline-color ").concat(dt("treetable.transition.duration"), ", box-shadow ").concat(dt("treetable.transition.duration"), ";\n    outline-color: transparent;\n    user-select: none;\n}\n\n.p-treetable-node-toggle-button:enabled:hover {\n    color: ").concat(dt("treetable.node.toggle.button.hover.color"), ";\n    background: ").concat(dt("treetable.node.toggle.button.hover.background"), ";\n}\n\n.p-treetable-tbody > tr.p-treetable-row-selected .p-treetable-node-toggle-button:hover {\n    background: ").concat(dt("treetable.node.toggle.button.selected.hover.background"), ";\n    color: ").concat(dt("treetable.node.toggle.button.selected.hover.color"), ";\n}\n\n.p-treetable-node-toggle-button:focus-visible {\n    box-shadow: ").concat(dt("treetable.node.toggle.button.focus.ring.shadow"), ";\n    outline: ").concat(dt("treetable.node.toggle.button.focus.ring.width"), " ").concat(dt("treetable.node.toggle.button.focus.ring.style"), " ").concat(dt("treetable.node.toggle.button.focus.ring.color"), ";\n    outline-offset: ").concat(dt("treetable.node.toggle.button.focus.ring.offset"), ";\n}\n\n.p-treetable-node-toggle-icon:dir(rtl) {\n    transform: rotate(180deg);\n}\n");
}, "theme");
var classes = {
  root: /* @__PURE__ */ __name(function root34(_ref2) {
    var instance = _ref2.instance, props = _ref2.props;
    return ["p-treetable p-component", {
      "p-treetable-hoverable": props.rowHover || instance.rowSelectionMode,
      "p-treetable-resizable": props.resizableColumns,
      "p-treetable-resizable-fit": props.resizableColumns && props.columnResizeMode === "fit",
      "p-treetable-scrollable": props.scrollable,
      "p-treetable-flex-scrollable": props.scrollable && props.scrollHeight === "flex",
      "p-treetable-gridlines": props.showGridlines,
      "p-treetable-sm": props.size === "small",
      "p-treetable-lg": props.size === "large"
    }];
  }, "root"),
  loading: "p-treetable-loading",
  //TODO: required?
  mask: "p-treetable-mask p-overlay-mask",
  loadingIcon: "p-treetable-loading-icon",
  header: "p-treetable-header",
  paginator: /* @__PURE__ */ __name(function paginator(_ref3) {
    var position = _ref3.position;
    return "p-treetable-paginator-" + position;
  }, "paginator"),
  tableContainer: "p-treetable-table-container",
  table: /* @__PURE__ */ __name(function table(_ref4) {
    var props = _ref4.props;
    return ["p-treetable-table", {
      "p-treetable-scrollable-table": props.scrollable,
      "p-treetable-resizable-table": props.resizableColumns,
      "p-treetable-resizable-table-fit": props.resizableColumns && props.columnResizeMode === "fit"
    }];
  }, "table"),
  thead: "p-treetable-thead",
  headerCell: /* @__PURE__ */ __name(function headerCell(_ref5) {
    var instance = _ref5.instance, props = _ref5.props, context = _ref5.context;
    return ["p-treetable-header-cell", {
      "p-treetable-sortable-column": instance.columnProp("sortable"),
      "p-treetable-resizable-column": props.resizableColumns,
      "p-treetable-column-sorted": context === null || context === void 0 ? void 0 : context.sorted,
      "p-treetable-frozen-column": instance.columnProp("frozen")
    }];
  }, "headerCell"),
  columnResizer: "p-treetable-column-resizer",
  columnHeaderContent: "p-treetable-column-header-content",
  columnTitle: "p-treetable-column-title",
  sortIcon: "p-treetable-sort-icon",
  pcSortBadge: "p-treetable-sort-badge",
  tbody: "p-treetable-tbody",
  row: /* @__PURE__ */ __name(function row(_ref6) {
    var props = _ref6.props, instance = _ref6.instance;
    return [{
      "p-treetable-row-selected": instance.selected,
      "p-treetable-contextmenu-row-selected": props.contextMenuSelection && instance.isSelectedWithContextMenu
    }];
  }, "row"),
  bodyCell: /* @__PURE__ */ __name(function bodyCell(_ref7) {
    var instance = _ref7.instance;
    return [{
      "p-treetable-frozen-column": instance.columnProp("frozen")
    }];
  }, "bodyCell"),
  bodyCellContent: /* @__PURE__ */ __name(function bodyCellContent(_ref8) {
    var instance = _ref8.instance;
    return ["p-treetable-body-cell-content", {
      "p-treetable-body-cell-content-expander": instance.columnProp("expander")
    }];
  }, "bodyCellContent"),
  nodeToggleButton: "p-treetable-node-toggle-button",
  nodeToggleIcon: "p-treetable-node-toggle-icon",
  pcNodeCheckbox: "p-treetable-node-checkbox",
  emptyMessage: "p-treetable-empty-message",
  tfoot: "p-treetable-tfoot",
  footerCell: /* @__PURE__ */ __name(function footerCell(_ref9) {
    var instance = _ref9.instance;
    return [{
      "p-treetable-frozen-column": instance.columnProp("frozen")
    }];
  }, "footerCell"),
  footer: "p-treetable-footer",
  columnResizeIndicator: "p-treetable-column-resize-indicator"
};
var inlineStyles = {
  tableContainer: {
    overflow: "auto"
  },
  thead: {
    position: "sticky"
  },
  tfoot: {
    position: "sticky"
  }
};
var TreeTableStyle = BaseStyle.extend({
  name: "treetable",
  theme: theme40,
  classes,
  inlineStyles
});
var script$5 = {
  name: "BaseTreeTable",
  "extends": script$1d,
  props: {
    value: {
      type: null,
      "default": null
    },
    dataKey: {
      type: [String, Function],
      "default": "key"
    },
    expandedKeys: {
      type: null,
      "default": null
    },
    selectionKeys: {
      type: null,
      "default": null
    },
    selectionMode: {
      type: String,
      "default": null
    },
    metaKeySelection: {
      type: Boolean,
      "default": false
    },
    contextMenu: {
      type: Boolean,
      "default": false
    },
    contextMenuSelection: {
      type: Object,
      "default": null
    },
    rows: {
      type: Number,
      "default": 0
    },
    first: {
      type: Number,
      "default": 0
    },
    totalRecords: {
      type: Number,
      "default": 0
    },
    paginator: {
      type: Boolean,
      "default": false
    },
    paginatorPosition: {
      type: String,
      "default": "bottom"
    },
    alwaysShowPaginator: {
      type: Boolean,
      "default": true
    },
    paginatorTemplate: {
      type: String,
      "default": "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown"
    },
    pageLinkSize: {
      type: Number,
      "default": 5
    },
    rowsPerPageOptions: {
      type: Array,
      "default": null
    },
    currentPageReportTemplate: {
      type: String,
      "default": "({currentPage} of {totalPages})"
    },
    lazy: {
      type: Boolean,
      "default": false
    },
    loading: {
      type: Boolean,
      "default": false
    },
    loadingIcon: {
      type: String,
      "default": void 0
    },
    loadingMode: {
      type: String,
      "default": "mask"
    },
    rowHover: {
      type: Boolean,
      "default": false
    },
    autoLayout: {
      type: Boolean,
      "default": false
    },
    sortField: {
      type: [String, Function],
      "default": null
    },
    sortOrder: {
      type: Number,
      "default": null
    },
    defaultSortOrder: {
      type: Number,
      "default": 1
    },
    multiSortMeta: {
      type: Array,
      "default": null
    },
    sortMode: {
      type: String,
      "default": "single"
    },
    removableSort: {
      type: Boolean,
      "default": false
    },
    filters: {
      type: Object,
      "default": null
    },
    filterMode: {
      type: String,
      "default": "lenient"
    },
    filterLocale: {
      type: String,
      "default": void 0
    },
    resizableColumns: {
      type: Boolean,
      "default": false
    },
    columnResizeMode: {
      type: String,
      "default": "fit"
    },
    indentation: {
      type: Number,
      "default": 1
    },
    showGridlines: {
      type: Boolean,
      "default": false
    },
    scrollable: {
      type: Boolean,
      "default": false
    },
    scrollHeight: {
      type: String,
      "default": null
    },
    size: {
      type: String,
      "default": null
    },
    tableStyle: {
      type: null,
      "default": null
    },
    tableClass: {
      type: [String, Object],
      "default": null
    },
    tableProps: {
      type: Object,
      "default": null
    }
  },
  style: TreeTableStyle,
  provide: /* @__PURE__ */ __name(function provide51() {
    return {
      $pcTreeTable: this,
      $parentInstance: this
    };
  }, "provide")
};
var script$4 = {
  name: "FooterCell",
  hostName: "TreeTable",
  "extends": script$1d,
  props: {
    column: {
      type: Object,
      "default": null
    },
    index: {
      type: Number,
      "default": null
    }
  },
  data: /* @__PURE__ */ __name(function data37() {
    return {
      styleObject: {}
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted41() {
    if (this.columnProp("frozen")) {
      this.updateStickyPosition();
    }
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated10() {
    if (this.columnProp("frozen")) {
      this.updateStickyPosition();
    }
  }, "updated"),
  methods: {
    columnProp: /* @__PURE__ */ __name(function columnProp(prop) {
      return getVNodeProp(this.column, prop);
    }, "columnProp"),
    getColumnPT: /* @__PURE__ */ __name(function getColumnPT(key) {
      var _this$$parentInstance;
      var columnMetaData = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          frozen: this.columnProp("frozen"),
          size: (_this$$parentInstance = this.$parentInstance) === null || _this$$parentInstance === void 0 ? void 0 : _this$$parentInstance.size
        }
      };
      return mergeProps(this.ptm("column.".concat(key), {
        column: columnMetaData
      }), this.ptm("column.".concat(key), columnMetaData), this.ptmo(this.getColumnProp(), key, columnMetaData));
    }, "getColumnPT"),
    getColumnProp: /* @__PURE__ */ __name(function getColumnProp() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    }, "getColumnProp"),
    updateStickyPosition: /* @__PURE__ */ __name(function updateStickyPosition() {
      if (this.columnProp("frozen")) {
        var align = this.columnProp("alignFrozen");
        if (align === "right") {
          var pos = 0;
          var next = getNextElementSibling(this.$el, '[data-p-frozen-column="true"]');
          if (next) {
            pos = getOuterWidth(next) + parseFloat(next.style.right || 0);
          }
          this.styleObject.insetInlineEnd = pos + "px";
        } else {
          var _pos = 0;
          var prev = getPreviousElementSibling(this.$el, '[data-p-frozen-column="true"]');
          if (prev) {
            _pos = getOuterWidth(prev) + parseFloat(prev.style.left || 0);
          }
          this.styleObject.insetInlineStart = _pos + "px";
        }
      }
    }, "updateStickyPosition")
  },
  computed: {
    containerClass: /* @__PURE__ */ __name(function containerClass4() {
      return [this.columnProp("footerClass"), this.columnProp("class"), this.cx("footerCell")];
    }, "containerClass"),
    containerStyle: /* @__PURE__ */ __name(function containerStyle2() {
      var bodyStyle = this.columnProp("footerStyle");
      var columnStyle = this.columnProp("style");
      return this.columnProp("frozen") ? [columnStyle, bodyStyle, this.styleObject] : [columnStyle, bodyStyle];
    }, "containerStyle")
  }
};
function _typeof$5(o) {
  "@babel/helpers - typeof";
  return _typeof$5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$5(o);
}
__name(_typeof$5, "_typeof$5");
function ownKeys$5(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$5, "ownKeys$5");
function _objectSpread$5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$5(Object(t2), true).forEach(function(r2) {
      _defineProperty$5(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$5(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$5, "_objectSpread$5");
function _defineProperty$5(e, r, t2) {
  return (r = _toPropertyKey$5(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$5, "_defineProperty$5");
function _toPropertyKey$5(t2) {
  var i = _toPrimitive$5(t2, "string");
  return "symbol" == _typeof$5(i) ? i : i + "";
}
__name(_toPropertyKey$5, "_toPropertyKey$5");
function _toPrimitive$5(t2, r) {
  if ("object" != _typeof$5(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$5(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$5, "_toPrimitive$5");
var _hoisted_1$4 = ["data-p-frozen-column"];
function render$4(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("td", mergeProps({
    style: $options.containerStyle,
    "class": $options.containerClass,
    role: "cell"
  }, _objectSpread$5(_objectSpread$5({}, $options.getColumnPT("root")), $options.getColumnPT("footerCell")), {
    "data-p-frozen-column": $options.columnProp("frozen")
  }), [$props.column.children && $props.column.children.footer ? (openBlock(), createBlock(resolveDynamicComponent($props.column.children.footer), {
    key: 0,
    column: $props.column
  }, null, 8, ["column"])) : createCommentVNode("", true), $options.columnProp("footer") ? (openBlock(), createElementBlock("span", mergeProps({
    key: 1,
    "class": _ctx.cx("columnFooter")
  }, $options.getColumnPT("columnFooter")), toDisplayString($options.columnProp("footer")), 17)) : createCommentVNode("", true)], 16, _hoisted_1$4);
}
__name(render$4, "render$4");
script$4.render = render$4;
var script$3 = {
  name: "HeaderCell",
  hostName: "TreeTable",
  "extends": script$1d,
  emits: ["column-click", "column-resizestart"],
  props: {
    column: {
      type: Object,
      "default": null
    },
    resizableColumns: {
      type: Boolean,
      "default": false
    },
    sortField: {
      type: [String, Function],
      "default": null
    },
    sortOrder: {
      type: Number,
      "default": null
    },
    multiSortMeta: {
      type: Array,
      "default": null
    },
    sortMode: {
      type: String,
      "default": "single"
    },
    index: {
      type: Number,
      "default": null
    }
  },
  data: /* @__PURE__ */ __name(function data38() {
    return {
      styleObject: {}
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted42() {
    if (this.columnProp("frozen")) {
      this.updateStickyPosition();
    }
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated11() {
    if (this.columnProp("frozen")) {
      this.updateStickyPosition();
    }
  }, "updated"),
  methods: {
    columnProp: /* @__PURE__ */ __name(function columnProp2(prop) {
      return getVNodeProp(this.column, prop);
    }, "columnProp"),
    getColumnPT: /* @__PURE__ */ __name(function getColumnPT2(key) {
      var _this$$parentInstance;
      var columnMetaData = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          sorted: this.isColumnSorted(),
          frozen: this.$parentInstance.scrollable && this.columnProp("frozen"),
          resizable: this.resizableColumns,
          scrollable: this.$parentInstance.scrollable,
          showGridlines: this.$parentInstance.showGridlines,
          size: (_this$$parentInstance = this.$parentInstance) === null || _this$$parentInstance === void 0 ? void 0 : _this$$parentInstance.size
        }
      };
      return mergeProps(this.ptm("column.".concat(key), {
        column: columnMetaData
      }), this.ptm("column.".concat(key), columnMetaData), this.ptmo(this.getColumnProp(), key, columnMetaData));
    }, "getColumnPT"),
    getColumnProp: /* @__PURE__ */ __name(function getColumnProp2() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    }, "getColumnProp"),
    updateStickyPosition: /* @__PURE__ */ __name(function updateStickyPosition2() {
      if (this.columnProp("frozen")) {
        var align = this.columnProp("alignFrozen");
        if (align === "right") {
          var pos = 0;
          var next = getNextElementSibling(this.$el, '[data-p-frozen-column="true"]');
          if (next) {
            pos = getOuterWidth(next) + parseFloat(next.style.right || 0);
          }
          this.styleObject.insetInlineEnd = pos + "px";
        } else {
          var _pos = 0;
          var prev = getPreviousElementSibling(this.$el, '[data-p-frozen-column="true"]');
          if (prev) {
            _pos = getOuterWidth(prev) + parseFloat(prev.style.left || 0);
          }
          this.styleObject.insetInlineStart = _pos + "px";
        }
        var filterRow = this.$el.parentElement.nextElementSibling;
        if (filterRow) {
          var index = getIndex(this.$el);
          filterRow.children[index].style.left = this.styleObject.left;
          filterRow.children[index].style.right = this.styleObject.right;
        }
      }
    }, "updateStickyPosition"),
    onClick: /* @__PURE__ */ __name(function onClick9(event2) {
      this.$emit("column-click", {
        originalEvent: event2,
        column: this.column
      });
    }, "onClick"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown13(event2) {
      if ((event2.code === "Enter" || event2.code === "NumpadEnter" || event2.code === "Space") && event2.currentTarget.nodeName === "TH" && getAttribute(event2.currentTarget, "data-p-sortable-column")) {
        this.$emit("column-click", {
          originalEvent: event2,
          column: this.column
        });
        event2.preventDefault();
      }
    }, "onKeyDown"),
    onResizeStart: /* @__PURE__ */ __name(function onResizeStart(event2) {
      this.$emit("column-resizestart", event2);
    }, "onResizeStart"),
    getMultiSortMetaIndex: /* @__PURE__ */ __name(function getMultiSortMetaIndex() {
      var index = -1;
      for (var i = 0; i < this.multiSortMeta.length; i++) {
        var meta = this.multiSortMeta[i];
        if (meta.field === this.columnProp("field") || meta.field === this.columnProp("sortField")) {
          index = i;
          break;
        }
      }
      return index;
    }, "getMultiSortMetaIndex"),
    isMultiSorted: /* @__PURE__ */ __name(function isMultiSorted() {
      return this.columnProp("sortable") && this.getMultiSortMetaIndex() > -1;
    }, "isMultiSorted"),
    isColumnSorted: /* @__PURE__ */ __name(function isColumnSorted() {
      return this.sortMode === "single" ? this.sortField && (this.sortField === this.columnProp("field") || this.sortField === this.columnProp("sortField")) : this.isMultiSorted();
    }, "isColumnSorted")
  },
  computed: {
    containerClass: /* @__PURE__ */ __name(function containerClass5() {
      return [this.columnProp("headerClass"), this.columnProp("class"), this.cx("headerCell")];
    }, "containerClass"),
    containerStyle: /* @__PURE__ */ __name(function containerStyle3() {
      var headerStyle = this.columnProp("headerStyle");
      var columnStyle = this.columnProp("style");
      return this.columnProp("frozen") ? [columnStyle, headerStyle, this.styleObject] : [columnStyle, headerStyle];
    }, "containerStyle"),
    sortState: /* @__PURE__ */ __name(function sortState() {
      var sorted2 = false;
      var sortOrder3 = null;
      if (this.sortMode === "single") {
        sorted2 = this.sortField && (this.sortField === this.columnProp("field") || this.sortField === this.columnProp("sortField"));
        sortOrder3 = sorted2 ? this.sortOrder : 0;
      } else if (this.sortMode === "multiple") {
        var metaIndex = this.getMultiSortMetaIndex();
        if (metaIndex > -1) {
          sorted2 = true;
          sortOrder3 = this.multiSortMeta[metaIndex].order;
        }
      }
      return {
        sorted: sorted2,
        sortOrder: sortOrder3
      };
    }, "sortState"),
    sortableColumnIcon: /* @__PURE__ */ __name(function sortableColumnIcon() {
      var _this$sortState = this.sortState, sorted2 = _this$sortState.sorted, sortOrder3 = _this$sortState.sortOrder;
      if (!sorted2) return script$1V;
      else if (sorted2 && sortOrder3 > 0) return script$1W;
      else if (sorted2 && sortOrder3 < 0) return script$1X;
      return null;
    }, "sortableColumnIcon"),
    ariaSort: /* @__PURE__ */ __name(function ariaSort() {
      if (this.columnProp("sortable")) {
        var _this$sortState2 = this.sortState, sorted2 = _this$sortState2.sorted, sortOrder3 = _this$sortState2.sortOrder;
        if (sorted2 && sortOrder3 < 0) return "descending";
        else if (sorted2 && sortOrder3 > 0) return "ascending";
        else return "none";
      } else {
        return null;
      }
    }, "ariaSort")
  },
  components: {
    Badge: script$1z,
    SortAltIcon: script$1V,
    SortAmountUpAltIcon: script$1W,
    SortAmountDownIcon: script$1X
  }
};
function _typeof$4(o) {
  "@babel/helpers - typeof";
  return _typeof$4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$4(o);
}
__name(_typeof$4, "_typeof$4");
function ownKeys$4(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$4, "ownKeys$4");
function _objectSpread$4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$4(Object(t2), true).forEach(function(r2) {
      _defineProperty$4(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$4(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$4, "_objectSpread$4");
function _defineProperty$4(e, r, t2) {
  return (r = _toPropertyKey$4(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$4, "_defineProperty$4");
function _toPropertyKey$4(t2) {
  var i = _toPrimitive$4(t2, "string");
  return "symbol" == _typeof$4(i) ? i : i + "";
}
__name(_toPropertyKey$4, "_toPropertyKey$4");
function _toPrimitive$4(t2, r) {
  if ("object" != _typeof$4(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$4(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$4, "_toPrimitive$4");
var _hoisted_1$3$1 = ["tabindex", "aria-sort", "data-p-sortable-column", "data-p-resizable-column", "data-p-sorted", "data-p-frozen-column"];
function render$3(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_Badge = resolveComponent("Badge");
  return openBlock(), createElementBlock("th", mergeProps({
    "class": $options.containerClass,
    style: [$options.containerStyle],
    onClick: _cache[1] || (_cache[1] = function() {
      return $options.onClick && $options.onClick.apply($options, arguments);
    }),
    onKeydown: _cache[2] || (_cache[2] = function() {
      return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);
    }),
    tabindex: $options.columnProp("sortable") ? "0" : null,
    "aria-sort": $options.ariaSort,
    role: "columnheader"
  }, _objectSpread$4(_objectSpread$4({}, $options.getColumnPT("root")), $options.getColumnPT("headerCell")), {
    "data-p-sortable-column": $options.columnProp("sortable"),
    "data-p-resizable-column": $props.resizableColumns,
    "data-p-sorted": $options.isColumnSorted(),
    "data-p-frozen-column": $options.columnProp("frozen")
  }), [$props.resizableColumns && !$options.columnProp("frozen") ? (openBlock(), createElementBlock("span", mergeProps({
    key: 0,
    "class": _ctx.cx("columnResizer"),
    onMousedown: _cache[0] || (_cache[0] = function() {
      return $options.onResizeStart && $options.onResizeStart.apply($options, arguments);
    })
  }, $options.getColumnPT("columnResizer")), null, 16)) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("columnHeaderContent")
  }, $options.getColumnPT("columnHeaderContent")), [$props.column.children && $props.column.children.header ? (openBlock(), createBlock(resolveDynamicComponent($props.column.children.header), {
    key: 0,
    column: $props.column
  }, null, 8, ["column"])) : createCommentVNode("", true), $options.columnProp("header") ? (openBlock(), createElementBlock("span", mergeProps({
    key: 1,
    "class": _ctx.cx("columnTitle")
  }, $options.getColumnPT("columnTitle")), toDisplayString($options.columnProp("header")), 17)) : createCommentVNode("", true), $options.columnProp("sortable") ? (openBlock(), createElementBlock("span", normalizeProps(mergeProps({
    key: 2
  }, $options.getColumnPT("sort"))), [(openBlock(), createBlock(resolveDynamicComponent($props.column.children && $props.column.children.sorticon || $options.sortableColumnIcon), mergeProps({
    sorted: $options.sortState.sorted,
    sortOrder: $options.sortState.sortOrder,
    "class": _ctx.cx("sortIcon")
  }, $options.getColumnPT("sortIcon")), null, 16, ["sorted", "sortOrder", "class"]))], 16)) : createCommentVNode("", true), $options.isMultiSorted() ? (openBlock(), createBlock(_component_Badge, mergeProps({
    key: 3,
    "class": _ctx.cx("pcSortBadge")
  }, $options.getColumnPT("pcSortBadge"), {
    value: $options.getMultiSortMetaIndex() + 1,
    size: "small"
  }), null, 16, ["class", "value"])) : createCommentVNode("", true)], 16)], 16, _hoisted_1$3$1);
}
__name(render$3, "render$3");
script$3.render = render$3;
var script$2 = {
  name: "BodyCell",
  hostName: "TreeTable",
  "extends": script$1d,
  emits: ["node-toggle", "checkbox-toggle"],
  props: {
    node: {
      type: Object,
      "default": null
    },
    column: {
      type: Object,
      "default": null
    },
    level: {
      type: Number,
      "default": 0
    },
    indentation: {
      type: Number,
      "default": 1
    },
    leaf: {
      type: Boolean,
      "default": false
    },
    expanded: {
      type: Boolean,
      "default": false
    },
    selectionMode: {
      type: String,
      "default": null
    },
    checked: {
      type: Boolean,
      "default": false
    },
    partialChecked: {
      type: Boolean,
      "default": false
    },
    templates: {
      type: Object,
      "default": null
    },
    index: {
      type: Number,
      "default": null
    },
    loadingMode: {
      type: String,
      "default": "mask"
    }
  },
  data: /* @__PURE__ */ __name(function data39() {
    return {
      styleObject: {}
    };
  }, "data"),
  mounted: /* @__PURE__ */ __name(function mounted43() {
    if (this.columnProp("frozen")) {
      this.updateStickyPosition();
    }
  }, "mounted"),
  updated: /* @__PURE__ */ __name(function updated12() {
    if (this.columnProp("frozen")) {
      this.updateStickyPosition();
    }
  }, "updated"),
  methods: {
    toggle: /* @__PURE__ */ __name(function toggle4() {
      this.$emit("node-toggle", this.node);
    }, "toggle"),
    columnProp: /* @__PURE__ */ __name(function columnProp3(prop) {
      return getVNodeProp(this.column, prop);
    }, "columnProp"),
    getColumnPT: /* @__PURE__ */ __name(function getColumnPT3(key) {
      var _this$$parentInstance;
      var columnMetaData = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          selectable: this.$parentInstance.rowHover || this.$parentInstance.rowSelectionMode,
          selected: this.$parent.selected,
          frozen: this.columnProp("frozen"),
          scrollable: this.$parentInstance.scrollable,
          showGridlines: this.$parentInstance.showGridlines,
          size: (_this$$parentInstance = this.$parentInstance) === null || _this$$parentInstance === void 0 ? void 0 : _this$$parentInstance.size
        }
      };
      return mergeProps(this.ptm("column.".concat(key), {
        column: columnMetaData
      }), this.ptm("column.".concat(key), columnMetaData), this.ptmo(this.getColumnProp(), key, columnMetaData));
    }, "getColumnPT"),
    getColumnProp: /* @__PURE__ */ __name(function getColumnProp3() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    }, "getColumnProp"),
    getColumnCheckboxPT: /* @__PURE__ */ __name(function getColumnCheckboxPT(key) {
      var columnMetaData = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          checked: this.checked,
          partialChecked: this.partialChecked
        }
      };
      return mergeProps(this.ptm("column.".concat(key), {
        column: columnMetaData
      }), this.ptm("column.".concat(key), columnMetaData), this.ptmo(this.getColumnProp(), key, columnMetaData));
    }, "getColumnCheckboxPT"),
    updateStickyPosition: /* @__PURE__ */ __name(function updateStickyPosition3() {
      if (this.columnProp("frozen")) {
        var align = this.columnProp("alignFrozen");
        if (align === "right") {
          var pos = 0;
          var next = getNextElementSibling(this.$el, '[data-p-frozen-column="true"]');
          if (next) {
            pos = getOuterWidth(next) + parseFloat(next.style.right || 0);
          }
          this.styleObject.insetInlineEnd = pos + "px";
        } else {
          var _pos = 0;
          var prev = getPreviousElementSibling(this.$el, '[data-p-frozen-column="true"]');
          if (prev) {
            _pos = getOuterWidth(prev) + parseFloat(prev.style.left || 0);
          }
          this.styleObject.insetInlineStart = _pos + "px";
        }
      }
    }, "updateStickyPosition"),
    resolveFieldData: /* @__PURE__ */ __name(function resolveFieldData$1(rowData, field) {
      return resolveFieldData(rowData, field);
    }, "resolveFieldData$1"),
    toggleCheckbox: /* @__PURE__ */ __name(function toggleCheckbox() {
      this.$emit("checkbox-toggle");
    }, "toggleCheckbox")
  },
  computed: {
    containerClass: /* @__PURE__ */ __name(function containerClass6() {
      return [this.columnProp("bodyClass"), this.columnProp("class"), this.cx("bodyCell")];
    }, "containerClass"),
    containerStyle: /* @__PURE__ */ __name(function containerStyle4() {
      var bodyStyle = this.columnProp("bodyStyle");
      var columnStyle = this.columnProp("style");
      return this.columnProp("frozen") ? [columnStyle, bodyStyle, this.styleObject] : [columnStyle, bodyStyle];
    }, "containerStyle"),
    togglerStyle: /* @__PURE__ */ __name(function togglerStyle() {
      return {
        marginLeft: this.level * this.indentation + "rem",
        visibility: this.leaf ? "hidden" : "visible"
      };
    }, "togglerStyle"),
    checkboxSelectionMode: /* @__PURE__ */ __name(function checkboxSelectionMode() {
      return this.selectionMode === "checkbox";
    }, "checkboxSelectionMode")
  },
  components: {
    Checkbox: script$1J,
    ChevronRightIcon: script$1l,
    ChevronDownIcon: script$1k,
    CheckIcon: script$1D,
    MinusIcon: script$1y,
    SpinnerIcon: script$1r
  },
  directives: {
    ripple: Ripple
  }
};
function _typeof$3(o) {
  "@babel/helpers - typeof";
  return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$3(o);
}
__name(_typeof$3, "_typeof$3");
function ownKeys$3(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$3, "ownKeys$3");
function _objectSpread$3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$3(Object(t2), true).forEach(function(r2) {
      _defineProperty$3(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$3(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$3, "_objectSpread$3");
function _defineProperty$3(e, r, t2) {
  return (r = _toPropertyKey$3(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$3, "_defineProperty$3");
function _toPropertyKey$3(t2) {
  var i = _toPrimitive$3(t2, "string");
  return "symbol" == _typeof$3(i) ? i : i + "";
}
__name(_toPropertyKey$3, "_toPropertyKey$3");
function _toPrimitive$3(t2, r) {
  if ("object" != _typeof$3(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$3(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$3, "_toPrimitive$3");
var _hoisted_1$2$1 = ["data-p-frozen-column"];
function render$2(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_SpinnerIcon = resolveComponent("SpinnerIcon");
  var _component_Checkbox = resolveComponent("Checkbox");
  var _directive_ripple = resolveDirective("ripple");
  return openBlock(), createElementBlock("td", mergeProps({
    style: $options.containerStyle,
    "class": $options.containerClass,
    role: "cell"
  }, _objectSpread$3(_objectSpread$3({}, $options.getColumnPT("root")), $options.getColumnPT("bodyCell")), {
    "data-p-frozen-column": $options.columnProp("frozen")
  }), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("bodyCellContent")
  }, $options.getColumnPT("bodyCellContent")), [$options.columnProp("expander") ? withDirectives((openBlock(), createElementBlock("button", mergeProps({
    key: 0,
    type: "button",
    "class": _ctx.cx("nodeToggleButton"),
    onClick: _cache[0] || (_cache[0] = function() {
      return $options.toggle && $options.toggle.apply($options, arguments);
    }),
    style: $options.togglerStyle,
    tabindex: "-1"
  }, $options.getColumnPT("nodeToggleButton"), {
    "data-pc-group-section": "rowactionbutton"
  }), [$props.node.loading && $props.loadingMode === "icon" ? (openBlock(), createElementBlock(Fragment, {
    key: 0
  }, [$props.templates["nodetoggleicon"] ? (openBlock(), createBlock(resolveDynamicComponent($props.templates["nodetoggleicon"]), {
    key: 0
  })) : createCommentVNode("", true), $props.templates["nodetogglericon"] ? (openBlock(), createBlock(resolveDynamicComponent($props.templates["nodetogglericon"]), {
    key: 1
  })) : (openBlock(), createBlock(_component_SpinnerIcon, mergeProps({
    key: 2,
    spin: ""
  }, _ctx.ptm("nodetoggleicon")), null, 16))], 64)) : (openBlock(), createElementBlock(Fragment, {
    key: 1
  }, [$props.column.children && $props.column.children.rowtoggleicon ? (openBlock(), createBlock(resolveDynamicComponent($props.column.children.rowtoggleicon), {
    key: 0,
    node: $props.node,
    expanded: $props.expanded,
    "class": normalizeClass(_ctx.cx("nodeToggleIcon"))
  }, null, 8, ["node", "expanded", "class"])) : createCommentVNode("", true), $props.column.children && $props.column.children.rowtogglericon ? (openBlock(), createBlock(resolveDynamicComponent($props.column.children.rowtogglericon), {
    key: 1,
    node: $props.node,
    expanded: $props.expanded,
    "class": normalizeClass(_ctx.cx("nodeToggleIcon"))
  }, null, 8, ["node", "expanded", "class"])) : $props.expanded ? (openBlock(), createBlock(resolveDynamicComponent($props.node.expandedIcon ? "span" : "ChevronDownIcon"), mergeProps({
    key: 2,
    "class": _ctx.cx("nodeToggleIcon")
  }, $options.getColumnPT("nodeToggleIcon")), null, 16, ["class"])) : (openBlock(), createBlock(resolveDynamicComponent($props.node.collapsedIcon ? "span" : "ChevronRightIcon"), mergeProps({
    key: 3,
    "class": _ctx.cx("nodeToggleIcon")
  }, $options.getColumnPT("nodeToggleIcon")), null, 16, ["class"]))], 64))], 16)), [[_directive_ripple]]) : createCommentVNode("", true), $options.checkboxSelectionMode && $options.columnProp("expander") ? (openBlock(), createBlock(_component_Checkbox, {
    key: 1,
    modelValue: $props.checked,
    binary: true,
    "class": normalizeClass(_ctx.cx("pcNodeCheckbox")),
    disabled: $props.node.selectable === false,
    onChange: $options.toggleCheckbox,
    tabindex: -1,
    indeterminate: $props.partialChecked,
    unstyled: _ctx.unstyled,
    pt: $options.getColumnCheckboxPT("pcNodeCheckbox"),
    "data-p-partialchecked": $props.partialChecked
  }, {
    icon: withCtx(function(slotProps) {
      return [$props.templates["checkboxicon"] ? (openBlock(), createBlock(resolveDynamicComponent($props.templates["checkboxicon"]), {
        key: 0,
        checked: slotProps.checked,
        partialChecked: $props.partialChecked,
        "class": normalizeClass(slotProps["class"])
      }, null, 8, ["checked", "partialChecked", "class"])) : createCommentVNode("", true)];
    }),
    _: 1
  }, 8, ["modelValue", "class", "disabled", "onChange", "indeterminate", "unstyled", "pt", "data-p-partialchecked"])) : createCommentVNode("", true), $props.column.children && $props.column.children.body ? (openBlock(), createBlock(resolveDynamicComponent($props.column.children.body), {
    key: 2,
    node: $props.node,
    column: $props.column
  }, null, 8, ["node", "column"])) : (openBlock(), createElementBlock(Fragment, {
    key: 3
  }, [createTextVNode(toDisplayString($options.resolveFieldData($props.node.data, $options.columnProp("field"))), 1)], 64))], 16)], 16, _hoisted_1$2$1);
}
__name(render$2, "render$2");
script$2.render = render$2;
function _typeof$2(o) {
  "@babel/helpers - typeof";
  return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$2(o);
}
__name(_typeof$2, "_typeof$2");
function _createForOfIteratorHelper$1(r, e) {
  var t2 = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t2) {
    if (Array.isArray(r) || (t2 = _unsupportedIterableToArray$1(r)) || e) {
      t2 && (r = t2);
      var _n = 0, F = /* @__PURE__ */ __name(function F2() {
      }, "F");
      return { s: F, n: /* @__PURE__ */ __name(function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
        throw r2;
      }, "e"), f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: /* @__PURE__ */ __name(function s() {
    t2 = t2.call(r);
  }, "s"), n: /* @__PURE__ */ __name(function n() {
    var r2 = t2.next();
    return a = r2.done, r2;
  }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
    u = true, o = r2;
  }, "e"), f: /* @__PURE__ */ __name(function f() {
    try {
      a || null == t2["return"] || t2["return"]();
    } finally {
      if (u) throw o;
    }
  }, "f") };
}
__name(_createForOfIteratorHelper$1, "_createForOfIteratorHelper$1");
function ownKeys$2(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$2, "ownKeys$2");
function _objectSpread$2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$2(Object(t2), true).forEach(function(r2) {
      _defineProperty$2(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$2(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$2, "_objectSpread$2");
function _defineProperty$2(e, r, t2) {
  return (r = _toPropertyKey$2(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$2, "_defineProperty$2");
function _toPropertyKey$2(t2) {
  var i = _toPrimitive$2(t2, "string");
  return "symbol" == _typeof$2(i) ? i : i + "";
}
__name(_toPropertyKey$2, "_toPropertyKey$2");
function _toPrimitive$2(t2, r) {
  if ("object" != _typeof$2(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$2(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$2, "_toPrimitive$2");
function _toConsumableArray$1(r) {
  return _arrayWithoutHoles$1(r) || _iterableToArray$1(r) || _unsupportedIterableToArray$1(r) || _nonIterableSpread$1();
}
__name(_toConsumableArray$1, "_toConsumableArray$1");
function _nonIterableSpread$1() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread$1, "_nonIterableSpread$1");
function _unsupportedIterableToArray$1(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray$1(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$1(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray$1, "_unsupportedIterableToArray$1");
function _iterableToArray$1(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray$1, "_iterableToArray$1");
function _arrayWithoutHoles$1(r) {
  if (Array.isArray(r)) return _arrayLikeToArray$1(r);
}
__name(_arrayWithoutHoles$1, "_arrayWithoutHoles$1");
function _arrayLikeToArray$1(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray$1, "_arrayLikeToArray$1");
var script$1 = {
  name: "TreeTableRow",
  hostName: "TreeTable",
  "extends": script$1d,
  emits: ["node-click", "node-toggle", "checkbox-change", "nodeClick", "nodeToggle", "checkboxChange", "row-rightclick", "rowRightclick"],
  props: {
    node: {
      type: null,
      "default": null
    },
    dataKey: {
      type: [String, Function],
      "default": "key"
    },
    parentNode: {
      type: null,
      "default": null
    },
    columns: {
      type: null,
      "default": null
    },
    expandedKeys: {
      type: null,
      "default": null
    },
    selectionKeys: {
      type: null,
      "default": null
    },
    selectionMode: {
      type: String,
      "default": null
    },
    level: {
      type: Number,
      "default": 0
    },
    indentation: {
      type: Number,
      "default": 1
    },
    tabindex: {
      type: Number,
      "default": -1
    },
    ariaSetSize: {
      type: Number,
      "default": null
    },
    ariaPosInset: {
      type: Number,
      "default": null
    },
    loadingMode: {
      type: String,
      "default": "mask"
    },
    templates: {
      type: Object,
      "default": null
    },
    contextMenu: {
      type: Boolean,
      "default": false
    },
    contextMenuSelection: {
      type: Object,
      "default": null
    }
  },
  nodeTouched: false,
  methods: {
    columnProp: /* @__PURE__ */ __name(function columnProp4(col, prop) {
      return getVNodeProp(col, prop);
    }, "columnProp"),
    toggle: /* @__PURE__ */ __name(function toggle5() {
      this.$emit("node-toggle", this.node);
    }, "toggle"),
    onClick: /* @__PURE__ */ __name(function onClick10(event2) {
      if (isClickable(event2.target) || getAttribute(event2.target, "data-pc-section") === "nodetogglebutton" || getAttribute(event2.target, "data-pc-section") === "nodetoggleicon" || event2.target.tagName === "path") {
        return;
      }
      this.setTabIndexForSelectionMode(event2, this.nodeTouched);
      this.$emit("node-click", {
        originalEvent: event2,
        nodeTouched: this.nodeTouched,
        node: this.node
      });
      this.nodeTouched = false;
    }, "onClick"),
    onRowRightClick: /* @__PURE__ */ __name(function onRowRightClick(event2) {
      this.$emit("row-rightclick", {
        originalEvent: event2,
        node: this.node
      });
    }, "onRowRightClick"),
    onTouchEnd: /* @__PURE__ */ __name(function onTouchEnd2() {
      this.nodeTouched = true;
    }, "onTouchEnd"),
    nodeKey: /* @__PURE__ */ __name(function nodeKey(node2) {
      return resolveFieldData(node2, this.dataKey);
    }, "nodeKey"),
    onKeyDown: /* @__PURE__ */ __name(function onKeyDown14(event2, item8) {
      switch (event2.code) {
        case "ArrowDown":
          this.onArrowDownKey(event2);
          break;
        case "ArrowUp":
          this.onArrowUpKey(event2);
          break;
        case "ArrowLeft":
          this.onArrowLeftKey(event2);
          break;
        case "ArrowRight":
          this.onArrowRightKey(event2);
          break;
        case "Home":
          this.onHomeKey(event2);
          break;
        case "End":
          this.onEndKey(event2);
          break;
        case "Enter":
        case "NumpadEnter":
        case "Space":
          if (!isClickable(event2.target)) {
            this.onEnterKey(event2, item8);
          }
          break;
        case "Tab":
          this.onTabKey(event2);
          break;
      }
    }, "onKeyDown"),
    onArrowDownKey: /* @__PURE__ */ __name(function onArrowDownKey9(event2) {
      var nextElementSibling = event2.currentTarget.nextElementSibling;
      nextElementSibling && this.focusRowChange(event2.currentTarget, nextElementSibling);
      event2.preventDefault();
    }, "onArrowDownKey"),
    onArrowUpKey: /* @__PURE__ */ __name(function onArrowUpKey8(event2) {
      var previousElementSibling = event2.currentTarget.previousElementSibling;
      previousElementSibling && this.focusRowChange(event2.currentTarget, previousElementSibling);
      event2.preventDefault();
    }, "onArrowUpKey"),
    onArrowRightKey: /* @__PURE__ */ __name(function onArrowRightKey4(event2) {
      var _this = this;
      var ishiddenIcon = findSingle(event2.currentTarget, "button").style.visibility === "hidden";
      var togglerElement = findSingle(this.$refs.node, '[data-pc-section="nodetogglebutton"]');
      if (ishiddenIcon) return;
      !this.expanded && togglerElement.click();
      this.$nextTick(function() {
        _this.onArrowDownKey(event2);
      });
      event2.preventDefault();
    }, "onArrowRightKey"),
    onArrowLeftKey: /* @__PURE__ */ __name(function onArrowLeftKey5(event2) {
      if (this.level === 0 && !this.expanded) {
        return;
      }
      var currentTarget = event2.currentTarget;
      var ishiddenIcon = findSingle(currentTarget, "button").style.visibility === "hidden";
      var togglerElement = findSingle(currentTarget, '[data-pc-section="nodetogglebutton"]');
      if (this.expanded && !ishiddenIcon) {
        togglerElement.click();
        return;
      }
      var target = this.findBeforeClickableNode(currentTarget);
      target && this.focusRowChange(currentTarget, target);
    }, "onArrowLeftKey"),
    onHomeKey: /* @__PURE__ */ __name(function onHomeKey9(event2) {
      var findFirstElement = findSingle(event2.currentTarget.parentElement, 'tr[aria-level="'.concat(this.level + 1, '"]'));
      findFirstElement && focus(findFirstElement);
      event2.preventDefault();
    }, "onHomeKey"),
    onEndKey: /* @__PURE__ */ __name(function onEndKey9(event2) {
      var nodes = find(event2.currentTarget.parentElement, 'tr[aria-level="'.concat(this.level + 1, '"]'));
      var findFirstElement = nodes[nodes.length - 1];
      focus(findFirstElement);
      event2.preventDefault();
    }, "onEndKey"),
    onEnterKey: /* @__PURE__ */ __name(function onEnterKey9(event2) {
      event2.preventDefault();
      this.setTabIndexForSelectionMode(event2, this.nodeTouched);
      if (this.selectionMode === "checkbox") {
        this.toggleCheckbox();
        return;
      }
      this.$emit("node-click", {
        originalEvent: event2,
        nodeTouched: this.nodeTouched,
        node: this.node
      });
      this.nodeTouched = false;
    }, "onEnterKey"),
    onTabKey: /* @__PURE__ */ __name(function onTabKey6() {
      var rows3 = _toConsumableArray$1(find(this.$refs.node.parentElement, "tr"));
      var hasSelectedRow = rows3.some(function(row2) {
        return getAttribute(row2, "data-p-selected") || row2.getAttribute("aria-checked") === "true";
      });
      rows3.forEach(function(row2) {
        row2.tabIndex = -1;
      });
      if (hasSelectedRow) {
        var selectedNodes2 = rows3.filter(function(node2) {
          return getAttribute(node2, "data-p-selected") || node2.getAttribute("aria-checked") === "true";
        });
        selectedNodes2[0].tabIndex = 0;
        return;
      }
      rows3[0].tabIndex = 0;
    }, "onTabKey"),
    focusRowChange: /* @__PURE__ */ __name(function focusRowChange(firstFocusableRow, currentFocusedRow) {
      firstFocusableRow.tabIndex = "-1";
      currentFocusedRow.tabIndex = "0";
      focus(currentFocusedRow);
    }, "focusRowChange"),
    findBeforeClickableNode: /* @__PURE__ */ __name(function findBeforeClickableNode(node2) {
      var prevNode = node2.previousElementSibling;
      if (prevNode) {
        var prevNodeButton = prevNode.querySelector("button");
        if (prevNodeButton && prevNodeButton.style.visibility !== "hidden") {
          return prevNode;
        }
        return this.findBeforeClickableNode(prevNode);
      }
      return null;
    }, "findBeforeClickableNode"),
    toggleCheckbox: /* @__PURE__ */ __name(function toggleCheckbox2() {
      var _selectionKeys = this.selectionKeys ? _objectSpread$2({}, this.selectionKeys) : {};
      var _check = !this.checked;
      this.propagateDown(this.node, _check, _selectionKeys);
      this.$emit("checkbox-change", {
        node: this.node,
        check: _check,
        selectionKeys: _selectionKeys
      });
    }, "toggleCheckbox"),
    propagateDown: /* @__PURE__ */ __name(function propagateDown(node2, check, selectionKeys) {
      if (check) selectionKeys[this.nodeKey(node2)] = {
        checked: true,
        partialChecked: false
      };
      else delete selectionKeys[this.nodeKey(node2)];
      if (node2.children && node2.children.length) {
        var _iterator = _createForOfIteratorHelper$1(node2.children), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var child = _step.value;
            this.propagateDown(child, check, selectionKeys);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    }, "propagateDown"),
    propagateUp: /* @__PURE__ */ __name(function propagateUp(event2) {
      var check = event2.check;
      var _selectionKeys = _objectSpread$2({}, event2.selectionKeys);
      var checkedChildCount = 0;
      var childPartialSelected = false;
      var _iterator2 = _createForOfIteratorHelper$1(this.node.children), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var child = _step2.value;
          if (_selectionKeys[this.nodeKey(child)] && _selectionKeys[this.nodeKey(child)].checked) checkedChildCount++;
          else if (_selectionKeys[this.nodeKey(child)] && _selectionKeys[this.nodeKey(child)].partialChecked) childPartialSelected = true;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (check && checkedChildCount === this.node.children.length) {
        _selectionKeys[this.nodeKey(this.node)] = {
          checked: true,
          partialChecked: false
        };
      } else {
        if (!check) {
          delete _selectionKeys[this.nodeKey(this.node)];
        }
        if (childPartialSelected || checkedChildCount > 0 && checkedChildCount !== this.node.children.length) _selectionKeys[this.nodeKey(this.node)] = {
          checked: false,
          partialChecked: true
        };
        else _selectionKeys[this.nodeKey(this.node)] = {
          checked: false,
          partialChecked: false
        };
      }
      this.$emit("checkbox-change", {
        node: event2.node,
        check: event2.check,
        selectionKeys: _selectionKeys
      });
    }, "propagateUp"),
    onCheckboxChange: /* @__PURE__ */ __name(function onCheckboxChange(event2) {
      var check = event2.check;
      var _selectionKeys = _objectSpread$2({}, event2.selectionKeys);
      var checkedChildCount = 0;
      var childPartialSelected = false;
      var _iterator3 = _createForOfIteratorHelper$1(this.node.children), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var child = _step3.value;
          if (_selectionKeys[this.nodeKey(child)] && _selectionKeys[this.nodeKey(child)].checked) checkedChildCount++;
          else if (_selectionKeys[this.nodeKey(child)] && _selectionKeys[this.nodeKey(child)].partialChecked) childPartialSelected = true;
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      if (check && checkedChildCount === this.node.children.length) {
        _selectionKeys[this.nodeKey(this.node)] = {
          checked: true,
          partialChecked: false
        };
      } else {
        if (!check) {
          delete _selectionKeys[this.nodeKey(this.node)];
        }
        if (childPartialSelected || checkedChildCount > 0 && checkedChildCount !== this.node.children.length) _selectionKeys[this.nodeKey(this.node)] = {
          checked: false,
          partialChecked: true
        };
        else _selectionKeys[this.nodeKey(this.node)] = {
          checked: false,
          partialChecked: false
        };
      }
      this.$emit("checkbox-change", {
        node: event2.node,
        check: event2.check,
        selectionKeys: _selectionKeys
      });
    }, "onCheckboxChange"),
    setTabIndexForSelectionMode: /* @__PURE__ */ __name(function setTabIndexForSelectionMode(event2, nodeTouched) {
      if (this.selectionMode !== null) {
        var elements = _toConsumableArray$1(find(this.$refs.node.parentElement, "tr"));
        event2.currentTarget.tabIndex = nodeTouched === false ? -1 : 0;
        if (elements.every(function(element) {
          return element.tabIndex === -1;
        })) {
          elements[0].tabIndex = 0;
        }
      }
    }, "setTabIndexForSelectionMode")
  },
  computed: {
    containerClass: /* @__PURE__ */ __name(function containerClass7() {
      return [this.node.styleClass, this.cx("row")];
    }, "containerClass"),
    expanded: /* @__PURE__ */ __name(function expanded2() {
      return this.expandedKeys && this.expandedKeys[this.nodeKey(this.node)] === true;
    }, "expanded"),
    leaf: /* @__PURE__ */ __name(function leaf2() {
      return this.node.leaf === false ? false : !(this.node.children && this.node.children.length);
    }, "leaf"),
    selected: /* @__PURE__ */ __name(function selected2() {
      return this.selectionMode && this.selectionKeys ? this.selectionKeys[this.nodeKey(this.node)] === true : false;
    }, "selected"),
    isSelectedWithContextMenu: /* @__PURE__ */ __name(function isSelectedWithContextMenu() {
      if (this.node && this.contextMenuSelection) {
        return equals(this.node, this.contextMenuSelection, this.dataKey);
      }
      return false;
    }, "isSelectedWithContextMenu"),
    checked: /* @__PURE__ */ __name(function checked() {
      return this.selectionKeys ? this.selectionKeys[this.nodeKey(this.node)] && this.selectionKeys[this.nodeKey(this.node)].checked : false;
    }, "checked"),
    partialChecked: /* @__PURE__ */ __name(function partialChecked() {
      return this.selectionKeys ? this.selectionKeys[this.nodeKey(this.node)] && this.selectionKeys[this.nodeKey(this.node)].partialChecked : false;
    }, "partialChecked"),
    getAriaSelected: /* @__PURE__ */ __name(function getAriaSelected() {
      return this.selectionMode === "single" || this.selectionMode === "multiple" ? this.selected : null;
    }, "getAriaSelected"),
    ptmOptions: /* @__PURE__ */ __name(function ptmOptions2() {
      return {
        context: {
          selectable: this.$parentInstance.rowHover || this.$parentInstance.rowSelectionMode,
          selected: this.selected,
          scrollable: this.$parentInstance.scrollable
        }
      };
    }, "ptmOptions")
  },
  components: {
    TTBodyCell: script$2
  }
};
var _hoisted_1$1$1 = ["tabindex", "aria-expanded", "aria-level", "aria-setsize", "aria-posinset", "aria-selected", "aria-checked", "data-p-selected", "data-p-selected-contextmenu"];
function render$1(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_TTBodyCell = resolveComponent("TTBodyCell");
  var _component_TreeTableRow = resolveComponent("TreeTableRow", true);
  return openBlock(), createElementBlock(Fragment, null, [createBaseVNode("tr", mergeProps({
    ref: "node",
    "class": $options.containerClass,
    style: $props.node.style,
    tabindex: $props.tabindex,
    role: "row",
    "aria-expanded": $props.node.children && $props.node.children.length ? $options.expanded : void 0,
    "aria-level": $props.level + 1,
    "aria-setsize": $props.ariaSetSize,
    "aria-posinset": $props.ariaPosInset,
    "aria-selected": $options.getAriaSelected,
    "aria-checked": $options.checked || void 0,
    onClick: _cache[1] || (_cache[1] = function() {
      return $options.onClick && $options.onClick.apply($options, arguments);
    }),
    onKeydown: _cache[2] || (_cache[2] = function() {
      return $options.onKeyDown && $options.onKeyDown.apply($options, arguments);
    }),
    onTouchend: _cache[3] || (_cache[3] = function() {
      return $options.onTouchEnd && $options.onTouchEnd.apply($options, arguments);
    }),
    onContextmenu: _cache[4] || (_cache[4] = function() {
      return $options.onRowRightClick && $options.onRowRightClick.apply($options, arguments);
    })
  }, _ctx.ptm("row", $options.ptmOptions), {
    "data-p-selected": $options.selected,
    "data-p-selected-contextmenu": $props.contextMenuSelection && $options.isSelectedWithContextMenu
  }), [(openBlock(true), createElementBlock(Fragment, null, renderList($props.columns, function(col, i) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.columnProp(col, "columnKey") || $options.columnProp(col, "field") || i
    }, [!$options.columnProp(col, "hidden") ? (openBlock(), createBlock(_component_TTBodyCell, {
      key: 0,
      column: col,
      node: $props.node,
      level: $props.level,
      leaf: $options.leaf,
      indentation: $props.indentation,
      expanded: $options.expanded,
      selectionMode: $props.selectionMode,
      checked: $options.checked,
      partialChecked: $options.partialChecked,
      templates: $props.templates,
      onNodeToggle: _cache[0] || (_cache[0] = function($event) {
        return _ctx.$emit("node-toggle", $event);
      }),
      onCheckboxToggle: $options.toggleCheckbox,
      index: i,
      loadingMode: $props.loadingMode,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["column", "node", "level", "leaf", "indentation", "expanded", "selectionMode", "checked", "partialChecked", "templates", "onCheckboxToggle", "index", "loadingMode", "unstyled", "pt"])) : createCommentVNode("", true)], 64);
  }), 128))], 16, _hoisted_1$1$1), $options.expanded && $props.node.children && $props.node.children.length ? (openBlock(true), createElementBlock(Fragment, {
    key: 0
  }, renderList($props.node.children, function(childNode) {
    return openBlock(), createBlock(_component_TreeTableRow, {
      key: $options.nodeKey(childNode),
      dataKey: $props.dataKey,
      columns: $props.columns,
      node: childNode,
      parentNode: $props.node,
      level: $props.level + 1,
      expandedKeys: $props.expandedKeys,
      selectionMode: $props.selectionMode,
      selectionKeys: $props.selectionKeys,
      contextMenu: $props.contextMenu,
      contextMenuSelection: $props.contextMenuSelection,
      indentation: $props.indentation,
      ariaPosInset: $props.node.children.indexOf(childNode) + 1,
      ariaSetSize: $props.node.children.length,
      templates: $props.templates,
      onNodeToggle: _cache[5] || (_cache[5] = function($event) {
        return _ctx.$emit("node-toggle", $event);
      }),
      onNodeClick: _cache[6] || (_cache[6] = function($event) {
        return _ctx.$emit("node-click", $event);
      }),
      onRowRightclick: _cache[7] || (_cache[7] = function($event) {
        return _ctx.$emit("row-rightclick", $event);
      }),
      onCheckboxChange: $options.onCheckboxChange,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["dataKey", "columns", "node", "parentNode", "level", "expandedKeys", "selectionMode", "selectionKeys", "contextMenu", "contextMenuSelection", "indentation", "ariaPosInset", "ariaSetSize", "templates", "onCheckboxChange", "unstyled", "pt"]);
  }), 128)) : createCommentVNode("", true)], 64);
}
__name(render$1, "render$1");
script$1.render = render$1;
function _typeof$1(o) {
  "@babel/helpers - typeof";
  return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof$1(o);
}
__name(_typeof$1, "_typeof$1");
function _createForOfIteratorHelper(r, e) {
  var t2 = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t2) {
    if (Array.isArray(r) || (t2 = _unsupportedIterableToArray(r)) || e) {
      t2 && (r = t2);
      var _n = 0, F = /* @__PURE__ */ __name(function F2() {
      }, "F");
      return { s: F, n: /* @__PURE__ */ __name(function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
        throw r2;
      }, "e"), f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: /* @__PURE__ */ __name(function s() {
    t2 = t2.call(r);
  }, "s"), n: /* @__PURE__ */ __name(function n() {
    var r2 = t2.next();
    return a = r2.done, r2;
  }, "n"), e: /* @__PURE__ */ __name(function e2(r2) {
    u = true, o = r2;
  }, "e"), f: /* @__PURE__ */ __name(function f() {
    try {
      a || null == t2["return"] || t2["return"]();
    } finally {
      if (u) throw o;
    }
  }, "f") };
}
__name(_createForOfIteratorHelper, "_createForOfIteratorHelper");
function ownKeys$1(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys$1, "ownKeys$1");
function _objectSpread$1(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$1(Object(t2), true).forEach(function(r2) {
      _defineProperty$1(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys$1(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread$1, "_objectSpread$1");
function _defineProperty$1(e, r, t2) {
  return (r = _toPropertyKey$1(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty$1, "_defineProperty$1");
function _toPropertyKey$1(t2) {
  var i = _toPrimitive$1(t2, "string");
  return "symbol" == _typeof$1(i) ? i : i + "";
}
__name(_toPropertyKey$1, "_toPropertyKey$1");
function _toPrimitive$1(t2, r) {
  if ("object" != _typeof$1(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof$1(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive$1, "_toPrimitive$1");
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
__name(_toConsumableArray, "_toConsumableArray");
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableSpread, "_nonIterableSpread");
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t2 = {}.toString.call(r).slice(8, -1);
    return "Object" === t2 && r.constructor && (t2 = r.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray(r, a) : void 0;
  }
}
__name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
__name(_iterableToArray, "_iterableToArray");
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}
__name(_arrayWithoutHoles, "_arrayWithoutHoles");
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
__name(_arrayLikeToArray, "_arrayLikeToArray");
var script = {
  name: "TreeTable",
  "extends": script$5,
  inheritAttrs: false,
  emits: ["node-expand", "node-collapse", "update:expandedKeys", "update:selectionKeys", "node-select", "node-unselect", "update:first", "update:rows", "page", "update:sortField", "update:sortOrder", "update:multiSortMeta", "sort", "filter", "column-resize-end", "update:contextMenuSelection", "row-contextmenu"],
  provide: /* @__PURE__ */ __name(function provide52() {
    return {
      $columns: this.d_columns
    };
  }, "provide"),
  data: /* @__PURE__ */ __name(function data40() {
    return {
      d_expandedKeys: this.expandedKeys || {},
      d_first: this.first,
      d_rows: this.rows,
      d_sortField: this.sortField,
      d_sortOrder: this.sortOrder,
      d_multiSortMeta: this.multiSortMeta ? _toConsumableArray(this.multiSortMeta) : [],
      hasASelectedNode: false,
      d_columns: new _default({
        type: "Column"
      })
    };
  }, "data"),
  documentColumnResizeListener: null,
  documentColumnResizeEndListener: null,
  lastResizeHelperX: null,
  resizeColumnElement: null,
  watch: {
    expandedKeys: /* @__PURE__ */ __name(function expandedKeys3(newValue) {
      this.d_expandedKeys = newValue;
    }, "expandedKeys"),
    first: /* @__PURE__ */ __name(function first2(newValue) {
      this.d_first = newValue;
    }, "first"),
    rows: /* @__PURE__ */ __name(function rows2(newValue) {
      this.d_rows = newValue;
    }, "rows"),
    sortField: /* @__PURE__ */ __name(function sortField2(newValue) {
      this.d_sortField = newValue;
    }, "sortField"),
    sortOrder: /* @__PURE__ */ __name(function sortOrder2(newValue) {
      this.d_sortOrder = newValue;
    }, "sortOrder"),
    multiSortMeta: /* @__PURE__ */ __name(function multiSortMeta(newValue) {
      this.d_multiSortMeta = newValue;
    }, "multiSortMeta")
  },
  beforeUnmount: /* @__PURE__ */ __name(function beforeUnmount18() {
    this.destroyStyleElement();
    this.d_columns.clear();
  }, "beforeUnmount"),
  methods: {
    columnProp: /* @__PURE__ */ __name(function columnProp5(col, prop) {
      return getVNodeProp(col, prop);
    }, "columnProp"),
    ptHeaderCellOptions: /* @__PURE__ */ __name(function ptHeaderCellOptions(column2) {
      return {
        context: {
          frozen: this.columnProp(column2, "frozen")
        }
      };
    }, "ptHeaderCellOptions"),
    onNodeToggle: /* @__PURE__ */ __name(function onNodeToggle3(node2) {
      var key = this.nodeKey(node2);
      if (this.d_expandedKeys[key]) {
        delete this.d_expandedKeys[key];
        this.$emit("node-collapse", node2);
      } else {
        this.d_expandedKeys[key] = true;
        this.$emit("node-expand", node2);
      }
      this.d_expandedKeys = _objectSpread$1({}, this.d_expandedKeys);
      this.$emit("update:expandedKeys", this.d_expandedKeys);
    }, "onNodeToggle"),
    onNodeClick: /* @__PURE__ */ __name(function onNodeClick3(event2) {
      if (this.rowSelectionMode && event2.node.selectable !== false) {
        var metaSelection = event2.nodeTouched ? false : this.metaKeySelection;
        var _selectionKeys = metaSelection ? this.handleSelectionWithMetaKey(event2) : this.handleSelectionWithoutMetaKey(event2);
        this.$emit("update:selectionKeys", _selectionKeys);
      }
    }, "onNodeClick"),
    nodeKey: /* @__PURE__ */ __name(function nodeKey2(node2) {
      return resolveFieldData(node2, this.dataKey);
    }, "nodeKey"),
    handleSelectionWithMetaKey: /* @__PURE__ */ __name(function handleSelectionWithMetaKey(event2) {
      var originalEvent = event2.originalEvent;
      var node2 = event2.node;
      var nodeKey3 = this.nodeKey(node2);
      var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;
      var selected3 = this.isNodeSelected(node2);
      var _selectionKeys;
      if (selected3 && metaKey) {
        if (this.isSingleSelectionMode()) {
          _selectionKeys = {};
        } else {
          _selectionKeys = _objectSpread$1({}, this.selectionKeys);
          delete _selectionKeys[nodeKey3];
        }
        this.$emit("node-unselect", node2);
      } else {
        if (this.isSingleSelectionMode()) {
          _selectionKeys = {};
        } else if (this.isMultipleSelectionMode()) {
          _selectionKeys = !metaKey ? {} : this.selectionKeys ? _objectSpread$1({}, this.selectionKeys) : {};
        }
        _selectionKeys[nodeKey3] = true;
        this.$emit("node-select", node2);
      }
      return _selectionKeys;
    }, "handleSelectionWithMetaKey"),
    handleSelectionWithoutMetaKey: /* @__PURE__ */ __name(function handleSelectionWithoutMetaKey(event2) {
      var node2 = event2.node;
      var nodeKey3 = this.nodeKey(node2);
      var selected3 = this.isNodeSelected(node2);
      var _selectionKeys;
      if (this.isSingleSelectionMode()) {
        if (selected3) {
          _selectionKeys = {};
          this.$emit("node-unselect", node2);
        } else {
          _selectionKeys = {};
          _selectionKeys[nodeKey3] = true;
          this.$emit("node-select", node2);
        }
      } else {
        if (selected3) {
          _selectionKeys = _objectSpread$1({}, this.selectionKeys);
          delete _selectionKeys[nodeKey3];
          this.$emit("node-unselect", node2);
        } else {
          _selectionKeys = this.selectionKeys ? _objectSpread$1({}, this.selectionKeys) : {};
          _selectionKeys[nodeKey3] = true;
          this.$emit("node-select", node2);
        }
      }
      return _selectionKeys;
    }, "handleSelectionWithoutMetaKey"),
    onCheckboxChange: /* @__PURE__ */ __name(function onCheckboxChange2(event2) {
      this.$emit("update:selectionKeys", event2.selectionKeys);
      if (event2.check) this.$emit("node-select", event2.node);
      else this.$emit("node-unselect", event2.node);
    }, "onCheckboxChange"),
    onRowRightClick: /* @__PURE__ */ __name(function onRowRightClick2(event2) {
      if (this.contextMenu) {
        clearSelection();
        event2.originalEvent.target.focus();
      }
      this.$emit("update:contextMenuSelection", event2.node);
      this.$emit("row-contextmenu", event2);
    }, "onRowRightClick"),
    isSingleSelectionMode: /* @__PURE__ */ __name(function isSingleSelectionMode() {
      return this.selectionMode === "single";
    }, "isSingleSelectionMode"),
    isMultipleSelectionMode: /* @__PURE__ */ __name(function isMultipleSelectionMode() {
      return this.selectionMode === "multiple";
    }, "isMultipleSelectionMode"),
    onPage: /* @__PURE__ */ __name(function onPage2(event2) {
      this.d_first = event2.first;
      this.d_rows = event2.rows;
      var pageEvent = this.createLazyLoadEvent(event2);
      pageEvent.pageCount = event2.pageCount;
      pageEvent.page = event2.page;
      this.d_expandedKeys = {};
      this.$emit("update:expandedKeys", this.d_expandedKeys);
      this.$emit("update:first", this.d_first);
      this.$emit("update:rows", this.d_rows);
      this.$emit("page", pageEvent);
    }, "onPage"),
    resetPage: /* @__PURE__ */ __name(function resetPage2() {
      this.d_first = 0;
      this.$emit("update:first", this.d_first);
    }, "resetPage"),
    getFilterColumnHeaderClass: /* @__PURE__ */ __name(function getFilterColumnHeaderClass(column2) {
      return [this.cx("headerCell", {
        column: column2
      }), this.columnProp(column2, "filterHeaderClass")];
    }, "getFilterColumnHeaderClass"),
    onColumnHeaderClick: /* @__PURE__ */ __name(function onColumnHeaderClick(e) {
      var event2 = e.originalEvent;
      var column2 = e.column;
      if (this.columnProp(column2, "sortable")) {
        var targetNode = event2.target;
        var columnField = this.columnProp(column2, "sortField") || this.columnProp(column2, "field");
        if (getAttribute(targetNode, "data-p-sortable-column") === true || getAttribute(targetNode, "data-pc-section") === "columntitle" || getAttribute(targetNode, "data-pc-section") === "columnheadercontent" || getAttribute(targetNode, "data-pc-section") === "sorticon" || getAttribute(targetNode.parentElement, "data-pc-section") === "sorticon" || getAttribute(targetNode.parentElement.parentElement, "data-pc-section") === "sorticon" || targetNode.closest('[data-p-sortable-column="true"]')) {
          clearSelection();
          if (this.sortMode === "single") {
            if (this.d_sortField === columnField) {
              if (this.removableSort && this.d_sortOrder * -1 === this.defaultSortOrder) {
                this.d_sortOrder = null;
                this.d_sortField = null;
              } else {
                this.d_sortOrder = this.d_sortOrder * -1;
              }
            } else {
              this.d_sortOrder = this.defaultSortOrder;
              this.d_sortField = columnField;
            }
            this.$emit("update:sortField", this.d_sortField);
            this.$emit("update:sortOrder", this.d_sortOrder);
            this.resetPage();
          } else if (this.sortMode === "multiple") {
            var metaKey = event2.metaKey || event2.ctrlKey;
            if (!metaKey) {
              this.d_multiSortMeta = this.d_multiSortMeta.filter(function(meta) {
                return meta.field === columnField;
              });
            }
            this.addMultiSortField(columnField);
            this.$emit("update:multiSortMeta", this.d_multiSortMeta);
          }
          this.$emit("sort", this.createLazyLoadEvent(event2));
        }
      }
    }, "onColumnHeaderClick"),
    addMultiSortField: /* @__PURE__ */ __name(function addMultiSortField(field) {
      var index = this.d_multiSortMeta.findIndex(function(meta) {
        return meta.field === field;
      });
      if (index >= 0) {
        if (this.removableSort && this.d_multiSortMeta[index].order * -1 === this.defaultSortOrder) this.d_multiSortMeta.splice(index, 1);
        else this.d_multiSortMeta[index] = {
          field,
          order: this.d_multiSortMeta[index].order * -1
        };
      } else {
        this.d_multiSortMeta.push({
          field,
          order: this.defaultSortOrder
        });
      }
      this.d_multiSortMeta = _toConsumableArray(this.d_multiSortMeta);
    }, "addMultiSortField"),
    sortSingle: /* @__PURE__ */ __name(function sortSingle(nodes) {
      return this.sortNodesSingle(nodes);
    }, "sortSingle"),
    sortNodesSingle: /* @__PURE__ */ __name(function sortNodesSingle(nodes) {
      var _this = this;
      var _nodes = _toConsumableArray(nodes);
      var comparer = localeComparator();
      _nodes.sort(function(node1, node2) {
        var value1 = resolveFieldData(node1.data, _this.d_sortField);
        var value2 = resolveFieldData(node2.data, _this.d_sortField);
        return sort(value1, value2, _this.d_sortOrder, comparer);
      });
      return _nodes;
    }, "sortNodesSingle"),
    sortMultiple: /* @__PURE__ */ __name(function sortMultiple(nodes) {
      return this.sortNodesMultiple(nodes);
    }, "sortMultiple"),
    sortNodesMultiple: /* @__PURE__ */ __name(function sortNodesMultiple(nodes) {
      var _this2 = this;
      var _nodes = _toConsumableArray(nodes);
      _nodes.sort(function(node1, node2) {
        return _this2.multisortField(node1, node2, 0);
      });
      return _nodes;
    }, "sortNodesMultiple"),
    multisortField: /* @__PURE__ */ __name(function multisortField(node1, node2, index) {
      var value1 = resolveFieldData(node1.data, this.d_multiSortMeta[index].field);
      var value2 = resolveFieldData(node2.data, this.d_multiSortMeta[index].field);
      var comparer = localeComparator();
      if (value1 === value2) {
        return this.d_multiSortMeta.length - 1 > index ? this.multisortField(node1, node2, index + 1) : 0;
      }
      return sort(value1, value2, this.d_multiSortMeta[index].order, comparer);
    }, "multisortField"),
    filter: /* @__PURE__ */ __name(function filter(value2) {
      var filteredNodes = [];
      var strict = this.filterMode === "strict";
      var _iterator = _createForOfIteratorHelper(value2), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var node2 = _step.value;
          var copyNode = _objectSpread$1({}, node2);
          var localMatch = true;
          var globalMatch = false;
          for (var j = 0; j < this.columns.length; j++) {
            var col = this.columns[j];
            var filterField = this.columnProp(col, "filterField") || this.columnProp(col, "field");
            if (Object.prototype.hasOwnProperty.call(this.filters, filterField)) {
              var filterMatchMode = this.columnProp(col, "filterMatchMode") || "startsWith";
              var filterValue = this.filters[filterField];
              var filterConstraint = FilterService.filters[filterMatchMode];
              var paramsWithoutNode = {
                filterField,
                filterValue,
                filterConstraint,
                strict
              };
              if (strict && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode)) || !strict && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode))) {
                localMatch = false;
              }
              if (!localMatch) {
                break;
              }
            }
            if (this.hasGlobalFilter() && !globalMatch) {
              var copyNodeForGlobal = _objectSpread$1({}, copyNode);
              var _filterValue = this.filters["global"];
              var _filterConstraint = FilterService.filters["contains"];
              var globalFilterParamsWithoutNode = {
                filterField,
                filterValue: _filterValue,
                filterConstraint: _filterConstraint,
                strict
              };
              if (strict && (this.findFilteredNodes(copyNodeForGlobal, globalFilterParamsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, globalFilterParamsWithoutNode)) || !strict && (this.isFilterMatched(copyNodeForGlobal, globalFilterParamsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, globalFilterParamsWithoutNode))) {
                globalMatch = true;
                copyNode = copyNodeForGlobal;
              }
            }
          }
          var matches = localMatch;
          if (this.hasGlobalFilter()) {
            matches = localMatch && globalMatch;
          }
          if (matches) {
            filteredNodes.push(copyNode);
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      var filterEvent = this.createLazyLoadEvent(event);
      filterEvent.filteredValue = filteredNodes;
      this.$emit("filter", filterEvent);
      return filteredNodes;
    }, "filter"),
    findFilteredNodes: /* @__PURE__ */ __name(function findFilteredNodes(node2, paramsWithoutNode) {
      if (node2) {
        var matched = false;
        if (node2.children) {
          var childNodes = _toConsumableArray(node2.children);
          node2.children = [];
          var _iterator2 = _createForOfIteratorHelper(childNodes), _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var childNode = _step2.value;
              var copyChildNode = _objectSpread$1({}, childNode);
              if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {
                matched = true;
                node2.children.push(copyChildNode);
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
        if (matched) {
          return true;
        }
      }
    }, "findFilteredNodes"),
    isFilterMatched: /* @__PURE__ */ __name(function isFilterMatched(node2, _ref) {
      var filterField = _ref.filterField, filterValue = _ref.filterValue, filterConstraint = _ref.filterConstraint, strict = _ref.strict;
      var matched = false;
      var dataFieldValue = resolveFieldData(node2.data, filterField);
      if (filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {
        matched = true;
      }
      if (!matched || strict && !this.isNodeLeaf(node2)) {
        matched = this.findFilteredNodes(node2, {
          filterField,
          filterValue,
          filterConstraint,
          strict
        }) || matched;
      }
      return matched;
    }, "isFilterMatched"),
    isNodeSelected: /* @__PURE__ */ __name(function isNodeSelected(node2) {
      return this.selectionMode && this.selectionKeys ? this.selectionKeys[this.nodeKey(node2)] === true : false;
    }, "isNodeSelected"),
    isNodeLeaf: /* @__PURE__ */ __name(function isNodeLeaf(node2) {
      return node2.leaf === false ? false : !(node2.children && node2.children.length);
    }, "isNodeLeaf"),
    createLazyLoadEvent: /* @__PURE__ */ __name(function createLazyLoadEvent(event2) {
      var _this3 = this;
      var filterMatchModes;
      if (this.hasFilters()) {
        filterMatchModes = {};
        this.columns.forEach(function(col) {
          if (_this3.columnProp(col, "field")) {
            filterMatchModes[col.props.field] = _this3.columnProp(col, "filterMatchMode");
          }
        });
      }
      return {
        originalEvent: event2,
        first: this.d_first,
        rows: this.d_rows,
        sortField: this.d_sortField,
        sortOrder: this.d_sortOrder,
        multiSortMeta: this.d_multiSortMeta,
        filters: this.filters,
        filterMatchModes
      };
    }, "createLazyLoadEvent"),
    onColumnResizeStart: /* @__PURE__ */ __name(function onColumnResizeStart(event2) {
      var containerLeft = getOffset(this.$el).left;
      this.resizeColumnElement = event2.target.parentElement;
      this.columnResizing = true;
      this.lastResizeHelperX = event2.pageX - containerLeft + this.$el.scrollLeft;
      this.bindColumnResizeEvents();
    }, "onColumnResizeStart"),
    onColumnResize: /* @__PURE__ */ __name(function onColumnResize(event2) {
      var containerLeft = getOffset(this.$el).left;
      this.$el.setAttribute("data-p-unselectable-text", "true");
      !this.isUnstyled && addStyle(this.$el, {
        "user-select": "none"
      });
      this.$refs.resizeHelper.style.height = this.$el.offsetHeight + "px";
      this.$refs.resizeHelper.style.top = "0px";
      this.$refs.resizeHelper.style.left = event2.pageX - containerLeft + this.$el.scrollLeft + "px";
      this.$refs.resizeHelper.style.display = "block";
    }, "onColumnResize"),
    onColumnResizeEnd: /* @__PURE__ */ __name(function onColumnResizeEnd() {
      var delta = isRTL(this.$el) ? this.lastResizeHelperX - this.$refs.resizeHelper.offsetLeft : this.$refs.resizeHelper.offsetLeft - this.lastResizeHelperX;
      var columnWidth = this.resizeColumnElement.offsetWidth;
      var newColumnWidth = columnWidth + delta;
      var minWidth = this.resizeColumnElement.style.minWidth || 15;
      if (columnWidth + delta > parseInt(minWidth, 10)) {
        if (this.columnResizeMode === "fit") {
          var nextColumn = this.resizeColumnElement.nextElementSibling;
          var nextColumnWidth = nextColumn.offsetWidth - delta;
          if (newColumnWidth > 15 && nextColumnWidth > 15) {
            this.resizeTableCells(newColumnWidth, nextColumnWidth);
          }
        } else if (this.columnResizeMode === "expand") {
          var tableWidth = this.$refs.table.offsetWidth + delta + "px";
          var updateTableWidth = /* @__PURE__ */ __name(function updateTableWidth2(el) {
            !!el && (el.style.width = el.style.minWidth = tableWidth);
          }, "updateTableWidth");
          this.resizeTableCells(newColumnWidth);
          updateTableWidth(this.$refs.table);
        }
        this.$emit("column-resize-end", {
          element: this.resizeColumnElement,
          delta
        });
      }
      this.$refs.resizeHelper.style.display = "none";
      this.resizeColumn = null;
      this.$el.removeAttribute("data-p-unselectable-text");
      !this.isUnstyled && (this.$el.style["user-select"] = "");
      this.unbindColumnResizeEvents();
    }, "onColumnResizeEnd"),
    resizeTableCells: /* @__PURE__ */ __name(function resizeTableCells(newColumnWidth, nextColumnWidth) {
      var colIndex = getIndex(this.resizeColumnElement);
      var widths = [];
      var headers = find(this.$refs.table, 'thead[data-pc-section="thead"] > tr > th');
      headers.forEach(function(header2) {
        return widths.push(getOuterWidth(header2));
      });
      this.destroyStyleElement();
      this.createStyleElement();
      var innerHTML = "";
      var selector = '[data-pc-name="treetable"]['.concat(this.$attrSelector, '] > [data-pc-section="tablecontainer"] > table[data-pc-section="table"]');
      widths.forEach(function(width, index) {
        var colWidth = index === colIndex ? newColumnWidth : nextColumnWidth && index === colIndex + 1 ? nextColumnWidth : width;
        var style = "width: ".concat(colWidth, "px !important; max-width: ").concat(colWidth, "px !important");
        innerHTML += "\n                    ".concat(selector, ' > thead[data-pc-section="thead"] > tr > th:nth-child(').concat(index + 1, "),\n                    ").concat(selector, ' > tbody[data-pc-section="tbody"] > tr > td:nth-child(').concat(index + 1, "),\n                    ").concat(selector, ' > tfoot[data-pc-section="tfoot"] > tr > td:nth-child(').concat(index + 1, ") {\n                        ").concat(style, "\n                    }\n                ");
      });
      this.styleElement.innerHTML = innerHTML;
    }, "resizeTableCells"),
    bindColumnResizeEvents: /* @__PURE__ */ __name(function bindColumnResizeEvents() {
      var _this4 = this;
      if (!this.documentColumnResizeListener) {
        this.documentColumnResizeListener = document.addEventListener("mousemove", function(event2) {
          if (_this4.columnResizing) {
            _this4.onColumnResize(event2);
          }
        });
      }
      if (!this.documentColumnResizeEndListener) {
        this.documentColumnResizeEndListener = document.addEventListener("mouseup", function() {
          if (_this4.columnResizing) {
            _this4.columnResizing = false;
            _this4.onColumnResizeEnd();
          }
        });
      }
    }, "bindColumnResizeEvents"),
    unbindColumnResizeEvents: /* @__PURE__ */ __name(function unbindColumnResizeEvents() {
      if (this.documentColumnResizeListener) {
        document.removeEventListener("document", this.documentColumnResizeListener);
        this.documentColumnResizeListener = null;
      }
      if (this.documentColumnResizeEndListener) {
        document.removeEventListener("document", this.documentColumnResizeEndListener);
        this.documentColumnResizeEndListener = null;
      }
    }, "unbindColumnResizeEvents"),
    onColumnKeyDown: /* @__PURE__ */ __name(function onColumnKeyDown(event2, col) {
      if ((event2.code === "Enter" || event2.code === "NumpadEnter") && event2.currentTarget.nodeName === "TH" && getAttribute(event2.currentTarget, "data-p-sortable-column")) {
        this.onColumnHeaderClick(event2, col);
      }
    }, "onColumnKeyDown"),
    hasColumnFilter: /* @__PURE__ */ __name(function hasColumnFilter() {
      if (this.columns) {
        var _iterator3 = _createForOfIteratorHelper(this.columns), _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
            var col = _step3.value;
            if (col.children && col.children.filter) {
              return true;
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
      return false;
    }, "hasColumnFilter"),
    hasFilters: /* @__PURE__ */ __name(function hasFilters() {
      return this.filters && Object.keys(this.filters).length > 0 && this.filters.constructor === Object;
    }, "hasFilters"),
    hasGlobalFilter: /* @__PURE__ */ __name(function hasGlobalFilter() {
      return this.filters && Object.prototype.hasOwnProperty.call(this.filters, "global");
    }, "hasGlobalFilter"),
    getItemLabel: /* @__PURE__ */ __name(function getItemLabel6(node2) {
      return node2.data.name;
    }, "getItemLabel"),
    createStyleElement: /* @__PURE__ */ __name(function createStyleElement() {
      var _this$$primevue;
      this.styleElement = document.createElement("style");
      this.styleElement.type = "text/css";
      setAttribute(this.styleElement, "nonce", (_this$$primevue = this.$primevue) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.config) === null || _this$$primevue === void 0 || (_this$$primevue = _this$$primevue.csp) === null || _this$$primevue === void 0 ? void 0 : _this$$primevue.nonce);
      document.head.appendChild(this.styleElement);
    }, "createStyleElement"),
    destroyStyleElement: /* @__PURE__ */ __name(function destroyStyleElement() {
      if (this.styleElement) {
        document.head.removeChild(this.styleElement);
        this.styleElement = null;
      }
    }, "destroyStyleElement"),
    setTabindex: /* @__PURE__ */ __name(function setTabindex(node2, index) {
      if (this.isNodeSelected(node2)) {
        this.hasASelectedNode = true;
        return 0;
      }
      if (this.selectionMode) {
        if (!this.isNodeSelected(node2) && index === 0 && !this.hasASelectedNode) return 0;
      } else if (!this.selectionMode && index === 0) {
        return 0;
      }
      return -1;
    }, "setTabindex")
  },
  computed: {
    columns: /* @__PURE__ */ __name(function columns() {
      return this.d_columns.get(this);
    }, "columns"),
    processedData: /* @__PURE__ */ __name(function processedData() {
      if (this.lazy) {
        return this.value;
      } else {
        if (this.value && this.value.length) {
          var data41 = this.value;
          if (this.sorted) {
            if (this.sortMode === "single") data41 = this.sortSingle(data41);
            else if (this.sortMode === "multiple") data41 = this.sortMultiple(data41);
          }
          if (this.hasFilters()) {
            data41 = this.filter(data41);
          }
          return data41;
        } else {
          return null;
        }
      }
    }, "processedData"),
    dataToRender: /* @__PURE__ */ __name(function dataToRender() {
      var data41 = this.processedData;
      if (this.paginator) {
        var first3 = this.lazy ? 0 : this.d_first;
        return data41.slice(first3, first3 + this.d_rows);
      } else {
        return data41;
      }
    }, "dataToRender"),
    empty: /* @__PURE__ */ __name(function empty2() {
      var data41 = this.processedData;
      return !data41 || data41.length === 0;
    }, "empty"),
    sorted: /* @__PURE__ */ __name(function sorted() {
      return this.d_sortField || this.d_multiSortMeta && this.d_multiSortMeta.length > 0;
    }, "sorted"),
    hasFooter: /* @__PURE__ */ __name(function hasFooter() {
      var hasFooter2 = false;
      var _iterator4 = _createForOfIteratorHelper(this.columns), _step4;
      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
          var col = _step4.value;
          if (this.columnProp(col, "footer") || col.children && col.children.footer) {
            hasFooter2 = true;
            break;
          }
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      return hasFooter2;
    }, "hasFooter"),
    paginatorTop: /* @__PURE__ */ __name(function paginatorTop2() {
      return this.paginator && (this.paginatorPosition !== "bottom" || this.paginatorPosition === "both");
    }, "paginatorTop"),
    paginatorBottom: /* @__PURE__ */ __name(function paginatorBottom2() {
      return this.paginator && (this.paginatorPosition !== "top" || this.paginatorPosition === "both");
    }, "paginatorBottom"),
    singleSelectionMode: /* @__PURE__ */ __name(function singleSelectionMode() {
      return this.selectionMode && this.selectionMode === "single";
    }, "singleSelectionMode"),
    multipleSelectionMode: /* @__PURE__ */ __name(function multipleSelectionMode() {
      return this.selectionMode && this.selectionMode === "multiple";
    }, "multipleSelectionMode"),
    rowSelectionMode: /* @__PURE__ */ __name(function rowSelectionMode() {
      return this.singleSelectionMode || this.multipleSelectionMode;
    }, "rowSelectionMode"),
    totalRecordsLength: /* @__PURE__ */ __name(function totalRecordsLength() {
      if (this.lazy) {
        return this.totalRecords;
      } else {
        var data41 = this.processedData;
        return data41 ? data41.length : 0;
      }
    }, "totalRecordsLength")
  },
  components: {
    TTRow: script$1,
    TTPaginator: script$1u,
    TTHeaderCell: script$3,
    TTFooterCell: script$4,
    SpinnerIcon: script$1r
  }
};
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}
__name(_typeof, "_typeof");
function ownKeys(e, r) {
  var t2 = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t2.push.apply(t2, o);
  }
  return t2;
}
__name(ownKeys, "ownKeys");
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t2 = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t2), true).forEach(function(r2) {
      _defineProperty(e, r2, t2[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t2, r2));
    });
  }
  return e;
}
__name(_objectSpread, "_objectSpread");
function _defineProperty(e, r, t2) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t2, enumerable: true, configurable: true, writable: true }) : e[r] = t2, e;
}
__name(_defineProperty, "_defineProperty");
function _toPropertyKey(t2) {
  var i = _toPrimitive(t2, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
__name(_toPropertyKey, "_toPropertyKey");
function _toPrimitive(t2, r) {
  if ("object" != _typeof(t2) || !t2) return t2;
  var e = t2[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t2, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t2);
}
__name(_toPrimitive, "_toPrimitive");
var _hoisted_1$5 = ["colspan"];
function render3(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_TTPaginator = resolveComponent("TTPaginator");
  var _component_TTHeaderCell = resolveComponent("TTHeaderCell");
  var _component_TTRow = resolveComponent("TTRow");
  var _component_TTFooterCell = resolveComponent("TTFooterCell");
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    "data-scrollselectors": ".p-treetable-scrollable-body"
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default"), _ctx.loading && _ctx.loadingMode === "mask" ? (openBlock(), createElementBlock("div", mergeProps({
    key: 0,
    "class": _ctx.cx("loading")
  }, _ctx.ptm("loading")), [createBaseVNode("div", mergeProps({
    "class": _ctx.cx("mask")
  }, _ctx.ptm("mask")), [renderSlot(_ctx.$slots, "loadingicon", {
    "class": normalizeClass(_ctx.cx("loadingIcon"))
  }, function() {
    return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.loadingIcon ? "span" : "SpinnerIcon"), mergeProps({
      spin: "",
      "class": [_ctx.cx("loadingIcon"), _ctx.loadingIcon]
    }, _ctx.ptm("loadingIcon")), null, 16, ["class"]))];
  })], 16)], 16)) : createCommentVNode("", true), _ctx.$slots.header ? (openBlock(), createElementBlock("div", mergeProps({
    key: 1,
    "class": _ctx.cx("header")
  }, _ctx.ptm("header")), [renderSlot(_ctx.$slots, "header")], 16)) : createCommentVNode("", true), $options.paginatorTop ? (openBlock(), createBlock(_component_TTPaginator, {
    key: 2,
    rows: $data.d_rows,
    first: $data.d_first,
    totalRecords: $options.totalRecordsLength,
    pageLinkSize: _ctx.pageLinkSize,
    template: _ctx.paginatorTemplate,
    rowsPerPageOptions: _ctx.rowsPerPageOptions,
    currentPageReportTemplate: _ctx.currentPageReportTemplate,
    "class": normalizeClass(_ctx.cx("pcPaginator", {
      position: "top"
    })),
    onPage: _cache[0] || (_cache[0] = function($event) {
      return $options.onPage($event);
    }),
    alwaysShow: _ctx.alwaysShowPaginator,
    unstyled: _ctx.unstyled,
    pt: _ctx.ptm("pcPaginator")
  }, createSlots({
    _: 2
  }, [_ctx.$slots.paginatorcontainer ? {
    name: "container",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorcontainer", {
        first: slotProps.first,
        last: slotProps.last,
        rows: slotProps.rows,
        page: slotProps.page,
        pageCount: slotProps.pageCount,
        totalRecords: slotProps.totalRecords,
        firstPageCallback: slotProps.firstPageCallback,
        lastPageCallback: slotProps.lastPageCallback,
        prevPageCallback: slotProps.prevPageCallback,
        nextPageCallback: slotProps.nextPageCallback,
        rowChangeCallback: slotProps.rowChangeCallback
      })];
    }),
    key: "0"
  } : void 0, _ctx.$slots.paginatorstart ? {
    name: "start",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorstart")];
    }),
    key: "1"
  } : void 0, _ctx.$slots.paginatorend ? {
    name: "end",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorend")];
    }),
    key: "2"
  } : void 0, _ctx.$slots.paginatorfirstpagelinkicon ? {
    name: "firstpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorfirstpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "3"
  } : void 0, _ctx.$slots.paginatorprevpagelinkicon ? {
    name: "prevpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorprevpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "4"
  } : void 0, _ctx.$slots.paginatornextpagelinkicon ? {
    name: "nextpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatornextpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "5"
  } : void 0, _ctx.$slots.paginatorlastpagelinkicon ? {
    name: "lastpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorlastpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "6"
  } : void 0, _ctx.$slots.paginatorjumptopagedropdownicon ? {
    name: "jumptopagedropdownicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorjumptopagedropdownicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "7"
  } : void 0, _ctx.$slots.paginatorrowsperpagedropdownicon ? {
    name: "rowsperpagedropdownicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorrowsperpagedropdownicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "8"
  } : void 0]), 1032, ["rows", "first", "totalRecords", "pageLinkSize", "template", "rowsPerPageOptions", "currentPageReportTemplate", "class", "alwaysShow", "unstyled", "pt"])) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    "class": _ctx.cx("tableContainer"),
    style: [_ctx.sx("tableContainer"), {
      maxHeight: _ctx.scrollHeight
    }]
  }, _ctx.ptm("tableContainer")), [createBaseVNode("table", mergeProps({
    ref: "table",
    role: "table",
    "class": [_ctx.cx("table"), _ctx.tableClass],
    style: _ctx.tableStyle
  }, _objectSpread(_objectSpread({}, _ctx.tableProps), _ctx.ptm("table"))), [createBaseVNode("thead", mergeProps({
    "class": _ctx.cx("thead"),
    style: _ctx.sx("thead"),
    role: "rowgroup"
  }, _ctx.ptm("thead")), [createBaseVNode("tr", mergeProps({
    role: "row"
  }, _ctx.ptm("headerRow")), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.columns, function(col, i) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.columnProp(col, "columnKey") || $options.columnProp(col, "field") || i
    }, [!$options.columnProp(col, "hidden") ? (openBlock(), createBlock(_component_TTHeaderCell, {
      key: 0,
      column: col,
      resizableColumns: _ctx.resizableColumns,
      sortField: $data.d_sortField,
      sortOrder: $data.d_sortOrder,
      multiSortMeta: $data.d_multiSortMeta,
      sortMode: _ctx.sortMode,
      onColumnClick: _cache[1] || (_cache[1] = function($event) {
        return $options.onColumnHeaderClick($event);
      }),
      onColumnResizestart: _cache[2] || (_cache[2] = function($event) {
        return $options.onColumnResizeStart($event);
      }),
      index: i,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["column", "resizableColumns", "sortField", "sortOrder", "multiSortMeta", "sortMode", "index", "unstyled", "pt"])) : createCommentVNode("", true)], 64);
  }), 128))], 16), $options.hasColumnFilter() ? (openBlock(), createElementBlock("tr", normalizeProps(mergeProps({
    key: 0
  }, _ctx.ptm("headerRow"))), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.columns, function(col, i) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.columnProp(col, "columnKey") || $options.columnProp(col, "field") || i
    }, [!$options.columnProp(col, "hidden") ? (openBlock(), createElementBlock("th", mergeProps({
      key: 0,
      "class": $options.getFilterColumnHeaderClass(col),
      style: [$options.columnProp(col, "style"), $options.columnProp(col, "filterHeaderStyle")],
      ref_for: true
    }, _ctx.ptm("headerCell", $options.ptHeaderCellOptions(col))), [col.children && col.children.filter ? (openBlock(), createBlock(resolveDynamicComponent(col.children.filter), {
      key: 0,
      column: col,
      index: i
    }, null, 8, ["column", "index"])) : createCommentVNode("", true)], 16)) : createCommentVNode("", true)], 64);
  }), 128))], 16)) : createCommentVNode("", true)], 16), createBaseVNode("tbody", mergeProps({
    "class": _ctx.cx("tbody"),
    role: "rowgroup"
  }, _ctx.ptm("tbody")), [!$options.empty ? (openBlock(true), createElementBlock(Fragment, {
    key: 0
  }, renderList($options.dataToRender, function(node2, index) {
    return openBlock(), createBlock(_component_TTRow, {
      key: $options.nodeKey(node2),
      dataKey: _ctx.dataKey,
      columns: $options.columns,
      node: node2,
      level: 0,
      expandedKeys: $data.d_expandedKeys,
      indentation: _ctx.indentation,
      selectionMode: _ctx.selectionMode,
      selectionKeys: _ctx.selectionKeys,
      ariaSetSize: $options.dataToRender.length,
      ariaPosInset: index + 1,
      tabindex: $options.setTabindex(node2, index),
      loadingMode: _ctx.loadingMode,
      contextMenu: _ctx.contextMenu,
      contextMenuSelection: _ctx.contextMenuSelection,
      templates: _ctx.$slots,
      onNodeToggle: $options.onNodeToggle,
      onNodeClick: $options.onNodeClick,
      onCheckboxChange: $options.onCheckboxChange,
      onRowRightclick: _cache[3] || (_cache[3] = function($event) {
        return $options.onRowRightClick($event);
      }),
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["dataKey", "columns", "node", "expandedKeys", "indentation", "selectionMode", "selectionKeys", "ariaSetSize", "ariaPosInset", "tabindex", "loadingMode", "contextMenu", "contextMenuSelection", "templates", "onNodeToggle", "onNodeClick", "onCheckboxChange", "unstyled", "pt"]);
  }), 128)) : (openBlock(), createElementBlock("tr", mergeProps({
    key: 1,
    "class": _ctx.cx("emptyMessage")
  }, _ctx.ptm("emptyMessage")), [createBaseVNode("td", mergeProps({
    colspan: $options.columns.length
  }, _ctx.ptm("emptyMessageCell")), [renderSlot(_ctx.$slots, "empty")], 16, _hoisted_1$5)], 16))], 16), $options.hasFooter ? (openBlock(), createElementBlock("tfoot", mergeProps({
    key: 0,
    "class": _ctx.cx("tfoot"),
    style: _ctx.sx("tfoot"),
    role: "rowgroup"
  }, _ctx.ptm("tfoot")), [createBaseVNode("tr", mergeProps({
    role: "row"
  }, _ctx.ptm("footerRow")), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.columns, function(col, i) {
    return openBlock(), createElementBlock(Fragment, {
      key: $options.columnProp(col, "columnKey") || $options.columnProp(col, "field") || i
    }, [!$options.columnProp(col, "hidden") ? (openBlock(), createBlock(_component_TTFooterCell, {
      key: 0,
      column: col,
      index: i,
      unstyled: _ctx.unstyled,
      pt: _ctx.pt
    }, null, 8, ["column", "index", "unstyled", "pt"])) : createCommentVNode("", true)], 64);
  }), 128))], 16)], 16)) : createCommentVNode("", true)], 16)], 16), $options.paginatorBottom ? (openBlock(), createBlock(_component_TTPaginator, {
    key: 3,
    rows: $data.d_rows,
    first: $data.d_first,
    totalRecords: $options.totalRecordsLength,
    pageLinkSize: _ctx.pageLinkSize,
    template: _ctx.paginatorTemplate,
    rowsPerPageOptions: _ctx.rowsPerPageOptions,
    currentPageReportTemplate: _ctx.currentPageReportTemplate,
    "class": normalizeClass(_ctx.cx("pcPaginator", {
      position: "bottom"
    })),
    onPage: _cache[4] || (_cache[4] = function($event) {
      return $options.onPage($event);
    }),
    alwaysShow: _ctx.alwaysShowPaginator,
    unstyled: _ctx.unstyled,
    pt: _ctx.ptm("pcPaginator")
  }, createSlots({
    _: 2
  }, [_ctx.$slots.paginatorcontainer ? {
    name: "container",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorcontainer", {
        first: slotProps.first,
        last: slotProps.last,
        rows: slotProps.rows,
        page: slotProps.page,
        pageCount: slotProps.pageCount,
        totalRecords: slotProps.totalRecords,
        firstPageCallback: slotProps.firstPageCallback,
        lastPageCallback: slotProps.lastPageCallback,
        prevPageCallback: slotProps.prevPageCallback,
        nextPageCallback: slotProps.nextPageCallback,
        rowChangeCallback: slotProps.rowChangeCallback
      })];
    }),
    key: "0"
  } : void 0, _ctx.$slots.paginatorstart ? {
    name: "start",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorstart")];
    }),
    key: "1"
  } : void 0, _ctx.$slots.paginatorend ? {
    name: "end",
    fn: withCtx(function() {
      return [renderSlot(_ctx.$slots, "paginatorend")];
    }),
    key: "2"
  } : void 0, _ctx.$slots.paginatorfirstpagelinkicon ? {
    name: "firstpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorfirstpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "3"
  } : void 0, _ctx.$slots.paginatorprevpagelinkicon ? {
    name: "prevpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorprevpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "4"
  } : void 0, _ctx.$slots.paginatornextpagelinkicon ? {
    name: "nextpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatornextpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "5"
  } : void 0, _ctx.$slots.paginatorlastpagelinkicon ? {
    name: "lastpagelinkicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorlastpagelinkicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "6"
  } : void 0, _ctx.$slots.paginatorjumptopagedropdownicon ? {
    name: "jumptopagedropdownicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorjumptopagedropdownicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "7"
  } : void 0, _ctx.$slots.paginatorrowsperpagedropdownicon ? {
    name: "rowsperpagedropdownicon",
    fn: withCtx(function(slotProps) {
      return [renderSlot(_ctx.$slots, "paginatorrowsperpagedropdownicon", {
        "class": normalizeClass(slotProps["class"])
      })];
    }),
    key: "8"
  } : void 0]), 1032, ["rows", "first", "totalRecords", "pageLinkSize", "template", "rowsPerPageOptions", "currentPageReportTemplate", "class", "alwaysShow", "unstyled", "pt"])) : createCommentVNode("", true), _ctx.$slots.footer ? (openBlock(), createElementBlock("div", mergeProps({
    key: 4,
    "class": _ctx.cx("footer")
  }, _ctx.ptm("footer")), [renderSlot(_ctx.$slots, "footer")], 16)) : createCommentVNode("", true), createBaseVNode("div", mergeProps({
    ref: "resizeHelper",
    "class": _ctx.cx("columnResizeIndicator"),
    style: {
      "display": "none"
    }
  }, _ctx.ptm("columnResizeIndicator")), null, 16)], 16);
}
__name(render3, "render");
script.render = render3;
const electron = electronAPI();
const openUrl = /* @__PURE__ */ __name((url) => {
  window.open(url, "_blank");
  return true;
}, "openUrl");
const DESKTOP_MAINTENANCE_TASKS = [
  {
    id: "basePath",
    execute: /* @__PURE__ */ __name(async () => await electron.setBasePath(), "execute"),
    name: "Base path",
    shortDescription: "Change the application base path.",
    errorDescription: "Unable to open the base path.  Please select a new one.",
    description: "The base path is the default location where ComfyUI stores data. It is the location fo the python environment, and may also contain models, custom nodes, and other extensions.",
    isInstallationFix: true,
    button: {
      icon: PrimeIcons.QUESTION,
      text: "Select"
    }
  },
  {
    id: "git",
    headerImg: "/assets/images/Git-Logo-White.svg",
    execute: /* @__PURE__ */ __name(() => openUrl("https://git-scm.com/downloads/"), "execute"),
    name: "Download git",
    shortDescription: "Open the git download page.",
    errorDescription: "Git is missing. Please download and install git, then restart ComfyUI Desktop.",
    description: "Git is required to download and manage custom nodes and other extensions. This task opens the download page in your default browser, where you can download the latest version of git. Once you have installed git, please restart ComfyUI Desktop.",
    button: {
      icon: PrimeIcons.EXTERNAL_LINK,
      text: "Download"
    }
  },
  {
    id: "vcRedist",
    execute: /* @__PURE__ */ __name(() => openUrl("https://aka.ms/vs/17/release/vc_redist.x64.exe"), "execute"),
    name: "Download VC++ Redist",
    shortDescription: "Download the latest VC++ Redistributable runtime.",
    description: "The Visual C++ runtime libraries are required to run ComfyUI. You will need to download and install this file.",
    button: {
      icon: PrimeIcons.EXTERNAL_LINK,
      text: "Download"
    }
  },
  {
    id: "reinstall",
    severity: "danger",
    requireConfirm: true,
    execute: /* @__PURE__ */ __name(async () => {
      await electron.reinstall();
      return true;
    }, "execute"),
    name: "Reinstall ComfyUI",
    shortDescription: "Deletes the desktop app config and load the welcome screen.",
    description: "Delete the desktop app config, restart the app, and load the installation screen.",
    confirmText: "Delete all saved config and reinstall?",
    button: {
      icon: PrimeIcons.EXCLAMATION_TRIANGLE,
      text: "Reinstall"
    }
  },
  {
    id: "pythonPackages",
    requireConfirm: true,
    execute: /* @__PURE__ */ __name(async () => {
      try {
        await electron.uv.installRequirements();
        return true;
      } catch (error) {
        return false;
      }
    }, "execute"),
    name: "Install python packages",
    shortDescription: "Installs the base python packages required to run ComfyUI.",
    errorDescription: "Python packages that are required to run ComfyUI are not installed.",
    description: "This will install the python packages required to run ComfyUI. This includes torch, torchvision, and other dependencies.",
    usesTerminal: true,
    isInstallationFix: true,
    button: {
      icon: PrimeIcons.DOWNLOAD,
      text: "Install"
    }
  },
  {
    id: "uv",
    execute: /* @__PURE__ */ __name(() => openUrl("https://docs.astral.sh/uv/getting-started/installation/"), "execute"),
    name: "uv executable",
    shortDescription: "uv installs and maintains the python environment.",
    description: "This will open the download page for Astral's uv tool. uv is used to install python and manage python packages.",
    button: {
      icon: "pi pi-asterisk",
      text: "Download"
    }
  },
  {
    id: "uvCache",
    severity: "danger",
    requireConfirm: true,
    execute: /* @__PURE__ */ __name(async () => await electron.uv.clearCache(), "execute"),
    name: "uv cache",
    shortDescription: "Remove the Astral uv cache of python packages.",
    description: "This will remove the uv cache directory and its contents. All downloaded python packages will need to be downloaded again.",
    confirmText: "Delete uv cache of python packages?",
    isInstallationFix: true,
    button: {
      icon: PrimeIcons.TRASH,
      text: "Clear cache"
    }
  },
  {
    id: "venvDirectory",
    severity: "danger",
    requireConfirm: true,
    execute: /* @__PURE__ */ __name(async () => await electron.uv.resetVenv(), "execute"),
    name: "Reset virtual environment",
    shortDescription: "Remove and recreate the .venv directory. This removes all python packages.",
    description: "The python environment is where ComfyUI installs python and python packages. It is used to run the ComfyUI server.",
    confirmText: "Delete the .venv directory?",
    usesTerminal: true,
    isInstallationFix: true,
    button: {
      icon: PrimeIcons.FOLDER,
      text: "Recreate"
    }
  }
];
class MaintenanceTaskRunner {
  static {
    __name(this, "MaintenanceTaskRunner");
  }
  constructor(task) {
    this.task = task;
  }
  _state;
  /** The current state of the task. Setter also controls {@link resolved} as a side-effect. */
  get state() {
    return this._state;
  }
  /** Updates the task state and {@link resolved} status. */
  setState(value2) {
    if (this._state === "error" && value2 === "OK") this.resolved = true;
    if (value2 === "error") this.resolved &&= false;
    this._state = value2;
  }
  /** `true` if the task has been resolved (was `error`, now `OK`). This is a side-effect of the {@link state} setter. */
  resolved;
  /** Whether the task state is currently being refreshed. */
  refreshing;
  /** Whether the task is currently running. */
  executing;
  /** The error message that occurred when the task failed. */
  error;
  update(update) {
    const state = update[this.task.id];
    this.refreshing = state === void 0;
    if (state) this.setState(state);
  }
  finaliseUpdate(update) {
    this.refreshing = false;
    this.setState(update[this.task.id] ?? "skipped");
  }
  /** Wraps the execution of a maintenance task, updating state and rethrowing errors. */
  async execute(task) {
    try {
      this.executing = true;
      const success = await task.execute();
      if (!success) return false;
      this.error = void 0;
      return true;
    } catch (error) {
      this.error = error?.message;
      throw error;
    } finally {
      this.executing = false;
    }
  }
}
const useMaintenanceTaskStore = defineStore("maintenanceTask", () => {
  const electron2 = electronAPI();
  const isRefreshing = ref(false);
  const isRunningTerminalCommand = computed(
    () => tasks.value.filter((task) => task.usesTerminal).some((task) => getRunner(task)?.executing)
  );
  const isRunningInstallationFix = computed(
    () => tasks.value.filter((task) => task.isInstallationFix).some((task) => getRunner(task)?.executing)
  );
  const tasks = ref(DESKTOP_MAINTENANCE_TASKS);
  const taskStates = ref(
    new Map(
      DESKTOP_MAINTENANCE_TASKS.map((x) => [x.id, new MaintenanceTaskRunner(x)])
    )
  );
  const anyErrors = computed(
    () => tasks.value.some((task) => getRunner(task).state === "error")
  );
  const getRunner = /* @__PURE__ */ __name((task) => taskStates.value.get(task.id), "getRunner");
  const processUpdate = /* @__PURE__ */ __name((validationUpdate) => {
    const update = validationUpdate;
    isRefreshing.value = true;
    for (const task of tasks.value) {
      getRunner(task).update(update);
    }
    if (!update.inProgress && isRefreshing.value) {
      isRefreshing.value = false;
      for (const task of tasks.value) {
        getRunner(task).finaliseUpdate(update);
      }
    }
  }, "processUpdate");
  const clearResolved = /* @__PURE__ */ __name(() => {
    for (const task of tasks.value) {
      getRunner(task).resolved &&= false;
    }
  }, "clearResolved");
  const refreshDesktopTasks = /* @__PURE__ */ __name(async () => {
    isRefreshing.value = true;
    console.log("Refreshing desktop tasks");
    await electron2.Validation.validateInstallation(processUpdate);
  }, "refreshDesktopTasks");
  const execute = /* @__PURE__ */ __name(async (task) => {
    return getRunner(task).execute(task);
  }, "execute");
  return {
    tasks,
    isRefreshing,
    isRunningTerminalCommand,
    isRunningInstallationFix,
    execute,
    getRunner,
    processUpdate,
    clearResolved,
    /** True if any tasks are in an error state. */
    anyErrors,
    refreshDesktopTasks
  };
});
function useMinLoadingDurationRef(value2, minDuration = 250) {
  const current = ref(value2.value);
  const { ready, start } = useTimeout(minDuration, {
    controls: true,
    immediate: false
  });
  watch(value2, (newValue) => {
    if (newValue && !current.value) start();
    current.value = newValue;
  });
  return computed(() => current.value || !ready.value);
}
__name(useMinLoadingDurationRef, "useMinLoadingDurationRef");
const _hoisted_1$3 = {
  key: 0,
  class: "pi pi-exclamation-triangle text-red-500 absolute m-2 top-0 -right-14 opacity-15",
  style: { "font-size": "10rem" }
};
const _hoisted_2$3 = ["src"];
const _hoisted_3$3 = { class: "flex gap-4 mt-1" };
const _hoisted_4$3 = {
  key: 0,
  class: "task-card-ok pi pi-check"
};
const _sfc_main$4 = /* @__PURE__ */ defineComponent({
  __name: "TaskCard",
  props: {
    task: {}
  },
  emits: ["execute"],
  setup(__props) {
    const taskStore = useMaintenanceTaskStore();
    const runner = computed(() => taskStore.getRunner(props.task));
    const props = __props;
    const description = computed(
      () => runner.value.state === "error" ? props.task.errorDescription ?? props.task.shortDescription : props.task.shortDescription
    );
    const reactiveLoading = computed(() => runner.value.refreshing);
    const reactiveExecuting = computed(() => runner.value.executing);
    const isLoading = useMinLoadingDurationRef(reactiveLoading, 250);
    const isExecuting = useMinLoadingDurationRef(reactiveExecuting, 250);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(["task-div max-w-48 min-h-52 grid relative", { "opacity-75": unref(isLoading) }])
      }, [
        createVNode(unref(script$1Y), mergeProps({
          class: ["max-w-48 relative h-full overflow-hidden", { "opacity-65": runner.value.state !== "error" }]
        }, (({ onClick: onClick11, ...rest }) => rest)(_ctx.$attrs)), {
          header: withCtx(() => [
            runner.value.state === "error" ? (openBlock(), createElementBlock("i", _hoisted_1$3)) : createCommentVNode("", true),
            _ctx.task.headerImg ? (openBlock(), createElementBlock("img", {
              key: 1,
              src: _ctx.task.headerImg,
              class: "object-contain w-full h-full opacity-25 pt-4 px-4"
            }, null, 8, _hoisted_2$3)) : createCommentVNode("", true)
          ]),
          title: withCtx(() => [
            createTextVNode(toDisplayString(_ctx.task.name), 1)
          ]),
          content: withCtx(() => [
            createTextVNode(toDisplayString(description.value), 1)
          ]),
          footer: withCtx(() => [
            createBaseVNode("div", _hoisted_3$3, [
              createVNode(unref(script$1e), {
                icon: _ctx.task.button?.icon,
                label: _ctx.task.button?.text,
                class: "w-full",
                raised: "",
                "icon-pos": "right",
                onClick: _cache[0] || (_cache[0] = (event2) => _ctx.$emit("execute", event2)),
                loading: unref(isExecuting)
              }, null, 8, ["icon", "label", "loading"])
            ])
          ]),
          _: 1
        }, 16, ["class"]),
        !unref(isLoading) && runner.value.state === "OK" ? (openBlock(), createElementBlock("i", _hoisted_4$3)) : createCommentVNode("", true)
      ], 2);
    };
  }
});
const TaskCard = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["__scopeId", "data-v-c3bd7658"]]);
const _sfc_main$3 = /* @__PURE__ */ defineComponent({
  __name: "TaskListStatusIcon",
  props: {
    state: {},
    loading: {}
  },
  setup(__props) {
    const tooltip = computed(() => {
      if (props.state === "error") {
        return t("g.error");
      } else if (props.state === "OK") {
        return t("maintenance.OK");
      } else {
        return t("maintenance.Skipped");
      }
    });
    const cssClasses = computed(() => {
      let classes2;
      if (props.state === "error") {
        classes2 = `${PrimeIcons.EXCLAMATION_TRIANGLE} text-red-500`;
      } else if (props.state === "OK") {
        classes2 = `${PrimeIcons.CHECK} text-green-500`;
      } else {
        classes2 = PrimeIcons.MINUS;
      }
      return `text-3xl pi ${classes2}`;
    });
    const props = __props;
    return (_ctx, _cache) => {
      const _directive_tooltip = resolveDirective("tooltip");
      return !_ctx.state || _ctx.loading ? (openBlock(), createBlock(unref(script$1h), {
        key: 0,
        class: "h-8 w-8"
      })) : withDirectives((openBlock(), createElementBlock("i", {
        key: 1,
        class: normalizeClass(cssClasses.value)
      }, null, 2)), [
        [
          _directive_tooltip,
          { value: tooltip.value, showDelay: 250 },
          void 0,
          { top: true }
        ]
      ]);
    };
  }
});
const _hoisted_1$2 = { class: "text-center w-16" };
const _hoisted_2$2 = { class: "inline-block" };
const _hoisted_3$2 = { class: "whitespace-pre-line" };
const _hoisted_4$2 = { class: "text-right px-4" };
const _sfc_main$2 = /* @__PURE__ */ defineComponent({
  __name: "TaskListItem",
  props: {
    task: {}
  },
  emits: ["execute"],
  setup(__props) {
    const taskStore = useMaintenanceTaskStore();
    const runner = computed(() => taskStore.getRunner(props.task));
    const props = __props;
    const severity = computed(
      () => runner.value.state === "error" || runner.value.state === "warning" ? "primary" : "secondary"
    );
    const reactiveLoading = computed(() => runner.value.refreshing);
    const reactiveExecuting = computed(() => runner.value.executing);
    const isLoading = useMinLoadingDurationRef(reactiveLoading, 250);
    const isExecuting = useMinLoadingDurationRef(reactiveExecuting, 250);
    const infoPopover = ref();
    const toggle6 = /* @__PURE__ */ __name((event2) => {
      infoPopover.value.toggle(event2);
    }, "toggle");
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("tr", {
        class: normalizeClass(["border-neutral-700 border-solid border-y", {
          "opacity-50": runner.value.resolved,
          "opacity-75": unref(isLoading) && runner.value.resolved
        }])
      }, [
        createBaseVNode("td", _hoisted_1$2, [
          createVNode(_sfc_main$3, {
            state: runner.value.state,
            loading: unref(isLoading)
          }, null, 8, ["state", "loading"])
        ]),
        createBaseVNode("td", null, [
          createBaseVNode("p", _hoisted_2$2, toDisplayString(_ctx.task.name), 1),
          createVNode(unref(script$1e), {
            class: "inline-block mx-2",
            type: "button",
            icon: unref(PrimeIcons).INFO_CIRCLE,
            severity: "secondary",
            text: true,
            onClick: toggle6
          }, null, 8, ["icon"]),
          createVNode(unref(script$1Q), {
            ref_key: "infoPopover",
            ref: infoPopover,
            class: "block m-1 max-w-64 min-w-32"
          }, {
            default: withCtx(() => [
              createBaseVNode("span", _hoisted_3$2, toDisplayString(_ctx.task.description), 1)
            ]),
            _: 1
          }, 512)
        ]),
        createBaseVNode("td", _hoisted_4$2, [
          createVNode(unref(script$1e), {
            icon: _ctx.task.button?.icon,
            label: _ctx.task.button?.text,
            severity: severity.value,
            "icon-pos": "right",
            onClick: _cache[0] || (_cache[0] = (event2) => _ctx.$emit("execute", event2)),
            loading: unref(isExecuting)
          }, null, 8, ["icon", "label", "severity", "loading"])
        ])
      ], 2);
    };
  }
});
const _hoisted_1$1 = { class: "my-4" };
const _hoisted_2$1 = { class: "text-neutral-400 w-full text-center" };
const _hoisted_3$1 = {
  key: 0,
  class: "w-full border-collapse border-hidden"
};
const _hoisted_4$1 = {
  key: 1,
  class: "flex flex-wrap justify-evenly gap-8 pad-y my-4"
};
const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "TaskListPanel",
  props: {
    displayAsList: {},
    filter: {},
    isRefreshing: { type: Boolean }
  },
  setup(__props) {
    const toast = useToast();
    const confirm = useConfirm();
    const taskStore = useMaintenanceTaskStore();
    const props = __props;
    const executeTask = /* @__PURE__ */ __name(async (task) => {
      let message;
      try {
        if (await taskStore.execute(task) === true) return;
        message = t("maintenance.error.taskFailed");
      } catch (error) {
        message = error?.message;
      }
      toast.add({
        severity: "error",
        summary: t("maintenance.error.toastTitle"),
        detail: message ?? t("maintenance.error.defaultDescription"),
        life: 1e4
      });
    }, "executeTask");
    const confirmButton = /* @__PURE__ */ __name(async (event2, task) => {
      if (!task.requireConfirm) {
        await executeTask(task);
        return;
      }
      confirm.require({
        target: event2.currentTarget,
        message: task.confirmText ?? t("maintenance.confirmTitle"),
        icon: "pi pi-exclamation-circle",
        rejectProps: {
          label: t("g.cancel"),
          severity: "secondary",
          outlined: true
        },
        acceptProps: {
          label: task.button?.text ?? t("g.save"),
          severity: task.severity ?? "primary"
        },
        // TODO: Not awaited.
        accept: /* @__PURE__ */ __name(async () => {
          await executeTask(task);
        }, "accept")
      });
    }, "confirmButton");
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("section", _hoisted_1$1, [
        _ctx.filter.tasks.length === 0 ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
          createVNode(unref(script$1Z)),
          createBaseVNode("p", _hoisted_2$1, toDisplayString(_ctx.$t("maintenance.allOk")), 1)
        ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
          _ctx.displayAsList === unref(PrimeIcons).LIST ? (openBlock(), createElementBlock("table", _hoisted_3$1, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.filter.tasks, (task) => {
              return openBlock(), createBlock(_sfc_main$2, {
                key: task.id,
                task,
                onExecute: /* @__PURE__ */ __name((event2) => confirmButton(event2, task), "onExecute")
              }, null, 8, ["task", "onExecute"]);
            }), 128))
          ])) : (openBlock(), createElementBlock("div", _hoisted_4$1, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.filter.tasks, (task) => {
              return openBlock(), createBlock(TaskCard, {
                key: task.id,
                task,
                onExecute: /* @__PURE__ */ __name((event2) => confirmButton(event2, task), "onExecute")
              }, null, 8, ["task", "onExecute"]);
            }), 128))
          ]))
        ], 64)),
        createVNode(unref(script$1_))
      ]);
    };
  }
});
const _hoisted_1 = { class: "min-w-full min-h-full font-sans w-screen h-screen grid justify-around text-neutral-300 bg-neutral-900 dark-theme pointer-events-auto overflow-y-auto" };
const _hoisted_2 = { class: "max-w-screen-sm w-screen m-8 relative" };
const _hoisted_3 = { class: "w-full flex flex-wrap gap-4 items-center" };
const _hoisted_4 = { class: "grow" };
const _hoisted_5 = { class: "flex gap-4 items-center" };
const _hoisted_6 = { class: "max-sm:hidden" };
const _hoisted_7 = { class: "flex justify-between gap-4 flex-row" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "MaintenanceView",
  setup(__props) {
    const electron2 = electronAPI();
    const toast = useToast();
    const taskStore = useMaintenanceTaskStore();
    const { clearResolved, processUpdate, refreshDesktopTasks } = taskStore;
    const terminalVisible = ref(false);
    const reactiveIsRefreshing = computed(() => taskStore.isRefreshing);
    const isRefreshing = useMinLoadingDurationRef(reactiveIsRefreshing, 250);
    const anyErrors = computed(() => taskStore.anyErrors);
    const displayAsList = ref(PrimeIcons.TH_LARGE);
    const errorFilter = computed(
      () => taskStore.tasks.filter((x) => {
        const { state, resolved } = taskStore.getRunner(x);
        return state === "error" || resolved;
      })
    );
    const filterOptions = ref([
      { icon: PrimeIcons.FILTER_FILL, value: "All", tasks: taskStore.tasks },
      { icon: PrimeIcons.EXCLAMATION_TRIANGLE, value: "Errors", tasks: errorFilter }
    ]);
    const filter2 = ref(filterOptions.value[1]);
    const completeValidation = /* @__PURE__ */ __name(async (alertOnFail = true) => {
      const isValid = await electron2.Validation.complete();
      if (alertOnFail && !isValid) {
        toast.add({
          severity: "error",
          summary: "Error",
          detail: "Unable to continue - errors remain",
          life: 5e3
        });
      }
    }, "completeValidation");
    const terminalCreated = /* @__PURE__ */ __name(({ terminal, useAutoSize }, root35) => {
      useAutoSize({ root: root35, autoRows: true, autoCols: true });
      electron2.onLogMessage((message) => {
        terminal.write(message);
      });
      terminal.options.cursorBlink = false;
      terminal.options.cursorStyle = "bar";
      terminal.options.cursorInactiveStyle = "bar";
      terminal.options.disableStdin = true;
    }, "terminalCreated");
    const toggleConsoleDrawer = /* @__PURE__ */ __name(() => {
      terminalVisible.value = !terminalVisible.value;
    }, "toggleConsoleDrawer");
    watch(
      () => taskStore.isRunningTerminalCommand,
      (value2) => {
        terminalVisible.value = value2;
      }
    );
    watch(
      () => taskStore.isRunningInstallationFix,
      (value2, oldValue) => {
        if (!value2 && oldValue) completeValidation(false);
      }
    );
    onMounted(async () => {
      electron2.Validation.onUpdate(processUpdate);
      const update = await electron2.Validation.getStatus();
      processUpdate(update);
    });
    onUnmounted(() => electron2.Validation.dispose());
    return (_ctx, _cache) => {
      return openBlock(), createBlock(_sfc_main$7, { dark: "" }, {
        default: withCtx(() => [
          createBaseVNode("div", _hoisted_1, [
            createBaseVNode("div", _hoisted_2, [
              _cache[6] || (_cache[6] = createBaseVNode("h1", { class: "backspan pi-wrench text-4xl font-bold" }, "Maintenance", -1)),
              createBaseVNode("div", _hoisted_3, [
                createBaseVNode("span", _hoisted_4, [
                  _cache[5] || (_cache[5] = createTextVNode(" Status: ")),
                  createVNode(_sfc_main$5, {
                    refreshing: unref(isRefreshing),
                    error: anyErrors.value
                  }, null, 8, ["refreshing", "error"])
                ]),
                createBaseVNode("div", _hoisted_5, [
                  createVNode(unref(script$1$), {
                    modelValue: displayAsList.value,
                    "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => displayAsList.value = $event),
                    options: [unref(PrimeIcons).LIST, unref(PrimeIcons).TH_LARGE],
                    "allow-empty": false
                  }, {
                    option: withCtx((opts) => [
                      createBaseVNode("i", {
                        class: normalizeClass(opts.option)
                      }, null, 2)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "options"]),
                  createVNode(unref(script$1$), {
                    modelValue: filter2.value,
                    "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => filter2.value = $event),
                    options: filterOptions.value,
                    "allow-empty": false,
                    optionLabel: "value",
                    dataKey: "value",
                    "area-labelledby": "custom",
                    onChange: unref(clearResolved)
                  }, {
                    option: withCtx((opts) => [
                      createBaseVNode("i", {
                        class: normalizeClass(opts.option.icon)
                      }, null, 2),
                      createBaseVNode("span", _hoisted_6, toDisplayString(opts.option.value), 1)
                    ]),
                    _: 1
                  }, 8, ["modelValue", "options", "onChange"]),
                  createVNode(_sfc_main$6, {
                    modelValue: unref(isRefreshing),
                    "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event) => isRef(isRefreshing) ? isRefreshing.value = $event : null),
                    severity: "secondary",
                    onRefresh: unref(refreshDesktopTasks)
                  }, null, 8, ["modelValue", "onRefresh"])
                ])
              ]),
              createVNode(_sfc_main$1, {
                class: "border-neutral-700 border-solid border-x-0 border-y",
                filter: filter2.value,
                displayAsList: displayAsList.value,
                isRefreshing: unref(isRefreshing)
              }, null, 8, ["filter", "displayAsList", "isRefreshing"]),
              createBaseVNode("div", _hoisted_7, [
                createVNode(unref(script$1e), {
                  label: "Console Logs",
                  icon: "pi pi-desktop",
                  "icon-pos": "left",
                  severity: "secondary",
                  onClick: toggleConsoleDrawer
                }),
                createVNode(unref(script$1e), {
                  label: "Continue",
                  icon: "pi pi-arrow-right",
                  "icon-pos": "left",
                  severity: anyErrors.value ? "secondary" : "primary",
                  onClick: _cache[3] || (_cache[3] = () => completeValidation()),
                  loading: unref(isRefreshing)
                }, null, 8, ["severity", "loading"])
              ])
            ]),
            createVNode(unref(script$1c), {
              visible: terminalVisible.value,
              "onUpdate:visible": _cache[4] || (_cache[4] = ($event) => terminalVisible.value = $event),
              header: "Terminal",
              position: "bottom",
              style: { "height": "max(50vh, 34rem)" }
            }, {
              default: withCtx(() => [
                createVNode(BaseTerminal, { onCreated: terminalCreated })
              ]),
              _: 1
            }, 8, ["visible"]),
            createVNode(unref(script$20))
          ])
        ]),
        _: 1
      });
    };
  }
});
const MaintenanceView = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-74b78f7d"]]);
export {
  MaintenanceView as default
};
//# sourceMappingURL=MaintenanceView-Df7CHNWW.js.map
